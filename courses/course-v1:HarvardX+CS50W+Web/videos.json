{
	"video_001": {
		"section": "CS50W 2020",
		"subsection": "Introduction",
		"unit": "Introduction",
		"video_sources": [
			"https://edx-video.net/a96c433f-cfa4-4688-a08e-5206b2a0cb52-mp4_720p.mp4",
			"https://edx-video.net/a96c433f-cfa4-4688-a08e-5206b2a0cb52.m3u8"
		],
		"video_duration": 132,
		"speech_period": [
			2.44, 15.932, 1.208, 4.4, 2.1, 2.85, 3.45, 3.06, 2.595, 3.945, 3.33, 2.31,
			3.15, 2.19, 2.28, 1.972, 2.708, 1.92, 3.81, 1.98, 3.63, 2.64, 2.7, 3.0,
			2.82, 3.75, 2.94, 2.04, 3.04, 3.56, 2.4, 3.48, 2.22, 1.77, 3.15, 3.48,
			3.15, 2.93, 2.5, 2.97, 1.49, 2.75, 1.96
		],
		"transcript_en": [
			"[PIANO MUSIC PLAYING]",
			"",
			"DAVID J. MALAN: Hello, world.",
			"This is CS50 and this is web programming with Python and JavaScript",
			"with CS50's own, Brian Yu.",
			"This course picks up where CS50 itself leaves off,",
			"diving more deeply into the design and implementation of web apps",
			"with Python, JavaScript and SQL using frameworks",
			"like Django, React, and Bootstrap.",
			"BRIAN YU: We'll start by taking a closer look out HTML and CSS, languages",
			"that we can use to describe the structure and the style of web pages.",
			"After that, we'll introduce Git, version control",
			"tool that we can use to keep track of changes we make to our code,",
			"and also to allow multiple people to collaborate",
			"on the same project at the same time.",
			"After that, we'll dive more deeply into Python",
			"exploring some more advanced features of the programming language",
			"and, in particular, how we can use it in order",
			"to create dynamic web applications using a web framework known as Django.",
			"We'll leverage Django, and, in particular,",
			"its ability to deal with data, working with SQL, models, and migrations",
			"to create web applications that use a database in order",
			"to create interactive user experiences.",
			"After that, we'll dive more deeply into another programming language--",
			"JavaScript-- exploring how we can use JavaScript",
			"to create dynamic and interactive user interfaces, writing code that responds",
			"to events, and also manipulates a web page in response",
			"to some kind of user interaction.",
			"After that, we'll explore some best practices in industry,",
			"including testing to make sure that our code works as expected, and also",
			"continuous integration and continuous delivery",
			"to allow us to rapidly make changes and deploy those changes to our code",
			"whenever we're able to make those updates.",
			"And then, finally, we'll consider concerns",
			"around scalability and security as we take our applications",
			"and move them from our own computers to the web where anyone can access them.",
			"We'll talk about how we make sure that these applications are able to scale",
			"and how we're able to make sure that these applications are secure.",
			"Along the way, you'll have an opportunity to put all of this",
			"into practice by building web applications of your very own.",
			"BRIAN YU: This is CS50.",
			"[PIANO MUSIC PLAYING]",
			""
		],
		"is_youtube": false
	},
	"video_002": {
		"section": "CS50W 2020",
		"subsection": "HTML, CSS",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001300/HarvardXCS50W-V001300.m3u8",
			"https://edx-video.net/HarvardXCS50W-V001300_DTH.mp4"
		],
		"video_duration": 7411,
		"speech_period": [
			17.0, 2.42, 1.38, 1.17, 2.75, 1.48, 2.94, 2.25, 2.16, 3.84, 3.57, 3.03,
			2.13, 2.31, 3.54, 2.79, 3.78, 2.31, 2.61, 2.7, 2.4, 2.34, 2.64, 3.27,
			2.91, 3.0, 4.05, 3.0, 2.2, 3.5, 3.66, 3.15, 4.2, 4.23, 1.54, 2.84, 3.39,
			4.11, 3.94, 2.84, 3.15, 3.48, 2.94, 3.66, 2.31, 2.46, 3.6, 1.65, 2.1,
			4.65, 3.39, 3.12, 3.76, 2.64, 2.09, 3.0, 1.95, 3.47, 1.84, 1.8, 3.49,
			1.85, 3.42, 3.02, 2.05, 1.89, 2.68, 3.02, 2.4, 3.69, 3.33, 3.42, 3.84,
			3.48, 3.9, 3.51, 3.51, 3.87, 4.11, 2.11, 2.24, 2.1, 2.94, 2.58, 2.16, 3.3,
			1.89, 3.57, 2.95, 2.39, 2.11, 1.85, 1.73, 3.46, 6.09, 4.02, 0.9, 2.73,
			5.7, 4.02, 1.51, 2.59, 4.21, 4.62, 3.34, 2.69, 4.17, 1.92, 2.91, 2.25,
			4.59, 3.15, 3.42, 2.91, 3.57, 3.09, 2.2, 2.63, 1.83, 2.76, 1.47, 3.15,
			2.85, 3.87, 6.15, 3.46, 3.71, 2.22, 4.23, 3.81, 4.32, 3.51, 2.88, 3.52,
			3.36, 2.67, 3.39, 3.45, 3.81, 3.3, 3.87, 3.1, 1.07, 2.22, 2.19, 2.22,
			3.15, 3.19, 2.56, 1.91, 2.82, 3.99, 2.61, 2.88, 3.79, 2.9, 3.03, 3.81,
			3.6, 2.67, 3.15, 3.74, 2.91, 2.12, 2.86, 2.53, 3.99, 2.61, 2.43, 2.91,
			1.56, 2.43, 2.47, 2.3, 2.38, 2.65, 3.61, 4.54, 2.3, 2.46, 2.88, 2.28,
			3.12, 3.69, 1.29, 3.39, 3.84, 4.32, 1.6, 2.48, 4.05, 3.06, 2.64, 2.43,
			3.54, 1.53, 2.64, 2.82, 3.9, 4.86, 2.58, 3.78, 2.14, 3.11, 4.26, 4.05,
			1.53, 3.0, 0.81, 3.27, 2.37, 3.78, 2.92, 4.28, 3.33, 3.81, 2.34, 2.5,
			3.05, 3.19, 3.05, 1.63, 5.17, 1.42, 3.79, 4.55, 3.8, 5.2, 4.55, 2.89,
			3.62, 2.51, 3.61, 4.23, 0.96, 2.67, 3.78, 4.92, 2.74, 4.31, 3.78, 1.47,
			3.96, 3.33, 4.54, 3.74, 1.5, 3.36, 2.61, 3.12, 3.78, 4.21, 1.04, 1.98,
			1.08, 2.79, 2.31, 2.8, 2.63, 3.3, 3.72, 3.03, 3.19, 3.39, 2.93, 2.37,
			2.43, 2.94, 4.51, 4.46, 1.35, 3.3, 2.28, 3.03, 3.81, 2.4, 5.79, 3.06,
			3.72, 3.27, 2.91, 2.49, 3.9, 4.53, 3.55, 3.32, 2.36, 2.04, 2.37, 3.45,
			4.08, 2.45, 4.65, 1.44, 2.49, 2.7, 3.06, 2.97, 2.7, 3.51, 2.16, 3.96,
			3.24, 3.81, 2.28, 2.01, 4.32, 3.82, 2.36, 4.8, 4.11, 3.24, 1.79, 1.96,
			2.52, 1.89, 2.97, 2.28, 1.98, 1.98, 3.55, 2.34, 4.16, 3.39, 2.25, 3.06,
			3.99, 3.36, 3.65, 1.84, 4.86, 3.42, 2.38, 2.64, 3.47, 2.37, 1.92, 3.43,
			1.47, 2.53, 1.52, 2.94, 2.12, 5.35, 4.24, 2.1, 5.29, 2.97, 2.8, 4.89,
			2.34, 4.59, 2.79, 4.19, 4.8, 5.2, 3.87, 2.96, 4.24, 2.06, 3.94, 4.41, 4.9,
			2.63, 3.21, 2.55, 1.91, 2.75, 0.71, 3.94, 3.23, 2.79, 1.56, 2.4, 3.45,
			1.05, 2.34, 2.94, 3.36, 3.58, 2.9, 2.82, 2.97, 2.07, 1.8, 4.68, 1.86,
			3.21, 1.93, 1.88, 2.79, 6.1, 3.41, 3.69, 2.97, 3.19, 2.05, 2.5, 1.77,
			3.15, 3.03, 3.52, 3.23, 3.3, 3.21, 3.15, 4.96, 2.3, 2.4, 2.73, 3.69, 3.17,
			1.75, 1.92, 3.68, 2.88, 4.21, 2.0, 2.34, 2.19, 2.28, 2.82, 2.73, 2.71,
			2.96, 2.42, 4.24, 4.1, 5.58, 2.48, 3.57, 2.79, 3.69, 3.82, 2.81, 3.69,
			7.04, 4.83, 3.81, 1.6, 3.62, 2.03, 5.46, 2.28, 2.55, 4.75, 3.09, 2.31,
			3.54, 2.73, 3.9, 4.53, 5.94, 3.21, 3.63, 3.0, 3.03, 1.83, 2.79, 3.03,
			2.58, 4.44, 1.65, 1.95, 2.65, 3.47, 2.71, 4.46, 4.96, 2.33, 2.49, 3.07,
			2.42, 1.23, 4.32, 2.34, 3.33, 3.0, 3.81, 3.96, 3.24, 3.33, 2.82, 2.22,
			1.69, 3.14, 2.13, 1.83, 3.21, 2.18, 2.05, 4.47, 2.91, 2.28, 3.87, 4.35,
			5.67, 3.24, 1.84, 1.94, 2.81, 4.75, 3.91, 5.81, 4.08, 1.89, 4.23, 5.01,
			4.23, 4.71, 3.39, 3.22, 2.3, 4.21, 5.27, 1.41, 3.13, 2.91, 6.17, 6.34,
			4.16, 3.46, 2.69, 1.12, 1.63, 2.17, 1.75, 1.34, 4.65, 2.31, 3.12, 3.27,
			2.34, 2.97, 3.06, 3.24, 3.33, 2.25, 2.73, 5.3, 2.53, 1.92, 4.82, 2.84,
			2.1, 3.6, 2.0, 2.59, 2.04, 2.13, 2.88, 3.99, 3.84, 3.36, 4.95, 6.12, 2.31,
			2.04, 3.51, 5.24, 2.87, 2.85, 2.68, 3.11, 1.45, 2.39, 3.48, 2.55, 2.01,
			2.91, 3.03, 4.42, 4.19, 2.29, 2.65, 2.73, 3.81, 2.1, 1.12, 3.03, 2.39,
			3.15, 1.02, 3.18, 3.18, 3.27, 2.76, 1.86, 1.48, 2.24, 6.86, 1.96, 1.44,
			1.17, 2.04, 2.64, 3.06, 2.88, 2.7, 4.53, 4.23, 2.55, 1.57, 2.75, 4.77,
			2.19, 3.69, 0.5, 2.33, 1.07, 3.99, 2.31, 4.92, 2.46, 2.99, 2.95, 1.74,
			5.39, 3.45, 3.6, 3.66, 4.47, 1.38, 4.51, 3.78, 3.06, 3.17, 3.05, 2.45,
			3.06, 2.26, 2.48, 3.69, 3.0, 3.15, 1.53, 3.12, 3.16, 3.53, 2.67, 2.88,
			3.42, 3.13, 1.55, 4.83, 3.9, 4.02, 3.0, 3.08, 3.13, 3.84, 2.34, 3.09,
			3.72, 3.12, 3.61, 2.96, 3.42, 2.01, 4.63, 3.48, 1.84, 3.17, 2.74, 2.19,
			1.67, 4.47, 2.67, 2.43, 3.75, 4.3, 3.3, 3.38, 4.32, 3.53, 3.25, 3.15,
			2.87, 2.35, 5.11, 4.79, 1.96, 4.21, 2.69, 1.95, 3.03, 1.83, 2.67, 2.4,
			4.23, 2.55, 1.98, 2.97, 3.33, 2.82, 3.61, 3.32, 3.76, 3.86, 2.65, 3.14,
			3.42, 2.22, 4.2, 2.43, 2.58, 3.15, 3.78, 2.6, 3.69, 1.52, 2.02, 2.61,
			2.17, 2.21, 3.3, 3.93, 3.12, 3.15, 0.78, 2.7, 1.86, 2.16, 2.55, 2.83, 3.7,
			2.59, 3.02, 2.89, 2.28, 0.93, 1.26, 3.48, 2.97, 3.48, 1.8, 5.1, 3.06,
			3.48, 4.2, 3.15, 1.71, 3.57, 5.27, 5.58, 3.99, 3.96, 4.02, 5.44, 4.38,
			2.85, 3.32, 2.37, 2.16, 2.64, 3.27, 3.24, 4.26, 3.42, 5.24, 1.54, 4.59,
			2.97, 3.78, 2.97, 3.8, 2.53, 2.73, 3.78, 3.42, 4.59, 2.25, 3.78, 4.42,
			3.11, 1.92, 3.03, 0.87, 1.17, 2.07, 3.75, 2.02, 4.64, 3.84, 2.16, 2.79,
			1.46, 2.42, 2.34, 1.19, 1.33, 2.69, 1.71, 3.03, 3.27, 2.16, 2.73, 4.93,
			4.01, 1.53, 2.52, 3.66, 1.53, 7.29, 3.3, 2.82, 3.02, 4.39, 4.7, 2.38,
			3.12, 2.37, 3.48, 4.66, 2.75, 4.02, 4.38, 2.22, 4.47, 3.66, 4.11, 4.05,
			2.38, 3.48, 2.57, 3.36, 5.27, 2.63, 2.16, 4.17, 1.95, 2.13, 3.6, 2.19,
			2.94, 4.65, 3.53, 3.15, 2.28, 2.49, 1.51, 4.28, 3.01, 2.64, 3.59, 4.41,
			4.14, 2.47, 1.46, 2.55, 4.23, 3.51, 3.0, 2.7, 2.04, 1.72, 2.24, 3.0, 2.57,
			2.05, 1.9, 2.0, 2.67, 2.43, 2.73, 2.31, 2.73, 2.89, 3.83, 2.4, 2.67, 2.04,
			2.82, 2.44, 1.67, 4.2, 3.63, 4.59, 3.56, 2.67, 2.67, 2.82, 3.18, 1.11,
			1.8, 3.96, 2.97, 3.54, 4.71, 3.04, 6.17, 5.04, 2.22, 4.44, 3.03, 3.06,
			3.96, 4.56, 4.37, 1.86, 4.7, 2.91, 5.16, 3.06, 4.51, 1.4, 3.45, 3.74,
			4.45, 3.33, 4.08, 1.63, 2.45, 4.17, 2.55, 2.81, 4.0, 3.01, 2.78, 3.28,
			3.45, 3.26, 2.91, 3.1, 3.77, 0.9, 1.71, 3.3, 3.5, 3.91, 3.33, 3.78, 6.36,
			3.09, 2.13, 1.95, 1.86, 4.17, 3.61, 2.64, 2.7, 3.9, 4.2, 2.43, 2.55, 2.52,
			2.79, 2.28, 5.43, 2.94, 1.53, 3.51, 1.54, 2.57, 3.0, 4.15, 1.91, 3.93,
			3.25, 3.65, 3.87, 5.52, 1.08, 3.49, 4.51, 5.91, 2.27, 5.55, 3.06, 2.37,
			3.18, 4.2, 3.85, 3.54, 4.4, 2.85, 5.01, 3.39, 2.19, 5.04, 3.63, 3.6, 3.99,
			2.82, 1.47, 1.2, 1.09, 1.22, 3.3, 1.87, 4.76, 4.38, 4.68, 3.36, 3.72,
			1.56, 3.42, 1.95, 2.37, 3.66, 3.2, 3.67, 4.25, 1.75, 4.29, 2.86, 2.63,
			3.12, 2.88, 2.94, 3.54, 1.6, 1.82, 2.81, 4.84, 2.31, 2.85, 4.14, 4.62,
			3.1, 4.31, 5.48, 2.94, 3.24, 1.72, 3.38, 2.7, 2.52, 2.55, 1.74, 4.74,
			3.54, 2.82, 2.0, 3.97, 2.94, 2.22, 3.24, 1.35, 1.95, 2.49, 2.88, 2.88,
			5.25, 3.7, 2.25, 3.77, 2.94, 2.37, 3.78, 4.5, 5.99, 4.53, 3.45, 2.67,
			3.06, 3.3, 2.4, 2.61, 3.21, 1.02, 3.29, 4.95, 4.45, 3.04, 2.54, 1.59,
			2.29, 5.16, 1.62, 2.95, 1.41, 3.09, 4.29, 1.23, 2.78, 1.75, 4.17, 2.28,
			3.7, 4.19, 4.9, 2.72, 3.22, 2.33, 4.42, 1.94, 2.13, 2.23, 3.17, 2.92,
			4.31, 1.11, 3.84, 2.1, 2.44, 3.71, 2.95, 2.21, 3.24, 3.57, 2.65, 2.4,
			3.35, 0.93, 2.22, 2.76, 3.06, 2.19, 3.06, 2.74, 2.75, 2.67, 3.66, 3.06,
			3.05, 2.71, 2.16, 3.93, 2.94, 3.24, 3.66, 3.0, 2.49, 4.29, 2.19, 2.97,
			2.4, 3.18, 2.05, 4.4, 5.23, 2.02, 3.27, 4.98, 4.02, 3.66, 4.53, 3.18,
			4.89, 2.63, 2.92, 6.84, 3.09, 2.76, 1.92, 3.63, 3.57, 3.34, 3.2, 1.44,
			3.04, 2.78, 3.81, 2.01, 4.33, 3.6, 3.23, 3.48, 2.22, 3.81, 3.51, 2.97,
			3.96, 2.73, 3.57, 3.48, 5.16, 2.73, 3.12, 2.64, 4.92, 3.06, 3.72, 4.77,
			1.8, 3.87, 4.11, 1.53, 2.95, 1.49, 5.94, 0.93, 2.76, 2.58, 1.68, 4.48,
			2.18, 2.16, 3.72, 2.97, 2.05, 2.04, 3.17, 3.0, 2.22, 1.71, 1.89, 2.4,
			3.55, 1.85, 2.73, 3.21, 4.17, 2.1, 6.11, 4.38, 2.21, 1.0, 3.48, 0.69,
			2.76, 4.56, 2.46, 2.7, 2.55, 2.16, 5.68, 1.27, 4.04, 3.42, 3.09, 5.58,
			2.17, 2.78, 4.44, 3.51, 0.93, 2.43, 3.15, 2.28, 3.45, 3.59, 5.05, 4.47,
			2.58, 1.89, 4.47, 3.66, 4.23, 6.78, 1.47, 2.07, 3.6, 1.45, 2.64, 4.56,
			4.44, 3.62, 2.7, 2.04, 2.92, 3.54, 5.45, 3.45, 3.3, 1.44, 2.37, 2.29,
			3.62, 1.78, 1.35, 3.71, 3.84, 3.16, 4.74, 2.78, 2.52, 5.28, 2.56, 2.3,
			3.15, 3.36, 3.48, 4.05, 1.27, 3.11, 2.79, 2.22, 3.3, 3.64, 4.34, 4.98,
			2.07, 3.21, 4.14, 4.26, 4.89, 3.6, 2.01, 3.72, 4.72, 4.85, 3.01, 2.82,
			4.59, 4.71, 4.95, 5.43, 5.37, 2.3, 3.64, 4.23, 1.84, 4.25, 1.66, 3.59,
			5.67, 2.76, 4.08, 2.7, 5.16, 2.94, 3.03, 1.27, 5.41, 4.56, 4.75, 2.96,
			2.54, 1.25, 2.19, 4.17, 5.17, 3.26, 4.32, 2.67, 1.62, 3.56, 2.35, 2.65,
			4.06, 1.73, 4.24, 2.16, 5.64, 4.26, 3.16, 3.28, 4.53, 1.94, 4.03, 6.91,
			4.26, 3.84, 1.54, 2.63, 4.53, 3.12, 1.62, 1.71, 2.37, 5.43, 4.17, 3.84,
			2.88, 3.54, 3.27, 0.9, 5.76, 1.74, 3.54, 1.74, 2.94, 1.54, 3.93, 4.76,
			3.96, 3.05, 2.09, 3.72, 3.9, 4.64, 2.71, 3.83, 5.03, 3.65, 1.78, 3.32,
			3.6, 2.48, 1.84, 2.7, 2.95, 1.97, 2.01, 2.31, 3.57, 4.71, 2.34, 2.97,
			5.16, 1.59, 2.46, 6.03, 2.13, 4.95, 5.27, 4.72, 4.8, 0.96, 2.85, 6.09,
			2.74, 5.42, 2.07, 3.84, 5.82, 0.99, 5.67, 1.24, 3.97, 1.93, 3.12, 2.83,
			1.85, 4.2, 3.6, 1.8, 2.31, 3.69, 3.63, 4.32, 4.38, 3.27, 2.55, 5.37, 1.47,
			2.49, 2.8, 3.08, 4.14, 1.42, 2.63, 2.4, 3.16, 4.16, 1.08, 1.35, 1.08,
			2.29, 1.82, 1.42, 4.82, 2.56, 2.04, 3.62, 4.83, 3.63, 2.31, 2.4, 2.55,
			3.3, 5.1, 4.74, 3.3, 0.87, 1.8, 3.54, 1.92, 1.9, 4.67, 3.93, 6.66, 2.38,
			2.84, 1.89, 1.56, 2.87, 3.4, 4.06, 1.83, 3.54, 3.3, 2.55, 1.29, 3.15,
			5.26, 1.67, 1.89, 2.73, 3.78, 4.17, 2.25, 2.79, 3.89, 2.05, 5.14, 3.98,
			3.18, 2.92, 7.07, 3.15, 3.36, 5.43, 5.55, 3.09, 1.17, 1.11, 6.06, 3.12,
			4.13, 2.05, 3.75, 3.18, 2.02, 1.01, 3.09, 5.0, 1.02, 3.81, 4.59, 2.93,
			3.05, 2.81, 5.73, 2.52, 1.95, 3.75, 3.0, 4.65, 2.49, 2.46, 5.23, 3.12,
			4.19, 4.14, 1.95, 2.88, 2.94, 4.37, 3.73, 2.24, 3.55, 1.89, 1.8, 2.34,
			2.76, 1.3, 1.88, 3.9, 4.77, 3.77, 2.92, 1.48, 2.24, 5.91, 2.92, 5.04, 5.1,
			2.0, 1.62, 3.93, 3.99, 3.84, 2.04, 6.06, 4.09, 2.09, 2.59, 2.3, 3.15,
			4.25, 2.71, 1.7, 3.95, 2.96, 2.73, 5.55, 4.86, 2.07, 3.57, 3.89, 3.41,
			2.72, 3.72, 2.37, 5.71, 4.04, 2.88, 3.21, 2.43, 1.71, 4.14, 3.49, 4.7,
			0.87, 2.01, 4.44, 2.28, 5.49, 3.99, 3.54, 1.99, 2.43, 1.58, 3.3, 4.8,
			4.95, 4.11, 3.87, 3.33, 1.17, 1.16, 1.69, 3.96, 3.09, 1.18, 3.2, 3.99,
			3.57, 3.91, 2.43, 3.45, 2.37, 2.28, 2.76, 3.0, 3.69, 2.34, 4.72, 3.08,
			4.71, 2.82, 1.86, 2.43, 3.57, 3.11, 3.13, 0.85, 3.2, 1.98, 1.8, 3.24,
			3.21, 4.41, 1.91, 3.22, 2.4, 3.48, 3.27, 2.85, 4.65, 3.66, 2.88, 3.12,
			3.87, 1.86, 3.0, 3.69, 2.4, 4.17, 4.32, 5.16, 4.92, 2.52, 3.09, 2.55,
			1.99, 2.09, 3.12, 2.07, 2.91, 5.05, 2.0, 1.83, 3.51, 2.67, 2.37, 4.83,
			2.76, 2.13, 3.06, 5.52, 3.05, 3.76, 3.24, 3.21, 5.86, 3.68, 4.2, 4.74,
			2.16, 2.5, 2.3, 1.65, 1.7, 2.92, 1.26, 4.02, 1.81, 2.72, 2.35, 3.17, 4.51,
			3.68, 2.91, 4.38, 7.54, 2.61, 5.46, 4.65, 5.13, 1.76, 2.59, 2.65, 2.66,
			1.44, 4.42, 2.27, 3.6, 2.61, 2.97, 4.45, 3.56, 4.23, 3.16, 2.38, 2.25,
			4.48, 3.67, 1.97, 4.44, 3.24, 3.48, 1.05, 1.71, 2.1, 3.81, 3.12, 3.58,
			1.75, 4.0, 2.88, 2.04, 3.06, 1.97, 3.88, 3.93, 3.44, 1.8, 2.86, 1.92,
			2.41, 2.0, 1.77, 3.44, 2.98, 2.76, 2.16, 2.1, 1.23, 1.62, 1.77, 2.04,
			3.18, 2.67, 2.01, 2.97, 2.55, 2.67, 3.27, 2.71, 2.0, 3.31, 3.98, 2.13,
			6.78, 2.65, 1.88, 3.52, 2.39, 4.05, 1.77, 6.21, 2.56, 1.05, 5.15, 3.87,
			1.83, 3.88, 3.48, 2.1, 3.78, 2.13, 3.81, 2.34, 3.81, 2.98, 3.41, 3.48,
			3.06, 4.56, 2.31, 2.91, 2.08, 3.92, 3.66, 3.45, 3.45, 2.88, 2.49, 3.91,
			4.11, 3.37, 4.52, 2.51, 3.96, 2.56, 2.35, 3.63, 1.12, 3.51, 4.5, 2.02,
			4.61, 2.04, 2.43, 2.82, 2.07, 3.0, 3.24, 2.5, 5.69, 2.1, 3.51, 4.8, 3.15,
			2.81, 7.24, 5.19, 3.84, 3.61, 2.88, 1.86, 1.74, 3.09, 1.48, 2.0, 4.59,
			3.3, 2.16, 2.07, 2.94, 2.11, 4.19, 3.09, 2.55, 4.23, 1.93, 2.81, 2.88,
			2.45, 1.52, 3.62, 3.18, 3.66, 1.92, 1.8, 5.66, 1.66, 2.97, 1.62, 3.93,
			2.58, 2.28, 4.05, 1.2, 4.92, 2.84, 3.61, 2.85, 2.1, 3.15, 4.62, 3.13,
			2.79, 2.07, 3.21, 2.46, 3.27, 2.73, 2.43, 3.42, 3.48, 2.34, 2.46, 2.34,
			3.12, 3.96, 1.96, 1.7, 2.13, 2.43, 5.54, 3.4, 3.62, 2.43, 2.64, 1.17,
			2.61, 4.05, 3.54, 3.36, 3.17, 3.67, 2.42, 1.84, 3.72, 1.63, 4.73, 5.16,
			2.58, 4.41, 4.06, 1.16, 2.82, 3.64, 2.39, 3.28, 1.31, 2.33, 4.45, 4.85,
			5.65, 4.5, 2.82, 4.54, 2.0, 1.62, 1.42, 2.96, 1.56, 5.22, 1.08, 2.73,
			2.91, 3.48, 4.29, 3.78, 2.88, 3.8, 2.44, 2.61, 2.94, 1.84, 5.07, 2.09,
			3.87, 2.73, 5.13, 4.84, 1.79, 3.06, 3.09, 2.88, 2.83, 6.14, 3.6, 2.76,
			2.79, 1.5, 4.09, 3.8, 3.73, 4.34, 1.83, 3.03, 2.61, 3.03, 2.13, 4.91,
			2.57, 2.4, 3.81, 2.83, 2.27, 2.05, 5.04, 3.51, 3.45, 3.25, 3.95, 2.97,
			2.34, 2.42, 2.98, 3.66, 2.91, 2.4, 3.72, 2.49, 5.7, 2.16, 4.29, 2.13,
			2.55, 4.44, 8.21, 2.91, 1.92, 3.15, 4.14, 3.9, 3.91, 5.14, 2.32, 4.07,
			2.25, 4.35, 2.49, 4.29, 3.3, 1.69, 5.06, 3.84, 3.81, 1.55, 3.43, 4.38,
			4.15, 5.12, 3.0, 2.31, 6.28, 2.75, 2.49, 1.86, 2.58, 2.81, 4.67, 5.07,
			4.11, 5.25, 1.86, 2.13, 3.42, 3.09, 2.82, 3.09, 3.28, 2.33, 5.13, 2.34,
			4.47, 2.2, 2.3, 2.97, 2.19, 1.6, 3.71, 1.66, 2.15, 3.0, 3.51, 2.7, 2.88,
			3.66, 4.28, 4.54, 3.78, 2.46, 1.98, 3.72, 3.33, 2.58, 5.26, 2.6, 3.6, 3.0,
			3.12, 2.04, 2.22, 6.55, 3.26, 3.1, 3.05, 2.01, 2.55, 1.86, 3.1, 5.02,
			4.33, 2.52, 2.46, 3.45, 2.19, 3.15, 2.61, 5.25, 6.15, 2.97, 4.56, 4.77,
			2.85, 3.31, 2.84, 2.25, 2.31, 4.09, 3.41, 2.58, 7.21, 3.66, 3.31, 4.1,
			1.75, 2.34, 1.44, 1.95, 1.05, 1.69, 3.41, 4.41, 4.71, 1.56, 3.96, 1.48,
			3.62, 3.45, 5.83, 2.3, 1.97, 2.53, 2.91, 7.44, 2.99, 4.19, 3.44, 4.77,
			1.71, 3.02, 6.94, 3.36, 5.69, 3.39, 3.27, 2.4, 4.29, 3.75, 3.3, 3.13,
			4.13, 6.45, 3.35, 1.7, 1.84, 2.91, 5.76, 5.58, 3.09, 2.55, 4.47, 2.04,
			4.17, 2.97, 4.07, 2.31, 2.7, 3.87, 1.14, 2.43, 2.01, 7.19, 3.88, 3.9,
			3.75, 4.16, 2.92, 2.73, 5.82, 0.81, 2.96, 3.04, 3.3, 3.61, 4.38, 4.51,
			3.59, 3.5, 3.54, 1.59, 3.96, 2.28, 4.31, 2.92, 3.18, 5.5, 2.19, 5.93,
			5.67, 4.74, 4.2, 4.98, 2.45, 2.11, 4.74, 2.63, 2.44, 3.9, 3.72, 3.67,
			2.93, 3.2, 2.8, 1.05, 5.39, 2.41, 4.39, 1.55, 2.97, 3.18, 3.06, 2.4, 3.9,
			2.73, 3.09, 2.94, 3.18, 2.91, 3.42, 3.12, 4.57, 1.55, 4.17, 1.83, 1.36,
			3.77, 1.89, 7.93, 3.74, 2.73, 2.24, 3.97, 3.27, 3.21, 1.29, 1.21, 2.75,
			4.35, 3.2, 3.83, 2.84, 3.96, 3.83, 5.2, 3.0, 3.72, 3.18, 3.24, 2.13, 3.43,
			2.45, 2.57, 1.75, 1.68, 4.62, 2.52, 2.46, 1.44, 2.28, 4.65, 3.18, 3.46,
			5.75, 2.79, 3.48, 2.91, 1.2, 2.88, 2.13, 2.52, 1.26, 1.32, 2.7, 1.8, 3.75,
			2.46, 3.73, 2.93, 1.65, 4.95, 1.97, 3.12, 1.71, 4.44, 4.41, 3.18, 2.81,
			1.75, 2.58, 1.56, 4.86, 1.09, 1.91, 6.12, 3.42, 4.77, 2.4, 2.13, 2.34,
			1.89, 2.71, 2.78, 3.6, 2.22, 2.67, 3.18, 2.22, 2.82, 4.51, 2.3, 4.3, 2.18,
			2.34, 2.82, 2.19, 2.36, 1.75, 1.96, 2.18, 2.76, 2.58, 3.67, 2.57, 3.15,
			1.6, 3.36, 3.8, 6.0, 2.46, 3.99, 3.9, 3.57, 4.05, 2.49, 3.03, 2.52, 3.67,
			3.43, 1.75, 3.14, 2.77, 2.09, 1.96, 4.14, 4.11, 2.25, 3.09, 2.09
		],
		"transcript_en": [
			"[MUSIC]",
			"BRIAN YU: All right, welcome, everyone, to Web Programming",
			"with Python and JavaScript.",
			"My name is Brian Yu.",
			"And in this course, we'll dive into the design and implementation",
			"of web applications.",
			"In lectures, we'll have an opportunity to discuss and explore",
			"many of the ideas and tools and languages",
			"that are central to modern web programming.",
			"And through hands-on projects, you'll have an opportunity to take those ideas",
			"and put them into practice, designing multiple web applications of your own,",
			"culminating in a final project of your own choosing.",
			"Throughout the term, we'll cover a number of topics",
			"in this world of web programming, beginning",
			"with HTML5 and CSS3, two of the languages",
			"that are central to the understanding of web pages.",
			"HTML is a language we'll use to describe the structure of a web page.",
			"And CSS is the language we'll use to describe",
			"the style of a web page, the colors and the fonts",
			"and the layouts and the spacing that make the web page look",
			"exactly the way we want it to look.",
			"After that, we'll turn our attention to Git,",
			"a tool not specific to web programming per se,",
			"but that we can use in order to version control our programs,",
			"to keep track of the different changes we make to our web programs,",
			"and to allow us to be able to work on various different parts of the web",
			"application at the same time before merging those pieces back together.",
			"After that, we'll take a look at Python, one of the first main languages",
			"that we're going to be exploring in the course, which",
			"is the language that we are going to use in order to build our web applications.",
			"Specifically, we'll use Python using a framework called Django.",
			"Django is a web programming framework written in the Python programming",
			"language that we're going to use to make it easy to design and develop our web",
			"applications Django in particular makes it easy to design web applications",
			"that interact with data.",
			"So after that, we'll turn our attention to SQL, a language",
			"that we can use to interact with databases, in particular looking",
			"at how Django allows us to use models and migrations to interact with data",
			"and allow users to interact with data all the more easily.",
			"Next, we'll turn our attention to the second of the main programming",
			"languages that we'll be exploring in this class, JavaScript,",
			"and looking at how we can use JavaScript to run in users' web browsers",
			"to make web pages just a little bit more interactive.",
			"In particular, we'll use JavaScript in the context of user interfaces,",
			"looking at modern user interfaces and exploring",
			"how it is that those interfaces work and how",
			"we can develop those user interfaces with a combination of Python",
			"and JavaScript.",
			"Next, we'll turn our attention to testing",
			"and CI/CD, or Continuous Integration and Continuous Delivery,",
			"which are tools that we can use and software best practices to make sure",
			"that we're able to design and develop code more efficiently.",
			"And testing in particular makes sure that as we make changes to our code,",
			"we're not breaking existing parts of our web application",
			"by making sure that we have a whole suite of tests",
			"that we can use to ensure that our web application is always",
			"behaving as it should.",
			"And finally, we'll turn our attention to scalability and security",
			"on the internet, thinking about what happens",
			"as our web application grows larger.",
			"As more and more different users start to use our web application,",
			"how do we load balance between those people?",
			"And what do we need to change about our database to make sure lots of users",
			"are able to connect to our web application at the same time?",
			"Moreover, we'll look at the security implications",
			"behind designing our web applications.",
			"What might an adversary do if we're not careful?",
			"And how should we proactively be designing our web application",
			"to make sure that it's secure?",
			"But today, we begin our conversation with HTML and CSS,",
			"two of the languages that are foundational to understanding web pages",
			"and how web browsers are able to display those web pages.",
			"And we'll start with each HTML, or HyperText Markup Language,",
			"which is a language that we can use to describe the structure of the web page,",
			"all of the buttons and the text and the forms and other parts of the web page",
			"that the user ultimately sees and interacts with.",
			"Our very first HTML page is going to look a little something like this.",
			"It's going to be text-based code that we write that a web browser, like Safari",
			"or Chrome or Firefox, is then able to look at, parse, understand,",
			"and display to the user.",
			"So let's take a look at this page one line at a time",
			"and get an understanding for how it works.",
			"Even if you don't quite understand all the nuances of the syntax,",
			"there are probably a couple of things that stand out to you.",
			"You might notice the word title, which probably",
			"reflects the title of the web page, for example, which in this case",
			"appears to be the word hello.",
			"And then down further below, we see that we have the body of the web page",
			"that seems to contain the words hello world.",
			"So what is this web page actually going to look like?",
			"Well, let's take a look at it.",
			"We'll go ahead and open up a text editor.",
			"You can use any text editor you want.",
			"But for this course, I'm going to use Microsoft's Visual Studio Code.",
			"And I'm going to open up a new file that I'm just going to call hello.html.",
			"Inside of hello.html I'm going to write the same HTML that we just",
			"saw a moment ago.",
			"And we'll explain each of these lines in due time.",
			"But recall that we had a title of the page that said something like hello",
			"and then a body of the page where we said something like hello world,",
			"for example.",
			"So this is our very first HTML page.",
			"And if I go ahead and open that HTML page as my opening hello.html HTML,",
			"for example, inside of a web browser, what I'll see is something like this.",
			"In the body of the page, I see the words hello world.",
			"And if you notice up here at the top of my web browser,",
			"I see the title bar, where I have the title for this page, which in this case",
			"is just the word hello.",
			"So this is our very first web program that we've",
			"been able to develop just using HTML.",
			"And now let's explore in more detail how exactly this program works.",
			"So here again was the web page that we were just looking at.",
			"And this very first line here, DOCTYPE html",
			"is what we might call a DOCTYPE declaration.",
			"It's a way of telling the web browser what version of HTML",
			"we're using in this particular web page, because depending",
			"on the version of HTML, the web browser might",
			"want to display different information or it might need to parse",
			"the page a little bit differently.",
			"Each version of HTML has had a slightly different way",
			"of indicating that version.",
			"But this line here, DOCTYPE html is our way",
			"of saying that this HTML page is written using",
			"HTML5, the latest version of HTML.",
			"After that our HTML page is structured as a series of nested HTML elements,",
			"where an HTML element describes something on the page.",
			"And we might have elements that are inside of other elements.",
			"Each of those elements is indicated by what",
			"we're going to call an HTML tag, enclosed using those angled brackets.",
			"And right here, we'll see the beginning of the HTML tag, which",
			"means that this is the beginning of the HTML content of our page.",
			"Down below this slash HTML means that this",
			"is the end of the HTML content of the page.",
			"And in between is the actual HTML content of the page,",
			"which might include other HTML elements.",
			"You might also notice that in this HTML tag",
			"we've specified what we're going to call an HTML attribute,",
			"some additional information that we're giving about this tag.",
			"In particular, we're giving it a lang, or language, attribute,",
			"which is equal to en, or English.",
			"This just tells the web browser or anyone looking at the HTML of this page",
			"that this page is written in a language, and the language it's written in",
			"is English.",
			"And this is helpful for search engines, for example.",
			"When they're looking through many different web pages trying",
			"to figure out what language each web page is in we",
			"can just tell the search engine or anyone else who's looking at the page",
			"that this page is written in English.",
			"Now, inside of the HTML body of the page,",
			"we have a number of different elements that",
			"are going to describe what we want on this page,",
			"starting with the head section of the web page, which describes stuff",
			"not in the main body of the web page, the part of the web page",
			"the user sees, but other information about the web",
			"page that's going to be helpful or useful for web browsers to know about.",
			"For example, one important thing that a web browser needs to know",
			"is, what is the title of the web page?",
			"And here, we see a title tag, again, indicated by the word title",
			"in those angled brackets, followed by the end of the title tag,",
			"indicated by a slash before the title.",
			"And in between the two title tags is the word hello,",
			"which means the title of this page should be the word hello.",
			"And that's all the information we'll have in the head of the page.",
			"We'll add more information there later, but for now",
			"all the web page needs to know is that it has a title",
			"and the title is the word hello.",
			"Next up comes the body of the page, again, indicated by a body tag",
			"and that ends with a tag with slash body,",
			"meaning this is the end of the body of the page.",
			"And the body of the page, again, is just the visible part of the page",
			"that the user can see.",
			"And what do we want inside the body of the page?",
			"For now, we just want the text, hello world.",
			"And that's the information that's going to be displayed",
			"when someone visits this web page.",
			"And so that's all there really is to this HTML page.",
			"We specified in the header that there's a title of the page called hello.",
			"And inside the body, we're saying the page should say the words hello world.",
			"And if you want to visually think about the way",
			"that all these HTML elements are structured,",
			"it can sometimes be helpful to think about an HTML page",
			"in terms of a tree-like structure that we",
			"call the document object model, or DOM.",
			"And so, here, for example, is what the DOM for this web page",
			"might actually look like.",
			"Here on the left is the HTML content that we just saw a moment ago.",
			"And over here on the right is the DOM, the document object model,",
			"the tree-like structure that describes how all of these HTML elements",
			"are related to each other.",
			"So we start up here with the HTML element.",
			"And this parent element, so to speak, has two child elements",
			"within it, a head element and a body element.",
			"As we can see here, we're inside of HTML.",
			"We have a head section and a body section.",
			"And the indentation here that we're including in the HTML text,",
			"it's not strictly necessary.",
			"The web browser doesn't care what the indentation is.",
			"But it can be helpful for someone who's reading the page just",
			"to see the indentation to understand visually that the head is inside",
			"of the HTML element and the body is inside of the HTML element too.",
			"So inside of the head element, we have a title element.",
			"And inside of the title element is just the text, the word hello.",
			"And likewise, inside of the body element,",
			"we also have some text, the text hello world.",
			"So thinking about HTML and HTML documents in terms of this structure",
			"can be helpful for understanding which HTML elements are inside of which",
			"other HTML elements.",
			"And that's going to make it easier for us to reason about these pages",
			"later on.",
			"And especially as we later transition into the world of JavaScript,",
			"JavaScript is going to make it all the more powerful",
			"and give us the ability to actually modify parts of this DOM as well.",
			"But we'll certainly get to that in due time.",
			"So now, let's take a look at some of the other common HTML tags and HTML",
			"elements that we might be interacting with in our web page.",
			"And we'll start by thinking about HTML headings, so big banners",
			"at the top of the page, for example, some headline that",
			"describes what a page is about.",
			"So I'll go ahead into my text editor and create a new file",
			"that I'll call headings.html.",
			"And the structure of this page is going to be pretty similar to the pages",
			"that we've seen before already.",
			"So I'm going to start by just using the hello.html text and paste it in here.",
			"I'll change the title of the page.",
			"Instead of hello, we'll go ahead and call it headings.",
			"But inside the body of this page now, I want something a little bit different.",
			"I'm going to, inside the body the page, use an h1 element",
			"and say this is a heading, for example.",
			"So h1 is a tag that I can use to create a large heading at the top of my page,",
			"like for the title of the page, for example.",
			"So if I open up headings.html.",
			"I might see something that looks like this,",
			"a big heading at the top of my page that says, this is a heading.",
			"h1, where the h stands for heading and the 1 stands for the largest",
			"possible heading.",
			"And in fact, HTML gives us a number of different tags",
			"that we can use in order to create headings of various sizes.",
			"So, for example, I could also say h2 inside of which I say,",
			"this is a smaller heading.",
			"If h1 is the largest heading, h2 is the second largest heading.",
			"So if I load this page, for example, I now see the h1 at the very top.",
			"This is the big heading.",
			"And then beneath that, I see this is a smaller heading, the h2.",
			"And it turns out there's also h3, h4, h5, all the way",
			"down to h6, which is the smallest heading,",
			"such that if I load this page now, I have a big heading, a smaller one,",
			"and then here's the smallest.",
			"So we can often use these h1, h2, h3 tags",
			"just for visually organizing text inside of a page.",
			"If I want the title of the page, but also I",
			"want titles for each of the various different sections and subsections",
			"that might be contained within that page as well.",
			"So those are headings.",
			"And now, let's also take a look at some other elements",
			"that we might want to add.",
			"On web pages, we see not just titles and not just text,",
			"but we might also see lists, for example.",
			"Like if you've ever used a to do list program on a web page,",
			"for example, you might see a list of things that you need to do",
			"or other web pages might display lists of information.",
			"And it turns out that HTML has two basic types of lists.",
			"We have ordered lists for things that are in a particular order,",
			"like item number 1, item number 2, item number 3.",
			"And we have unordered lists for lists that don't have any particular order.",
			"So just bullet point, bullet point, bullet point, for example.",
			"And both are quite easy to use.",
			"I'll go ahead and create a new file.",
			"And we'll call this lists.html.",
			"And again, in list.html, I'll copy the same structure from hello.html.",
			"We're again going to have DOCTYPE html just to indicate the version of HTML.",
			"Most of the heading is the same.",
			"I'm just going to change the title from Hello to Lists.",
			"And then we're going to replace the body of this page",
			"to show some different information here.",
			"So let me first show what an ordered list might look like,",
			"something that has numbers, 1, 2, 3.",
			"An ordered as an HTML tag is just ol, ol for ordered list.",
			"So I can add a tag that says ol.",
			"And now inside of my ol element, my ordered list element,",
			"I need a new element for every list item.",
			"List item we're going to abbreviate to just li.",
			"So the li tag in HTML is what we're going",
			"to use to designate an item inside of an HTML list.",
			"So here, for example, I could say li and then first item.",
			"Then I could do the same thing, li second item",
			"and then again li third item.",
			"So what I have here are some elements and then elements",
			"nested within other elements.",
			"I have an ordered list element inside of which",
			"are three other HTML elements, three list items that",
			"are each indicating each of the individual items that are inside",
			"of my HTML list.",
			"I can now open this up by opening lists.html.",
			"And this is what I see.",
			"I see an ordered list, where I have item number 1,",
			"first item, second item, third item.",
			"Note that I didn't actually need to in the HTML anywhere",
			"specify the number 1, the number 2, and the number 3.",
			"When my web browser reads this should be an order list,",
			"my web browser, Chrome in this case, just adds those numbers in for me",
			"because it knows what an ordered list means",
			"and it knows how to take the HTML that I've written and display it in the way",
			"that I intend to the user.",
			"Now, in addition to ordered list that all have numbers, 1, 2, 3,",
			"we also have unordered lists that are just bullet",
			"points, bullet points of information.",
			"So I could, up above, add some more content to this HTML page.",
			"I can say here is an unordered list.",
			"And just as an ordered list we represented",
			"using the ol tag in HTML, ol standing for ordered list,",
			"likewise we can use the ul tag in HTML to create",
			"an unordered list, u for unordered.",
			"So here, we're going to add a ul tag.",
			"And again, my text editor here is automatically",
			"adding the closing tag here, this slash ul,",
			"meaning the end of the unordered list.",
			"And many text editors will do this now just so you, the programmer,",
			"don't forget to add that.",
			"And now inside of this unordered list, we're",
			"again going to have some list items.",
			"Also, using the li tag, here is one item.",
			"And here is another item.",
			"And here is yet another item.",
			"If I go ahead and refresh the page now, I'm still on list.html,",
			"I now see that on top of my ordered list,",
			"I have an unordered list, where each item instead of being numbered",
			"1, 2, 3, is instead labeled with just bullet point, bullet point, bullet",
			"point, where each of these bullet points and each of these numbered items",
			"is a list item element, or an li.",
			"So hopefully now we can see that as we start",
			"to explore these various different HTML tags and nesting HTML tags inside",
			"of one another, we're able to create more and more interesting",
			"web pages as a result.",
			"So let's explore now what other types of web pages",
			"we can create using other types of HTML elements.",
			"In addition to lists, one thing you might imagine",
			"is that one of the important things on the web",
			"is not just displaying text, but also displaying other types of media,",
			"like images, for example.",
			"So how might we go about doing that?",
			"Well, I can, for example--",
			"let's go back into my text editor.",
			"Let me create a new file that I'm going to call",
			"image.html, which is going to contain some code for displaying some images.",
			"I'll go ahead and go into hello.html and copy this text into the page,",
			"again, change the title to Image.",
			"And now, inside of the body, I'm going to add a new tag called image.",
			"And the image tag has a couple of required attributes.",
			"Remember that attributes are what we saw before things, like adding",
			"a lang equals en to the top of my page to indicate that this web page is",
			"written in English, for example.",
			"And the image tag has a couple of required attributes that I need to add.",
			"In particular, when I display an image on the page,",
			"I need to specify what image I actually want displayed, for example.",
			"So I might specify image src, short for source,",
			"is going to be equal to what image do I actually want to display on this page.",
			"And it just so happens that inside of my folder where I have image.html,",
			"I have an image called cat.jpeg.",
			"So I'm just going to specify cat.jpeg as the file name of the image",
			"that I want to display.",
			"And it turns out that images also have a second required attribute.",
			"In addition to the file name or the link to whatever image I want to display,",
			"I also need to provide some alternative text, a text-based representation",
			"of what you're going to see on the image because in some cases,",
			"some web browser might not be able to render the image correctly.",
			"You might imagine if there's some error rendering the image,",
			"or if someone's on a slow internet connection,",
			"or if someone's using a screen reader and therefore can't actually",
			"see the image.",
			"We want some text-based representation of that image as well.",
			"And so I'll provide some Alt text, some alternative text, that",
			"can be used to substitute the image in case for some reason",
			"we can't display the image.",
			"And the Alt text that I'll use in this case",
			"is just going to be the word cat, for example.",
			"And that's all I need.",
			"Now, notice in particular there's something a little bit",
			"different about this image tag compared to other tags",
			"that we've seen before in the sense that it doesn't have a closing",
			"tag in the sense that the body had a beginning of the body and an end",
			"to the body, our ordered list had a beginning of the ordered list",
			"and the end of the unordered list with list items in between.",
			"It doesn't really make sense for an image,",
			"for example, to have the beginning of the image",
			"and the end of the image and some content",
			"in between, because the image is just a single HTML element that can't really",
			"have anything inside of it.",
			"So in that sense, we don't actually need a closing image tag.",
			"The image tag is self-closing.",
			"It is its own beginning and end.",
			"So we can just say we want an image to be here",
			"that is cat.jpeg with an alternative text of just the word cat, for example.",
			"So now, if I open up image.html, we'll see",
			"that what gets loaded is quite large, a picture of a cat.",
			"And I can scroll around and see this entire image.",
			"Of course, this picture of a cat is probably larger than I wanted it to be.",
			"I probably, when I my user visits this web page,",
			"I don't want them to have to scroll all the way to the right",
			"in order to see the entire cat.",
			"So I can actually add additional HTML attributes",
			"in order to modify the size of the image that I'm displaying.",
			"And later we'll see we can use CSS to do a similar thing as well.",
			"But for now, what I can add is an additional attribute",
			"and say that let me give cat.jpeg, this image tag,",
			"another attribute that, in this case, I'll just call width.",
			"And I'll say that width is going to be equal to 300,",
			"because I would like for this image to be 300 pixels wide, for example.",
			"So now, if I refresh this page, I now see",
			"that the same cat image appears, except now it",
			"appears at 300 pixels wide exactly.",
			"So I'm able to add additional attributes, additional information",
			"to control how an HTML element is going to appear.",
			"In this case, I want to control its width,",
			"and it automatically scales down the height",
			"to make sure that the image is proportional as well.",
			"Now, on the internet, in addition to just displaying information",
			"on a single page, it's also common for a page to link to other pages.",
			"In fact, that's one of the main important values",
			"of the internet is the ability to go from one page",
			"to another via these links.",
			"And so one thing we might reasonably want to do",
			"is add some links to our page, where if you click on something,",
			"you're taken to another page altogether.",
			"So let's take a look at an example of that.",
			"I'll create a new file based on hello.html.",
			"And I'll add lang equals English for good measure.",
			"And I'll call this new file link.html, where here, we're",
			"going to practice with building some links into our HTML page.",
			"I'll copy the content of hello.html again, call this link.",
			"In order to create a link, I'm going to use a tag",
			"called the a tag, short for the anchor tag.",
			"And the a tag takes one important attribute,",
			"which is called href, for hyperlink reference, which",
			"is going to specify what page I would like to link to.",
			"So if, for example, I wanted when a user clicks on this link",
			"to go to google.com, then I'd set the href attribute",
			"of this tag equal to HTTPS://google.com, for example.",
			"Then inside of the a tag, I would specify what text I want to display.",
			"What text should the user see such that when the user clicks on that text",
			"they're taken to the web page?",
			"In this case, I'm just going to say something like, Click here,",
			"for instance.",
			"Now, if I open up a link.html, this is what the user sees.",
			"They see a blue link that says Click here.",
			"And when the user does click on that link,",
			"they're taken to HTTPS://google.com.",
			"And it turns out that we can use this href attribute not only",
			"to link to different websites altogether,",
			"but we can link to different pages on the same website.",
			"So, for example, if I wanted to link to that cat page",
			"that I designed a moment ago, instead of linking to google.com,",
			"I could instead just link to image.html.",
			"And now, if I save that and refresh, or if I open up link.html again,",
			"now I see a click here link, where when I click on Click here,",
			"now I'm taken to that page, image.html, that",
			"happened to have that picture of a cat from before.",
			"So using these anchor tags and href attributes,",
			"we're able to link together multiple pages.",
			"So that if we have a website that has many different web pages,",
			"we can connect them all together by using a combination",
			"of these various different links.",
			"So now that we've seen images and links and lists, what other HTML elements",
			"might we add to our web page?",
			"Well, one thing we might want to add are things",
			"like tables, just other ways of displaying information.",
			"So let's go ahead and create a table and look at what HTML elements",
			"we can use in order to do so.",
			"So I'll go back here to my text editor, create a new file called table.html.",
			"Using the same starting HTML, we'll call this page Table.",
			"And inside the body of this page now, there",
			"are a number of different HTML elements that we'll",
			"need in order to create a table, because as you might imagine,",
			"a table is really composed of multiple parts.",
			"We have our big table.",
			"But each table is really just a sequence of individual table rows.",
			"And each of those rows is really just a sequence",
			"of individual cells of data within that table.",
			"And so that structure that we're imagining, a table that consists",
			"of individual rows, where each row consists of individual cells,",
			"is exactly how we're going to represent this table in HTML.",
			"We're going to start with just a table tag.",
			"That's going to represent the entirety of this table.",
			"But inside of the table, we might have different parts.",
			"We might have the heading of the table.",
			"We might have the body of the table.",
			"So in order to represent that, I'll add thead.",
			"That's going to stand for the heading of the table,",
			"the stuff at the top of the table that might",
			"indicate what each column of the table means, for example.",
			"And let's see, what columns do I want?",
			"Well, let's go ahead and add some table headings,",
			"which I can represent using the th tag, h for heading.",
			"And maybe I want in this web page to display information",
			"about various different oceans, for example.",
			"So maybe I have one column for the ocean and another column,",
			"another table heading, for the average depth of that ocean,",
			"and another table heading for the maximum depth of that ocean.",
			"And that'll be the very first row of that table, the heading of the table.",
			"But in addition to the heading of the table,",
			"we also have the body of the table.",
			"So underneath the thead, I'll go ahead and include",
			"tbody, body for the main part of the table where all my data is going to be.",
			"And that body is going to consist of individual rows of a table.",
			"So I might have a tr, which here stands for table row.",
			"And inside of this table row, we'll go ahead and add some individual data",
			"points inside of the table.",
			"So inside of my table row, I'm going to have one table data point, or td,",
			"for table data, that says Pacific Ocean, for example, then another table",
			"data that says 4,280 meters, and then another one",
			"for the maximum depth of the Pacific Ocean, which is 10,911 meters.",
			"And, in fact, these three table heads as well",
			"at the top of the page, the ocean, the average depth, and the maximum depth,",
			"those should actually probably be in a row of their own",
			"as well, because the very first part of the table, that is also a row.",
			"So I'll go ahead and add a tr, short for table row and inside of that tr",
			"put these headings.",
			"I'll go ahead and add one more row just so we can see what this looks like.",
			"And then, we'll take a look at the page and then go back to this code.",
			"I'll add the Atlantic Ocean, too, which has an average depth of 3,646 meters,",
			"as well as a maximum depth of 8,486 meters as well.",
			"So when I open up table.html now, here's what I'm going to see.",
			"I'm going to see a table-like representation of the data.",
			"It's not just one thing after another after another anymore.",
			"It's structured in a table.",
			"Now, granted, there aren't any borders.",
			"And I could probably add some colors and spacing",
			"to make this look a little bit nicer.",
			"But I see three columns--",
			"ocean, average depth, and maximum depth, where this very first row",
			"is what we might call the table header, the very top",
			"of the table that's defining what all of the columns mean.",
			"Inside of that table header is a single table row",
			"that has three table data cells--",
			"ocean, average depth, and maximum depth.",
			"Then beneath this table header, represented in bold,",
			"is the table's body, or the tbody element, inside",
			"of which we had two rows, one for representing the Pacific Ocean,",
			"one for representing the Atlantic Ocean.",
			"And then we had data cells in each one of those rows",
			"for representing each of the individual cells that's located within this table.",
			"So this is what that page ultimately looks like.",
			"And let's take one more look at the HTML just",
			"to get an understanding for how all of these tags interact with one another.",
			"And no need to memorize all these tags right now, slowly",
			"as you begin to design HTML pages, you'll",
			"start to get more familiar with what HTML tags are available to you.",
			"And certainly, all of these HTML tags are",
			"things that are easy to reference if you need to look them up.",
			"It's very helpful to be able to look up something",
			"like, how do I create a table in HTML?",
			"And then you'll be able to see what the various different tags you'll",
			"need to add are in order to generate the table that you're looking for.",
			"But, again, just to recap, here, we have a table element, inside of which",
			"are two child elements, thead and tbody.",
			"Inside of each of those are one or more table rows, representing using tr.",
			"Inside of each of those are three table data cells, representing using td.",
			"And so using these nested tags, elements inside",
			"of elements inside of other elements, we've",
			"been able to build something far more complex than just a bulleted list.",
			"We've been able to build an entire table that has information as well.",
			"But ultimately, our web pages should be web pages that don't just",
			"display information, but that also let users",
			"interact with that information in some way.",
			"For example, you might imagine that on Google's home page, for example,",
			"it's not just unchanging.",
			"There's a field where I can type something in.",
			"And anytime users can provide input to a web page,",
			"we generally call that a form, or some place",
			"where a user can fill out a form in order",
			"to provide information to the web page.",
			"And so now, let's take a look at how we can use HTML",
			"in order to create a form that's going to display some information.",
			"So I'll go ahead and create a new page called form.html,",
			"again using that same HTML as before.",
			"We'll call the page Form.",
			"And inside of the body of this page now, let's say",
			"that I want to create a form that gives the user an opportunity to provide",
			"their full name, for example.",
			"How do I do that?",
			"Well, the first thing, I need is a form element, some way of saying,",
			"here is going to be a form.",
			"And now, inside of that form, what are the various different parts",
			"of the form?",
			"Well, there's really two parts that you might imagine to this form.",
			"One is a place for the user to actually type in their name.",
			"And they probably also need some way to submit the form, some button that",
			"just says submit, such that they can click on that button",
			"in order to submit the form.",
			"So how would we do that?",
			"Well, in order to create an input field, we're",
			"going to use an input tag, who's type in this case is going to be text.",
			"There are a number of different ways that users",
			"might provide input to a form.",
			"They might type in text.",
			"They might choose from a dropdown menu.",
			"They might choose from a radio button option.",
			"Or they might provide input as by clicking on a button, for example.",
			"In this case, we're specifically using the type attribute",
			"to say that when the user is providing input in this way,",
			"the type of input that they're providing is going to be some kind of text.",
			"Then, we might provide a placeholder, some default text that's",
			"going to be inside of that input field the first time",
			"the user looks at the page.",
			"So, for example, the placeholder might be Full Name.",
			"That way the user knows that what they should type into this placeholder",
			"is their own full name.",
			"And then finally, we're going to go ahead and give a name to this input",
			"field.",
			"Now, this isn't going to be something that the user sees",
			"when they visit the page.",
			"But anytime you submit a form, when we receive that forum in our web",
			"application-- something we'll explore later on--",
			"we need some way of knowing which input field corresponded to which value.",
			"And so we're going to name each of the input fields",
			"just so that later on we'll be able to reference them.",
			"And, for now, since the user is typing their full name here,",
			"we could just name this full name.",
			"Or we could more succinctly just say name as the Name of this input field.",
			"After that, we have an input field where the user can type in their name.",
			"And now, we need some way for the user to be able to submit this form.",
			"So we might say something like input type equals",
			"submit to say, here's a way for the user to submit the form,",
			"type equals submit means.",
			"This is how they're going to submit the form when they're done completing it.",
			"Now, if I open up form.html, this is the page",
			"that we're ultimately going to see when we load this HTML.",
			"This entire page just contains a single HTML form.",
			"But that HTML form contains two parts.",
			"The first part was this input element here",
			"that allowed an opportunity for the user to type in their full name.",
			"They type in their full name into this input field.",
			"And when they're done, they can click this Submit button",
			"to indicate that they would like to now submit this form.",
			"Of course, right now, this form isn't going to do anything when we type",
			"in our name and click Submit, because we have an added and a logic in order",
			"to handle this form.",
			"But later on, as we transition into the world of building web applications",
			"using Python, we'll see how we can design a form,",
			"such that after the user submits it, we save information to a database",
			"or display some sort of results back to the user,",
			"all by using the power of building these web applications",
			"and connecting them to these sorts of HTML forms.",
			"And HTML forms can actually get quite a bit more complex.",
			"We'll take a look at another example.",
			"For instance, let me open up form1.html, which",
			"is a form that I built in advance, which shows a number of other ways",
			"that users can provide information as input to an HTML form.",
			"Here, we see an input whose type is text,",
			"meaning we want the user to type in their name as text.",
			"But you might also imagine that if a user is logging into a website,",
			"for example, they might in addition to typing in a text-based name or username",
			"or email, also provide a password.",
			"And generally, if you've been on a website and you've typed in a password,",
			"the password characters don't all show up as the actual characters.",
			"For security reasons, they generally show up as just little dots",
			"on the screen hiding the actual characters that they're representing.",
			"And in HTML, we can do that very easily by just",
			"saying that the type of this input is password.",
			"If they're typing in a password, our web browser",
			"will know not to actually display those individual characters.",
			"In addition to just text-based input, we also have radio button input,",
			"as I alluded to a moment ago.",
			"So here, we have a number of different radio inputs,",
			"where the user might be able to select from a number of options,",
			"choosing their favorite color, for example,",
			"from a number of these options.",
			"And finally, just to take a look at one other additional feature of HTML5,",
			"in fact, a new feature of HTML5, is something",
			"we might call a data list, where we might",
			"have the user choose in a dropdown from a number of different options.",
			"But we want to very quickly filter down or autocomplete based on those options.",
			"So if the user needs to select what country they're from, for example,",
			"we might have an input field and specify that it's",
			"going to be associated with a list called countries.",
			"Then immediately below that I have a data list element whose",
			"ID is countries, where here, I'm going to specify these",
			"are all of the options for what country we could have.",
			"Each one is inside of an option element whose value",
			"is whatever country they could select.",
			"And we have all of the countries of the world listed in these option elements.",
			"So this input here is going to allow me to select one option from a list of all",
			"of these possible options.",
			"So now, if I open up form1.html.",
			"Here's what that form ultimately looks like.",
			"I can, here, inside of the name field--",
			"again, that word name shows up, because it's the placeholder--",
			"I can type in my name here.",
			"And inside of the password field anything I type",
			"is going to show up as just little dots instead",
			"of the actual characters, because the type of that input field was password,",
			"instead of the type being text.",
			"In favorite color, I now have the ability",
			"to choose between various different favorite color options.",
			"In a radio button format, I choose from one of a number of options.",
			"And finally, inside this country dropdown,",
			"I have the ability now when I click on it to see all of the countries,",
			"but as I start to type letters, like u-n-i-t,",
			"it filters down to only the options that I actually care about.",
			"So here if I type in enough letters, eventually I see United States.",
			"And I can click on that option as well.",
			"So HTML5 builds in these additional features",
			"to make it easy to implement something like a text field, where it will auto",
			"complete based on the text that you provide.",
			"You can just specify that it is inside of this data list",
			"and then provide a list of all the possible values.",
			"And then HTML and your web browser in turn",
			"will take care of the process of rendering that information in the way",
			"that you expect it to be displayed.",
			"So those are just some of the possible HTML elements",
			"that we can ultimately create by using these various different elements",
			"that we nest within each other.",
			"And there are definitely other HTML elements",
			"that exist as well that you can begin to explore.",
			"But all of them follow a very similar pattern",
			"that we're going to have some tag, that might require",
			"some attributes, additional information about the HTML,",
			"to give context to the web browser for how that element should be displayed.",
			"Maybe that element needs to have a particular source for an image.",
			"Maybe it needs a link in order to link to somewhere, or other information",
			"as well.",
			"And then inside of that element, you might nest other elements.",
			"So that your table has rows.",
			"And inside of those rows, we have other cells.",
			"And you might imagine nesting elements inside",
			"of other elements inside of other elements.",
			"But right now so far, all of our web pages have been rather simple.",
			"They've just been-- we've described the structure of the page,",
			"and we've described we want a list here, we want to form there.",
			"What we might really like is some way of specifying that we",
			"want to style our web page in some way.",
			"We want to add color.",
			"We want add spacing.",
			"We want to add some sort of other layout to our page as well.",
			"And in order to do that, we're going to use a second language",
			"that we're going to call CSS, short for Cascading Style Sheets.",
			"In particular, we'll use the latest version",
			"of CSS, CSS3, which gives us the ability to take an HTML page",
			"and tell the web browser how we would like it to be styled.",
			"Instead of just black text in the same font on a white background,",
			"we can begin to specify particular CSS properties of how",
			"we would like this page to look to make sure that the page looks",
			"the way we want it to.",
			"So let's take a look at a simple example now of CSS",
			"to take a look at how we can add some CSS code to our page.",
			"So I'll go ahead and create a new file that I'll call style.html,",
			"just to demonstrate some basic ideas of adding some style to our page.",
			"And we'll go ahead and copy the same hello.html from before.",
			"And maybe in addition to hello world, I display in h1 some big heading",
			"at the top that says like, Welcome to my web page, for example.",
			"So now, if I open up, style.html, this is what I see.",
			"I see a big heading at the top that says welcome to my web page,",
			"beneath which is just the text, hello world.",
			"And now imagine that I want to add some style",
			"to this heading at the top of the page.",
			"Maybe instead of being left aligned, I want it to be centered.",
			"Maybe instead of just being black text, I'd like to change the color.",
			"In order to do that, just as we've used attributes",
			"in the past to add additional information to this particular HTML",
			"page, we can do a very similar thing with CSS.",
			"We can specify that we're going to give this h1 element a style attribute.",
			"And that is going to be equal to.",
			"And then in quotation marks, we're going to provide all of the CSS properties",
			"that we would like to add to this particular element.",
			"So the way that CSS styling works is that we can give elements",
			"individual CSS properties, where a property is",
			"something like the color of the element or the alignment of the element.",
			"And each of those properties has a default value.",
			"But we can change its value to something else.",
			"So if, for example, I wanted to change the color of this heading,",
			"so that instead of a black heading, it displayed as the blue heading,",
			"I could say for this h1, I would like to give it a color property.",
			"And then to give the color property of value,",
			"I say color colon and then the value that I would like to give to it.",
			"So color colon blue, for example, followed by a semicolon",
			"will change the color of this h1 element to blue.",
			"And my text editor is automatically showing me",
			"a little square that shows me what this color blue is actually",
			"going to look like.",
			"This isn't part of the text.",
			"It's just my text editor being helpful so",
			"that I can see in advance as I'm writing this code what the color is actually",
			"going to look like.",
			"So now if I open up style.html, here's what I see.",
			"Instead of a black heading at the top, we've changed the color to blue.",
			"And there are many other built-in colors that",
			"exist within HTML that we can use in order to change",
			"the color to whatever we want.",
			"If instead of blue, I said I want the color to be red,",
			"for instance, I can refresh the page.",
			"And now, the heading is red.",
			"And there are many other colors.",
			"I can change the color to like spring green, for instance.",
			"And that's going to be a particular shade",
			"of green that displays just like this.",
			"And so now, we have the ability to add various different style",
			"properties to individual elements.",
			"I can say take this heading and change its style",
			"so that the color instead of being black is going to show up as blue instead.",
			"And if I want to add multiple CSS properties to the same HTML element,",
			"I can do that as well.",
			"Here in the style attribute, I can say that in addition",
			"to saying that the color is blue, I'd like to give a second CSS",
			"property to this element.",
			"I'd like to say that the text align property should be center, for example.",
			"The text align property controls, as you might imagine,",
			"how a particular HTML element has its text aligned.",
			"Is it all the way on the left, all the way on the right, or centered?",
			"And if I change the text align property to have a value of center,",
			"well, then now, when I refresh this page, I see that Welcome to my web page",
			"is now both blue, and it's centered.",
			"I've changed the color, and I've changed the alignment",
			"of this particular element.",
			"And HTML elements don't need to just be styled directly.",
			"They can also get their style information from parent elements.",
			"So if you recall again that DOM structure, where",
			"we have an HTML element inside of which is this body element",
			"and inside of the body element is this h1 element and this text,",
			"you can imagine if we wanted this styling",
			"to apply not just to this heading, but also to the Hello World text,",
			"I could move the styling information, move this style attribute,",
			"change it from the h1 and escalating it to this body.",
			"And if I move the style to the body, then everything inside of the body",
			"is going to be styled in that way.",
			"So let's now take a look at an example of that to see how that works.",
			"If I take this style information, and I move",
			"it so that instead of associating it with the h1,",
			"I instead associate it with the body, then now, when I refresh the page,",
			"I see that both parts of the body, both the big heading",
			"at the top that says, Welcome to my web page,",
			"as well as the text, Hello World, both have those CSS properties applied.",
			"I've changed their color to blue.",
			"And I've also changed their text alignment",
			"to be centered instead of just left aligned.",
			"But if I do want it to just be that heading,",
			"then I can move it out and say that I just",
			"want to apply the style to that one individual heading.",
			"Now, one thing that we might imagine might become a problem over time",
			"is that imagine if I had multiple headings that I wanted",
			"to style in the same way, for example.",
			"Let's say I have a second heading that--",
			"this is a second heading--",
			"that I also want to be styled as blue and centered as well,",
			"I can refresh this page and see that right now that is not the case.",
			"And I don't want to make the entire page blue and centered.",
			"I only want these two headings to be blue and centered.",
			"So what I could do is I could just take this style code from the h1",
			"and apply it to this h1 as well, so that both of my h1 elements",
			"now have the exact same style code.",
			"And I'll go ahead and refresh this.",
			"And now, we see this is the intended behavior.",
			"I have two headings, both of which are centered and both of which are blue.",
			"But what we want to start to think about as we start to build web applications,",
			"and especially as our web applications start to get a little bit more",
			"sophisticated, is to think about the design",
			"of how we're building our web pages and how",
			"we're building our web applications.",
			"And in particular, anytime we find ourselves",
			"copying a lot of the same information from one place",
			"to another, that's probably not the best design.",
			"And you should start to think about how might you",
			"design this a little bit better.",
			"It's not great design, one, just because there's",
			"some redundancy that probably doesn't need to be there,",
			"but also because it makes the page a little bit more",
			"difficult to change and add a little more difficult to update.",
			"If I instead want to change both of these headings",
			"to be red instead of blue, then all of a sudden,",
			"I need to change my code in two places.",
			"I need to change the style attribute on this first heading up here.",
			"And I also need to change the style attribute",
			"on the second heading down there.",
			"What I'd like to do is to somehow just be",
			"able to write the style code once and then have",
			"it apply to both of these headings.",
			"And, in fact, there is a way to do that.",
			"What we can do is instead of doing what we might call inline styling,",
			"where we take the CSS code and place it directly",
			"as an attribute of an HTML element, we can move our style code",
			"to an entirely different part of the web page.",
			"Recall again that at the top of our HTML page,",
			"we have this head section that just includes",
			"information that's useful to know about the web page,",
			"but isn't actually part of the body of the web page, the content",
			"that the user sees.",
			"This head section is a great place where we",
			"can begin to put some style information, information about how we would",
			"like for this web page to be styled.",
			"So what I can do here is instead of putting these style",
			"attributes inside inline with these HTML elements,",
			"I can inside of the head section of my web page",
			"add a style element, where in between the opening style tag and the closing",
			"style tag, I can add any of the style information that I want.",
			"And here's the way that syntax is going to look.",
			"I first need to specify, what types of elements am I going to style?",
			"And in this case, I want to style all of the h1s.",
			"So I can just say h1.",
			"And then all of the style code is going to go inside",
			"of a pair of curly braces, where I can say I would like the color to be blue",
			"and I would like the text align property to be centered.",
			"So now, here's what I've done.",
			"I've taken the CSS code that used to be down here inside the body of the page",
			"actually as an attribute of these h1 elements.",
			"And I've moved the style-related code to a different part of my page altogether.",
			"Now, the style information is inside the header of my page,",
			"inside of the style element, where I've said for every h1 element,",
			"here's how you should style it.",
			"The styling is in between the opening and curly closing braces here.",
			"And I've said that every h1 should have a color of blue.",
			"And every h1 should have a text a line property of center.",
			"And that is then going to apply to all of the h1 elements",
			"that my web page happens to find inside the body of my web page.",
			"So there's a couple of advantages here.",
			"Advantage number one is what we talked about a moment ago.",
			"I don't need to duplicate the same code in both of these h1 elements.",
			"I can write at once and say, apply this styling",
			"to all of the h1s that show up in the page.",
			"An advantage number two is we've been able to factor out the style",
			"code to somewhere else, just to make it a little bit cleaner.",
			"So that instead of having a really long line, you might imagine,",
			"if we had not just two, but maybe five or six or seven different CSS",
			"properties, that would have taken up a lot of space on one line.",
			"I can instead in a more readable, more organized way,",
			"move that style-related code to the style element",
			"at the beginning of the page just to make it easier to read,",
			"easier to visually understand, and just to clean up the body of the web page",
			"as well.",
			"And that's going to be another of the key themes that's",
			"going to come up again and again in this class, this idea of separating things",
			"out so that every piece can sort of be independent of one another.",
			"Our structure of the web page inside the body is separate from the style.",
			"And we'll see the same sort of idea appear again and again, as we begin",
			"to try to design web applications well.",
			"So now if I take this exact same page and go ahead and refresh style.html,",
			"we'll see that we see the exact same thing.",
			"Both of the headings still show up as centered.",
			"Both of them still show up as blue.",
			"But now we have the advantage of having only",
			"written the style code once instead of needing to write the exact same style",
			"code multiple times in the same way.",
			"But it turns out that we can even do a little bit better",
			"than this, because one thing you might imagine",
			"is that if I have a web application or a website that has multiple different web",
			"pages, it's probably going to be likely that each of those web pages",
			"might need to be styled in similar ways.",
			"If I have a big banner at the top of one web page,",
			"then in other pages related to that page,",
			"I might want the same banner, styled in the same way,",
			"using similar style information.",
			"And right now, our CSS code is specific to one particular page.",
			"And it's not going to be easy to then take that same styling",
			"and apply it to another page.",
			"If I wanted to, I'd need to copy the exact same CSS code,",
			"put it inside of another page.",
			"But then we run into the same problem of duplication,",
			"where I've now had to repeat myself across multiple different pages,",
			"putting the exact same CSS code across all those different pages.",
			"So there is an improvement we can make.",
			"And the improvement we can make is to take that CSS code",
			"and just move it to an entirely different file.",
			"So instead of putting this style code inside of a style element",
			"inside of this HTML page, I'll just create a new file",
			"that I'll call styles.css, inside of which is going to be all of the CSS",
			"that I care about.",
			"I want to take every h1, I want to change its color to blue.",
			"And now, I want to change its text align property to center.",
			"And now, inside of my HTML page, I no longer need to include any CSS at all.",
			"Instead of this style element altogether,",
			"I can just link my CSS code in that CSS file, called styles.css,",
			"to this particular HTML page.",
			"And how do I link the styles.css file?",
			"Well, I can do so again in the head section of my web page",
			"using a link tag, where I can say I'd like this link",
			"to be the relationship is it's going to be a style sheet,",
			"meaning what I'm about to link is going to be a style sheet for this page.",
			"It's going to describe how I want for the elements on this page to be styled.",
			"And then, just as in the case of a link to another page,",
			"I use href to specify a hyperlink reference, what I want to link to,",
			"I'm now going to specify using an href attribute what",
			"CSS file I would like to know link.",
			"And in this case the CSS file that I'm going to link is styles.css.",
			"That is the file that just so happens to contain all of the CSS",
			"that I would like to apply to this particular file.",
			"Now, if I refresh the page, I see again nothing has changed.",
			"In the last two revisions, the page has stayed exactly the same",
			"as far as the user is concerned.",
			"They still see two headings.",
			"Both of them are centered.",
			"Both of them are blue.",
			"But now, the advantage is that here is my HTML.",
			"It's shorter than it was before.",
			"And in particular, there's no CSS that's baked in to this HTML file at all.",
			"I factored it all out into the separate styles.css file.",
			"And now if I have multiple HTML files that are all using the same styling,",
			"I can just link them all to the same styles.css",
			"file, such that they're all using the same style information.",
			"I don't need to repeat myself.",
			"And if ever I need to make a change across all of those pages,",
			"I just change the styling once.",
			"I change the styles.css file.",
			"And then all of the web pages that are linked to that style sheet",
			"will update as well in order to reflect those changes.",
			"So again, we've been able to factor out some of this style information",
			"to a separate file just to make our lives a little bit easier.",
			"All right, so so far we've now seen how we",
			"can CSS in a number of different ways to add some basic styles to our page.",
			"We've seen that we can take an element and change its color.",
			"We've seen how we can take an element and change its alignment,",
			"move it from left aligned to right aligned to centered, for example.",
			"As it turns out, there are a lot of different CSS properties",
			"that we can add to our HTML elements in order",
			"to style them in various different ways, more than we'll have time",
			"to talk about in this lecture.",
			"But now, let's just take a look at a couple",
			"of the most popular, most common CSS properties",
			"that we can add in order to make our web pages look the way we wanted to.",
			"And one of the most powerful tools for CSS",
			"is controlling the size of various different elements.",
			"By default, HTML just used a default size for everything on the page.",
			"But if I want to more precisely control how big any particular element is I",
			"can use CSS in order to do so.",
			"So let me now create a new file that I will call a size.html.",
			"We'll start with the same HTML code and call the page Size.",
			"And now, inside the body of my page, let me just",
			"have a vertical section of my page, just some section of my page",
			"that's going to have some content.",
			"And I'm going to put this inside of a div tag.",
			"Now, this is the first time that we've seen a div in HTML.",
			"You can think of a div as just a division",
			"of the page, some section of the page that's going",
			"to have some content inside of it.",
			"And we use divs because it makes it easy to reference a particular div or nest",
			"information inside of other pieces of information, or just to divide",
			"and break up our page into multiple different sections.",
			"Here, inside of the body, I'm just going to have",
			"a single div that is going to say something like hello world.",
			"And now, I'm going to add some style to this page",
			"in order to control the size of this div,",
			"to control the size of this section of my web page.",
			"I could use inline styling.",
			"I could factor things out into another file.",
			"But since I'm only dealing with one file for now,",
			"I'm just going to add a style section to the top of my web page",
			"just so you can more clearly see how the style of this page",
			"is going to map on to the way that we're modifying these HTML elements.",
			"And I would like to style this div in a couple of ways.",
			"One thing I can do is give the div a background color.",
			"Let me change its background color to blue, for example.",
			"And then I can say, all right, I'd like to give this div a width",
			"and a height, some size information.",
			"I can say, go ahead and give this div a width of 100 pixels",
			"and maybe a height of 400 pixels.",
			"So now, when I go ahead and open up size.html, this is what I see.",
			"I see in a 100 by 400 pixel wide vertical, or rectangular,",
			"section of my page, I see the words Hello World.",
			"And so you might imagine if you have multiple different elements",
			"on your page, as your web pages start to get a little bit more complex,",
			"you probably want to have some more precise control over how wide",
			"or how tall any particular element is.",
			"And these width and height attributes can be very helpful",
			"because I can very easily change the width to say like 500 pixels,",
			"for example.",
			"And now when I refresh the page, now I see that the width of this page,",
			"or this div, the section of the page, has actually now gotten a lot wider.",
			"And so we have the ability to control size using CSS.",
			"Go ahead and can close some of these pages that I no longer need.",
			"And now take a look at some other things that we can do.",
			"In addition to controlling the size-- and let",
			"me change this color to something a little bit lighter,",
			"something like orange, such that now if I open up size, it looks like this.",
			"I'll make this a little bit smaller.",
			"Let's try 200 by 200 pixels.",
			"It looks now like this.",
			"You might imagine there are some other changes that I might like to make.",
			"Like this Hello World, for example, is very close to the edge",
			"of this particular div.",
			"It's right up against the upper left corner of that div.",
			"I might want to change that by adding what",
			"we might call some padding to this particular HTML element, some space,",
			"just so that the content of the element isn't",
			"so close to the border of the element itself.",
			"So, for example, one thing I can do is inside this div add some padding.",
			"Say maybe I want 20 pixels worth of padding on the inside of the element,",
			"such that now when I refresh the page, we",
			"see that we have some padding along the outside of the element.",
			"So that Hello World now shows up not right up",
			"against the edge of the element, but inside a little bit as well.",
			"And if we have a particular HTML element that",
			"maybe is too close to the edge of the screen,",
			"maybe it's too close to the top of the screen,",
			"we can also add space around outside of the element",
			"by adding what we call margin to the element as well.",
			"So I can say let's give it 20 pixels of margin inside of this div.",
			"And then refresh.",
			"And now we see that whereas before this div was very close",
			"to the upper left edge of the screen, now",
			"we've moved it 20 pixels away from everything.",
			"So it's got some space on all four sides of it.",
			"So that's how we can now use margin and padding just",
			"to make the page look a little bit nicer to the user.",
			"So objects are not too close together or too far apart.",
			"Padding, again, is on the inside of the border of the element.",
			"I can add 20 pixels of padding, for example,",
			"to make sure that the content inside of the element,",
			"in this case, the words Hello World, just have a little bit of space",
			"from the border.",
			"And that's padding on the inside of the element.",
			"Margin, meanwhile, is on the outside of the element.",
			"We add some margin along the outside of the border to space",
			"the element out from other elements that might",
			"be nearby it to make sure that there's enough space between the border",
			"of the element from the top of the screen and also from the left",
			"and also the bottom and the right, though there's no objects there",
			"that we're currently creating space from.",
			"So by combining width and height and margin and padding,",
			"we now have the ability, using CSS, to make sure",
			"that we're able to layout our page the way we want to lay out the page,",
			"so that elements have the right amount of spacing from each other",
			"and are the correct size.",
			"So now, let's take a look at some other features that CSS is going to give us.",
			"In addition to just changing where particular elements are,",
			"like centering text or adding size and margin and padding,",
			"we can also use CSS to change how elements actually look.",
			"We've seen it to change the color of text, changing it from one color,",
			"like black, to another color, like blue.",
			"But we can also use CSS to be able to change something like the font",
			"that we use in order to display text.",
			"Modern web pages don't show everything in the exact same font.",
			"Usually, some designer is choosing what font",
			"they want for any particular web page.",
			"So let's experiment with those possibilities.",
			"I'll now create a new file that I'll call font.html,",
			"inside of which will be an HTML page called font.",
			"And inside the body, I'll again just have a div",
			"that says Hello World, same as before.",
			"But now, inside of the style tag here, up in the head section of my web page,",
			"I would like to add some font information to this div.",
			"And in particular, there are a number of different font-related CSS properties",
			"that I can add to control the font of any particular HTML element.",
			"One thing I can specify is the font family,",
			"specifying what font would I like to use in order to display this text.",
			"And maybe I want to display it in Arial, for example,",
			"which is a common font used on the internet, such",
			"that now if I open up font.html, I now see in Arial the words Hello World,",
			"different from the text that I was using before.",
			"You can also specify multiple different fonts.",
			"Not all computers support all fonts.",
			"So I could specify that just in case Arial isn't supported,",
			"fall back to any sans serif font, any of the fonts that",
			"don't have the little glyphs at the edge of each of the characters.",
			"So now, if I refresh the page, because my web browser supports Arial,",
			"I don't notice anything different.",
			"But you might imagine if you're using more complex fonts that not all web",
			"browsers have or support, you might add some backups just",
			"in case the font you want isn't actually available.",
			"In addition to a font family, I might also",
			"specify a font size, how big I want the font to be inside of this div.",
			"So I can specify that I'd like the font size of this give to be, you know,",
			"28 pixels, for example, such that now I refresh it.",
			"And now, this div appears using larger text.",
			"And I can also, just as like text editors",
			"let you specify whether you want it to be normal text or bolded text,",
			"I can specify a font weight for this div and say",
			"that in addition to being in font Arial in size 28,",
			"I would also like for the font to be bold, such that now I refresh it,",
			"and now, the font shows up as bold.",
			"And using these CSS style sheets, we're able to selectively apply",
			"the styling to only particular parts of the web page.",
			"If I have another underneath this div some more text down here, for example,",
			"that additional text that's outside of the div",
			"isn't going to be affected by the CSS styling, such",
			"that now if I refresh this page or some more text",
			"shows up in that same standard default font provided by my web browser and not",
			"the custom font that I have specified to apply to only",
			"this particular part of the HTML page.",
			"So that now is the ability to add fonts to our page too.",
			"Another thing that we might want to do is",
			"to be able to add some sort of border around our HTML elements.",
			"So maybe I want a line to be able to separate this entire part of the page",
			"from another part of the page.",
			"So I could add a border by going to this div and saying,",
			"let me give this div a border.",
			"And maybe I want the border to be like a 3 pixel solid black border,",
			"for instance.",
			"I can specify how big I want the border to be.",
			"I can specify whether I want the border to be a solid line",
			"or a dashed or dotted line.",
			"And I can specify what color I would like that border to be as well.",
			"So now, when I refresh this, I now see I have",
			"a border around this entire section, around",
			"this entire div, inside of my web page.",
			"And you can imagine these borders being helpful for styling",
			"various different parts of my page.",
			"So, for example, if we go back to that table",
			"that we were looking at a moment ago when we were dealing with oceans, where",
			"I had Ocean and Pacific Ocean and Atlantic Ocean,",
			"this is structured in the format of a table.",
			"We have rows and columns.",
			"But it doesn't look great right now.",
			"I might like to add some styling in order",
			"to improve the way that this table looks, for example.",
			"So let's give that a try.",
			"I'll go ahead and go back into table.html,",
			"that HTML file I was using before where I had this table.",
			"And let me now add some style information to this table.",
			"I might say that for this table I would like",
			"to give it a border that is maybe a 1 pixel solid black border,",
			"such that now when I refresh the page, I have a 1 pixel solid black border",
			"around the entirety of the table.",
			"All right, that's great.",
			"But I also really wanted a border in between the rows and the columns",
			"as well.",
			"In particular, every table data item, I might",
			"like to have some additional CSS supplied to those too.",
			"So I might say for every table data cell--",
			"again td stood for table data, and those were",
			"the individual cells within my table--",
			"I might specify that I would like those to also",
			"have a border that is 1 pixel solid black, such that now I",
			"refresh the page.",
			"And now, each of my table data cells also has a border around it.",
			"Now, this applied to the table data cells in the body of my page,",
			"but it didn't yet apply to these cells up in the heading.",
			"And that's because those were th elements, table headers.",
			"And so here, we have a couple of options.",
			"I could specify, once more, table headers",
			"I would like to give a border of 1 pixel solid black.",
			"But when I do so, you'll see that it does create a border around those table",
			"headers.",
			"But again, one thing that should be crossing your mind now",
			"is that there's a fair amount of redundancy here, some repeated style",
			"code that shows up in multiple different places.",
			"Table data cells in the body of my page, I really",
			"want to be styled in a very similar way to table header cells.",
			"And so it'd be nice if I could somehow consolidate these two different CSS",
			"selectors, these ways of me saying, style table data, style table headers.",
			"I'd like to combine them into one.",
			"And you can, in fact, do this in CSS.",
			"There are a number of different CSS selectors, ways of choosing elements.",
			"And one of them is just called the multiple element selector,",
			"that if I want to select both table data cells and table headers,",
			"then I can do so by saying td comma th and delete these three lines",
			"down there.",
			"What these three lines are now saying are",
			"that I would like to style all table data cells and table",
			"headers in the same way.",
			"And I could even combine table if I wanted to for good measure.",
			"But I'd like to give all of them a border of 1 pixel solid black, such",
			"that now I refresh it and now I see that they all have this border around them.",
			"Now, most tables you see on the internet don't have both a table or a border",
			"around everything on the table and also a border",
			"around each of the individual cells.",
			"Usually, those are collapsed just into a single line.",
			"And it turns out that CSS has an easy way for you to do this as well.",
			"I can add a CSS property to the table called border collapse and just say,",
			"I would like to collapse all of the borders in the table.",
			"Just going to show you there are many, many different CSS properties, far more",
			"than we'll be looking at today.",
			"But they're easy things to reference, that you can easily",
			"look up how to collapse borders in a table",
			"and then find a CSS property like this that you can then use and apply",
			"to your web page.",
			"So now I refresh that.",
			"And now I see that I have a border, just a single border, around all",
			"of the cells in this particular page.",
			"Next, what I might like to do, though, is like add some space around here.",
			"Like it seems like this text is very tight against the border of this table.",
			"So in order to do so, I want to add some spacing.",
			"And recall again, do I want margin or padding?",
			"Margin is spacing around side of the border of a particular HTML element,",
			"whereas padding is inside of the border.",
			"So if I want some space inside of the border,",
			"just to space out the text from the border itself, then what I want",
			"is padding inside of all of my table cells.",
			"So I can say let me add 5 pixels worth of padding",
			"inside of all of my table data cells and table header cells.",
			"Refresh the page.",
			"And now, here's what the resulting table looks like.",
			"Just by adding a little bit of CSS specifying what",
			"border I want around the edge of the page,",
			"specifying a little bit of padding inside of each of the cells,",
			"my table now looks a whole lot nicer than it did just a few lines of code",
			"ago when I just had the HTML structure of the page and not the CSS",
			"to describe how I actually wanted that page to be styled.",
			"And notice again that in doing so, we were",
			"able to use one of these CSS selectors.",
			"I was able to say that I wanted to use the multiple element selector, which",
			"is just this comma here, to specify that I would like to apply this styling,",
			"not just to td's but also to th's as well.",
			"We'll take a look at some additional examples of CSS selectors",
			"in just a moment.",
			"But next, let's turn our attention to some more tricky instances",
			"where we might want to apply styling to multiple elements at the same time.",
			"Let's imagine-- and let's go back to style.html, where we had some style",
			"code, where I had one heading.",
			"I'll call this Heading 1.",
			"And let's get myself to other headings, Heading 2 and Heading 3.",
			"All of these now are h1 elements that are going to show up the same way,",
			"such that now if I style and say, I would like all h1s to show up with",
			"a color of blue, then when I open this page where I have three h1 tags,",
			"each of which has a color of blue, when I open up style.html,",
			"what I'm going to see is something like this--",
			"three headings, each of which happens to have a color of blue.",
			"But what would happen now if I wanted to style only the first heading.",
			"I want Heading 1 to be blue.",
			"But I don't want to style Heading 2 and Heading 3.",
			"How do I do that?",
			"Well, one thing we could do is go back to the inline styling",
			"we did a moment ago, where inside of h1, I said style color is blue.",
			"And that would say for just this very first heading,",
			"I would like that to be blue, but not the other elements at all.",
			"But this again we decided was not the best design.",
			"This inline styling, commingling of HTML and CSS just gets a little bit messy.",
			"And it would be nice to be able to factor all of our style code",
			"to a separate part of the page altogether.",
			"So how do we do this?",
			"Well, we need some way to uniquely reference this particular HTML element.",
			"And in order to do so, we can given HTML element an ID.",
			"An ID is just some unique name we give to an HTML element,",
			"so that we can reference it more easily later on.",
			"Let me just go ahead and give this an ID of Foo.",
			"It could be any idea you want.",
			"But Foo is just a generic name here.",
			"And now, we've given this heading a name such that in other parts of our page",
			"or in other code, we can reference and find this particular HTML element.",
			"And in particular now, in the style section of my web page,",
			"instead of styling all h1 elements, I only want to style",
			"the element that has an ID of Foo.",
			"IDs are by definition unique.",
			"There can only be one element in this page that has an ID of Foo,",
			"otherwise it's not valid HTML.",
			"And so in order to do so, we're going to use #Foo.",
			"The hash mark symbol is just CSS's way of selecting just something",
			"with a particular ID.",
			"So instead of just h1 for selecting all of the h1 tags,",
			"if I want to select something by its ID, I",
			"say #Foo to say only style the element that has an ID of Foo",
			"and give it a color of blue, for example.",
			"So this style code now will find something with a particular ID",
			"and give it a style to correspond with it,",
			"such that now if I reload this page, only Heading 1 is styled.",
			"Heading 2 and Heading 3 are not.",
			"I've been able to name Heading 1, give it a name of Foo, an ID of Foo,",
			"and then in my style code, just style that particular part of my HTML page.",
			"Of course, what if I wanted to style multiple, but not all of the headings?",
			"Like maybe I want to style both Heading 1 and Heading 2.",
			"Now, I could use a second ID.",
			"Maybe give us an ID of Bar, for example.",
			"And then style both the element with ID Foo and the element with ID Bar.",
			"But now we're starting to add IDs unnecessarily.",
			"I have too many different names.",
			"Things can start to get messy, especially",
			"as my web pages start to get bigger.",
			"So while IDs are a way of giving a name to an HTML element that is unique,",
			"sometimes I want to give a name to an HTML element that is not unique,",
			"some name that can apply to multiple different HTML elements.",
			"And when we do that, we call that a class.",
			"An ID is a way of giving a unique name to an HTML element,",
			"while a class is a way of giving a name to an HTML element that",
			"might not be unique.",
			"It might apply it to zero or one or two or more different HTML elements.",
			"So here's what that might look like.",
			"Instead of giving each of these h1s an ID that's different,",
			"I can give each one a class.",
			"We'll give this a class of Baz, again, just another arbitrary name",
			"that we've chosen.",
			"And I'll give this each one a class of Baz as well.",
			"They both belong to the same class called Baz, in this case.",
			"And now, inside of my style code, I would like to say just the style",
			"the elements that are of class Baz.",
			"And just as we have a special symbol, the hashtag,",
			"for styling definitely something with a particular ID,",
			"to style everything with a particular class, I can use a dot.",
			"So dot Baz, in this case, is going to style only the elements that",
			"have a class of Baz.",
			"So here, I can now say, take all of the elements with a class of Baz",
			"and go ahead and give those a color of blue.",
			"So now, I have two h1s that belong to class Baz.",
			"The other h1 does not.",
			"And I've styled only the things that are of class Baz,",
			"such that now when I go back to the page and refresh the page, my first two",
			"headings, those do get styled as blue.",
			"But the third heading does not, because I've",
			"applied a class to these two elements that does not get",
			"applied to this third element there.",
			"So oftentimes, it can be very helpful if you",
			"have to start to design larger web pages where",
			"you have multiple different elements, some of which",
			"might be styled in some ways and other elements that might be styled similarly",
			"to one another, you can add IDs and classes to your HTML elements",
			"just to clean up the way that you write your CSS,",
			"to be able to very specifically pinpoint one element that you",
			"want to apply a style to or to apply styling to the entire class of elements",
			"as well.",
			"Now, one tricky thing you might imagine now",
			"is that now we have multiple ways of referencing the exact same element.",
			"So, for example, if you imagine that I just",
			"had a single h1, which had an ID of Foo, for example, that I've",
			"named Foo, what would happen if, for instance, I said all of the h1s I",
			"will like those to be colored red, and all of the elements with an ID of Foo,",
			"or the only element with an ID of Foo, I would like that to be colored blue?",
			"What might happen then?",
			"These would seem to be conflicting, where now suddenly we",
			"have an h1 style tag that is saying I should style h1s in this way,",
			"but I should style element Foo in another way.",
			"So what happens if I have an h1 whose ID is Foo, how do I choose to style that?",
			"And in order to deal with that we have to start",
			"to deal with the CSS problem of specificity, of what happens when",
			"I have multiple different CSS selectors that could apply to the exact same HTML",
			"element?",
			"And this often happens when we start to add IDs and classes to our elements",
			"as well.",
			"So when we deal with specificity, specificity goes in a particular order.",
			"There's an order of precedence that we can",
			"follow for determining what style should ultimately",
			"be applied to any particular element.",
			"The first, most powerful--",
			"most specific way of referencing an element is inline styling, literally",
			"adding a style equals attribute to our HTML elements",
			"in the way we did way at the beginning when",
			"we were first taking a look at CSS.",
			"If we associate inline styling with an HTML element, that's",
			"going to take precedence over any styling that's inside the style",
			"section of our head of the web page or inside of a separate dot CSS file,",
			"because the reasoning goes, if you are literally putting the style",
			"code attached to the element itself, then we probably",
			"want to apply it to that element.",
			"After that, specificity goes in order of how precisely we",
			"are identifying an element.",
			"An ID is a unique way to identify an element.",
			"There is only one element with that particular ID.",
			"So if I've added style to a particular ID,",
			"that is going to be pretty highly valued in terms of how specific it is.",
			"Next, we look at classes.",
			"So if there's no ID selector, we look for,",
			"did we reference the element by its class?",
			"And if so, then that takes next precedence.",
			"And otherwise, then we fall back to what type of HTML element it is.",
			"Is it an h1?",
			"Is it an ordered list?",
			"Is it a table?",
			"So in short, the type is the least specific.",
			"Class is slightly more specific.",
			"ID is more than that.",
			"And the most specificity we can provide is by literally putting the CSS inline",
			"with the HTML element itself.",
			"So let's take a look at an example of this.",
			"Let's look at this code, for example, where, for instance, I",
			"have a div, whose ID is Foo, inside of which I'm just saying the word hello.",
			"And the CSS code that I've included here is I've said for all div,",
			"I would like to give those a color of blue.",
			"Obviously, in that case, there's nothing conflicting.",
			"What we're going to see is we're going to see the word Hello.",
			"And we're going to see the word Hello in blue.",
			"But what happens now if we add anything with ID Foo should be colored red?",
			"Well, because ID has higher specificity than just an individual tag,",
			"well, then next, what we're going to say is that this Hello is going to show up",
			"is red.",
			"The ID is more specific.",
			"And so this element is going to show up red instead.",
			"And it doesn't matter what order these are in.",
			"It's not that the later one takes precedence.",
			"If I were to flip these around, where ID of Foo, color red, div color blue",
			"is in that order, it's still going to show up as red, because this ID",
			"selector is more specific than just the name div, which is the name of the HTML",
			"element that happens to be there.",
			"And so as you start to develop more sophisticated style sheets,",
			"you might find that some of your CSS code",
			"is going to conflict with each other.",
			"And that's where it's important to bear in mind how these specificity",
			"rules work to know as you add style to your elements",
			"how are they actually going to end up showing up.",
			"Now, we've seen a couple of CSS selectors",
			"now in terms of selecting a single element, selecting an ID,",
			"selecting a class, selecting multiple elements as well.",
			"It turns out, there are a number of other CSS selectors",
			"that we can use too.",
			"So we saw, for example, the multiple element selector,",
			"like td comma th for selecting table data but also table headers.",
			"But there's a number of other selectors.",
			"Here is just a sampling of ones.",
			"You can specify like descendants or children.",
			"So if I only want to style divs that are inside of tables,",
			"or I only want the style lists that are inside of certain classes,",
			"I can use these defendant and child selectors",
			"to add styling and those particular ways.",
			"And there are a number of other CSS selectors we can add as well.",
			"And we'll go ahead and explore a couple of these,",
			"just to give you a sample of how some of the CSS selectors can actually work.",
			"And we'll start by taking a look at the descendent selector, which",
			"is used to select all of the elements that are descendants",
			"of some other element, for example.",
			"So let's go ahead and create a new file, that I'll call descendant.html,",
			"that again, we'll start with the same code.",
			"And inside the body of this page, I want an ordered list",
			"that maybe has a list item 1 and maybe a list item 2.",
			"And it turns out with lists in HTML, you can nest lists inside of other lists.",
			"Maybe you've seen bullet points where there's like nested bullets inside",
			"of other bullet points.",
			"I can do that here.",
			"I can add an unordered list and create a sublist, like sublist item 1",
			"and sublist item 2.",
			"And maybe down here, here's another list item,",
			"such as that now I have a couple of items,",
			"but some that are inside of an unordered sub list.",
			"Let's go ahead and open up descendent.html",
			"and see what that looks like.",
			"So here's what we have.",
			"We have a list item 1, list item 2, another list item",
			"that is probably actually list item 3.",
			"So we have three items.",
			"But inside of list item 2, I have an unordered list.",
			"Let's imagine, for example, that I wanted to only style",
			"these sublist items as a particular color.",
			"That maybe I want those to be blue, for example.",
			"If in the style section of my web page, I",
			"say that I would like for all list items to be styled blue, well then--",
			"not styled, colored blue rather--",
			"then what I'm going to see when I refresh",
			"the page is that all of the items are going to be blue",
			"instead of just the two sublist items.",
			"But I could instead say that, you know what, I only want list items that",
			"are children of unordered lists.",
			"And I can do direct children using this greater than symbol",
			"to say that only if there is a ul that immediately contains an li within it,",
			"then I would like for that to be colored blue.",
			"And now, if I refresh that, now you'll see that the ordered items, list item",
			"1, 2, 3, those do not get colored, but only the list items",
			"that are inside of the unordered list that",
			"are directly children of that unordered list",
			"actually get the CSS styling applied.",
			"This greater than symbol here is specifying immediate children.",
			"I could get rid of it, ul li, like this, and this would also work.",
			"You still see sublist item 1 and 2.",
			"But this is a more general selector called the descendent selector",
			"that selects all descendant elements.",
			"So they might not be the children elements.",
			"They might be grandchildren element, so to speak,",
			"if those children elements have other children that",
			"are attached to them as well.",
			"Again, for all of this, it's helpful to begin",
			"to think about things in terms of that Document Object Model, that DOM",
			"structure, that tree that represented how all of our various different HTML",
			"elements are related to one another.",
			"So next up, we can begin to take a look at some of the other selectors",
			"that we have access to.",
			"So one of the selectors might be something",
			"like modifying only on a specific attribute of a particular HTML element.",
			"So we can use the attribute selector for that.",
			"I'll create a new file called attribute.html, where here,",
			"let's go ahead and create a unordered list.",
			"That's going to have a number of different links",
			"to various different websites.",
			"So here's a list item that is going to be a link to Google.",
			"So I'll link to google.com and say, Google.",
			"And I'll go ahead and add a link to facebook.com.",
			"Call that Facebook.",
			"And I'll go ahead and add a link to amazon.com and call that Amazon.",
			"And let's imagine for a moment that I only wanted to style the Facebook link,",
			"like I want to really highlight the Facebook link,",
			"tell people to click on that one as by coloring it",
			"in entirely different color.",
			"Well, to style things normally, I would say something",
			"like links should be colored, you know, blue, for example.",
			"They're colored blue by default, but I could be explicit about it",
			"and say, links should be color blue like,",
			"such that now when I open up attribute.html",
			"all the links are colored blue.",
			"But I could also say, I would like links that",
			"have an href attribute of facebook.com, I would like",
			"those links to be colored red instead.",
			"So this square bracket notation I can use",
			"to specify a particular attribute of an HTML element.",
			"Only anchor tags, a tags, who's href is equal to facebook.com,",
			"those should be the only ones colored red.",
			"So now, when I refresh this, I now see that Facebook",
			"is a link that is now colored red, instead of colored blue, because I've",
			"been very specific about picking an attribute",
			"that I would like to use in order to reference that particular HTML element.",
			"And we can use CSS selectors in more powerful ways too, maybe not just",
			"to style a particular element always, but to style",
			"an element only under certain conditions or only when",
			"an element is in a particular state.",
			"And this is very often done for something",
			"like when you hover over something, when you hover over a button and something",
			"pops out, or you hover over something and it changes color slightly.",
			"We can begin to do this by adding what we call a pseudo class to a CSS",
			"selector.",
			"So let's take a look at an example of that",
			"to see how we can modify an element when a user hovers their cursor",
			"over that element, for example.",
			"So I'll go ahead and open up a new file, hover.html, where here, I'll go ahead",
			"and inside the body of the page just give myself a button.",
			"This button is going to say, Click Me.",
			"And let's add some style to the button.",
			"By default, buttons show up as fairly simple buttons",
			"that just look something like this.",
			"I might like to add a little bit more to this button and say, you know what,",
			"let's add some style to the button, and give it a width of 200 pixels,",
			"a height of 50 pixels, a font size of 24 pixels,",
			"and maybe a background color of green, for example.",
			"So I've specified some size information, how big I'd like the font to be,",
			"and also a background color for the button, such that now here's",
			"what that button looks like.",
			"Shrink it down a little bit.",
			"It says, Click Me.",
			"But many buttons, especially nowadays, they give you a little bit of feedback.",
			"You hover over them, and they change their color slightly.",
			"How do they do that?",
			"Well, often it's using a CSS pseudo class,",
			"where I can say button colon hover, meaning",
			"when I am hovering over a button, then I'd",
			"like you to change the background color to orange,",
			"for example, some other color.",
			"So now, I specified that by default normally for a button,",
			"your background color should be green, but when",
			"the button is being hovered over instead,",
			"now change the background color to orange,",
			"such that now when I open up this page and go to Click Me,",
			"if I hover over the button, the color of the button changes.",
			"Normally green changes to orange.",
			"And so that is a very powerful feature that we have access to as well.",
			"All right, so now we've seen how we can use various different CSS",
			"selectors to very precisely define how we want our web pages to be styled.",
			"But one other thing we can use CSS for that's quite powerful",
			"is responsive design.",
			"And responsive design is all about making sure",
			"that our web pages look good, no matter how you're looking at the web page.",
			"Nowadays, people aren't always looking at web pages on their computers.",
			"But they're looking at web pages on their mobile phones or on their tablets",
			"as well.",
			"And it's important as we begin to design web pages that we design our web",
			"pages in a responsive way.",
			"So we'll look at a number of different ways",
			"we can implement responsive design in our web pages,",
			"starting with the discussion of the viewport.",
			"And what the viewport is is the viewport is the visual part of the screen",
			"that the user can actually see.",
			"So the viewport is this entire area of the web page",
			"that displays content to the user.",
			"So one question you might ask is, what's going to happen when you take this page",
			"and translate it onto a mobile screen?",
			"Well, one thing that many mobile devices do by default",
			"is treat their viewport as though it is the same width as a computer screen.",
			"Because not all web pages are optimized from all device mobile devices,",
			"you want to make sure that on a mobile device you can see everything.",
			"And so many phones will take a web page like this",
			"and just shrink it down to fit onto a mobile screen that",
			"looks a little something like that.",
			"Now, of course, that's probably not really what we want it to look like.",
			"Ideally, we want our page to adapt to different sized screens.",
			"Maybe we want the heading and the image and the text,",
			"if that's what these are, to grow a little bit to fill that entire screen.",
			"And so one simple thing we can do is just to add a little line of code",
			"to our HTML inside the head section of our page that controls the viewport.",
			"This line of code here is providing some metadata to our HTML page and saying,",
			"I would like you to change the viewport to be",
			"specifically the width of the device.",
			"By default, many phones will use a viewport that's actually",
			"wider than the width of the device, treat",
			"it as if they're loading a page in a computer,",
			"and then shrinking it down to the size of a mobile device.",
			"If you and your web page specify, though,",
			"that you want the viewport to be just the device width,",
			"oftentimes a page is going to look a whole lot better on a mobile device.",
			"But in addition to just adding a line like this,",
			"there are other actual changes we can make",
			"to our page to make it look a little better on different screens.",
			"And one of those has to do with media queries.",
			"And media queries are all about controlling",
			"how our page is going to look depending on how we render that particular page,",
			"or what size screen we're rendering that page on.",
			"So let's take a look at an example of how",
			"we might go about using media queries in order",
			"to control what a page actually looks like depending on what type of page",
			"or what type of browser we're using to view it.",
			"So I'll go ahead and open a new file that I'll call responsive.html,",
			"because we're going to try and build a responsive web page now.",
			"And now, I'll go ahead and inside the body of my page",
			"just include a big heading that says Welcome to My Web Page, for example.",
			"And just to demonstrate what you can do now with responsive design",
			"is I could say something like, let me add a style tag here,",
			"where I want to say that if the size of the screen is a certain width,",
			"then I want to style the page in one way.",
			"And if the size of the page is a different width,",
			"then I might want to style the page in a different way.",
			"You might imagine that as you shrink the screen",
			"you want to move elements around in order",
			"to rearrange them to make the page just look a little bit nicer",
			"on a mobile screen.",
			"So we'll do a very simple example of just changing the color depending",
			"on the size of the screen.",
			"So let me specify now in a media query.",
			"And the syntax for media query looks like this.",
			"I'm going to use the @ symbol and say media and then",
			"specify for what type of media I would like to apply this query.",
			"I can say something like, if the minimum width of the page",
			"is 600 pixels, in other words, if the width of the page",
			"is 600 pixels or anything larger than 600 pixels, well,",
			"then go ahead and take the body and give it a background color of red.",
			"But then I could also add another media query and say,",
			"you know what, for this media query let me give it a max width of 599 pixels,",
			"meaning if the size of the screen is 599 pixels or fewer,",
			"then maybe I'd like to take the body and give it a background color of blue,",
			"for example.",
			"So now let's take a look at what happens when I take this page",
			"and actually open it and see what's going on.",
			"I'll open up responsive.html.",
			"And here's what I see normally.",
			"I see a red web page, because my screen is longer than 600 pixels wide.",
			"But notice what happens as a shrink this web page.",
			"If I go ahead and shrink it, looking at it on a smaller screen,",
			"eventually it turns to blue.",
			"If it's above 600 pixels wide, it's going to be red.",
			"If it's below 600 pixels wide, the color changes to blue.",
			"So we're able to now use these media queries to really fine tune control",
			"how our page is going to look on various different types of devices.",
			"If it's on a big screen, maybe you want the elements to look a certain way.",
			"If it's a smaller screen, maybe they'll look differently.",
			"And you don't just need to control a background color.",
			"You can control any CSS property you want just by using these media queries.",
			"You can say on a big screen, you want certain amounts of spacing or padding.",
			"You can even hide elements on smaller screens",
			"if you want to by using a particular CSS property called the display property.",
			"That controls whether or not an element is even visible.",
			"And ultimately put together, this can help to make your pages a little bit",
			"more responsive.",
			"And there are a number of different media",
			"queries that we can apply to our page as well.",
			"We can check to see whether a mobile device is vertical or landscape.",
			"We can check to see whether the user is viewing the page on their computer",
			"screen or if they've tried to print out the contents of the page as well.",
			"So there are a number of different options",
			"that we have to really control how a page is going to look.",
			"There are some other tools we have in our toolbox as well, though,",
			"for dealing with mobile responsiveness.",
			"And one of the tools built into the latest version of CSS",
			"is something called flexbox.",
			"And flexbox is quite helpful if we have multiple elements that we're all",
			"trying to display on the same page at the same time that",
			"might overflow if we're not careful about how we do responsive design.",
			"If we're really not careful-- let's imagine",
			"I have six elements that show up on my computer's monitor.",
			"When you translate that to a mobile screen,",
			"you can imagine they might all shrink down so that they're",
			"barely visible, something like this.",
			"This is probably not what we want if we're",
			"trying to design a mobile responsive page, for example.",
			"So you might imagine, how can we do a little bit better?",
			"Well, another thing we could do is take these elements",
			"and go ahead and keep them the same size,",
			"but make you have to scroll through them.",
			"This is now slightly better.",
			"The elements that are at least still visible.",
			"And they're large enough on the screen, but it",
			"would be nice not to have to scroll through them.",
			"What would be really nice is given that we have all this extra space,",
			"I would like to be able to wrap around elements",
			"if I don't have enough space for them, such",
			"that if I'm translating these six elements to a mobile screen,",
			"they translate, but I get them in like two rows,",
			"for example, three on the top and three below.",
			"And flexbox is an easy way to be able to implement something",
			"like this inside of our web pages.",
			"So let's take a look at what that might actually",
			"look like to add flexbox to our page.",
			"So I'll go ahead and create a new file called flexbox.html.",
			"We'll start with the same HTML code.",
			"And now, inside of the body, I'm going to create first a div that",
			"is going to be called the container.",
			"And we're creating a container, because we're",
			"going to specifically say that everything inside the container,",
			"I would like to add flexbox to, to be able to wrap it",
			"around so that things can go onto multiple lines if I ever need to.",
			"And now, let me just add some sample text.",
			"So this is some sample text inside of a div to demo flexbox.",
			"And I'll go ahead and repeat this may maybe like 12 times.",
			"And I'll number each one.",
			"Here's 1, 2, 3, 4, and I'll number all the rest.",
			"This is just to give a demonstration of what these elements could actually",
			"look like.",
			"Ideally, these would be different pieces of content, though.",
			"So now, inside of my style tag, here's what",
			"I'm going to say, just to demonstrate.",
			"I'll say, take the ID container-- again the hashtag specifies get me",
			"something with a particular ID.",
			"And I want to display it using flexbox.",
			"And in particular, I would like to use the flex wrap",
			"property to say if there's not enough room at the end of a line for all",
			"of the elements, go ahead and wrap around those elements",
			"onto the next line instead.",
			"And now, I can specify some additional CSS properties",
			"for the divs inside of the container.",
			"So I can say, for the container all of the div inside of that container,",
			"again using this child selector to get all",
			"of the divs that are inside of the container,",
			"I can add some CSS to that too.",
			"I can say, let's give these a background color of like a shade of green.",
			"I can give them a particular font, maybe 20 pixel font.",
			"Give them some margin and padding, just to add some space.",
			"And maybe each one is going to be 200 pixels wide.",
			"So just adding some spacing to those individual divs,",
			"the important part is this right here, where",
			"I've said that this whole container is going to be a flexbox container.",
			"And I'd like to wrap around elements if you ever reach the end.",
			"So now, I'll open up flexbox.html.",
			"And so here, I now see 12 elements that are on multiple lines.",
			"But notice what happens as I shrink the page.",
			"If there isn't room for all of them, elements move onto other lines.",
			"Now, there's only three elements in any particular row.",
			"Now, there's only two elements on any particular row.",
			"And so I can use flexbox to very well adapt myself",
			"to different sized screens.",
			"And no matter whether you're looking at this on a big screen or a small screen,",
			"the content is still going to look good, because I'm able to adapt responsively",
			"to whatever might be happening.",
			"So this is one layout paradigm that exists within CSS, this flexbox layout.",
			"There are other layouts that exist as well.",
			"One common one is the grid layout for anytime",
			"you want to arrange things in a particular grid, where",
			"maybe certain columns need to be certain widths,",
			"but others can maybe be a little bit more flexible.",
			"I'll show one example of that too, just to give you a demonstration of what",
			"that grid layout might look like.",
			"So here's grid.html, where I'll go ahead and inside the body of this page,",
			"give myself a div.",
			"I'll give it an ID of grid.",
			"And then let me just add div class equals grid item.",
			"Again, a class, because there might be multiple items,",
			"but I'll go ahead and just create a whole bunch of grid items",
			"and number each one, so 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12.",
			"So I have a whole bunch of grid items inside of a div whose ID is grid.",
			"And now, I'd like to add some style here.",
			"I'll say for the grid, let's give it a background color.",
			"Maybe the background color should be green.",
			"Display is going to be grid.",
			"I want this to show up as a grid.",
			"And now, there are a couple of attributes or properties",
			"that I'm going to specify here.",
			"Maybe I want some padding around the grid first.",
			"But the important grid properties are grid column gap.",
			"How much space goes between each of the columns?",
			"Maybe I'll say like 20 pixels.",
			"Likewise there is also a grid row gap.",
			"How much space goes between each of the rows of the grid?",
			"Maybe I'll say 10 pixels here.",
			"And then finally, grid template columns is a way for me",
			"to specify how many columns there are going to be",
			"and how wide should each of those columns be.",
			"So if I want maybe three columns, I can specify that the first column",
			"should be 200 pixels.",
			"The second column should also be 200 pixels.",
			"And the third column can be automatically sized,",
			"just grow or shrink to fill the screen.",
			"So we'll say auto.",
			"So first column 200 pixels, second column 200 pixels,",
			"third column just do it automatically.",
			"And now, for all of the grid items, well, those I",
			"can add some styling to as well.",
			"I'll give them a background color of white,",
			"just to distinguish them, and also give them some font size and some padding",
			"and maybe center them as well.",
			"So just adding some additional CSS properties in order",
			"to make it display the way I want to.",
			"But the important ones to care about here are display is grid.",
			"And then I'm specifying, here is how the grid",
			"should be laid out, how much space between columns,",
			"how much space between rows, and how wide are each of those rows going",
			"to be.",
			"Now, if I open up, grid.html, here's what that grid looks like.",
			"I now have a first column 200 pixels wide,",
			"a second column also 200 pixels wide, and a third column",
			"that's going to resize dynamically based on how wide",
			"or how narrow my screen happens to be.",
			"So as I shrink the screen, the third column shrinks with it.",
			"As I grow the screen, it also grows alongside with how big",
			"this window happens to be.",
			"And so flexbox and grid are some very powerful tools",
			"that we can use and just to make it easier",
			"for us to be able to use mobile responsive design,",
			"to be able to make sure that our pages look good",
			"no matter what kind of browser or what kind of device",
			"the user is using in order to look at our page.",
			"But it turns out that exists a lot of libraries",
			"out there that do a lot of this for us, some people that have already written",
			"CSS code to make our text look good, to make our buttons look good,",
			"in order to make sure that things are mobile responsive.",
			"And one of those is called Bootstrap.",
			"Bootstrap was a very popular CSS library that we",
			"can use in order to use some styling that they",
			"have written, such that we don't need to write all the styling from scratch.",
			"So this is what Bootstrap's website looks like.",
			"I'll go ahead and show it to you now just",
			"to give you a sampling for what's available inside",
			"of a library like Bootstrap.",
			"If I go to getbootstrap.com, here's Bootstrap's website.",
			"And if I go to their documentation on this first link here,",
			"I can look at all of the Bootstrap components that I'm given access to.",
			"These are things like alerts, for example.",
			"That here's an alert that's styled in a very particular way.",
			"It's in a specific font.",
			"It's got a certain amount of padding and certain colors.",
			"And if I want to just copy this alert, once I've used Bootstrap's code,",
			"I can just apply certain classes to a div",
			"and Bootstrap will handle the process of applying the right styles for me.",
			"I don't need to write all of these styles by myself from scratch.",
			"Bootstrap's written a lot of the styling already.",
			"So how do you actually go about using Bootstrap?",
			"Well, to get started with Bootstrap, all you",
			"need to do is copy the CSS link that Bootstrap gives you",
			"to the top of your file.",
			"So if I take the CSS link and then go back to something like hello.html,",
			"which you'll recall originally looked something like this, just Hello World,",
			"I can add some Bootstrap to it to say, all",
			"right, I would like to take this HTML file",
			"and apply Bootstrap styling to it to make it look a little bit nicer.",
			"So I refreshed the page.",
			"And now, you'll notice Bootstrap's chosen a custom font for me",
			"just to make things look a little nicer in Bootstrap's own eyes.",
			"And now, if I want to add Bootstrap elements,",
			"I can say, all right, let me go to their components.",
			"And I want to add an alert.",
			"I can just copy their alert code.",
			"Here's their alert code for a primary alert, an alert that looks blue.",
			"And I can just inside the body of my page go ahead and add an alert,",
			"and maybe change the text to here is my alert, for example.",
			"Now, when I reload hello.html, I now see an alert that shows up,",
			"styled according to Bootstrap styling.",
			"And again, I can change that styling just by changing these classes.",
			"So a primary alert shows up as blue.",
			"A success alert shows up as green.",
			"A danger alert is red.",
			"So if I want to give a danger alert-- the user is doing something wrong",
			"on the web page, for example--",
			"I can change alert primary here inside my HTML to something like alert danger",
			"instead.",
			"And now when I refresh this page, I now see the alert",
			"shows up as red instead of blue.",
			"So Bootstrap gives us access to a lot of these various different types",
			"of components, different ways of adding breadcrumbs and alerts and carousels",
			"and other elements to our page just to make it easy to make our page look good",
			"very, very quickly without having to worry too much about writing",
			"our own CSS, because Bootstrap's written a lot of that for us.",
			"Bootstrap even includes a way to make sure",
			"that web pages are mobile responsive using something",
			"called Bootstrap's column model.",
			"So I'll show you an example of that now.",
			"Bootstrap divides its page into 12 distinct columns.",
			"So one thing I can do is I've pulled this up",
			"in an example I have in advanced called column zero.html.",
			"Notice that inside of the body of my page now,",
			"I have a div whose class is container and then a div whose class is row.",
			"And Bootstrap divides every row into a 12-unit column.",
			"So here, for example, I have a whole bunch",
			"of divs that are each 3-unit columns.",
			"So if I have four 3-unit columns, that will take up",
			"a total amount of space equal to 12, meaning",
			"filling up the entirety of the screen.",
			"So if I now open up source column zero.html, here's what that looks like.",
			"I have four columns, each of which is of width 3.",
			"And as a result, as I shrink it, those columns",
			"will automatically resize to make sure that they're always",
			"the appropriate size.",
			"Now, as long as they add up to 12, they don't only to be the same size.",
			"So, for example, if I only wanted three columns, instead of four,",
			"I could get rid of the fourth column by deleting those rows.",
			"And maybe change the second column instead of being a column of size 3,",
			"let's make it a column of size 6.",
			"So that's a length 6 column instead.",
			"And now if I refresh the page, now suddenly I",
			"see three columns where the middle one is twice",
			"as large as the ones on either end.",
			"And as I shrink this down, I can see that it shrinks down as well.",
			"And one of the advantages of using Bootstrap columns",
			"is that they too can be mobile responsive.",
			"They too can wrap around other lines if they ever need to.",
			"So, for example, let me pull up columns one.html.",
			"Here, for example, I have a row.",
			"And let's take a look at what's going on in here.",
			"Recall that every row in Bootstrap is divided up into 12-column units.",
			"But Bootstrap, in addition to letting me specify how many units a column",
			"should take up, also lets me specify how many units that column",
			"should take up depending on the size of the screen.",
			"So if I'm on a large screen, as indicated by LG,",
			"this is saying that on a large screen, this div",
			"should take up 3 units of space.",
			"And this div should also take up 3 units of space.",
			"And for each of these four divs, on a large screen,",
			"each will take up 3 of the total 12 units of space.",
			"So they'll all show up on one row.",
			"What happens on a small screen, though?",
			"Well, here col sm, for column on a small screen,",
			"I've said on a small screen each column should only",
			"take up 6 units of space, 6, or half, of the total 12 that I have in the row.",
			"And so I use up 6 here, 6 here for a total",
			"of 12 in one row, which means the next two, also a size 6,",
			"need to go on to a second row.",
			"And Bootstrap is smart enough to do this math for me",
			"and figure out how exactly these elements should ultimately be laid out.",
			"So now if I open up columns 1.html and see what's there, on a large screen,",
			"I see four columns, all in the same row.",
			"But as I shrink down to a smaller screen,",
			"eventually we'll see that things change.",
			"I now see the third and fourth sections move down onto the second row,",
			"because on a smaller screen now, when the window is smaller,",
			"now I only have the ability to show two elements in any particular row.",
			"So I get to on the first row and then two on the row underneath that.",
			"So all in all, there are a lot of different ways",
			"now that we can use CSS in order to make sure our pages are mobile responsive.",
			"We can use Bootstrap column model to make",
			"sure the columns move around whenever a size of the window shrinks or grows.",
			"We can also use things like flexbox and the grid model,",
			"writing our own CSS to make sure that our page is responsive depending",
			"on the size of the screen that the user happens to be using in order",
			"to visit our website page.",
			"So these are some of the very powerful features that we get using just CSS.",
			"But one thing you might imagine is that as we begin to write more and more CSS,",
			"there's going to be more and more repetition, things that appear again",
			"and again and again.",
			"And we've already seen some ways that we can minimize redundancy in CSS.",
			"We've seen how we can move CSS into the style section of our web page.",
			"We've even seen how we can move CSS to an entirely different file.",
			"However, what we haven't yet seen is how to deal with other types of redundancy.",
			"And so let's take a look at an example of that now.",
			"Let's imagine, for example, that I want to style",
			"multiple different elements in different ways, but using some common properties.",
			"So, for example, let me create a new file that I'll, in this case,",
			"call variables.html.",
			"And you'll see why in a moment.",
			"I'll go ahead and copy hello.html, but I'll get rid",
			"of all this Bootstrap inside of it.",
			"Let's imagine that here I have in maybe two list, an ordered list",
			"and an unordered list, where my unordered list has",
			"an ordered item, maybe three unordered items,",
			"and my ordered list also has three ordered items.",
			"Again, just for sake of demonstration, I'm",
			"showing that we have these two lists now.",
			"And I'll open up variables.html just to give you",
			"a sense for what that could look like.",
			"We have three unordered items in an unordered list,",
			"three ordered items in our ordered list.",
			"Let's imagine I wanted to style these a little bit differently.",
			"Maybe inside the style section of my page",
			"I want to style the unordered list to have a font size of 14 pixels",
			"and maybe a color of red.",
			"And my ordered list, I would like that to have a font size of maybe larger, 18",
			"pixels, but also a color of red.",
			"I want to keep the same color for all the text,",
			"but I want the font sizes to be different.",
			"Now, if I refresh this page, here's what I see.",
			"They are indeed of different sizes.",
			"The ordered list items are larger than the unordered list items.",
			"And they're all red.",
			"But there was some redundancy, some repetition",
			"that was introduced when I was writing my CSS code.",
			"In particular when I was writing my CSS code,",
			"I've repeated this usage of the color red.",
			"If I ever want to change the color from red to blue, for example,",
			"I'm going to have to change my code in two different places.",
			"Ultimately, I'd just like for my CSS to be a little bit more powerful.",
			"And so that brings us to our last topic today, which is a language called Sass.",
			"And Sass is a language that is essentially an extension to CSS.",
			"It adds additional features to what CSS has",
			"to offer, just to make it a little bit more",
			"powerful for us to be able to use and manipulate CSS in a way that's",
			"going to be faster and remove some of the repetition",
			"that we might have had in CSS previously.",
			"And one of the key features of Sass is the ability to have variables.",
			"So let's take a look at an example of this now.",
			"I'm going to create a new file, normally when we created our CSS files,",
			"we called them like variables.css, something",
			"dot CSS to stand for a CSS file.",
			"Sass is a different language, though.",
			"So it's going to require a different extension.",
			"We're going to conventionally use dot scss to stand for this is a Sass file.",
			"So here is now variables.scss.",
			"And now what I can do in Sass is I can actually create variables",
			"in the same way that we could create variables in a programming language,",
			"like Python, which we'll soon see.",
			"CSS normally doesn't support variables, but Sass",
			"is going to give us that power.",
			"In Sass, all variables begin with a dollar sign.",
			"So I can create a variable $color to create a variable called color.",
			"And I can say the variable called color is going to be equal to red.",
			"So this line here, line 1, is my way of telling",
			"Sass I'd like to create a variable called color",
			"and I'd like for its value to be red.",
			"And now, I can add the same styling I had before.",
			"I can just use normal CSS and say for an unordered list",
			"I'd like the font size to be 14 pixels.",
			"But the color, instead of saying red here, I can use the name of a variable.",
			"I can say $color to mean go ahead and use the value of the variable color",
			"as the color for this unordered list.",
			"Then for an ordered list, I'll also say font size 18 pixels",
			"and say color should also be this variable called color.",
			"By using a variable, I've removed the repetition.",
			"Rather than having the word red show up in multiple places in my code",
			"where I would need to change it twice if I ever needed to change it,",
			"now I have defined the variable once.",
			"And I only ever need to change it in one place",
			"if I ever need to make modifications to this particular file.",
			"So now, let's try and link this file.",
			"We'll go back to variables.html.",
			"Instead of putting the style code here, I'll go ahead and link a style sheet",
			"and say, the href should be variables.scss,",
			"because that's the file where my styling exists.",
			"So now let me try and open up variables.html after I've linked",
			"the CSS.",
			"And, all right, something seems not quite right.",
			"I specified font sizes.",
			"I specified that everything should be red.",
			"But it's not showing up.",
			"Everything is showing up black.",
			"And I don't see any of the differences in sizing.",
			"And the reason for this is while the web browser, things like Chrome and Safari",
			"and Firefox can understand CSS, they can't by default understand",
			"SCSS, or Sass.",
			"Sass is an extension to CSS that web browsers don't understand out",
			"of the box.",
			"So in order to solve this problem, once we've written our Sass file,",
			"we need to compile it, convert it, translate it, so to speak,",
			"from Sass into plain old CSS so that our browser is able to understand it.",
			"And in order to do this, you'll need to install",
			"a program called Sass on your computer.",
			"And you can install it on Mac or PC or Linux.",
			"And now, in the terminal, in order to do this compilation,",
			"I'm going to say Sass variables.scss, the file I'd like to compile,",
			"colon variables.css.",
			"So variables.scss is the file that I would like to compile.",
			"And the file I'd like to generate is variables.css.",
			"I'd like to turn my Sass file into a plain old CSS file.",
			"I'll go ahead and press Return.",
			"And all right, that compilation process is now done.",
			"And so now, inside of variables.html, instead of referencing the SCSS file,",
			"I'm going to reference the CSS file as the style sheet,",
			"because my web browser only understands CSS, it doesn't understand Sass.",
			"Now, when I load the page, now I see the result I expect.",
			"Everything shows up as red and the font sizes are different.",
			"So ultimately, this was a 2-step process.",
			"I first needed to take my Sass code, compile it into CSS.",
			"And then I could link the CSS to this particular page.",
			"But the advantage now is that if ever I want to make some sort of change,",
			"I want to change the color, rather than change it in two places,",
			"or you might imagine in a more complex page, like tens or dozens of places,",
			"I just go to the SCSS file, and I change the color from red to blue.",
			"Now, if I refresh the page, all right everything is still red.",
			"And that's because I forgot a step.",
			"I changed the Sass file.",
			"But that doesn't automatically change the CSS file.",
			"I need to now recompile the CSS file by saying Sass variables.scss",
			"variables.css, to compile the file again using the updated Sass file.",
			"And now, I see the updated changes.",
			"And if you're curious as to what the updated file looks like,",
			"I'm actually look at variables.css to see what code happens to be there,",
			"and, though, it's styled a little bit strangely.",
			"You can see that I have a UL with a font size a 14 and a color of blue.",
			"So they've substituted the word blue for this variable.",
			"And they've done the same thing for ordered lists as well.",
			"Now, in practice, it's going to be pretty annoying",
			"if I'm building a web page, building using Sass,",
			"if I constantly need to go back and recompile my Sass into CSS",
			"every single time.",
			"What I'd like to do is just automate that process.",
			"And Sass makes it easy to do this.",
			"I can just say, Sass dash dash watch variables.scss variables.css.",
			"And what that's going to do is now you see Sass is watching for changes.",
			"Sass is going to monitor the variables.scss file.",
			"And if ever I change my Sass file, Sass is going to know about it.",
			"And it's automatically going to recompile the corresponding CSS file.",
			"And you can do this not just with single files, but entire directories",
			"as well if you have multiple different Sass files.",
			"So now, what I can do is if in the variables.scss file I change",
			"the color--",
			"instead of blue, I now want it to be green, for example--",
			"I now save the variables.scss file.",
			"And now, without doing anything-- take a look at my terminal--",
			"Sass detected a change to variables.scss,",
			"so it gave me a new version of my original CSS file.",
			"If I go back to my web browser now, refresh the page, now, all of the text",
			"is green, as I would expect it to be.",
			"So that's one of the very powerful features that Sass gives us.",
			"It gives us the ability to add variables to our CSS code just",
			"to factor out commonalities.",
			"If there are common fonts, common colors, common borders, common styling,",
			"that I want to apply to a lot of different things,",
			"it becomes much easier just to use Sass in order to do so.",
			"And finally, we'll take a look at a couple of other features",
			"that Sass gives us the ability to do, one of them",
			"is the ability to nest CSS selectors inside of other CSS selectors.",
			"So one thing you've seen so far, for example,",
			"is that in CSS, if I wanted to style all of the unordered lists that are inside",
			"of divs, for example, I could say like, div arrow unordered list,",
			"in order to style unordered lists that are inside of divs.",
			"What Sass will do is that will give us a bit of a nicer syntax for doing",
			"this type of thing, in particular, by allowing us to nest CSS inside",
			"of other pieces of CSS.",
			"So just as an example of this, I'll go ahead",
			"and open up a file I already brought, called nesting.html.",
			"And so here is what we might see inside of nesting.html.",
			"Here is the body of the page.",
			"Inside the body of the page, I have a div, inside of which",
			"is a paragraph inside the div and also a list, an unordered list,",
			"or ul, that's inside of this div as well.",
			"And then we also have a paragraph that's outside of the div.",
			"And a list that's outside of the div in addition to that.",
			"So a number of different elements, some of which are located inside",
			"of other elements.",
			"And what I'd like to do is be very precise about how I style these pages.",
			"What Sass is going to allow us to do is it",
			"lets us write a Sass file that looks a little something like this.",
			"Let's take a look at what it's doing.",
			"It's saying, for the entire div, I would like",
			"to give that div a font size of 18 pixels.",
			"And then, what CSS normally doesn't allow us to do,",
			"but we can do now using the power of Sass,",
			"is say, for any paragraphs that are inside of that div,",
			"go ahead and give those paragraphs the color of blue.",
			"And for any unordered lists that are inside of the div,",
			"give those unordered lists a color of green.",
			"By nesting these CSS selectors inside of others,",
			"we've been able to get across the idea that I only",
			"want to style the paragraph if it is inside of a div.",
			"And this is just a little bit of a nicer, cleaner syntax",
			"for doing some of these more complex styling tasks that might come up.",
			"So what does this actually look like?",
			"If I like take this SCSS file and turn it into normal CSS,",
			"what is the result going to be?",
			"Well, let's take a look.",
			"We can try it out by let me go into my nesting folder",
			"where all these files are located.",
			"And if I run Sass nesting.scss, turn it into nesting.css,",
			"now let's open up nesting.css and see what it looks like.",
			"Here, it's turned into a take all of the divs,",
			"give them a font size of 18 pixels.",
			"And then, we're using the same descendant selector notation",
			"that we saw before, where all the paragraphs inside of divs",
			"should be colored blue, all the unordered lists inside of a div",
			"should be colored green.",
			"And this certainly works.",
			"And we could have just written this CSS from the beginning,",
			"but it can be a little bit cleaner, a little bit easier to read to use Sass",
			"in order to really say, paragraphs inside of divs",
			"should be structured this way, unordered lists are styled in some other way.",
			"And using this nothing approach just makes it often easier",
			"to take a look at this SCSS page and really understand",
			"how all of the different style code interacts with each other.",
			"So after all of this now, if I open up nesting.html,",
			"we might see something that looks a little something like this.",
			"The paragraph inside the div and the list inside of the div, those",
			"both get changes to the way that they've been styled.",
			"But unlike them, these paragraphs outside of the div",
			"and the list that is also outside of the div,",
			"those get styled a little bit differently.",
			"So two features now we've seen inside of Sass.",
			"We've first seen the ability to have variables",
			"to make sure we're not repeating ourselves",
			"in many places throughout the code.",
			"And now, we've seen the ability to nest CSS selectors inside of each other",
			"by taking advantage of Sass.",
			"And finally, we'll take a look at one last feature",
			"that Sass is going to give us.",
			"And that is something called inheritance.",
			"If we have certain CSS selectors that are related to other CSS selectors,",
			"but they're may be adding some additional information.",
			"And in this case, I'm actually going to show you the finished product first.",
			"So let's go into inheritance and let me open up inheritance.html.",
			"And here, you see I've tried to almost implement",
			"Bootstrap-style alert messages in HTML.",
			"I have a success message up at the top, a warning message, and then",
			"an error message.",
			"And each of these messages you'll notice are styled differently.",
			"In particular they're each a different color.",
			"But despite that, they share a lot in common.",
			"They share a common border.",
			"They share a common font.",
			"They share a common size and many other properties",
			"are all shared between these elements.",
			"There are just some things that are a little bit different about them.",
			"I could have written three different CSS selectors",
			"to deal with all of these cases, but there might be some repetition there.",
			"So here's what I can do by taking advantage of the features",
			"that Sass gives me.",
			"Let me go ahead and look at inheritance.scss to look at the code",
			"for doing this.",
			"And it looks a little bit cryptic at first.",
			"But here's what I've defined.",
			"I've here defined using a percent sign that this is what a generic message is",
			"going to be, something that I can extend later to add additional information to.",
			"All of the messages, whether they be success messages or danger messages",
			"or warning messages, they're all going to have the same font.",
			"They're all going to have the same border.",
			"They're all going to have the same padding and margin, spacing",
			"around and outside of it.",
			"But each of the specific messages are going to be slightly different.",
			"How are they different?",
			"Well, let's take a look down here.",
			"Anything with a class of success, I'm going to say extends this message.",
			"And by extends this message what I mean is that anything with a class",
			"of success is going to inherit all of these CSS properties-- the font,",
			"the border, the padding in the margin--",
			"but it's going to add additional information to it.",
			"In particular, we're going to add a color.",
			"We're going to say that for success messages,",
			"the background color is going to be green.",
			"I've extended the basics of what a message is, but said",
			"that this message in particular has some additional style that we're",
			"going to assign to it as well.",
			"And the other two messages behave in very similar ways.",
			"My warning message extends the message, but instead",
			"says the background color should be orange.",
			"And finally, the error message also extends the message.",
			"But this time, it gives us the background color of red instead.",
			"So now, when you compile this all together",
			"into inheritance.css, which I compiled it in advance,",
			"this is what this is ultimately going to look like.",
			"It translates what I've written into saying,",
			"all right, success and warning and errors",
			"should have all of these properties.",
			"But success should also have this background color,",
			"warning should have this background color,",
			"error should have this background color.",
			"So again, we could have written this CSS.",
			"There is nothing that Sass does that we couldn't",
			"have written ourselves using CSS.",
			"Sass we'll just make it a little bit easier to do many of the same thing.",
			"So we can write things in a little bit of a nicer syntax",
			"by saying the success message inherits from the message",
			"but adds a background color.",
			"And likewise, the warning and error messages do the same thing,",
			"but in a simpler syntax and a bit of a nicer syntax, such that later",
			"we can let the computer take the Sass code and compile it into CSS instead.",
			"And so those now are some of the fundamentals",
			"of what we've seen in building web programs using HTML and CSS.",
			"We've seen how we can use HTML to describe the structure of our web page,",
			"deciding what's going to show up where on the page, and then we looked at CSS",
			"and how CSS can then be used to style our web page in various different ways,",
			"adding custom styling like colors and layouts,",
			"but also thinking about things like responsive design,",
			"like what happens on a mobile screen or on a tablet,",
			"and making sure that our web pages look good on those screens too.",
			"And then finally, we took a look at Sass, an extension to CSS,",
			"that adds a number of additional features,",
			"features like variables and nesting and inheritance,",
			"that make it even easier for us to be able to write style",
			"that we can apply to our web pages.",
			"From there, we're going to be transitioning now",
			"to looking at how we can use HTML and CSS in larger web applications",
			"as we begin to incorporate other tools, tools like Python and JavaScript",
			"and other languages and frameworks altogether.",
			"So this is Web Programming with Python and JavaScript.",
			"We'll see you next time."
		],
		"is_youtube": false
	},
	"video_003": {
		"section": "CS50W 2020",
		"subsection": "Git",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001400_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V001400/HarvardXCS50W-V001400.m3u8"
		],
		"video_duration": 3195,
		"speech_period": [
			2.44, 15.267, 0.833, 3.21, 4.59, 1.75, 3.35, 3.06, 2.302, 2.458, 1.587,
			2.083, 3.24, 3.14, 3.73, 1.92, 3.42, 2.95, 2.09, 1.959, 2.931, 4.29, 1.92,
			1.86, 3.24, 3.39, 3.088, 2.042, 2.91, 1.42, 3.058, 1.042, 3.96, 2.94,
			3.57, 2.46, 3.0, 2.35, 1.94, 2.76, 2.01, 2.79, 3.15, 2.789, 2.611, 3.25,
			2.48, 3.3, 2.337, 2.583, 1.958, 2.572, 1.72, 3.08, 3.0, 3.15, 3.57, 2.67,
			3.27, 4.08, 2.61, 3.72, 1.14, 3.3, 2.77, 3.17, 3.0, 2.88, 4.85, 2.6, 3.23,
			2.07, 3.99, 2.768, 1.292, 1.88, 3.03, 1.9, 2.81, 2.91, 3.12, 4.05, 3.51,
			1.47, 2.97, 2.815, 3.125, 3.21, 1.71, 2.519, 4.131, 3.92, 3.223, 2.167,
			2.31, 2.31, 3.39, 3.45, 3.15, 2.7, 2.25, 2.16, 2.22, 3.73, 1.677, 2.583,
			2.96, 3.36, 2.19, 4.59, 3.54, 4.29, 2.22, 2.138, 1.792, 4.328, 1.792,
			1.95, 1.86, 4.34, 5.97, 4.39, 3.55, 3.0, 2.292, 3.218, 3.57, 4.38, 3.58,
			2.33, 2.61, 2.91, 0.99, 1.92, 3.595, 3.125, 1.95, 2.73, 3.27, 3.48, 2.0,
			0.65, 3.0, 2.22, 2.16, 2.7, 2.74, 3.23, 2.97, 5.07, 1.765, 3.125, 4.29,
			2.22, 4.267, 2.333, 4.028, 2.542, 5.278, 1.292, 2.375, 3.325, 3.3, 3.21,
			4.23, 1.8, 3.93, 3.51, 3.81, 3.15, 2.79, 3.51, 2.76, 2.37, 4.2, 3.02,
			4.87, 1.75, 3.28, 2.72, 5.36, 3.25, 2.01, 1.773, 1.917, 2.52, 2.04, 2.22,
			1.89, 4.485, 1.875, 2.37, 3.02, 2.51, 3.56, 4.59, 2.73, 1.35, 3.513,
			1.917, 1.41, 3.25, 1.55, 3.58, 2.63, 2.22, 3.722, 1.708, 2.67, 1.55, 2.44,
			4.47, 1.29, 2.25, 4.59, 2.49, 6.422, 1.708, 3.66, 1.59, 2.26, 3.2, 2.79,
			2.52, 4.72, 2.18, 2.962, 1.958, 2.47, 6.26, 2.7, 4.83, 3.33, 5.52, 1.88,
			3.58, 3.95, 2.65, 3.51, 2.16, 4.51, 3.48, 2.88, 4.14, 4.07, 3.0, 3.49,
			2.19, 2.67, 3.03, 2.94, 3.4, 3.21, 2.72, 2.82, 4.86, 3.72, 2.16, 4.2,
			3.31, 2.0, 4.53, 3.39, 2.73, 2.22, 4.5, 3.57, 1.77, 2.76, 5.25, 1.678,
			2.042, 3.87, 3.36, 3.385, 1.625, 3.57, 1.98, 3.03, 4.35, 2.49, 3.06, 4.33,
			1.41, 4.07, 2.07, 4.08, 3.27, 2.43, 5.78, 3.04, 2.04, 4.35, 4.17, 4.59,
			1.5, 2.79, 3.93, 3.27, 3.51, 2.82, 2.13, 4.89, 2.25, 2.31, 2.73, 2.82,
			3.295, 3.125, 1.95, 2.25, 1.35, 2.45, 1.75, 4.18, 2.57, 3.78, 2.79, 2.64,
			3.66, 1.38, 3.39, 2.89, 4.07, 4.02, 3.67, 2.42, 1.66, 2.93, 2.79, 2.34,
			2.94, 6.21, 2.37, 4.41, 5.78, 2.81, 3.29, 1.88, 1.63, 3.94, 2.929, 2.341,
			1.72, 3.53, 2.13, 3.299, 4.99, 3.861, 3.48, 3.48, 3.272, 1.708, 3.75,
			2.97, 4.26, 3.57, 4.75, 3.2, 4.44, 3.09, 3.51, 2.37, 2.31, 3.51, 2.67,
			2.73, 2.56, 2.57, 3.27, 3.87, 1.78, 5.39, 3.06, 3.48, 3.54, 3.63, 4.23,
			2.94, 2.4, 2.49, 3.84, 2.82, 2.52, 4.14, 5.01, 4.08, 2.61, 4.26, 2.88,
			2.22, 4.17, 0.5, 2.89, 2.29, 1.62, 2.18, 2.61, 2.7, 4.49, 2.2, 2.28, 3.63,
			4.95, 4.66, 2.96, 1.937, 2.833, 2.0, 3.86, 2.03, 2.13, 3.02, 4.24, 3.57,
			3.42, 4.47, 3.06, 2.64, 4.32, 1.65, 2.22, 2.69, 3.61, 2.09, 1.87, 3.54,
			4.81, 3.41, 1.9, 4.47, 4.91, 3.68, 2.58, 5.53, 3.44, 4.11, 2.49, 2.65,
			3.38, 3.42, 3.45, 3.09, 1.89, 2.65, 3.74, 3.96, 2.17, 2.0, 3.03, 5.31,
			3.39, 4.11, 2.43, 3.27, 3.15, 2.22, 1.8, 3.4, 1.35, 1.792, 2.318, 3.57,
			4.27, 2.4, 2.1, 2.58, 4.41, 4.43, 2.61, 3.84, 3.57, 2.43, 3.78, 1.61,
			3.49, 2.55, 4.5, 3.3, 1.05, 2.19, 3.51, 3.72, 3.27, 2.04, 3.66, 0.96, 2.7,
			2.0, 4.48, 3.69, 2.88, 2.58, 3.63, 1.11, 2.17, 2.84, 2.4, 3.04, 3.35, 3.0,
			6.67, 2.9, 3.66, 1.41, 6.9, 4.83, 1.63, 2.69, 3.18, 4.05, 3.51, 3.72,
			3.03, 1.38, 3.6, 5.16, 0.96, 1.74, 1.42, 2.66, 3.45, 2.43, 4.29, 2.82,
			2.97, 3.12, 2.187, 1.833, 2.46, 1.98, 3.45, 3.73, 4.07, 1.77, 1.223,
			2.167, 2.28, 3.39, 1.98, 3.21, 3.73, 1.91, 3.03, 2.135, 1.375, 2.54, 3.73,
			1.03, 3.5, 3.3, 1.38, 2.16, 3.66, 4.05, 2.01, 3.0, 3.75, 2.4, 2.04, 2.85,
			4.05, 2.67, 3.15, 2.37, 2.82, 3.45, 2.94, 1.81, 2.06, 3.78, 4.71, 4.02,
			3.69, 3.84, 2.13, 4.68, 2.94, 2.82, 3.99, 1.8, 2.61, 3.0, 2.49, 2.09,
			1.84, 2.94, 3.24, 3.39, 4.96, 3.962, 2.208, 4.21, 5.42, 2.22, 1.83, 3.068,
			1.792, 5.768, 1.792, 2.01, 2.1, 2.64, 1.5, 3.12, 2.55, 3.12, 3.51, 2.63,
			1.75, 0.708, 1.662, 2.52, 2.12, 4.26, 3.81, 3.81, 3.81, 3.75, 2.48, 2.14,
			2.79, 2.54, 3.72, 1.88, 3.79, 2.49, 2.25, 4.62, 3.05, 3.825, 2.375, 2.52,
			1.875, 2.635, 2.12, 3.51, 3.12, 5.14, 3.57, 3.09, 1.14, 4.29, 3.578,
			1.792, 2.71, 2.34, 1.94, 3.63, 4.17, 3.15, 4.0, 4.82, 1.89, 3.13, 2.0,
			1.8, 1.56, 1.89, 2.61, 2.13, 3.15, 2.85, 2.94, 2.31, 3.57, 4.56, 2.19,
			6.9, 4.74, 4.71, 1.92, 4.853, 3.167, 2.208, 2.192, 3.192, 1.958, 1.75,
			1.92, 2.67, 1.98, 3.37, 2.42, 3.449, 2.431, 2.45, 3.579, 2.741, 3.359,
			3.681, 1.77, 2.16, 1.639, 2.0, 3.65, 3.691, 4.21, 2.3, 5.82, 2.34, 2.16,
			3.36, 4.86, 3.51, 1.71, 5.25, 3.84, 1.44, 2.67, 2.19, 3.31, 2.51, 4.65,
			1.527, 1.833, 1.708, 2.432, 2.75, 3.25, 2.01, 3.21, 3.87, 4.05, 0.81,
			2.46, 5.01, 2.88, 2.79, 1.8, 4.36, 3.2, 4.21, 2.9, 2.19, 4.14, 1.21, 2.27,
			2.01, 2.07, 3.81, 2.07, 2.97, 2.17, 0.708, 2.702, 2.13, 3.75, 1.46, 2.93,
			2.06, 2.46, 2.49, 1.35, 3.81, 2.91, 4.14, 2.55, 2.91, 2.85, 3.42, 3.327,
			1.833, 5.43, 3.6, 1.59, 2.01, 3.46, 2.34, 2.15, 2.97, 3.36, 1.23, 3.51,
			3.48, 3.31, 3.11, 2.08, 3.5, 0.98, 2.71, 2.333, 2.437, 5.22, 2.97, 3.81,
			2.43, 4.17, 1.17, 2.372, 1.708, 3.28, 2.33, 3.99, 1.35, 3.0, 3.57, 2.13,
			3.94, 2.89, 2.44, 3.63, 3.48, 2.05, 3.53, 3.33, 4.7, 1.56, 2.52, 4.71,
			3.3, 3.33, 1.99, 3.0, 2.7, 3.84, 1.9, 2.96, 4.77, 3.16, 2.12, 2.73, 2.07,
			2.16, 2.62, 4.59, 4.5, 1.52, 2.2, 3.64, 3.44, 3.57, 2.89, 1.95, 3.18,
			1.86, 3.63, 1.822, 2.958, 2.97, 3.0, 4.28, 2.2, 4.52, 2.08, 2.08, 5.47,
			1.89, 3.66, 2.58, 3.72, 5.67, 2.52, 2.58, 2.76, 3.45, 4.24, 1.67, 2.34,
			1.92, 3.62, 2.69, 3.98, 3.09, 1.75, 4.24, 3.413, 2.667, 2.957, 0.583,
			1.71, 2.84, 1.68, 5.61, 5.26, 3.41, 3.72, 3.36, 1.68, 2.67, 4.82, 3.88,
			1.53, 3.63, 5.37, 3.69, 3.78, 1.44, 2.083, 1.847, 2.19, 2.917, 3.023,
			1.15, 3.59, 4.77, 2.16, 2.04, 3.51, 2.61, 3.6, 2.58, 3.93, 3.21, 5.4, 1.9,
			2.99, 3.93, 2.91, 4.15, 3.38, 2.13, 3.48, 4.89, 2.06, 1.75, 3.72, 2.75,
			2.958, 2.722, 2.73, 3.45, 2.1, 3.81, 3.96, 2.22, 5.323, 2.667, 2.13, 3.69,
			4.78, 4.34, 2.16, 5.1, 3.15, 2.97, 3.12, 3.24, 3.03, 4.74, 3.0, 4.09,
			4.55, 3.15, 3.72, 3.84, 3.18, 4.74, 2.43, 4.6, 4.4, 2.55, 3.84, 2.85,
			3.39, 2.31, 3.18, 3.72, 1.193, 2.917, 2.61, 3.9, 2.28, 3.6, 3.3, 3.6,
			2.01, 2.13, 4.38, 2.1, 2.25, 3.93, 3.45, 2.07, 3.03, 3.93, 3.06, 2.97,
			3.15, 2.91, 2.34, 2.58, 2.79, 2.52, 2.61, 2.49, 4.08, 1.55, 1.4, 1.97,
			5.49, 1.13, 5.35, 2.88, 3.1, 3.15, 4.67, 2.92, 5.46, 5.19, 4.26, 1.86,
			6.95, 3.38, 1.56, 7.62, 2.65, 3.58, 4.95, 1.17, 2.667, 3.563, 2.7, 2.66,
			3.51, 7.3, 4.64, 5.28, 3.57, 0.87, 3.36, 3.54, 2.457, 1.833, 3.0, 3.69,
			3.84, 4.32, 4.118, 2.542, 3.51, 4.92, 1.36, 3.23, 4.05, 2.22, 3.42, 2.46,
			3.66, 2.19, 2.94, 2.19, 3.79, 3.66, 2.15, 2.28, 3.51, 2.19, 3.54, 1.89,
			3.21, 3.15, 1.86, 1.82, 0.68
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRYAN YU: All right.",
			"Welcome back, everyone, to Web Programming with Python and JavaScript.",
			"So last time, we took a look at two languages, HTML and CSS, both of which",
			"can be used to design web pages.",
			"HTML, we used in order to describe the structure of web pages,",
			"to decide what content we want in the layout of the page,",
			"and then CSS, we used to describe the style",
			"of the page, what color we wanted things, how much space we",
			"wanted to run things as well.",
			"Today, we're going to turn our attention to a tool",
			"that we can use as we begin to develop these web applications,",
			"and in particular, we're going to be looking at a tool called Git;",
			"and what Git is is it is a version control tool, not specific to web",
			"programs necessarily, but that we're going",
			"to use as we begin to develop bigger and more sophisticated",
			"web applications over the course of this term.",
			"So what is Git going to enable us to do?",
			"Well, it's going to do a couple of things.",
			"First and foremost, what Git is; it is a command line tool",
			"that's going to allow us to, first, keep track of changes that we make to code.",
			"So once upon a time, and the first time I",
			"was starting to develop web applications,",
			"I remember working on a file, and then when I wanted to make changes,",
			"I might have wanted to save the old version, so I would duplicate the file",
			"and then just make changes to the duplicate, but this quickly gets messy.",
			"Especially if you have lots of different versions",
			"of your code in various different stages, keeping track of them",
			"just starts to become a nightmare.",
			"So what Git is going to enable us to do is to keep track of changes",
			"that we make to our code.",
			"So we might create a file initially, save that version of it, but over time,",
			"as we make changes, add to it, remove things from it,",
			"we can save snapshots, so to speak, of various different parts",
			"of our code at different points in time, such",
			"that we can quickly and easily reference all of those changes",
			"that we've made to that code.",
			"Additionally, Git is going to make it easy",
			"for us to synchronize code between different people.",
			"In larger scale web applications, it's rarely",
			"just one person who's working on the entire application.",
			"Usually, you're working with a co-worker or multiple co-workers,",
			"all in the same application, and all at the same time.",
			"And one definitely tricky part of this process",
			"is figuring out how to synchronize your work between different people.",
			"If I make a change on my part of the web application,",
			"I want to make sure that my colleagues are also able to see those changes",
			"and get access to the latest changes that I've made.",
			"And then I want to be able to get access to the latest changes",
			"that the people I'm working with have made too.",
			"So we need some way to keep everything in sync and Git",
			"is going to enable us to do that.",
			"What we're going to effectively have is one version of the code stored",
			"in we're going to call a repository somewhere online,",
			"and both I and someone I'm working with-- a partner, for example--",
			"might both be able to get access to that exact same repository,",
			"the same files in the same state.",
			"And if ever I and the other person make changes to those files,",
			"we can each make changes to those files, and then synchronize them back up,",
			"pushing them back up to the server, so to speak,",
			"so that the server will have the most recent, most up-to-date version",
			"of this code.",
			"Then after that, after we've both pushed our changes up to the server,",
			"then we can both pull changes from the server,",
			"so to speak, in order to get access to the latest version of the code,",
			"so that no matter what, so long as I've been working on the same project",
			"that my partner has, we can use Git to synchronize our work,",
			"so that I have access to my colleague's most recent changes, and vice versa.",
			"Git also enables us to do a number of other things.",
			"For example, Git allows us to test changes to our code",
			"without removing access to the original.",
			"So for example, you might imagine that as I'm working on writing a program,",
			"I might want to try making some changes, but I'm not sure",
			"if they're quite going to work.",
			"So I want to test those changes, but I don't",
			"want to lose access to my original working version of the program,",
			"just in case something goes wrong.",
			"So what Git enables us to do is it lets us make changes",
			"to code on a separate branch, so to speak,",
			"such that later, once we're happy and satisfied with the changes,",
			"we can merge those changes back into the original version of our code,",
			"being able to test those changes before we're really sure that they're the ones",
			"that we want to make.",
			"And finally, one powerful feature that Git gives us access to",
			"is the ability to revert back to old versions of our code.",
			"So you might imagine in the situation where I've been working on some code,",
			"and I realize that actually, what I'm doing right now isn't what I want,",
			"Git enables us to say, you know what?",
			"This most recent change isn't something that I wanted.",
			"I would like to revert back to a previous version of the code instead.",
			"And Git makes it very easy to go back to those previous versions.",
			"So the goal for today is going to be to learn how to use this tool,",
			"to learn the various different and Git commands that",
			"will be quite popular and quite common, as you",
			"go about working on web applications or really",
			"any other code-related project, because version control really",
			"allows a number of useful features that are practical as you begin",
			"to work on larger and larger projects.",
			"But ultimately, as we begin working on these Git projects",
			"they need to be stored somewhere online, such",
			"that we're able to download them from anywhere,",
			"such that me and a partner can both be working",
			"on the same files and the same code, and so in order to do that,",
			"we need to host our get code somewhere.",
			"And there are a number of different websites that can do this,",
			"but one of the most popular is a website known as GitHub.",
			"GitHub is a website that stores Git repositories, where",
			"all the repository is, is you can think of it",
			"as a folder that holds a whole bunch of code and files related to our code.",
			"So we're going to host this code online on a website called GitHub,",
			"and then on our computer, we'll be able to access these GitHub repositories",
			"and manipulate those repositories by changing",
			"the files that are within them.",
			"So let's go ahead and take a look at GitHub",
			"and see how we can go ahead and create our very first GitHub repository.",
			"If you don't already have a GitHub account,",
			"you can create one by going to GitHub.com",
			"and signing up for an account for free.",
			"And I'll now go to GitHub.com/new.",
			"GitHub.com/new is the page I go to if I want to create a new GitHub repository.",
			"And so let's take a look at what I need to do in order to create a repository.",
			"The first thing I need to do is give my repository a name.",
			"So in this case, I'm just going to call the repository hello.",
			"You can give it any name you want, so long as that name",
			"doesn't collide with other repository names that you already have.",
			"GitHub optionally lets me provide a description for this repository.",
			"I'll just say, Web Programming with Python and JavaScript.",
			"And then GitHub gives me the choice, do I want this to be a public repository,",
			"such that anyone can see the repository?",
			"Not everyone can necessarily make changes to it,",
			"but it's publicly available if anyone wants to download my code",
			"and try it out.",
			"Public means that anyone can access it.",
			"Or private, meaning, by default, only I can see this repository,",
			"but I can choose if I would like other people to be able to see it as well,",
			"and I can select which individuals.",
			"For now, I'll go ahead and make this repository public,",
			"and I'll go down here and click on the green Create Repository button",
			"in order to make this new repository.",
			"So I click the Create Repository button.",
			"And here it is.",
			"This is the GitHub's repository page, and right now, you'll",
			"notice that there's a lot of instructions here,",
			"but there are no files, because right now,",
			"when I first created my first Git repository I got",
			"an empty repository with nothing in it.",
			"So what I'd like to do now is somehow download this repository",
			"onto my own computer, such that I can add, say,",
			"an HTML file that contains some HTML that I want to keep track of using Git.",
			"So, how am I going to do that?",
			"Well, in order to do that, we're going to take a look at the very first Git",
			"command that's going to be involved with Git, which is known as git clone.",
			"git clone is a command that we can run in order",
			"to take a repository from the internet and download it onto our own computer.",
			"So you'll need to have Git installed onto your computer.",
			"You can install it on any Mac or PC or Linux machine, and once you do,",
			"what you're going to do is, on your computer in the terminal,",
			"you'll run it git clone, followed by the URL of the Git repository",
			"that you're trying to download.",
			"So you might imagine that here's your computer over here,",
			"and up here is some server where a Git repository is located.",
			"GitHub, for example, is one such server, but there are others as well.",
			"And up there is the repository that potentially has files or maybe",
			"other folders with other files that contain the contents of the repository",
			"that you care about downloading.",
			"So if I run git clone followed by the URL of the repository I want,",
			"the effect of that is that the repository and all of its contents",
			"get downloaded onto my computer, such that I on my computer",
			"now have a copy of everything that was originally",
			"inside of that Git repository.",
			"So now that we know how to clone a repository, let's actually try it.",
			"We've just created a repository using GitHub,",
			"and now let me go into my terminal and actually tried",
			"to clone this repository, so that I have a copy of it on my computer,",
			"and I can begin to make some changes to it.",
			"So I'll go into my terminal now, and I'll go into my lecture1 directory.",
			"And the first thing that I'm going to need",
			"is I'm going to need the URL of the repository.",
			"So if I go back into GitHub, what you'll notice",
			"is that it gives me an HTTPS link in order to download my Git repository.",
			"So there are a couple of different ways that I can use to clone my repository,",
			"of ways to authenticate myself.",
			"One is using HTTPS, which will eventually",
			"involve like a username and password that I'll",
			"have to type in, in order to prove to Git",
			"that these are my GitHub credentials.",
			"Alternatively, if you're familiar with SSH,",
			"this is another method of authentication.",
			"You can give GitHub your public SSH key in order to authenticate as well,",
			"but no need to worry about that if you're not",
			"as familiar with that technology.",
			"The key here is that this URL is the GitHub",
			"URL that corresponds to my repository.",
			"So I'm going to copy that URL, and then inside of my terminal,",
			"I'll type git clone, and then I'll just paste in the URL",
			"that I would like to clone that contains that repository.",
			"I'll go ahead and press Return.",
			"It says I'm cloning into a directory called hello, and then it's saying,",
			"you appear to have cloned an empty repository.",
			"It's saying that's a warning, but that's OK,",
			"because I know that I've cloned an empty repository, because the repository is",
			"brand-new.",
			"And now I can type the command ls in my terminal.",
			"The ls command in the terminal stands for list,",
			"and effectively what it's going to do is list",
			"all of the files that are currently inside of this directory,",
			"all the files and folders that are inside",
			"of my lecture1 directory, where directory is just",
			"a fancy name for folder.",
			"So I'll type ls, and I see that, all right,",
			"I now have a folder called hello inside of my lecture1 directory, which",
			"I didn't have before.",
			"I'll go ahead and move into this hello directory.",
			"In order to change into a directory or folder, you can use the cd command.",
			"Cd stands for change directory.",
			"And so if I type cd hello, I will now move myself into the hello directory.",
			"And if I type ls, you'll see that there's",
			"nothing inside of this hello directory right now, because again,",
			"this repository was empty.",
			"I cloned it, and there was nothing in it.",
			"So now I'd like to actually put something in this repository.",
			"The repository is only useful if I'm keeping track of my code",
			"and keeping track of the changes that I make to that code.",
			"So I'll go ahead and actually try now to add some code to the repository.",
			"The first thing I'll do is create a new file.",
			"And we could create a new file just by opening up a text editor,",
			"but on the terminal, there's actually a command",
			"for creating a new file called touch.",
			"So in the terminal, I can type touch hello.html, and what that's going to do",
			"is create a new file called hello.html.",
			"And if I type ls, I can see that indeed I do have a file called hello.html.",
			"Now inside of my hello directory, let me now",
			"open up this directory in the hello.html file inside of a text editor.",
			"Again, I'm using VS Code.",
			"And let me now add just some text to hello.html.",
			"I'll just add a simple HTML page, same thing we've seen before,",
			"where I give it a header, a title will be hello,",
			"and inside the body of the page will be \"Hello, world!\"",
			"Same HTML page we've seen a number of times",
			"now, just now inside of this repository.",
			"Of course, I haven't yet made any saving to this repository.",
			"I haven't said that I want to save these changes to the repository.",
			"And the repository isn't keeping track of every single character I write.",
			"I need to tell Git that this is a state of my current files",
			"that I would like to keep track of, something that I would like to save.",
			"And in the world of Git we call those save points commits.",
			"When I say, I am making a commit, I mean I",
			"would like to save the current state of all of the files",
			"and folders and other assets that exist inside of the repository",
			"and basically take a snapshot of their current position,",
			"such that later I might be able to refer back to them.",
			"But in order to do that, there are actually a couple of steps.",
			"So the first step we need to follow is an additional command.",
			"So we saw that git clone was the command we could use in order",
			"to clone a repository, take a repository and download it onto our own computer.",
			"The next command we'll take a look at is a command called git add.",
			"And what git add is going to do is it's going",
			"to let us tell Git that I would like to add a file as one",
			"to track the next time I save, the next time",
			"I make a commit to say that I would like to take",
			"a snapshot of all these files, such that I'm able to refer back to them later.",
			"And in order to do that, I need to tell Git what files to keep track of.",
			"So if, for example, I am working on this file,",
			"and I'd like to tell Git that I'd like to track it,",
			"I can run a command like git add, followed by the name of the file like",
			"foo.py or .html or whatever file it happens to be.",
			"And then Git will display a message saying",
			"that right now, we've added foo.py.",
			"This is now a file that will be saved the next time I make a commit.",
			"So why are these two separate steps?",
			"Well, one reason you might imagine is that if I'm",
			"working on a lot of different files, say I'm working on 10 different files,",
			"and there are only three that I'm happy with, three that I want to save,",
			"I don't want to just say save and have everything be saved in a commit.",
			"I might want to say that you know what?",
			"These are the only three files that I actually want to save right now,",
			"and the other ones I'm still working on.",
			"So it gives us that ability to have this separation to say,",
			"let me explicitly say that I want to track this file the next time I save,",
			"the next time I make a commit, and not all",
			"of the files, for example, though there are shortcuts we can use if we do",
			"want to add all of the files, and we'll see those in a moment as well.",
			"So let's go ahead and try that.",
			"We'll go back to our repository where I've created this hello.html file,",
			"and now what I'd like to do is say that I",
			"would like to add the hello.html file to my Git repository.",
			"So inside of my terminal, I'll now say--",
			"again, I have a hello.html file here--",
			"I'll say git add, followed by hello.html.",
			"And you'll notice that so far, nothing seems to have happened,",
			"because so far, I haven't yet saved anything.",
			"I've just said that I would like to add hello.html as a file",
			"that the next time I say save, the next time I commit my repository,",
			"it is going to keep track of the changes I have now made to hello.html.",
			"So how do I actually make a commit?",
			"How do I actually say, save the state of these files?",
			"Well, that's going to be one more Git command, which is known as git commit.",
			"When I say, git commit, I'm going to tell my Git repository that I would",
			"like to save a snapshot of the current state of the repository,",
			"keeping track of any of the changes that have been made to files",
			"that I've added using git add.",
			"And the way we run it is by running git commit, followed by -m, and then",
			"in quotation marks, a message.",
			"And this message is known as a commit message,",
			"and what it is is it's a description in English,",
			"or whatever your language is, of what changes",
			"you've made in this most recent commit, because over time",
			"as you work on a big project, you're probably going to make lots of commits",
			"as you make lots of changes to your program.",
			"You'll commit and commit again after each new addition",
			"you make to the project.",
			"And you might want to refer back to a previous commit,",
			"but it's only valuable to do so if you can",
			"identify in which commit you made a particular change, for example.",
			"So by providing some English message-- just some note",
			"to yourself-- such that later you can refer back to all your commit messages",
			"and know that, all right, at this point in time, in this commit,",
			"this is the change that I made that can just make it easier",
			"to keep track of all the changes that you've made him to a particular Git",
			"repository.",
			"So when you type git commit followed by -m, you might include a message,",
			"something like, \"I added a new line,\" for example.",
			"And when you do, Git is going to save a new snapshot of a version of your code",
			"right now, keeping track of the old version or old versions",
			"that used to exist there inside of the repository.",
			"So let's try and actually make a commit now and see",
			"how that's actually going to work.",
			"So we've already added the file, as by running git add,",
			"to say add the hello.html file as one to keep",
			"track of, but now when we're happy with it",
			"and we can make additional changes to the file if we want to,",
			"I can go back into the terminal and now say git commit and then -m,",
			"and then I can specify the commit message,",
			"some English description of what it is that I did in this most recent commit.",
			"And what I did was I added the hello.html file.",
			"So I'm just going to say, I added the hello.html file.",
			"That was the change I made in this most recent commit.",
			"I'll go ahead and press Return.",
			"And here's what it's telling me.",
			"It's telling me one file has been changed with nine insertions.",
			"So Git keeps track of changes in terms of how many lines",
			"have been added or inserted, and how many lines",
			"have been deleted or removed.",
			"And in this case, it's telling me there have been nine insertions to one file,",
			"because previously, the file didn't exist,",
			"and now a file that has nine lines does exist.",
			"And now I have saved hello.html to this Git repository.",
			"So now you might imagine if I go back to my Git repository on GitHub's website",
			"and refresh it, that maybe I'll see that hello.html file,",
			"but I refresh, and nothing happened, nothing changed.",
			"I don't see my hello.html file.",
			"And that's because there's one final step",
			"here I'm missing before my changes are going to be reflected online.",
			"Recall that when I ran the git clone step in order",
			"to clone the repository from GitHub, GitHub had a version of the repository,",
			"and I ran git clone it to download a copy of that repository",
			"onto my own computer, and when I ran git add to add the hello.html file,",
			"or I ran git commit to say, I would like to save these changes,",
			"I was always making those changes only to my local version of the repository.",
			"I was never affecting anything that was already on GitHub.",
			"The changes I was making were only happening on my own computer.",
			"If I want to push those changes up to GitHub,",
			"then I'm going to need some additional commands.",
			"And in fact, we can see what's currently going on inside of my repository",
			"using a command called git status.",
			"And what git status will do is, it'll tell us what's currently",
			"happening inside of my repository.",
			"So, for example, if I were to, in this current state,",
			"run the command git status, then Git is going to report back to me",
			"and tell me that I'm currently on branch master--",
			"more on branches later--",
			"but then it's saying, my branch is ahead of origin master by one commit.",
			"So this is a long-winded way of saying that my local version",
			"of the repository-- the version of the repository on my computer--",
			"is ahead of the origin version of the repository,",
			"the version of the repository that's up on GitHub by one commit,",
			"that I have one commit that the origin GitHub does not have.",
			"And it's helpfully telling me I can use the command get",
			"push to publish your local commits.",
			"get push of the command that I can use in order to say,",
			"I would like to take my changes and actually push them up to the server,",
			"push them up to GitHub so that they're reflected there.",
			"So after we've checked our current status with git status,",
			"we can use the command git push to say that now whatever changes that I've",
			"made, when I run git push, those changes get pushed up to GitHub,",
			"so GitHub has access to all of the commits that I have now made.",
			"So let's try those two commands now-- git status,",
			"to see what's currently going on inside of my repository, and then git push,",
			"to say, I would like to now push those changes to GitHub,",
			"so that the online version of the repository",
			"has the same contents as the local version on my own computer.",
			"All right.",
			"So in my terminal now, I can run git status,",
			"and I see that I am on branch master, same as before.",
			"And it's a slightly different message, because there",
			"is nothing currently inside the repository,",
			"but the key here is that now I can run the command",
			"git push to, say, take all of the changes",
			"that I have made to my repository and go ahead and push them up to GitHub.",
			"So I'll type git push, and what's going to happen",
			"is it's going to compress all the information,",
			"and it's going to push it up to GitHub to this URL.",
			"And now, if I go back to GitHub's website, GitHub.com/myrepository,",
			"and refresh the page, I'll see that I do actually now see something different.",
			"And so this is what GitHub's user interface actually looks like.",
			"It gives me a few pieces of information.",
			"It's telling me, for example, that there's one commit currently made",
			"to the repository-- that's the one I just made--",
			"that is on one branch, so if I've only created one branch, the default one,",
			"but we'll see how to create more branches later.",
			"And, in particular, down below, you'll see",
			"the files that currently exist inside of this repository,",
			"that right now I have this hello.html file, which is the one that I pushed,",
			"and, in particular, next to it is the commit message, the message",
			"from the most recent time that I touched to this file, which is in particular",
			"telling me that I added the hello.html file in the most recent",
			"commit that affected hello.html.",
			"And if I were now to not click on hello.html",
			"to actually see what's inside of it, I would see the same content",
			"that I wrote in the file before.",
			"I see !DOCTYPE html, and then the \"Hello, world!\"",
			"page that we've seen a couple of times now.",
			"So I made the change on my own computer, and I've now pushed them up to GitHub,",
			"so they're now inside of this repository.",
			"That's now public, such that anyone else,",
			"if they wanted to collaborate on this project, could take this URL,",
			"clone it to their own computer, and make their own changes locally as well.",
			"So now we can explore how we might be able to make additional changes",
			"to this web page as well.",
			"So if, for example, I wanted to add a heading to this web page, for instance,",
			"I might at the top of the body say something like, in an h1 tag,",
			"\"Welcome to my website!\"",
			"And now if I, just for good measure, open up hello.html",
			"to see what it looks like, this is what my web page now looks like.",
			"And now I've made changes to my hello.html file, changes",
			"that have not yet been saved, and I can tell that if I run git status.",
			"git status is your go-to for telling you what's currently",
			"going on inside of your repository.",
			"So here we see \"Changes not staged for commit,\"",
			"which is a fancy way of saying, files that have been changed,",
			"but I haven't said I would like to keep track of them in the next commit.",
			"It's telling me that I've modified hello.html,",
			"but it's not something that Git is currently",
			"going to keep track of the next time I make a save.",
			"So if I want to save hello.html when I commit for the next time,",
			"then I'll first need to run git add hello.html,",
			"and then I could run git commit.",
			"But there's actually a bit of a shorthand here.",
			"If you want to add all of the files that have been changed",
			"and commit at the same time, the shorthand is git commit -am.",
			"Remember, before we just used -m to say, specify a message.",
			"-am means git commit all of the files that have been changed--",
			"a for all-- and also provide a message.",
			"So you can combine the git add step and git commit step",
			"into just a single step by saying, I'd like to commit all of the files",
			"that I've changed, and then I'll provide a message.",
			"What exactly did I change?",
			"I added a heading.",
			"I'll go ahead and press Return.",
			"It's kept track of the fact that I have now",
			"changed one file with one insertion.",
			"All I did was add one new line to that file.",
			"And now if I run git status, it's going to tell me, I'm on branch master,",
			"and I am ahead of origin master--",
			"origin master being the version on GitHub--",
			"by one commit, that I have this \"Add a heading\"",
			"commit, but right now, on GitHub, if I refresh this page,",
			"it's still showing the old version of that page.",
			"In order to take my changes that I've made on my computer",
			"and make sure they're updated on GitHub, I can just run git push to say,",
			"push those changes up to GitHub, and once that's done,",
			"I can now refresh the page on GitHub, and I'll now",
			"see that GitHub now has the latest version of my program as well.",
			"It now has this h1.",
			"It says, \"Welcome to my website!\"",
			"So that's git push now, the ability for me to say I",
			"would like to take the changes that I have made to the my repository",
			"and push them up to some remote server, the remote server on GitHub,",
			"for example.",
			"But we can also go in the opposite way.",
			"You might imagine that maybe the version that's up on GitHub",
			"is more recent than the version that I have on my computer, and in that case,",
			"I would like to download the latest version of the repository that",
			"currently exists on GitHub.",
			"And in order to do that, we can use a command called git pull.",
			"How does that work?",
			"Well, when I run git pull, what's going to happen",
			"is the opposite of what git push did.",
			"While git push took my changes on my computer and pushed them up to GitHub,",
			"git pull, we'll say, take the changes that currently exist on GitHub,",
			"and go ahead and pull the most recent changes down,",
			"so that I and my local version of the repository",
			"have access to the latest version of all of the code that is currently",
			"on GitHub.",
			"And we can demonstrate this, for example,",
			"if I go back and take a look at GitHub's website itself,",
			"because on GitHub, I actually have the ability",
			"to edit files using GitHub's interface.",
			"So I'm going to simulate someone else working on this project, for example.",
			"Maybe someone else added a second heading,",
			"so they add an h2 that says, just hello, for example.",
			"And then, they can provide a commit message.",
			"This is sort of a graphical equivalent to the -m and then a message",
			"that we provided before.",
			"They can say, \"Added h2,\" and then commit.",
			"So this is another way to edit a Git repository is by literally in editing",
			"it inside of GitHub's interface.",
			"So GitHub allows you to just edit a file,",
			"and then add or modify any of the lines there.",
			"So now the version on GitHub is actually different from the version",
			"that we have on our computer, that if we look at hello.html",
			"here I only see the h1, and I don't see the h2 that",
			"was just added, because it's a more recent commit that I don't yet",
			"have access to.",
			"But if I want to download that commit, then what I can say",
			"is inside my terminal, I can say git pull in order to download it,",
			"and all right.",
			"It's updated one file.",
			"It's made some changes.",
			"And so now, if I go back to the file, you'll",
			"notice that automatically I now have the latest version of the file.",
			"I now have this h2 that says \"Hello!\"",
			"because I've pulled the latest version of the file down from GitHub.",
			"So via combination of get push and get pull,",
			"I can make changes to my code to push them up to GitHub,",
			"and also get access to the latest version of code that",
			"already is on GitHub.",
			"But as we do this, you might imagine that we",
			"could run into some sort of problem.",
			"In particular, we might run into a problem",
			"if I've been making changes to my code, and someone else",
			"working on my same project has also been making changes to the code.",
			"What happens if we both make changes to the same part of the code",
			"and then try to sync up our work together?",
			"What's going to happen?",
			"Well, we're going to run into some sort of conflict,",
			"because I've made changes to the same line",
			"that my colleague has been making changes to, and that type of conflict",
			"is called a merge conflict, that when trying",
			"to merge my changes with the changes that someone else has made,",
			"we run into a situation where suddenly Git doesn't know what to do.",
			"They're two different sets of changes, and we",
			"need to figure out how to resolve them and what to do",
			"when we run into this sort of conflict.",
			"So here's what's going to happen.",
			"If ever we run into this sort of merge conflict,",
			"it is generally going to happen if I try and pull in or merge in some changes",
			"from elsewhere.",
			"So let's say I run git pull, but there's some conflicting commit,",
			"something that is online that conflicts with my current version",
			"of the repository.",
			"What I'll get is a message like this.",
			"Some conflict saying, Merge conflicts in some file have failed.",
			"You need to fix the conflicts and then commit the results.",
			"So what might those conflicts look like?",
			"Well, generally, the file is going to look a little something like this.",
			"Git is automatically going to add some metadata to the file",
			"to describe the things that it can't quite figure out,",
			"and it's a lot of cryptic looking information,",
			"but we can distill it down into a couple of key parts.",
			"Everything in between these arrows at the top and equal signs",
			"here are your changes, the changes I have",
			"made on my version of the repository that are somehow",
			"conflicting with some other changes.",
			"Everything between these equal signs and these arrows",
			"down here are the remote changes, the changes from GitHub",
			"that I'm trying to pull in that somehow are conflicting with what",
			"I've currently been working on.",
			"And then this sequence of numbers and characters",
			"here is the hash of the conflicting commit.",
			"So every comment gets a hash, just some sequence of numbers and characters",
			"that is likely to be unique that helps to identify any particular commit,",
			"and Git will automatically generate a hash every time you make a comment,",
			"and we'll see in a moment how you can look at all of those possible commits.",
			"But here again, it's just helpfully telling us,",
			"this is the commit that is causing the conflict, just for our own reference.",
			"In order to address this merge conflict, the way we do it is we",
			"first need to remove all of these merge conflict markers that",
			"exist in the text file and decide what we",
			"want as the resolution of the conflict.",
			"So maybe I want to keep my version of the changes;",
			"maybe I want to keep the remote version of the changes, the changes that",
			"were already on GitHub, for example; or maybe I",
			"want to combine them in some intelligent way.",
			"I, the programmer get to make that decision.",
			"I get to look at my version and the conflicting version",
			"and decide how I want to resolve that conflict.",
			"I'll remove any of the blank lines and then commit the changes to say,",
			"this is what I want the merged version of this program to look like.",
			"So let's now take a look at an example of a merge conflict in action,",
			"to see how one might arise, and how we might actually",
			"go going about dealing with a merge conflict should it happen.",
			"So I, on my computer now, I'm going to make a change to this page.",
			"I'm going to say, add a second exclamation.",
			"One exclamation point wasn't enough.",
			"I'll add in a second exclamation point to this h1,",
			"and I'll go ahead and commit those changes.",
			"I'll say git commit -am \"Add exclamation point,\"",
			"and I'll go ahead and commit those changes.",
			"I've saved this new version of the program.",
			"But I'm not going to push the code yet.",
			"Instead, what I'm going to do is simulating someone else",
			"working on the same file.",
			"Maybe someone else on GitHub has decided, you know what?",
			"For this h1, what we'd really like to do is",
			"add some style to it with some inline style by saying,",
			"let's give it a color of blue, for example.",
			"So they've added some CSS.",
			"We'll go ahead and write a commit message.",
			"What did they do?",
			"They added some style.",
			"And we'll commit those changes.",
			"And now what we've created is what is going",
			"to be a merge conflict, that someone else on GitHub",
			"has made a change to this line changing the color to blue",
			"of this particular h1 tag, for example, and I meanwhile",
			"have also made a change to the same line, adding an exclamation point.",
			"And Git entirely operates in terms of adding lines and removing lines.",
			"Given that we both made changes to the same line,",
			"Git going to have a very hard time figuring out",
			"what to do in this scenario.",
			"So here in my terminal, I'll go ahead and run git pull,",
			"because I want to pull in those latest changes, and when I do,",
			"I'll see that, all right, I get this message.",
			"CONFLICT: There was a merge conflict in hello.html.",
			"The automatic merge failed, because normally, Git we'll",
			"try to merge files automatically if I can,",
			"but sometimes it can't, so now I need to fix the conflicts",
			"and then commit the results.",
			"So let's go ahead and look at what's inside of hello.html,",
			"and what you'll notice is a whole bunch of these markers,",
			"and my text editor just so happens to highlight them for me,",
			"so that I can see them a little more clearly,",
			"but this is just highlighting provided by the text editor.",
			"It's not actually part of the text itself.",
			"But you'll notice all of these arrows, and then all of these equal sides,",
			"and in between, here is my version of this line",
			"of code, the line of code with the extra exclamation point at the end of it.",
			"Down below, here is the remote conflicting version",
			"of the same code, the version that was modified on GitHub that I am now",
			"trying to pull in.",
			"This is the version that says, we want style color blue inside",
			"of the inline style for this particular h1 element.",
			"And now what I need to do is somehow figure",
			"out how to merge these two together.",
			"How do I want to resolve this conflict?",
			"Well, in this particular case, I might like",
			"to resolve this conflict by just taking the best of both worlds.",
			"If the person on GitHub wanted to add a style attribute to this h1 element,",
			"and I wanted the extra exclamation point, I can do both.",
			"I can go ahead and just add an extra exclamation point,",
			"and then get rid of my version, and then also get rid of these commit markers.",
			"So go ahead and remove those.",
			"I basically modify the file until I'm satisfied with it",
			"until I think that, all right, this is the way I",
			"wanted to resolve the conflict.",
			"One person added color.",
			"One person then added punctuation.",
			"The way to resolve it in this case is just use both of them.",
			"But here is where some human intuition comes in.",
			"The human programmer doesn't need to look at this file and figure out,",
			"how exactly do we want to resolve this conflict?",
			"How do we want to figure out how to take these different changes",
			"and merge them all together?",
			"But once we're satisfied with it, we can go ahead and commit the results.",
			"I can say git commit -am \"Fix merge conflict,\"",
			"and all right, we fixed the merge conflict.",
			"And now, if I push those results back up to GitHub, when that is done",
			"and I refresh the page, I now see the updated line of code on GitHub,",
			"with the h1 that has both the inline styling and the extra punctuation,",
			"because I've resolved the merge conflict,",
			"and then I've pushed that information back up to GitHub as well.",
			"There are a couple of other Git commands that are just useful to know about.",
			"I mean, there are many, but we'll talk about a couple",
			"right now, the first of which is git log.",
			"git log is useful if you ever need to keep track of all of the changes",
			"that you've made to your code, you want to keep",
			"track of all of the commits that have been",
			"made in this particular repository.",
			"All you need to do is run the command git log,",
			"and Git will spit out a bunch of messages",
			"that look like this, describing each of your comments for each commit.",
			"It'll tell you what the commit hash is, such",
			"that you can reference it more easily, it'll tell you who made the commit,",
			"it will tell you the date on which that commit was made,",
			"and it will also tell you the commit message.",
			"So if you need to very quickly look back and see on what day with this feature",
			"added or who added this part to the web page,",
			"you can just look through the git log, find the commit in question,",
			"And then you'll know which commit it happened to be.",
			"Also helpful is if you realize that you've",
			"made a change that you didn't mean to, and you",
			"want to go back to a previous commit.",
			"Then, in that case, you can use a command called",
			"to git reset, which has a number of different possible ways to use it,",
			"but git reset in effect will take the current state of the repository",
			"and revert it back to an older state of the repository, for example.",
			"So a couple of ways you can use it are like this.",
			"You can do git reset --hard, meaning hard reset, reset everything, back to--",
			"and then you can plug in a commit hash.",
			"So git log, as you might recall from before,",
			"gave you the commit hashes for each of the various different commits.",
			"If I want to go back to one particular commit, I can say git reset --hard",
			"and then the commit hash that I want to go back to,",
			"and I'll go back to that commit.",
			"Alternatively, I could say something like, git reset --hard origin/master.",
			"And recall that origin/master is the version of my repository",
			"that's currently on GitHub.",
			"So if I want to take my current version of the repository",
			"and reset it back to whatever is on GitHub,",
			"then I can use a command like this in order to do so.",
			"So you run git reset, followed by a commit hash,",
			"and that will reset the current state of your repository back to whatever state",
			"it was in previously.",
			"And there are a number of other Git commands",
			"as well, that can be quite helpful as you",
			"begin working with larger and larger projects,",
			"but these are some of the most helpful, and some other ones you'll",
			"use the most often are just adding files that you want to keep track of;",
			"git commit to say, I would like to make a save,",
			"I would like to save the current state of all of these files; push",
			"and pull to be able to upload changes and download changes that have been",
			"made to your repository; and then some helpful commands like reset and log",
			"and status,",
			"just to give you information about your repository",
			"and get you back to an older state of the repository if you need to.",
			"But as we begin to work on more and more projects,",
			"especially as we begin to work on more sophisticated projects,",
			"you may find that just keeping track of one",
			"change after another isn't nearly as powerful as you might like it to be.",
			"And so we can explore what might happen in a hypothetical situation",
			"where you begin making some changes to a Git repository, for example.",
			"So let's imagine you make your first commit, you make some changes,",
			"you make some additional changes, and maybe",
			"you realize you want to start working on a new feature to this web application",
			"that you've been working on.",
			"So you start working on a new feature, then",
			"you continue working on that new feature,",
			"but then you realize suddenly, you know what,",
			"there was a bug in the original code that I made way back here,",
			"and you want to go back and fix that bug,",
			"but now we're sort of in a tricky spot, that we want to fix the bug,",
			"but we're in the middle of working on a new feature.",
			"So what do we do?",
			"We could go back to this and try and fix the bug,",
			"but then what happens to the new feature?",
			"The problem is that this structure-- just change after change after change--",
			"it is very linear.",
			"It only goes one after another after another.",
			"And oftentimes, when you're working on a project,",
			"it's not going to operate in a very linear fashion.",
			"You're not always working on one thing that immediately",
			"follows the thing before it.",
			"You might be fixing multiple bugs while working on multiple new features,",
			"and you want some way of being able to work on all of those things",
			"simultaneously and to easily be able to switch between them.",
			"And so that is where branching comes in handy.",
			"Branches are Git's way of working on different parts",
			"of the repository at the same time.",
			"And so you might imagine a situation unfolding more along these lines.",
			"You make your first commit, you start to make changes, you make more changes,",
			"and when you decide that you'd like to start",
			"working on a new feature, for example, rather than making changes in one",
			"after another after another on this same branch, so to speak,",
			"I can create a new branch.",
			"I can branch off and say, you know what?",
			"Let's create a new branch and start working on our new feature there,",
			"and then keep working on that new feature there.",
			"And if I realize later on down the road that, you",
			"know what, there was a bug way back at this commit, then",
			"I can go back to this commit and create a new branch, where I go ahead",
			"and fix that bug.",
			"And now I have two different branches, each of which",
			"might have different code on it, one of which I've been fixing a bug,",
			"one of which I've been working on a new feature on, for example.",
			"Generally, each of those branches is going to have a name.",
			"So the master branch is your default branch,",
			"which is generally going to contain the up-to-date, stable version",
			"of your code.",
			"And as you're working on newer things, newer additional features,",
			"you might have some feature branch, where you're working",
			"on some other feature, for example.",
			"And at any given time though, your focus is only on one of these two branches,",
			"and where your focus is, what the current state of your repository",
			"is, is designated by something we call the head.",
			"So if HEAD is pointing to master, that means",
			"your repository right now is working on this branch, where you fixed the bug.",
			"But you can change the head.",
			"You can switch what branch you want to look at,",
			"and you can check out the feature branch,",
			"and say, let's look at that branch, and begin working on that as well.",
			"And you can begin working on these different branches",
			"by switching where your head is, switching from one branch to another,",
			"and then back again.",
			"And only when you're satisfied, that you know what, this bug is fixed,",
			"and this feature is in a satisfactory place, then, after all of that,",
			"we can merge those changes back together,",
			"so that everything comes back onto this unified master branch that",
			"now has all of the latest code.",
			"And that's the real power of git branch, this ability",
			"to say that I would like to be working on multiple things simultaneously",
			"and be working on a feature without disrupting the master",
			"version of the code.",
			"So, let's now take a look at an example of how we might go about doing that.",
			"",
			"So here in my hello.html file, I've been adding some style to this h1.",
			"I added the color of blue.",
			"And let's say that I would like to make some changes.",
			"I would like to move the styling outside of inline styling,",
			"and I'd instead like to move it up into the head section of the web page,",
			"because we decided earlier that was slightly better design for a web",
			"page like this.",
			"I could make those changes immediately, but I can instead,",
			"if I expect I might be working on multiple changes,",
			"I could move on to a different branch, and branch off into something else",
			"in order to work on these new changes.",
			"And so here are some of the key commands to know about this.",
			"If I type git branch, that will tell me what branch I'm currently on",
			"and what branches exist in my repository.",
			"So here, for example, I type git branch, and I",
			"see that I just have a single branch called master,",
			"and the star on the left-hand side tells me",
			"that this is the branch that I am currently on,",
			"the only branch that there is.",
			"If I want to check out a new branch, I can type git checkout,",
			"and if it's a new branch, I'll type git checkout -b and then",
			"the name of the new branch.",
			"And I'll call the new branch style, because I'm",
			"going to be making some style changes to the web page, for example.",
			"So I typed git checkout -b style, and Git gives me a message.",
			"I have switched to a new branch called style.",
			"And now, if I type git branch again, you'll",
			"see that now I have two branches.",
			"I have the master branch, which is the branch, I was originally on,",
			"and now I have the style branch, which is",
			"this new branch which I am on now, as indicated by the star",
			"on the left-hand side.",
			"So now that I'm on this new branch, I can feel free to make any changes",
			"that I want, and nothing I do is going to mess up",
			"what is on the master branch, so long as I stay on this branch.",
			"So I can say, all right, let's experiment with removing the style,",
			"and let's add a style tag to the top, where",
			"I can say that I would like my h1 to have a color of blue, for example.",
			"So I've made a whole bunch of changes, and I",
			"would like to now commit those changes.",
			"I'll say git commit \"Move style properties.\"",
			"That's the change that I've made.",
			"But I've only made those changes to the style branch.",
			"Again, if I run git branch, you'll see that I'm currently",
			"on the style branch, where I've moved the style information up",
			"here to the top of my page, but I can switch branches by using git checkout.",
			"git checkout allows me to switch between branches.",
			"We used to git checkout -b to create a new branch,",
			"but if you're switching to a branch that already exists,",
			"I can just say git checkout master, for example,",
			"to switch my current branch from the style branch to the master branch.",
			"So I run git checkout master.",
			"Now I'm on the master branch.",
			"And now you'll see, if I go back to the file,",
			"now I'm back to the inline styling without the styling",
			"up here in the head section of the page.",
			"If I check out the style branch again, then the file immediately goes back.",
			"Now I have the style code up here in the style section of the page,",
			"and not inline.",
			"So these changes have only been made to one part of the page.",
			"So now I'll check out master again.",
			"And maybe I want to make some other changes on my master branch.",
			"Maybe I realized that I want to remove this extra punctuation.",
			"You know what?",
			"Two exclamation points with too many.",
			"We'll remove-- now we just have one.",
			"And now we'll commit these changes.",
			"I'll say git commit and \"Remove punctuation.\"",
			"And now I've removed the punctuation only from the master branch.",
			"So this master branch now has just a single exclamation point here,",
			"but it still does have the inline styling.",
			"So now what I'd like to do is merge in those changes",
			"that I made from the other branch.",
			"I'd like to take what I was working on in the style branch",
			"and merge it into this current version of the repository on my master branch.",
			"And in order to do that, the command we'll use is called git merge.",
			"So git merge.",
			"Notice that I am currently on the master branch, but if I run git",
			"merge and then style, that is going to take whatever is on the style branch",
			"and attempt to merge it into my current branch.",
			"And what we'll find is we're able to get most of the way there,",
			"but there's a merge conflict.",
			"Now this won't happen all the time when you merge.",
			"Sometimes, Git will be smart enough to know",
			"that if one change has been made to one part of a file,",
			"and one change has been made to another part of a file, when you merge",
			"those changes back together, Git will resolve those merge conflicts",
			"automatically.",
			"But in this case, that wasn't the case, because both my style",
			"branch and my master branch made changes to the same line of code,",
			"and we'll see why if I go back here.",
			"You'll notice that in the merged version,",
			"we do see this style tag at the head of the page.",
			"No problems, no conflict there, because that was just",
			"lines that have been added to this page, so there was no conflict.",
			"The conflict comes up here, which is where,",
			"in my version on the master branch, I removed this punctuation",
			"mark, whereas in the version on the style branch,",
			"which we can see here by the word \"style,\" we removed the inline styling.",
			"So we need to resolve these somehow.",
			"And what I'll ultimately do is just get rid of these style",
			"markers or the conflict markers, and say, you know what?",
			"I would like for the updated version not to have either,",
			"not to have the inline styling, and not to have the additional punctuation.",
			"So I have now made those changes, I have resolved the merge conflict,",
			"and now I can commit.",
			"I fixed the merge conflicts.",
			"And that's the general workflow now of how branching in Git ultimately works.",
			"When you're working on something new, you",
			"might branch off in order to say you would",
			"like to work on a different part of this web application.",
			"You'll make changes, make commits, add changes to that new branch,",
			"and when you're satisfied with those changes, when they're in the state",
			"that you want them to be, you can then say merge them back",
			"in to the original version of the repository.",
			"Sometimes you'll have to deal with merge conflicts, though certainly not always.",
			"And if you're careful about where you make changes",
			"and trying to be careful not to make modifications to the same line of code",
			"in two different places, you can reduce the likelihood of actually getting",
			"a merge conflict, because Git ultimately is",
			"quite smart about how it tries to deal with these sorts of issues.",
			"And finally, we'll take a look at a couple of features of GitHub",
			"specifically that can be quite helpful as you",
			"begin to work on larger projects that have many different moving",
			"pieces, the first of which is forking a GitHub repository.",
			"So let's go to a GitHub repository and look at the GitHub repository",
			"for Bootstrap, for example.",
			"So Bootstrap, which is the CSS library that we took a look at last time,",
			"is a library that gives us easy access to a whole bunch of different CSS",
			"features, and the entire thing is open-source, meaning",
			"all of the code for Bootstrap is publicly available for anyone",
			"to look at, and more importantly, for anyone to contribute to,",
			"that it's not just one person that's been working on all of Bootstrap,",
			"but it's a community-driven repository that many people can be working on,",
			"adding new features, and making fixes to Bootstrap's code,",
			"and collaborating on them by taking advantage of the features of Git",
			"And so if you find a Git repository that you would like to contribute to,",
			"or if you want other people to be able to contribute to your repository,",
			"one thing you can do is fork that repository, and by forking.",
			"We mean making your own copy of the original repository.",
			"And so up here in the upper right-hand corner of GitHub page",
			"is a button called Fork, and we can see that right now, about 68,000 people",
			"have already forked Bootstrap's repository,",
			"made a copy of the repository into their own GitHub account.",
			"And so we could fork it ourselves just by clicking on this button called Fork",
			"and then getting our own version of the repository",
			"that we can then clone and push and pull from as well.",
			"The reason we might do that is that Bootstrap's repository,",
			"while it is public, doesn't allow anyone to just push to it.",
			"That would be probably unsafe if anyone in the world",
			"could just update Bootstrap's master code, but what you can do",
			"is copy the code, make a fork of it, make changes to it on your own,",
			"push and pull to it.",
			"And then, when you feel like you've made a contribution that you would",
			"like to send back to Bootstrap, you can open",
			"what's called a pull request, that you are requesting that your code be",
			"pulled in to Bootstrap's code.",
			"And we can look, for example, at Bootstrap's Pull Request tab.",
			"It looks like right now there is 71 open pull requests.",
			"There are 71 people that have made some fixes",
			"or made some changes to Bootstrap's code,",
			"and you can submit a pull request to say that you",
			"would like to take those changes and merge them back in with Bootstrap's",
			"actual code, and the people that maintain",
			"Bootstrap's code in this particular repository",
			"can review those pull requests, provide feedback, ask for additional changes,",
			"and then when everyone's satisfied, they can merge those changes",
			"into Bootstrap's actual code.",
			"And this is one of the key benefits of open-source software,",
			"the ability for multiple people to be working on the same piece of code,",
			"and for a community to be able to collaborate on finding bugs",
			"on figuring out what changes to make, on figuring out",
			"how to improve upon an existing repository",
			"and make it better moving forward.",
			"And one final thing worth noting about GitHub",
			"is an additional feature known as GitHub Pages.",
			"GitHub Pages is a free way that GitHub provides",
			"to be able to quickly take a website with HTML,",
			"and CSS, and maybe even a little bit of JavaScript,",
			"and deploy it to the internet for anyone to look at.",
			"And anyone with a GitHub account is allowed to create a GitHub Pages",
			"website for free.",
			"And in order to do so--",
			"we can demonstrate it now--",
			"all you need to do in GitHub is let's create a new repository",
			"that we'll call--",
			"it should generally be your user name, .github.io is the conventional name",
			"for your GitHub Pages site, though it can have other names.",
			"You'll just have to manually turn on GitHub Pages.",
			"And we'll go ahead and create this repository now.",
			"If you create a get up repository called your username, .github.io,",
			"it will automatically be supporting GitHub Pages,",
			"and what that means is that I can take this URL and I can clone it.",
			"So I can say git clone, followed by this URL.",
			"I've cloned an empty repository, but I can go into this repository",
			"and add some files to it.",
			"I can say, let's add, by default, it's called an index.html file,",
			"and I'll create an HTML file.",
			"That is my site.",
			"And the body of it will just say, \"This is my GitHub Pages website.\"",
			"So something like that, something simple.",
			"But it can certainly be more complex if you want it to be.",
			"Inside my terminal, I will git add this index.html file,",
			"and I'll make a commit.",
			"And often, the first commit, you'll just, in the commit message,",
			"write \"First commit,\" so that we know it was the first commit,",
			"and then I'll push those changes to GitHub now.",
			"",
			"So if you push your changes to a repository called your username,",
			".github.io, then if you take a look at the settings and scroll down,",
			"you'll see that GitHub Pages is by default ready to be published.",
			"And now if I click on this URL my username, .github.io,",
			"you'll see deployed to the internet, such that anyone can go to this URL",
			"and see it.",
			"They'll see a big heading that says \"This is my GitHub page's website,\"",
			"because this is the way the browser is rendering the HTML that I",
			"pushed to my GitHub Pages repository.",
			"And the advantage of doing this is that it's",
			"very easy now to be able to quickly update my website.",
			"All I need to do is if I make a new change, I can commit that change,",
			"push that change to GitHub, and when GitHub detects that I've made a push",
			"to my GitHub Pages repository, then it will update my website that anyone",
			"in the world can access by going to my username, .github.io.",
			"And this allows you to leverage all of these features of Git,",
			"the ability to branch, the ability to work on different features of your web",
			"page at different times, and revert back to different versions of the code",
			"as well.",
			"So all in all, Git has given us a number of very powerful tools",
			"that's given us the ability now to be able to very quickly and very easily",
			"keep track of any changes we make to code,",
			"keep track of when a piece of code is updated, and to quickly revert back",
			"and look at old versions of that code if need be,",
			"and in particular, it's given us the ability to take our code",
			"and work together with other people on it,",
			"such that we can be working on multiple parts of the same project,",
			"and someone else working on the same project",
			"can also be working on multiple parts of the same project on different branches,",
			"and it's very easy then to sync up our changes in order to work together.",
			"And so Git is a very popular tool used, not only in",
			"the world of web programming, but especially whenever",
			"dealing with any kind of larger project, where multiple people might be working",
			"on the same thing simultaneously, Git will",
			"enable us to more easily develop our web applications",
			"over the course of this term.",
			"Next time, we'll take a look at Python, which is one of the first programming",
			"languages that we'll use as we continue on our journey towards building",
			"more sophisticated web applications.",
			"I'll see you then.",
			""
		],
		"is_youtube": false
	},
	"video_004": {
		"section": "CS50W 2020",
		"subsection": "Python",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V002000_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V002000/HarvardXCS50W-V002000.m3u8"
		],
		"video_duration": 4061,
		"speech_period": [
			0.984, 16.803, 1.833, 2.31, 2.76, 1.62, 2.4, 2.16, 2.568, 3.042, 2.94,
			3.57, 1.87, 2.12, 2.598, 2.292, 3.54, 1.62, 3.45, 1.32, 2.01, 3.33, 2.31,
			2.61, 2.23, 1.97, 3.48, 3.51, 2.43, 3.6, 3.0, 3.46, 3.02, 2.01, 4.05,
			5.01, 4.05, 2.19, 1.63, 2.87, 4.79, 4.41, 2.91, 2.7, 2.52, 4.17, 3.57,
			2.07, 2.61, 3.16, 3.23, 1.41, 0.85, 1.25, 2.31, 2.25, 2.46, 1.92, 3.99,
			1.2, 4.38, 4.2, 4.2, 4.02, 2.55, 2.17, 3.29, 3.72, 2.25, 2.318, 1.792,
			2.01, 3.96, 3.15, 2.04, 2.22, 2.73, 3.78, 4.77, 2.28, 2.47, 2.75, 0.99,
			2.49, 1.56, 3.0, 2.01, 3.13, 0.5, 4.83, 1.98, 2.46, 4.59, 0.91, 1.64,
			2.31, 4.92, 2.31, 2.76, 2.7, 2.46, 2.19, 4.142, 3.208, 3.45, 2.88, 2.85,
			3.6, 3.51, 2.76, 2.08, 2.654, 2.926, 4.39, 1.23, 2.27, 3.6, 2.82, 3.18,
			1.78, 4.34, 1.57, 2.48, 2.225, 2.875, 3.07, 1.47, 5.24, 0.82, 2.67, 4.26,
			1.47, 3.0, 3.16, 2.0, 1.08, 3.62, 1.81, 5.01, 3.18, 2.8, 2.67, 3.89, 1.42,
			4.01, 1.68, 2.22, 2.982, 1.778, 4.53, 4.16, 3.27, 3.86, 2.17, 2.97, 3.54,
			3.24, 3.72, 1.92, 2.97, 2.65, 5.09, 3.36, 3.34, 2.34, 4.22, 2.46, 3.84,
			2.61, 2.548, 2.792, 2.37, 2.1, 2.82, 2.21, 5.25, 2.21, 1.13, 2.852, 1.708,
			3.69, 3.1, 3.41, 2.67, 2.26, 4.64, 3.21, 4.08, 4.69, 5.04, 5.39, 1.92,
			4.38, 4.58, 2.9, 1.92, 4.53, 3.39, 1.95, 2.79, 3.18, 2.04, 1.86, 3.24,
			2.38, 3.23, 3.48, 3.78, 1.29, 1.59, 3.24, 3.99, 3.25, 1.97, 2.76, 2.05,
			2.03, 3.84, 1.39, 4.25, 2.91, 1.87, 5.077, 2.083, 1.56, 3.0, 2.67, 3.15,
			2.37, 4.23, 2.6, 3.26, 6.08, 7.16, 2.88, 2.16, 2.1, 2.43, 2.46, 2.97,
			2.49, 1.29, 2.51, 1.93, 3.38, 2.56, 5.07, 0.75, 4.18, 2.06, 2.58, 2.49,
			2.4, 2.85, 2.73, 1.71, 2.1, 3.53, 3.07, 2.37, 1.893, 2.167, 2.708, 1.902,
			2.25, 3.15, 2.94, 2.572, 1.958, 5.16, 3.09, 1.325, 2.125, 2.28, 3.8, 1.75,
			3.023, 0.667, 1.95, 1.53, 2.89, 3.69, 2.0, 3.39, 1.388, 2.042, 3.19, 4.36,
			5.73, 1.71, 3.31, 3.29, 2.37, 4.74, 0.968, 1.792, 2.16, 4.47, 2.79, 2.165,
			2.125, 3.34, 2.03, 4.23, 2.16, 2.28, 4.917, 2.583, 3.66, 4.05, 3.6, 4.42,
			2.39, 3.15, 5.012, 1.958, 1.57, 2.84, 4.73, 4.37, 2.73, 1.96, 3.95, 1.68,
			2.04, 3.467, 2.083, 3.6, 2.37, 1.41, 2.07, 1.92, 3.09, 4.04, 2.86, 2.85,
			3.12, 2.22, 3.18, 1.8, 3.93, 2.75, 2.52, 2.37, 2.43, 3.09, 2.7, 4.75,
			2.25, 2.1, 3.22, 2.37, 4.79, 5.46, 1.22, 3.19, 1.86, 5.76, 2.28, 2.76,
			4.029, 3.891, 3.09, 2.28, 2.97, 2.25, 1.74, 2.64, 2.37, 3.48, 1.1, 3.1,
			3.572, 3.688, 1.98, 3.06, 3.72, 2.34, 3.15, 3.55, 1.34, 3.37, 3.5, 3.96,
			2.22, 1.98, 5.48, 4.84, 2.49, 2.25, 3.06, 2.37, 1.26, 3.04, 4.49, 3.0,
			3.83, 1.558, 2.042, 2.72, 3.47, 2.79, 2.76, 2.1, 2.257, 2.333, 2.95, 5.26,
			1.81, 2.19, 2.73, 2.8, 5.09, 2.49, 3.27, 6.87, 2.91, 3.09, 3.48, 3.85,
			3.17, 3.81, 1.5, 3.41, 4.48, 3.14, 1.0, 3.24, 2.95, 4.06, 3.49, 4.05,
			2.568, 2.292, 1.917, 3.7, 2.583, 3.29, 2.94, 2.04, 1.47, 2.85, 2.43, 1.08,
			3.58, 2.0, 2.01, 2.958, 2.292, 2.41, 3.27, 2.31, 2.7, 2.97, 1.17, 2.01,
			3.52, 3.2, 3.36, 4.02, 2.04, 2.11, 2.69, 4.8, 3.06, 3.51, 2.01, 2.94,
			4.01, 4.3, 3.96, 2.01, 3.16, 3.11, 2.67, 4.27, 6.578, 3.202, 6.25, 2.1,
			2.61, 2.87, 3.63, 3.03, 3.0, 4.8, 2.85, 1.87, 2.0, 1.5, 2.61, 2.73, 4.15,
			2.72, 3.96, 1.68, 3.3, 4.065, 2.925, 1.17, 2.368, 2.042, 1.25, 3.7, 3.73,
			2.25, 3.9, 7.29, 3.71, 3.21, 2.04, 2.19, 3.03, 2.61, 2.59, 2.08, 3.52,
			1.913, 2.167, 1.98, 2.97, 3.21, 2.49, 2.88, 4.74, 2.49, 2.7, 1.56, 3.04,
			2.39, 3.78, 1.9, 2.12, 2.58, 3.42, 2.49, 3.12, 2.58, 1.83, 2.86, 1.73,
			3.39, 2.55, 2.05, 2.87, 2.58, 2.58, 4.62, 2.61, 2.1, 1.8, 1.2, 2.53, 4.12,
			1.8, 6.17, 2.685, 1.125, 1.65, 3.0, 0.97, 4.63, 0.55, 3.93, 1.71, 3.63,
			2.39, 1.75, 5.62, 2.2, 3.36, 4.04, 4.3, 2.11, 4.92, 2.58, 4.35, 2.53,
			4.28, 3.72, 3.45, 2.7, 3.33, 1.62, 7.74, 1.72, 2.1, 3.3, 2.47, 1.61, 4.62,
			2.955, 2.905, 2.87, 3.21, 2.31, 4.15, 3.728, 3.042, 3.21, 3.57, 4.355,
			3.125, 1.395, 3.125, 2.1, 2.04, 3.69, 2.303, 2.917, 3.18, 3.34, 3.452,
			1.998, 2.1, 3.07, 3.17, 5.55, 2.81, 1.62, 2.611, 3.629, 1.77, 3.09, 3.94,
			2.21, 4.18, 3.71, 1.22, 2.697, 1.333, 2.25, 1.86, 3.81, 2.86, 4.73, 2.52,
			3.96, 3.42, 4.17, 3.0, 2.25, 4.2, 4.56, 3.04, 3.62, 3.99, 5.64, 3.48,
			2.97, 5.61, 2.54, 5.64, 1.19, 0.82, 1.16, 3.34, 3.99, 2.37, 3.78, 4.53,
			2.31, 3.24, 2.88, 3.52, 3.05, 6.09, 1.29, 0.82, 2.208, 3.08, 3.042, 2.4,
			2.37, 1.8, 2.97, 2.67, 3.867, 1.833, 5.13, 1.15, 2.72, 3.45, 4.8, 8.48,
			1.51, 3.41, 1.71, 4.26, 2.82, 5.1, 4.23, 1.5, 2.85, 4.34, 4.97, 2.349,
			1.891, 2.46, 2.04, 3.24, 3.96, 2.4, 3.96, 1.71, 3.27, 4.47, 3.84, 2.97,
			3.57, 5.85, 4.54, 4.16, 3.39, 4.25, 4.09, 2.62, 4.31, 2.64, 3.43, 2.69,
			2.73, 2.07, 5.61, 2.33, 1.86, 3.12, 1.227, 3.333, 3.33, 3.51, 1.48, 4.26,
			4.5, 3.89, 2.76, 4.89, 3.27, 1.77, 3.54, 2.7, 3.0, 2.875, 3.465, 3.49,
			2.47, 2.79, 2.26, 5.8, 3.93, 0.99, 10.27, 4.43, 2.0, 3.12, 2.727, 2.583,
			2.1, 1.83, 6.65, 2.94, 2.43, 3.04, 1.733, 0.917, 1.2, 2.89, 2.9, 2.88,
			1.77, 3.01, 3.23, 1.54, 4.19, 2.5, 5.45, 3.36, 4.23, 1.89, 4.47, 2.94,
			3.81, 4.378, 2.042, 2.28, 3.625, 2.375, 3.24, 2.52, 3.57, 3.78, 2.61,
			2.04, 5.47, 2.94, 2.73, 4.94, 4.06, 1.62, 1.71, 4.68, 1.58, 1.75, 2.73,
			4.3, 4.19, 1.8, 2.37, 5.52, 3.48, 2.742, 1.458, 2.82, 4.47, 3.42, 4.5,
			3.03, 3.09, 2.85, 2.85, 4.35, 2.62, 2.0, 3.19, 2.45, 2.53, 2.15, 3.308,
			1.792, 5.16, 2.55, 4.11, 3.66, 1.928, 2.542, 4.71, 2.98, 2.87, 2.04, 2.79,
			3.57, 3.75, 3.78, 2.89, 3.98, 3.45, 2.49, 1.65, 2.59, 3.5, 3.79, 2.69,
			3.26, 1.75, 3.84, 3.57, 2.847, 1.833, 3.24, 3.66, 3.06, 2.61, 3.93, 2.88,
			2.31, 5.11, 2.3, 4.76, 2.11, 4.77, 3.81, 2.7, 2.73, 3.06, 4.53, 3.39,
			4.41, 2.37, 3.51, 3.03, 4.288, 2.042, 3.79, 3.482, 1.458, 2.19, 3.3, 1.74,
			3.61, 3.02, 3.25, 2.27, 2.49, 4.12, 2.56, 3.49, 5.61, 5.16, 3.87, 5.97,
			2.34, 4.1, 1.75, 2.79, 3.39, 3.12, 2.505, 1.875, 2.34, 5.89, 3.325, 1.375,
			2.58, 2.89, 3.68, 1.33, 1.98, 3.17, 2.28, 2.82, 3.81, 3.15, 4.02, 4.92,
			3.15, 2.58, 2.23, 1.97, 5.25, 2.37, 3.99, 2.43, 3.24, 2.97, 4.92, 2.67,
			4.3, 1.74, 2.958, 3.144, 1.958, 1.94, 3.07, 3.51, 2.55, 4.44, 2.4, 2.53,
			4.97, 3.56, 1.66, 3.4, 2.24, 4.33, 2.15, 5.89, 4.22, 2.66, 4.26, 1.59,
			3.78, 1.945, 2.375, 2.132, 1.708, 4.22, 4.31, 3.6, 3.23, 2.09, 3.63, 2.32,
			2.87, 3.75, 2.43, 3.15, 2.37, 2.37, 3.7, 5.93, 4.14, 2.37, 2.94, 3.15,
			4.65, 4.42, 2.66, 2.08, 4.68, 5.68, 2.61, 3.15, 3.14, 1.78, 4.05, 2.85,
			5.588, 2.042, 2.06, 3.72, 4.5, 4.81, 1.77, 2.34, 3.18, 6.4, 3.75, 3.06,
			3.33, 4.06, 2.57, 3.27, 4.38, 4.17, 5.28, 2.76, 2.55, 4.87, 4.22, 1.62,
			4.42, 1.25, 3.57, 3.91, 2.75, 1.38, 2.49, 2.6, 3.06, 3.15, 4.107, 1.583,
			2.58, 2.19, 3.34, 2.78, 2.52, 1.38, 5.46, 2.64, 7.214, 1.856, 4.36, 2.58,
			8.11, 8.28, 1.25, 2.13, 3.06, 2.76, 3.51, 3.99, 3.72, 4.72, 2.96, 2.96,
			3.0, 0.99, 2.61, 3.3, 1.887, 1.833, 2.49, 1.89, 4.38, 2.49, 2.47, 2.99,
			3.33, 1.97, 2.7, 2.67, 3.24, 3.51, 2.94, 3.15, 2.22, 2.58, 4.082, 1.708,
			2.208, 3.912, 3.75, 2.97, 4.29, 4.51, 3.65, 2.31, 2.52, 3.72, 3.84, 3.63,
			3.84, 2.04, 2.19, 2.64, 2.73, 3.58, 4.91, 3.48, 1.32, 4.04, 2.47, 3.24,
			2.94, 1.8, 3.66, 1.74, 3.428, 2.042, 2.84, 2.64, 4.56, 3.63, 4.02, 3.24,
			3.06, 2.29, 3.06, 3.96, 3.01, 3.86, 2.07, 3.07, 6.43, 1.95, 2.02, 2.672,
			4.938, 1.233, 1.167, 3.63, 2.79, 3.99, 3.69, 2.88, 1.98, 1.92, 3.45, 2.49,
			2.34, 3.91, 2.36, 2.28, 3.39, 2.95, 3.26, 3.27, 3.71, 4.43, 4.87, 1.61,
			4.06, 3.5, 4.68, 3.78, 3.24, 4.8, 7.24, 3.45, 2.19, 1.11, 4.06, 2.63,
			3.57, 2.1, 2.46, 3.36, 3.12, 3.96, 2.58, 6.13, 3.16, 6.62, 3.64, 1.162,
			3.208, 1.59, 3.12, 4.56, 2.46, 2.7, 2.49, 3.81, 1.89, 4.5, 2.49, 3.84,
			2.67, 3.3, 2.97, 4.05, 1.99, 4.85, 2.04, 2.91, 4.08, 1.66, 2.25, 3.11,
			3.54, 4.26, 4.53, 2.67, 2.63, 3.91, 3.33, 1.77, 2.49, 4.69, 2.33, 2.31,
			4.35, 3.61, 5.97, 4.68, 2.33, 3.3, 1.68, 4.77, 2.01, 4.5, 2.52, 4.71,
			1.41, 3.15, 2.97, 2.13, 2.43, 3.33, 4.86, 2.8, 1.22, 3.75, 4.23, 4.11,
			3.18, 4.05, 2.76, 8.02, 4.042, 2.708, 3.3, 3.6, 4.35, 2.49, 2.15, 1.46,
			3.77, 3.87, 1.89, 2.7, 2.588, 1.792, 3.48, 3.39, 3.84, 3.27, 1.87, 4.715,
			6.765, 4.77, 1.45, 6.473, 1.167, 3.54, 5.75, 3.82, 3.48, 2.88, 2.82, 1.62,
			3.75, 4.44, 2.3, 1.525, 0.875, 5.2, 4.04, 1.245, 2.625, 1.23, 3.33, 3.63,
			4.02, 3.97, 3.09, 3.68, 3.49, 3.38, 1.173, 1.917, 4.38, 2.95, 3.99, 5.64,
			3.23, 2.16, 2.34, 1.89, 1.89, 1.41, 2.04, 2.5, 3.72, 2.21, 2.76, 3.3,
			2.07, 1.92, 1.792, 2.348, 2.497, 2.333, 2.88, 2.663, 2.917, 2.58, 3.54,
			3.87, 1.74, 4.32, 2.73, 2.41, 2.65, 0.63
		],
		"transcript_en": [
			"",
			"[MUSIC PLAYING]",
			"BRIAN YU: All right, welcome back, everyone,",
			"to Web Programming with Python and JavaScript.",
			"And today, we take a look at one of the two main languages we're",
			"going to be looking at in this course.",
			"In particular, we're going to be looking at Python.",
			"Python is a very powerful language that makes",
			"it very easy to build applications quickly",
			"because there are a lot of features that are built into the language that",
			"just make it convenient for quick and productive development.",
			"So one of the goals of today is to introduce you to the Python programming",
			"language if you haven't seen it before.",
			"And even if you have seen it before, to give you",
			"a taste for what the language has to offer, exploring some",
			"of the more advanced features in some of the techniques",
			"we can use using Python to be able to develop applications",
			"all the more effectively.",
			"So we begin with our very first Python program, just a program",
			"that says, \"hello, world.\"",
			"We're going to be writing it in a text file.",
			"And the program just looks like a single line, just like this.",
			"And if you've used other programming languages before,",
			"like C, or Java, or other languages, this probably",
			"looks pretty familiar syntax-wise.",
			"But just to break it down, we have a function",
			"called Print built into the Python programming language for us.",
			"And like many other programming languages, functions in Python",
			"take their arguments inside of parentheses.",
			"So inside of these parentheses are the argument, or the input,",
			"to the Print function, which in this case is just the words,",
			"\"hello, world\" followed by an exclamation point.",
			"So here's how we can actually take this program and run it.",
			"I'm going to go into my text editor and create",
			"a new file that I'll call hello.py.",
			"dot-py or dot-py is the conventional extension for Python programs.",
			"So I create a file called hello.pi inside of which will just be the Python",
			"code that we just saw a moment ago.",
			"We'll call the Print function.",
			"And as an argument, or the input, to the Print function,",
			"I'll say, \"hello, world\" exclamation point.",
			"Now in order to run this program, we're going to use a program in our terminal",
			"that also just so happens to be called Python.",
			"Python is what you might call an interpreted language,",
			"meaning we're going to run a program called Python,",
			"which is an interpreter that is going to read our .py file line by line,",
			"executing each line and interpreting what it is that it means in a way that",
			"the computer can actually understand.",
			"So we'll run Python followed by the name of the program",
			"that we'd like to interpret, in this case hello.py.",
			"And when we run this program, we see that the words \"hello, world\"",
			"are printed to the terminal.",
			"And that's it.",
			"That's the end of the program.",
			"And that's the very first program that we've written",
			"using the Python programming language.",
			"So now already we've seen a couple of features of Python.",
			"The ability to interpret Python-- there's",
			"no need to compile it into a binary first in order to run a Python program.",
			"We've seen functions.",
			"And we've also seen strings, just text that we can provide in quotation marks",
			"that we can provide as input to other functions or manipulate in other ways.",
			"And we'll see some examples of a string manipulation a little bit later.",
			"Like many other programming languages, Python also supports variables.",
			"And in order to assign a new value to a variable,",
			"the syntax looks a little something like this.",
			"If I have a line like a equals 28, what that's going to mean",
			"is take the value 28 and assign it, store it inside",
			"of this variable called a.",
			"Now, unlike other languages like C or Java",
			"which you might be familiar with, where you",
			"have to specify the type of every variable",
			"you create-- you have to say, like, int a to mean a is an integer.",
			"Python doesn't require you to tell you what the types of each",
			"of these variables actually are.",
			"So we can just say a equals 28 and Python",
			"knows that because this number is an int, that it's",
			"going to represent the variable a as an int, that it knows,",
			"it's able to infer, what the types of any these values happen to be.",
			"So all the values do indeed have types.",
			"You just don't explicitly need to state them.",
			"So for example, this here, the number 28, is a type int.",
			"It's an integer.",
			"A number like 1.5 has a decimal in it.",
			"It's a floating point number.",
			"So that, in Python, is what we might call a float type.",
			"Any type of text, something like the word",
			"\"hello\" wrapped in either double quotation marks or single quotation",
			"marks--",
			"Python supports both-- is what we would call the str type, short for string.",
			"We also have a type for Boolean values, things",
			"that can be either true or false.",
			"In Python, those are represented using a capital T, true, and a capital F,",
			"false.",
			"Those are of type bool.",
			"And also, we have a special type in Python",
			"called the none type, which only has one possible value, this capital N, none.",
			"And none as a value we'll use whenever we",
			"want to represent the lack of a value somewhere.",
			"So if we have a function that is not returning anything,",
			"it is really returning none, effectively.",
			"And so you might imagine that none can be useful",
			"if ever you want a variable to represent the absence of something, for example.",
			"So lots of different possible types, and there are more types than just this.",
			"But here's a sampling of the possible variables and types that",
			"might exist inside of this language.",
			"So now let's try and actually use a variable",
			"in order to do something a little bit more interesting inside of our program.",
			"And we'll write a program that's able to take input from the user",
			"in order to say hello to them, for example.",
			"So I'll create a new file.",
			"We'll call it name.py.",
			"And to start, I'd like to prompt the user for input.",
			"I'd like to prompt the user to, for example, type in their name.",
			"So how might we do that?",
			"Well, just as there is a Print function that",
			"is built into Python that just prints out whatever the argument happens",
			"to be, Python also has a built in function",
			"called Input that prompts the user for input and asks them just",
			"type in some input.",
			"So let's provide some input and ask the user to type in their name,",
			"for example.",
			"And then we can save the result, the output",
			"of that function inside of a variable.",
			"And in this case, I'll save it inside of a variable that in this case",
			"also just happens to be called Name.",
			"Now we can run the program.",
			"I can run the program by going into my terminal and typing Python name.py.",
			"I'll press Return.",
			"And we'll see the program prompts me to type in my name.",
			"I see name colon space, which is that string I provided as the argument",
			"to the input function.",
			"And this now prompts me to type in my name, so I will.",
			"And after that, nothing seems to happen so far.",
			"So now I'd like to do something with that input.",
			"I typed in my name.",
			"I'd like to say, like, hello, for example to myself.",
			"So I'll go back into this program.",
			"And now what I can do is I can say print hello comma.",
			"And then I can say plus name.",
			"This plus operator in Python does a number of different things.",
			"If I have two numbers, it'll add those two numbers together.",
			"But with two strings, plus can actually concatenate, or combine,",
			"two strings together.",
			"So I can combine hello comma space with whatever the value of name",
			"happens to be.",
			"So now I'll rerun this program.",
			"Python name.py.",
			"Type in my name.",
			"And now we see \"hello, Brian\" as the output of the program.",
			"So this is one way that you can manipulate strings in Python.",
			"Another way that's quite popular in later versions of Python 3",
			"is a method known as using f strings, short for formatted strings.",
			"And in order to use f strings in Python, it's",
			"going to be a similar but slightly different syntax.",
			"Instead of just having a string in double quotation marks,",
			"we'll put the letter f before the string.",
			"And inside of the string, I can now say hello comma--",
			"and then if in a formatted string, if I want",
			"to plug in the value of a variable, I can do so",
			"by specifying it in curly braces.",
			"So what I'll say here is, inside of curly braces, name.",
			"And so what's going on here is I am telling this formatted string",
			"to substitute right here the value of a variable.",
			"So I prompted the user for input to type in their name.",
			"We took their name, saved it inside of this variable called name.",
			"And now here in this print statement on line two,",
			"I'm printing out a formatted string that is hello comma.",
			"And then in curly braces here, I'm saying plug",
			"in the value of the variable name.",
			"And so that is going to have the effect of taking whatever name was",
			"provided as input and printing it out.",
			"And this is a slightly more efficient way",
			"of being able to quickly create strings by plugging",
			"in values into those strings.",
			"So now I'll see the exact same behavior if I run Python name.py",
			"and prompt it to type in my name.",
			"I'm like, Brian.",
			"And then I see the result, \"hello, Brian\" for example.",
			"And so those are a couple of ways that we",
			"can deal with strings, manipulating strings, and combining strings",
			"using this technique.",
			"So in addition to variables, Python also supports all of the same other features",
			"that are core to many procedural programming languages,",
			"such as conditions, for example.",
			"So let's take a look at an example now of seeing whether a number is positive,",
			"or negative, or zero, for example.",
			"So I'll create a new file that I'll call conditions.py.",
			"And inside of conditions.py, I'll first prompt the user to type in some input.",
			"I'll say input number to mean type in a number.",
			"And we'll save that input inside of a variable that I'm just going to call n.",
			"And now I can ask questions.",
			"I can say something like if n is greater than zero.",
			"Then print n is positive.",
			"And so what's going on here is I have a Python condition.",
			"And the way a Python condition works is it",
			"begins with this keyword, a keyword like if, followed by a Boolean",
			"expression, some expression that's going to evaluate to true, or false,",
			"or something kind of like true or false.",
			"We can be a little bit loose about that, as we may see later.",
			"And then a colon means, all right, here is the beginning",
			"of the body of the if statement.",
			"And in Python, the way we know that we're",
			"inside the body of an if statement or inside the body of any other block",
			"of code is via indentation.",
			"So in some languages, like C, or in languages like HTML,",
			"which we saw a couple of lectures ago, the indentation",
			"isn't strictly required by the computer to be able to parse and understand",
			"what's inside the program.",
			"In Python, it's different.",
			"The indentation is required because the indentation",
			"is how the program knows what code is inside of the if statement",
			"and what code is outside of the if statement.",
			"So we have if n is greater than zero colon.",
			"And then everything indented underneath the if,",
			"is all of the body of the if statement.",
			"It is the lines of code that will execute",
			"if this condition, this Boolean expression and greater than zero,",
			"happens to be true.",
			"So if end is greater than zero, will print out n is positive.",
			"And then we can add an additional condition.",
			"I can say something like--",
			"well, I could say something like else print n is not positive.",
			"But I can be a little bit more specific than that.",
			"Here is a sort of two branches.",
			"One if n is greater than 0, and one else case",
			"to handle all of the other possible scenarios.",
			"But really, what I'd like to do is perform a second check.",
			"In other languages, this might be called an else-if.",
			"Like, if this condition is not true but this other condition is true.",
			"Python abbreviated this to just elif--",
			"E-L-I-F, just short for else-if.",
			"So I can say elif n is less than zero, then let's go ahead and print out n",
			"is negative, and else print n is zero,",
			"So the idea here now is that if n is greater than zero,",
			"we perform some task elif--",
			"in other words, if it's not greater than zero--",
			"then we check to see if it is less than zero.",
			"In which case, we print out that n as negative.",
			"Else, if neither of those two conditions are true, it's not positive",
			"and it's not negative, the only remaining possibility",
			"is that n is zero.",
			"So we can print out that n zero.",
			"And so we might like for this program to work.",
			"But watch what happens if I now try and run conditions.py.",
			"Even though logically in our heads and looking at it now,",
			"it probably seems pretty logical, if I run Python conditions.py and type",
			"in a number--",
			"I'll type in the number five, for example, just see what happens.",
			"All right, something weird just happened.",
			"And this is our very first Python exception,",
			"an error that happens because something didn't quite",
			"go right inside of our Python program.",
			"And over time, you'll begin to learn how to parse this exception,",
			"and understand what it means, and where to begin to debug.",
			"But learning how to read these exceptions",
			"and figure out how to deal with them is definitely",
			"a very valuable skill on your way to becoming a Python developer.",
			"And so let's see if we can figure out what this exception to saying.",
			"Oftentimes, I start by looking at the bottom.",
			"I see that there is a type error.",
			"That is the type of the exception that has happened.",
			"There are a lot of exceptions that can go wrong in Python, things",
			"that we can do that cause errors.",
			"In this case, it's a type error, which generally",
			"means that there's some mismatch of types,",
			"that Python expected something to be of one type",
			"but it turned out to be a different type.",
			"So let's try and understand what this might be.",
			"It says greater than sine, not supported between instances of stir,",
			"short for string, and int.",
			"So what does that mean?",
			"Well, I guess it means that the greater than symbol",
			"that checks if one thing is greater than another",
			"doesn't work if you're comparing a string to an integer.",
			"And that's probably pretty reasonable.",
			"It doesn't really make sense to say a string is greater than or less",
			"than an integer.",
			"When we're talking about greater than or less than,",
			"usually we're talking about numbers.",
			"So they should both be integers, for example.",
			"So why do we think that greater than is comparing a string and an integer?",
			"Well, now we can look a little bit further up",
			"at the trace-back, which will show which parts of the code",
			"are really causing this problem.",
			"And in this case, the trace-back is pretty short.",
			"It's just pointing me to a single line of a single file.",
			"It's saying in the file conditions.py on line three,",
			"here is the line that triggered the exception-- if n is greater than zero.",
			"So, what's the exception here?",
			"Well, zero is obviously an integer because that just is an integer.",
			"And so if greater than thinks that it's comparing a string with an integer,",
			"then n somehow must be a string.",
			"Even though I typed in the number five, it must still think n is a string.",
			"So why might that be?",
			"Let's take a look at the code again and see",
			"if we can figure out what's going on.",
			"Well, it seems that this input function doesn't care what you type in.",
			"It's always going to give you back a string.",
			"n somehow is ending up as a string, which",
			"is pretty reasonable because the input function has",
			"no idea whether I typed in a number, or whether I typed in a letter,",
			"or I typed in other characters altogether.",
			"So input doesn't know to give back its data in the form of an int,",
			"or in the form of a float, or in any other form.",
			"So by default, it's just going to return a string.",
			"What characters did the user type in as their input?",
			"So what I'd like to do now, in order to make this program work",
			"the way I want it to, is take this and convert it into an integer,",
			"or cast it into an integer, so to speak.",
			"And the way that I can do that is by using a function in Python",
			"called int, that takes anything and turns it into an integer.",
			"So here, I can say int--",
			"and then as the argument to the int function, the input to the int",
			"function, I'm just going to include this whole expression, input number.",
			"So I'm going to ask the user to input a number.",
			"They type in some text.",
			"The input function gives me back a string.",
			"And that string is going to serve as the input to the int function, which",
			"then gets saved inside of this variable called n.",
			"So now that we know that n is indeed an integer,",
			"let's try and run this program again.",
			"I'll go back into the terminal, run Python, conditions.py,",
			"I'm asked to type in a number.",
			"I type in a number like five.",
			"And all right, that still doesn't seem to have worked.",
			"And it didn't work because I didn't save the file.",
			"So I'll go ahead and save the file, try it again, type in a number.",
			"And now we see that indeed, n is positive.",
			"We get no more exception.",
			"We were able to run the code successfully and see",
			"that the value of n is positive.",
			"And I could try this again to test the other conditional branches.",
			"Type in negative one for example to see that n is negative.",
			"And otherwise if it isn't either positive or negative,",
			"then we know that n is zero.",
			"And so here was our first exposure to conditions in Python,",
			"the ability to have multiple different branches",
			"and do different code depending on some expression",
			"that we're going to evaluate to either be",
			"a true expression or a false expression.",
			"All right, so let's take a look at some of the other features that",
			"are going to be present inside the Python language.",
			"And one of the most powerful features of Python",
			"are its various different types of sequences,",
			"data types that store values in some sort of sequence",
			"or some collection of values altogether.",
			"So I go ahead and create a new file that we'll call sequences.py.",
			"And there are a number of different types of sequences",
			"that all obey similar properties.",
			"But one of the types of sequences is the type we've already seen,",
			"which is just a string, for example.",
			"So if I have a name, and the name is something like Harry, for instance,",
			"and this sequence allows me to access individual elements inside",
			"of the sequence.",
			"And in order to do so, it's much like an array in other languages,",
			"if you've experienced them before.",
			"But I can print out name square bracket zero.",
			"This square bracket notation takes a sequence,",
			"some ordered sequence of elements, and gets",
			"me access to one particular element inside of that sequence.",
			"And so if I have a string-like name and I say name square bracket zero,",
			"the effect of that is going to be take this long sequence",
			"and get me the zero-th element.",
			"In many programming languages and in programming more generally,",
			"we often start counting things at zero.",
			"So the very first item in the sequence is",
			"item zero, the second item is item one.",
			"So it's easy to get slight off by one errors there.",
			"But just know that item zero of the name should be the first character",
			"in the name.",
			"And I can see that for sure, if I run Python--",
			"I'll save this file, run Python sequences.py.",
			"And what I get is just the first character of Harry's name, which",
			"in this case is the letter H.",
			"If I instead asked to print out character one, which",
			"would be the second character in the name, if we run the program,",
			"now I get the letter a.",
			"And this type of indexing works for many different types of sequences,",
			"not just a string, which so happens to be a sequence of characters,",
			"but other types as well.",
			"Python, for example, has a type for lists of data.",
			"So if I have a sequence of any type of data that I want to store,",
			"I can store that information inside of a list in Python.",
			"So maybe instead of storing one name, I have",
			"multiple names that I want to store.",
			"So I want to store names like Harry, and Ron, and Hermione, for example.",
			"So now I have three names all stored in the sequence inside of a Python list.",
			"And I can-- you know, I can print out all of the names,",
			"for example, just to print out all of the names",
			"to see what the value of the variable names is equal to.",
			"And we'll see that when I do that, I get a printout",
			"of the contents of that list.",
			"Harry, Ron, Hermione, in that particular order.",
			"But you could also, much as you could index into a string, index into a list",
			"to say get me just the very first item inside",
			"of this names list, which in this case, when I run the program,",
			"is going to just be Harry.",
			"So there are a number of different sequence types",
			"that you can use in order to represent data.",
			"Another one just so happens to be called a tuple.",
			"And a tuple is often used if you have a couple of values",
			"that aren't going to change but you need to store",
			"a pair of values like two values together,",
			"or three values together, or something like it.",
			"You might imagine that if were writing a program to deal",
			"with graphing in two dimensions, for example,",
			"you might want to represent a point as an x value and a y value.",
			"And you could create two variables for it.",
			"I could say, you know, let me do, say, a coordinate",
			"x is going to be equal to 10.0.",
			"And coordinate y is equal to 20.0.",
			"But now I'm creating two variables for what's really one unit that",
			"just so happens to have two parts.",
			"And so to represent this, we can use a tuple in Python,",
			"and just say something like coordinate equals 10.0 comma 20.0.",
			"So whereas in lists we use square brackets to denote",
			"where the list begins and where the list ends, in a tuple,",
			"we just use parentheses to say we're grouping a number of values together,",
			"we're grouping one value, 10.0, with a second value, 20.0.",
			"And now we can pass around these two values as a single unit",
			"just by referencing them using the single name, which in this case",
			"is coordinate.",
			"So there are a number of different types of these various different sequences.",
			"And some of those sequences we'll take a look at are these data structures here.",
			"So list, for example, is a sequence of mutable values,",
			"which we took a look at.",
			"And mutable, just meaning we can change the elements in the list.",
			"If I have a list, I can add something to the end of the list,",
			"I can delete something from the list, I can modify the values inside the list.",
			"A tuple, on the other hand, is a sequence of immutable values",
			"those values can't change you can't add another element to the existing tuple.",
			"You'd have to create a new tuple in order to do so.",
			"And there are other data structures that exist as well.",
			"A couple that we'll take a look at in a moment",
			"include sets, which are a collection of unique values.",
			"So if you're familiar with sets from the world of mathematics,",
			"it's a very similar idea, that whereas a list in a tuple",
			"keeps things in a particular order, a set",
			"does not keep things in any particular order.",
			"It's just a collection.",
			"And in particular, all of the values need to be unique.",
			"In a list or in a tuple, you might have the same value",
			"appearing multiple times.",
			"And in a set, every value appears exactly once.",
			"And there are some advantages to sets, some ways",
			"that you can make your programs more efficient",
			"by using sets if you know that you just need a collection,",
			"if you don't care about the order, if something is only",
			"going to show up exactly once at most, then",
			"you can use a set to potentially make your programs a little more efficient",
			"and a little more elegantly designed.",
			"And finally, one other data structure that's quite powerful",
			"and that's going to come up a number of times during this course",
			"is a dictionary.",
			"In Python, shortened to just a dict, which",
			"is the collection of what we're going to call key-value pairs.",
			"And the way I like to think of this as with an actual physical dictionary",
			"that you might find in the library that maps words to their definitions.",
			"In a physical dictionary, you open up the dictionary and you look up a word",
			"and you get the definition.",
			"And a dict in Python is going to be very similar.",
			"It's going to be a data structure where I can look something up",
			"by one keyword or one value and get some other value as a result.",
			"We call the thing that I'm looking up the key.",
			"And we call what I get when I do the looking up the value.",
			"So we keep pairs of keys and values.",
			"In the case of an actual dictionary in the real world,",
			"the key is the word that we want to look up and the value is its definition.",
			"But we can use this more generally in Python anytime we want to map something",
			"to some other value such that we can very easily look up that value",
			"inside of this data structure.",
			"So we'll see examples of dictionaries as well.",
			"So let's now explore the first of these data structures, these lists,",
			"to explore what we can do by taking advantage",
			"of the features that are given to us by a Python list, for example.",
			"So we'll go ahead and create a new program that I'll call lists.py.",
			"And here, I'm just going to create a list of names.",
			"So names equals Harry, Ron, Hermione, and Ginny, for example.",
			"And as I start to write multiple lines of code,",
			"especially as my Python programs start getting longer,",
			"it can be a good idea to document what it is that I'm doing.",
			"So I can say, let me add a comment to this particular line of code",
			"just so I know what it is that I've done in this line of code.",
			"And in Python, there are a couple of different ways to create a comment.",
			"But the simplest way is just to use the pound sign or the hashtag.",
			"As soon as you include that, everything after that for the remainder",
			"of the line is a comment.",
			"The interpreter is going to ignore that comment.",
			"You can say whatever you want.",
			"It's more for you, the programmer and for someone",
			"who's reading your program to be able to look at the program,",
			"understand what it's saying, and figure out what they need to do about it.",
			"So I can just say, define a list of names,",
			"for example, just to make it clear to me what it is that I have done inside",
			"of this line of code.",
			"So I can print out that list of names, as we've done before.",
			"And we'll see that when I print out that list of names, what I get is--",
			"oh, let me run list.py.",
			"What I get is this list--",
			"Harry, Ron, Hermione, and Ginny.",
			"But I could also print out, as we've seen before,",
			"just the first of those names.",
			"Say, you know, print out just names square bracket zero, in which case",
			"I'm going to get just Harry, for example.",
			"But now, recall that a list is mutable.",
			"I can modify the elements that happen to exist inside of this list.",
			"So I could say names.apped a new name, something like Draco, for example.",
			"And so lists have a number of built in methods or functions which",
			"are functions that I can run on an existing list",
			"to access particular elements of the list",
			"or to modify the list in particular ways.",
			"And in the case of a list, the append method",
			"is a method or function that I can run that just adds",
			"a value to the end of an existing list.",
			"So I've added Draco to the list.",
			"And there are a number of other methods that I can use on lists, one of which",
			"is, for example, sorting a list.",
			"No need to write your own sorting algorithm in order",
			"to sort a sequence of objects.",
			"In Python, there is a built-in sort method",
			"that works on lists where I can just say names.sort.",
			"That will automatically sort everything in the list.",
			"And now if I print out all of those names--",
			"go to print them out and get rid of this old print statement--",
			"now we see that we get five names that are printed out",
			"because I had four elements originally in this list",
			"but then I added a fifth one.",
			"And notice now that they are actually in alphabetical order,",
			"starting with Draco, ending with Ron because I",
			"was able to sort the list by modifying the order in which those elements",
			"actually show up.",
			"And so list can definitely quite powerful anytime",
			"you need to store elements in order, a list",
			"is definitely a useful tool that Python gives to you.",
			"If you don't care about the order of the elements though,",
			"and if you know that all the elements are going to be unique,",
			"then you can use a set, which is another Python data",
			"structure that works in similar ways.",
			"The syntax is slightly different.",
			"So let's do an example with those.",
			"I'll create a new file, call it sets.py.",
			"And let me first create an empty set.",
			"And we can do that by just saying s equals--",
			"s is going to be the variable that will store my set.",
			"And I'll say set and then parentheses.",
			"That will just create an empty set that just so happens",
			"to have nothing inside of it now we'll add some elements to the set",
			"so I can say s.add.",
			"Let's add the number one to the set.",
			"Let's add the number two.",
			"Let's add that number three.",
			"And let's add the number four.",
			"And then we can print out the set to see what happens to be inside the set",
			"right now.",
			"Now when I run this program, Python sets.py, we see that inside the set",
			"are four values, one, two, three, and four.",
			"They happen to be in order.",
			"But sets are not naturally ordered.",
			"They're not going to always keep track of what the order is going to be.",
			"But I can add--",
			"for example, if I add three again to the set, now I've added three to the set",
			"twice.",
			"I added one, two, three, four, and then three again.",
			"When I print out the contents of the set,",
			"it still just contains the elements one, two, three, four.",
			"No element ever appears twice in the set,",
			"following with the mathematical definition",
			"of a set where no element ever appears more than once inside of a set.",
			"You can also remove elements from sets as well.",
			"So if I wanted to remove the number two from the set for example,",
			"I could say s.remove2 and then print out s",
			"to say print out whatever happens to be inside of that set now.",
			"And now when I rerun this program, I only",
			"get one, three, and four because I removed two from the set.",
			"So sets allow you to add to them, remove from them.",
			"And also, all sequences, whether they be strings, or lists, or sets,",
			"allow you to get how many elements are in the set",
			"by taking advantage of a function built into Python called len.",
			"So len we'll give you the length of a sequence, so the number of items",
			"inside of a list, or the number of characters inside of a string,",
			"or the number of elements inside of a set.",
			"And so, if I wanted to print out how many elements are in the set,",
			"I might do something like this.",
			"In a formatted string, say the set has some number of elements.",
			"And how do I know how many elements?",
			"Well, again, inside of these curly braces,",
			"I can include any expression in Python that I would",
			"like to substitute into this string.",
			"So how many elements are in the set?",
			"I can get that by calculating len of s.",
			"So what I've done here is I've said with len of s,",
			"I would like to calculate the length of the set, s, in other words,",
			"how many elements are actually inside of that set.",
			"And then using this curly brace notation, I'm saying, take that number",
			"and plug it into this string so we can see the set",
			"has some number of elements, for example.",
			"So now if I run this program, Python sets.py,",
			"I see that I get these three elements that happen to be inside of the set",
			"right now, which is one, and then three, and then four.",
			"And then it tells me that the set has three elements inside",
			"of it, which is the number of elements that are in the set right now.",
			"So now we've seen a number of different language features inside of Python.",
			"We've seen variables.",
			"We've seen conditions so that we can conditionally do things-- if something",
			"is true, if something else is true.",
			"And we've seen some of the data structures",
			"that are core to the way Python works-- lists, and sets, and tuples,",
			"and other data structures that can be helpful too.",
			"And now let's take a look at another feature of the Python programming",
			"language common to many programming languages, the idea of looping.",
			"If I want to be able to do something multiple times,",
			"I'll go ahead and create a new file called loops.py.",
			"And let's just create a simple loop.",
			"The simplest loop we could create in Python",
			"is just one that's going to count a bunch of numbers.",
			"So in order to do that, what I could say is something like this.",
			"For i in one, two, three, four, five--",
			"or maybe I want to count zero, one, two, three, four, five, just",
			"to start counting at zero--",
			"print i.",
			"And so here's the basic syntax for a Python loop.",
			"And here's what seems to be going on.",
			"Over here on the very first line, I have a Python list",
			"as denoted by those square brackets that contains six numbers--",
			"zero, one, two, three, four, five.",
			"And now I have a for loop-- for i in this list.",
			"And the way Python interprets this is to say, go through this list one",
			"element to the time.",
			"And for each element, call that element i.",
			"You could've called it anything.",
			"But in this case, i is just a conventional choice",
			"for a number that keeps incrementing.",
			"And we're going to print out now the value of i",
			"for each iteration of this loop.",
			"So we try this out now and run Python loops.py.",
			"We see zero, one, two, three, four, five.",
			"Great, it printed out all of the numbers from zero to five one at a time.",
			"In practice though, if we wanted to count all the way up to five",
			"or print six numbers for example, this is fine for now.",
			"But if we wanted to print like 100 numbers or 1,000 numbers,",
			"this is going to start to get tedious.",
			"So Python has a built-in function called range",
			"where I can say for i in range six to achieve exactly the same thing.",
			"Range six means get me a range of six numbers.",
			"So if we start at zero, it's going to go from zero all the way up to five.",
			"And then we can print out each one of the elements inside of that sequence.",
			"So if I rerun in Python loops.py, we get zero, one, two, three, four, five.",
			"So loops enable us to loop over any type of sequence.",
			"So if the sequence is a list, I can say something like,",
			"if I have a list of names like Harry, and Ron, and Hermione,",
			"and this is my list of names, I can have a loop that",
			"says that for each name in my list of names, let's print out that name,",
			"for example.",
			"So we have a list.",
			"The list is called Names.",
			"We're looping over it one element at a time and printing it out.",
			"Now if I run the program, I see three names printed one on each line.",
			"And you can do this for other sequences as well.",
			"Maybe I have just a single name that is called Harry.",
			"And now I can have a line that says, you know, for every character in that name,",
			"print the character.",
			"If the name is the sequence, is a sequence of individual characters",
			"because it's a string, then when I loop over to that string,",
			"I'll be looping over each individual character in that string.",
			"So I can run the program and see one on each line,",
			"each of the letters that just so happens to be inside of Harry's name.",
			"So now we've seen conditions.",
			"We've seen loops.",
			"And we've seen a number of different data structures.",
			"We've seen lists, and sets, as well as tuples.",
			"The last important data structure that we're going to be taking a look at",
			"are Python dictionaries which, as you'll recall,",
			"are some mapping of keys to values.",
			"If I want to be able to look something up,",
			"I can use a Python dictionary just as a data structure to be",
			"able to store these sorts of values.",
			"So I'll create a new file called dictionaries.py.",
			"And maybe I want to create a dictionary that",
			"is going to keep track of, say, what house each of the students at Hogwarts",
			"happen to be in.",
			"So I might have a dictionary called Houses.",
			"And the way we specify a dictionary is by specifying",
			"a key colon of value when we're defining a dictionary for the first time.",
			"So I might say Harry colon Gryffindor and then Draco colon Slytherin,",
			"for example.",
			"And so what this line of code is doing is it is creating a new dictionary.",
			"This dictionary is called Houses.",
			"And inside this dictionary, I have two keys, two things that I can look up.",
			"I can look up Harry or I can look up Draco.",
			"And when I look up those keys, I get the value that follows their colon.",
			"So after Harry, if I look up Harry, I get Gryffindor If I look up Draco,",
			"I get Slytherin, for example.",
			"",
			"So now if I wanted to print out what house Harry is in,",
			"I can print out houses square brackets Harry.",
			"So I can here, say, I would like to print out--",
			"take the Houses dictionary.",
			"And the square bracket notation is how I look",
			"something up inside of a dictionary.",
			"It's similar to how we use square brackets to look up a specific element",
			"inside of a list to say, like, get me element zero or element one.",
			"In this case, we're using a Python dictionary",
			"to say, take the Houses dictionary and look up Harry's value, which",
			"hopefully should be Gryffindor.",
			"And we'll see that if we look up run Python dictionaries.py,",
			"we do get Gryffindor as the value of Harry's house.",
			"We can add things to this dictionary as well using the same syntax.",
			"In the same way that I use square brackets to access the value",
			"inside of a dictionary, if I want to change the value in a dictionary",
			"or add something new to it, I could say houses and Hermione,",
			"and say that Hermione is also in Gryffindor, for example.",
			"And so this line of code here says take the Houses dictionary",
			"and look up Hermione in the Houses dictionary.",
			"And when you do, that should be set equal to this value here, Gryffindor.",
			"So we took that value and we are going to assign it to Hermione inside",
			"of the dictionary, such that now if we wanted to,",
			"we could print out Hermione's house as well, run the program,",
			"and see that Hermione is also in Gryffindor.",
			"So anytime we want to be able to map some value to some other volume,",
			"whether we're mapping people to what house they happen to be in",
			"or we're mapping users to some information about those users",
			"inside of our web application, dictionaries",
			"are going to be very, very powerful tools for us to be able to do that.",
			"The next Python language feature we'll take a look at",
			"are functions in Python that are going to be",
			"some way for us to write our own functions that take an input",
			"and produce some output.",
			"We've already seen a number of different functions that already exist in Python.",
			"We've seen the input function that takes an input from the user.",
			"We've seen the print function that takes some text or some other information",
			"and prints it to the screen.",
			"But if we want to define our own functions, we can do so as well.",
			"So here I'll go ahead and write a new program called functions.py.",
			"And let's write a function that takes a number and squares it.",
			"So the square of 10 is 10 times 10, or 100.",
			"I would like a function that very easily takes a number and returns its square.",
			"The way I define a function in Python is using the def keyword.",
			"Def, short for define.",
			"And here I can say, let me define a function called square",
			"and then, in parentheses, what inputs it takes.",
			"In this case, square just takes a single input that I'm going to call x.",
			"But if there were multiple inputs, I could separate them with commas,",
			"like x, y, z for a function that took three inputs, for example.",
			"But in this case, there is just a single input, x.",
			"And the square function could have any logic",
			"in it indented underneath the square function.",
			"But ultimately, this function is fairly simple.",
			"All it's going to do is return x times x, x multiplied by itself.",
			"And now, if I want to print out a whole bunch of squares of numbers,",
			"I can do so.",
			"I can say for i in range, let's say, 10, let's print out that the square of i",
			"is square i.",
			"So let's try and parse out what's going on here.",
			"Line four says for i in range 10, do some loop",
			"10 times, looping from zero all the way up to nine.",
			"And for each time we loop, we're going to print something out.",
			"We're going to print out the square of--",
			"plug in the value of i here--",
			"is-- plug in the value of calling our square function using i as input.",
			"So that is going to have the result of running this loop 10 times",
			"and printing out this line 10 different times,",
			"each with a different value of i.",
			"So I can run Python functions.py.",
			"And here's what I see.",
			"The square of zero is zero.",
			"Square of one is one two is four, so on and so forth,",
			"all the way up to the square root of nine is 81.",
			"So we've now written a function and been able to use it.",
			"But ideally, when we write functions, we'd",
			"like to not just be able to use them in the same file,",
			"but for others to be able to use them as well.",
			"And so how can we do that?",
			"Well, in order to do that, you can import functions from other Python",
			"modules or files, so to speak.",
			"So let me create a new file called squares.py, for example.",
			"So that instead of running this loop here, let's",
			"instead run this loop in squares.py, again,",
			"separating out different parts of my code.",
			"I have one file that defines the square function inside of functions.py",
			"and then another file called squares.py, where I'm actually",
			"calling the square function.",
			"Now if I try to run Python squares.py, you'll notice I'll run into an error.",
			"Here's another error you'll see quite frequently.",
			"It's a name error, another type of exception.",
			"Which here says the name square is not defined,",
			"meaning I'm trying to use a variable, or a function name,",
			"or something else that doesn't actually have a definition.",
			"I've never said what square is.",
			"And that's because by default, Python files don't know about each other.",
			"If I want to use a function that was defined inside of another file,",
			"I need to import it from that file.",
			"And I can do so like so.",
			"I can say, from functions import square.",
			"Functions was the name of this file, functions.py.",
			"And I'm saying from that Python module, I",
			"would like to import the square function as a function that I would like to use.",
			"Now I can run Python squares.py.",
			"And we get the output that we expect--",
			"no more exception.",
			"I've now been able to import something from another module",
			"and access it this way.",
			"So this is one way to import, to literally",
			"say from functions import a square function,",
			"import a particular name that is defined inside of functions.py.",
			"Another way I could have done this is just to say import functions, just",
			"import that whole module.",
			"But then I would need to say-- instead of just square,",
			"I would need to say functions.square, to mean go inside the functions module,",
			"and get the square function, and run that function.",
			"And this would operate in exactly the same way.",
			"So, a couple of different options--",
			"I either import the entire module, in which case",
			"I use this dot notation to, say, access a particular part of that module.",
			"Or I say from functions import square to just",
			"import the name square into this file entirely so that I can just",
			"use the word square whenever I want to.",
			"And this works not just for modules that we have written,",
			"but also Python comes with the number of built-in modules.",
			"If you want to write programs that interact with CSV files, which",
			"are a spreadsheet file format, I can import Python's built-in CSV module",
			"to get access to a whole bunch of CSV-related features.",
			"There are a whole bunch of math-related features",
			"you can get by importing the math module, so on and so forth.",
			"And there are additional Python modules and packages",
			"that you can install that other people have written.",
			"And then you just import them when the time comes.",
			"And next time, as we take a look at Django, this is one of the techniques",
			"that we're going to be looking at, is using",
			"functions that have been written by people that are not ourselves.",
			"So that now is modules and how we can use",
			"modules to be able to import functions in order to allow for certain behavior.",
			"And this is one way that we can program using the Python programming language.",
			"But another key technique that Python supports",
			"that are supported by a number of other programming languages",
			"as well is an idea of object-oriented programming, a special type",
			"of programming or programming paradigm, so to speak,",
			"which is a way of thinking about the way that we write programs.",
			"In an object-oriented programming, we think",
			"about the world in terms of objects where",
			"objects might store information, store some data inside of them,",
			"and also support the ability to perform types of operations,",
			"some sort of actions, or methods, or functions, as we might call them,",
			"that can operate on those objects.",
			"So now we're going to take a look at some of the object-oriented capacities",
			"that the Python programming language is going to give us the ability to have.",
			"So, Python comes with a number of built in types.",
			"It has types for lists.",
			"It has types for sets and so on and so forth.",
			"Let's imagine, though, that we want to create a new type in Python,",
			"some way of representing other types of data.",
			"For example, two-dimensional points, things",
			"we've talked about before-- something that has an x value and a y value.",
			"Now, as we've already discussed, you could",
			"do this using a tuple, just using one number comma another number.",
			"But we could create an entire class of objects",
			"to be able to represent this data structure as well.",
			"And so that's what we'll take a look at now,",
			"is how to create a class in Python.",
			"So I'll create a new file called classes.py.",
			"And all a class is, is you can think of a class",
			"as a template for a type of object.",
			"We are going to define a new class called Point.",
			"And then after we've defined what a point is,",
			"we will be able to create other points.",
			"We'll be able to create points to store x and y values, for example.",
			"And so what do we need in order to create a class?",
			"Well, we need some way to say that when I create a point, what should happen?",
			"And in Python, this is defined using what's",
			"called a magic method called underscore underscore init.",
			"And underscore underscore init is a method or function that",
			"is going to automatically be called every time that I",
			"try to create a new point.",
			"And this function takes a couple of arguments.",
			"All functions that operate on objects themselves, otherwise known as methods,",
			"are going to take the first argument called self.",
			"And this argument self represents the object in question.",
			"And this is going to be important because we don't just",
			"want a single variable called x to store the points x coordinate",
			"or a single variable called y to store the y coordinate",
			"because two different points might have different x and different y values.",
			"And we want to be able to store those separately.",
			"And we're going to store them inside of the object itself.",
			"So this variable self references the object",
			"that we are currently dealing with.",
			"And it might change depending on which point we",
			"happen to be interacting with at any given time.",
			"What other inputs does a point need?",
			"Well, a point also needs an x value and a y value.",
			"So when we create a point, we're going to provide to that point",
			"an x value and a y value.",
			"Now, what do we need to do in order to store",
			"all this data inside of the point?",
			"Well, recall that self is representing the point itself.",
			"And so if we want to store data inside of that point",
			"and allow that point to store its own x and y values,",
			"then we need to store that data inside of the self, so to speak.",
			"And in order to do that, we can use this dot notation to say self.x",
			"is equal to whatever this input x happens to be.",
			"And self.y is equal to whatever this argument y happens to be.",
			"And these values, x and y, they can be called anything.",
			"They could just be called like input one and input two, for example.",
			"And then you would just reflect them here.",
			"The important thing is that these two input values",
			"are being stored inside of the point itself",
			"in properties that we're going to call x and y.",
			"",
			"All right, so that was a little bit abstract.",
			"But now let's see how we could actually use this.",
			"If I want to create a new point called p, I can say p equals point.",
			"And then the self argument is going to be provided automatically.",
			"I don't need to worry about that.",
			"But I do need to provide input one and input two--",
			"the x value and the y value.",
			"So I'll go ahead and provide an x value of two and a y value of eight,",
			"for example.",
			"So now I've created this point.",
			"And now that I have a point, I can print out information about the point.",
			"I can print out the x value of the point.",
			"And I can print out the y value of the point.",
			"Again, I'm using this dot notation to say, go into the point",
			"and access data that is stored inside of that point.",
			"Access its x value and access its y value.",
			"So now when I run this program, Python classes.py, what I get",
			"is two on the first line, that is the x value, and then",
			"eight on the second-- or eight on the second line.",
			"That is the y value.",
			"So what we have here is a function called",
			"init that creates a point by storing the two inputs inside of the object,",
			"inside of a property called x and a property",
			"called y, such that later I can create a point which",
			"calls this init function implicitly.",
			"And after we've created the point, I can access the data inside of it.",
			"I can say print out whatever p.x is equal to,",
			"print out whatever p.y is equal to as well.",
			"So that was a fairly simple example of creating a class,",
			"just creating a class for representing a point, an x and a y value.",
			"Let's look at a more interesting example.",
			"Let's imagine that we're trying to write a program for an airline where",
			"the airline needs to keep track of booking passengers on a flight",
			"and making sure that no flight gets overbooked.",
			"We don't want more passengers on the flight",
			"than there is capacity on that flight.",
			"So let's define a new class that we're going to call flight.",
			"And this time, the init method is just going",
			"to take a single argument other than the self, which is the capacity.",
			"Every flight needs some sort of capacity to know",
			"how many people can fit on the plane.",
			"And so I'll store that inside of a value called self.capacity equals capacity.",
			"And what other information do we need to store about a flight?",
			"Well, a flight has a capacity.",
			"And it also has all of the passengers on the flight.",
			"And so we could represent this in a number of ways.",
			"But we know that lists can be used in order to store a sequence of values.",
			"So we'll go ahead and just create a list that",
			"will store in self.passengers that is going to be equal to the empty list.",
			"So we start out with an empty list of passengers.",
			"So now if I want to create a flight, I can",
			"say flight equals and then Flight, that's the name of the class,",
			"and then provide a capacity.",
			"I can say capacity of three to mean three people can go",
			"in this flight, but no more than three.",
			"That is the capacity because that is the argument that is",
			"specified inside of this init function.",
			"And when I do so, I'm automatically going",
			"to get this empty list of passengers.",
			"So now let's think about what methods, or what functions,",
			"we might care about performing when it comes to a flight.",
			"So one reasonable function to add would be a function that says,",
			"all right, let's add a passenger to the flight",
			"if I want someone new to go on the flight.",
			"So how might it go about doing that?",
			"Well, let's define a new method, also known as a function,",
			"to this flight class called Add Passenger.",
			"This method can be called whatever we want.",
			"Because this is a method that's going to work on an individual object,",
			"we need some way of referencing that object itself.",
			"So we'll use the keyword self again.",
			"And when we add a passenger, we need to add a passenger by their name.",
			"So I need to specify their name as well, such that now here, I",
			"want to add that name to the passengers list.",
			"How do I get access to the passengers list?",
			"Well, I have access to the self, the object of itself.",
			"And I store the passengers inside of self,",
			"in self.passenger, an attribute of this object.",
			"And self.passenger is a list that initially starts out as an empty list.",
			"But if I want to add something to the end of the list,",
			"we've already seen that in order to do that,",
			"I can say self-passengers.append name.",
			"So that adds in someone new to the end of this passengers list.",
			"Now, what could potentially go wrong here?",
			"Well, every time we call this Add Passenger function, what's",
			"going to happen is we are going to append to the end of this passengers",
			"list this name.",
			"But we haven't taken into consideration the capacity of the flight.",
			"Ideally, our Add Passengers function shouldn't",
			"let someone be added to a flight if the flight is already at capacity.",
			"So there are a number of things we could do here.",
			"We could just check it inside of this function.",
			"But just for good measure, let's create a new function.",
			"Let's add a new function called Open Seats that",
			"is going to return the number of open seats that are on the plane.",
			"Other than Self, there are no other inputs",
			"that we need to calculate how many open seats there are.",
			"The only thing we need to know in order to calculate open seats",
			"is we need to know the capacity minus however many passengers there are.",
			"Remember, self.passengers is our list of all the passengers.",
			"And any time we have a sequence to get the length of that sequence,",
			"I can say len, or length of that sequence,",
			"to say get me the number of passengers that there are.",
			"So now we have this function called Open Seats, which",
			"will return capacity minus the number of passengers",
			"and tell us how many open seats there are.",
			"And now in this Add Passenger function, I can add some additional logic.",
			"I can say if not self.open_seats.",
			"",
			"So this is equivalent to me saying in this case, like,",
			"if self.open_seats equals equals zero, meaning there are no open seats,",
			"a more Pythonic way, so to speak, of expressing this idea is just saying",
			"if not self.open_seats.",
			"In other words, if there aren't any more open seats, then what should we do?",
			"We should return.",
			"And maybe you might imagine this Add Passenger function returns true",
			"if it was able to successfully add a passenger and false otherwise.",
			"So in this case, I can return false to say, you know what?",
			"There aren't enough open seats.",
			"Let me return false from the function to indicate",
			"that there was some sort of error.",
			"But otherwise, if there are open seats, we can add the passenger",
			"and return true to mean that everything was OK,",
			"we were able to add the passenger successfully.",
			"So now we have these three functions--",
			"Init that creates a new flight, Add Passenger",
			"that adds a new passenger to that flight,",
			"and Open Seats, which tells us how many open seats there are.",
			"And now let's use those functions to actually add",
			"some passengers to this flight.",
			"Let me get a list of people.",
			"We'll say Harry, Ron, Hermione, and Ginny.",
			"And now let me loop over all of those people.",
			"For every person in that list of people, let's try to flight.add_passenger",
			"person.",
			"And we can save the result in a variable called success, for example.",
			"And then I can say if success, well, then",
			"let's print out that we added the person to flight successfully.",
			"But else, otherwise, let's print out no available seats for that person.",
			"So what's going on here?",
			"We have a list of people, four people.",
			"And for each of those people, we're going to try and add the passenger",
			"to the flight calling flight.add_passenger,",
			"calling this method, passing, as input, the person's name,",
			"and save the result true or false in this variable called Success.",
			"If success is true, we print out we've added them successfully.",
			"Otherwise, we print out there are no available seats for that person.",
			"So now we can try running this program.",
			"I'll run Python classes.py.",
			"And now we see we've added Harry, Ron, and Hermione to the flight",
			"successfully.",
			"But the flight had a capacity of three, which",
			"means there are no available seats for Ginny, which we get as the error",
			"message on the fourth line.",
			"But if you're really trying to optimize, you",
			"might notice you don't really need this variable.",
			"I could just take this entire expression,",
			"flight.add_passenger person, and put it in the condition itself.",
			"I can say, try and add a passenger.",
			"Add passenger will return true or false.",
			"And if it returns true, that means it was a success.",
			"And then I can print out that we've added the person to the flight",
			"successfully.",
			"So that is a brief look at object-oriented programming,",
			"this technique within Python and other programming languages",
			"to represent objects like this particular flight",
			"and then to manipulate those objects using methods like the Add Passenger",
			"method that takes a flight and adds people to it,",
			"at least as long as there is available capacity on that flight.",
			"It's one of the many powerful features of Python",
			"that we'll be definitely taking a look at later in the term",
			"and using as we go about building these web applications.",
			"Now, there are a couple of final examples",
			"that are just worth taking a look at just to give you",
			"some exposure to some of the other features that are available in Python.",
			"One thing that will be coming up soon is the idea of decorators.",
			"And just as we can take a value in Python like a number",
			"and modify the value, decorators are a way in Python of taking a function,",
			"and modifying that function, adding some additional behavior to that function.",
			"So I'll create a new file called decorators.py just",
			"to demonstrate what we can do with decorators.",
			"And the idea of a decorator is a decorator",
			"is going to be a function that takes a function of input",
			"and returns a modified version of that function as output.",
			"So unlike other programming languages where functions just exist on their own",
			"and they can't be passed in as input or output to other functions, in Python,",
			"a function is just a value like any other.",
			"You can pass it as input to another function.",
			"You can get it as the output of another function.",
			"And this is known as a functional programming paradigm,",
			"where functions are themselves values.",
			"So let's create a function that modifies another function by announcing",
			"that the function is about to run and that the function has completed run,",
			"just to demonstrate.",
			"So this Announce function will take, as input, a function f.",
			"And it's going to return a new function.",
			"And usually, this function wraps up this function",
			"f with some additional behavior, and for that reason,",
			"is often called a wrapper function.",
			"So we may call this wrapper to say that, all right, what",
			"is my wrapper function going to do?",
			"It's first going to print about to run the function just",
			"to announce that we're about to run the function.",
			"That's what I want my Announce decorator to do.",
			"Then let's actually run the function f.",
			"And then let's print done with the function.",
			"So what my Announce decorator is doing is it's taking the function f",
			"and it's creating a new function that just announces, via a print statement,",
			"before and after the function is done running.",
			"And then at the end, we'll return this new function,",
			"which is the wrapper function.",
			"So this right here is what we might call a decorator, a function that",
			"takes a function, modifies it by adding some additional capabilities to it,",
			"and then gives us back some output.",
			"So now here, I can define a function called Hello that just prints \"hello,",
			"world,\" for example.",
			"And then to add a decorator, I use the at symbol.",
			"I can say at announce to say add the Announce decorator to this function.",
			"And then I'll just run the function Hello.",
			"And we'll see what happens.",
			"I'll run Python decorators.py.",
			"And I see about to run the function, then \"hello, world,\" then done",
			"with the function.",
			"So again, why did that work?",
			"It's because our Hello function that just printed 'hello, world\"",
			"is wrapped inside of this Announce decorator,",
			"where what the Announce decorator does, is it takes our Hello function of input",
			"and gets us a new function that first prints an alert warning that we're",
			"about to run the function, actually runs the function,",
			"and then prints another message.",
			"So, a bit of a simple example here.",
			"But there's a lot of power in decorators for being able to very quickly take",
			"a function and add capability to it.",
			"You might imagine in a web application, if you only",
			"want certain functions to be able to run, if a user is logged in,",
			"you can imagine writing a decorator that checks",
			"to make sure that a user is logged in, and then just",
			"using that decorator on all of the functions that you want to make sure",
			"only work when a user so happens to be logged in.",
			"So decorators are a very powerful tool that web application frameworks",
			"like Django can make use of just to make the web application development",
			"process a little bit easier as well.",
			"Let's take a look at a couple other techniques that exist within Python.",
			"One is how we might be able to more efficiently represent functions.",
			"So let's imagine that I now have--",
			"I'm going to call this lambda.py for a reason you'll see in a moment.",
			"Let's imagine that I have a list of names or people, for example.",
			"And inside of this list of people, each person, instead of being just a string,",
			"is going to be a dictionary that has both a name like Harry",
			"and a house like Gryffindor.",
			"And let me add another name like Cho and a house like Ravenclaw,",
			"and then another name like Draco and a house like Slytherin.",
			"So here we have a list where each of the elements inside of that list",
			"is a dictionary, a mapping of keys and values.",
			"And that's totally OK.",
			"In Python, we have the ability to nest the data structures within one another.",
			"We can have lists inside of other lists, or lists inside",
			"of dictionaries, or in this case, dictionaries inside of a list.",
			"And in fact, this nesting of data structures",
			"is one of the reasons why it's very easy in Python",
			"to be able to represent structured data like a list of people",
			"where every person has various different properties.",
			"What I might like to do now is something like sort all of these people",
			"and then print them all out.",
			"So I might want to say people.sort, and then print all the people.",
			"But if I try to run this, I'll get an exception.",
			"I get an exception, type error less than not supported between dict and dict,",
			"which is sort of weird because I'm not using any less than symbol at all",
			"anywhere in a program.",
			"But in the trace-back, you'll see that the line of code that it's catching on",
			"is people.sort.",
			"Somehow, people.sort is causing a type error",
			"because it's trying to use less than to compare two dictionaries.",
			"And what this appears to mean is that Python doesn't",
			"know how to sort these dictionaries.",
			"It doesn't know, does Harry belong before or after Cho",
			"because it doesn't know how to compare these two elements.",
			"And so if I want to do something like this,",
			"then I need to tell the sort function how to sort these people.",
			"And so in order to do that, one way I could do this",
			"is by defining a function that tells the sort function",
			"how to do the sorting, what to look at when sorting.",
			"So if I want to sort by people's name, let me define a function",
			"that I'll just call f, that takes a person as input",
			"and returns that person's name by looking up the name field",
			"inside of the dictionary.",
			"And now I can sort people by their name by saying sort key equals f.",
			"What this means is sort all the people.",
			"And the way to sort them, the way you know how to compare them,",
			"is by running this function where this function takes a person",
			"and gives us back their name.",
			"And this will sort everyone by name.",
			"Now, if I run Python lambda.py, you will see that I first",
			"get Cho, then Draco, then Harry in alphabetical order",
			"by name, whereas if instead I had tried to sort people by their house",
			"by changing my function that I'm using to sort and then rerun this, now",
			"I see that its first Harry who is in Gryffindor, then",
			"Ravenclaw, then Slytherin, for example.",
			"So we get the houses in alphabetical order instead.",
			"But the reason I show this is because this function is so simple",
			"and is only used in one place.",
			"Python actually gives us an easier way to represent",
			"a very short, one-line function using something called a lambda expression.",
			"And this is a way of including the function just",
			"as a single value on a single line.",
			"I can say instead of defining a function called f, I can get rid of all of this",
			"and just say, sort by this key, a lambda,",
			"which is a function that takes a person and returns the person's name.",
			"So we say person as the input, colon person name as the output.",
			"This is a condensed way of saying the same thing we",
			"saw a moment ago, of defining a function, giving it a name,",
			"and then passing in the name here.",
			"This right here is a complete function that takes a person as input",
			"and returns their name.",
			"So Python lambda.py, that will actually sort the people by their name--",
			"Cho, then Draco, then Harry.",
			"Whereas if I have left off this key altogether and then tried to sort,",
			"well then we get this type error.",
			"Because we can't compare these two dictionaries.",
			"So we've seen a lot of different exceptions now throughout Python.",
			"So the very last example we'll take a look at",
			"is an example of how to deal with these exceptions,",
			"like what to do when things might go wrong if we want our program",
			"to be able to handle those possible exceptional cases, situations where",
			"things might, in fact, go wrong.",
			"So let's try an example.",
			"I'll create a new file that I'm going to call exceptions.py.",
			"And what exceptions.py is going to do is it's going to get some input.",
			"It's going to say let's get an integer input called x.",
			"And let's get an integer input called y.",
			"And then it lets go ahead and print out the result of x divided by y.",
			"So result equals x divided by y.",
			"And then let's print out something like x divided by y equals result.",
			"And we can literally print out the values of x and y.",
			"So this is a simple program that's just performing some division.",
			"Get a value of x, get a value of y, divide the two,",
			"and print out the result. We can try running this by running Python",
			"exceptions.py if I would type in like five and then 10,",
			"five divided by 10 is 0.5--",
			"exactly what I might expect.",
			"But what could go wrong now?",
			"You remember from math in division, what could go wrong is if I type in five",
			"and then zero, try and do five divided by zero, what's going to happen?",
			"Well, when I do that, I get an exception.",
			"I get a zero division error, which is an error that happens",
			"whenever you try to divide by zero.",
			"What I'd like to happen though in this case",
			"is not for my program to display kind of a messy error and a trace-back",
			"like this, but to handle the exception gracefully, so to speak.",
			"To be able to catch when the user does something wrong",
			"and report a nicer looking message instead.",
			"And so how might I go about doing that.",
			"Well, one thing I can do here is instead of just saying result equals x over y,",
			"I can say try to do this, try to set result equal to x divided by y,",
			"and then say except if a zero division error happens.",
			"Then let's do something else.",
			"Let's print error cannot divide by zero, and then exit the program.",
			"How do you exit the program?",
			"It turns out there's a module in Python called sys.",
			"And if I import the sys module, I can say sys.exit1",
			"to mean exit the program with a status code of one, where a status code of one",
			"generally means something went wrong in this program.",
			"So now I'm trying to divide-- x divided by y--",
			"except I have an exception handler.",
			"This is a try-except expression.",
			"I'm saying try to do this except if this exception happens, rather than have",
			"the program crash, just print out this error message, can't divide by zero,",
			"and then exit the program.",
			"So now let's try it--",
			"Python exceptions.py.",
			"Again, five and 10 works totally normally, gets me a value of 0.5.",
			"But now if I try five and zero, press Return, I get an error.",
			"Cannot divide by zero--",
			"no long exception that's going to look complicated to the user.",
			"It's no longer messy.",
			"I've been able to handle the exception gracefully.",
			"Now, one other exception that might come up is what if instead of x is five,",
			"I type in a word like \"hello,\" something that's not a number.",
			"Now I get another type of exception, a value error,",
			"which is happening when I try and convert something to an int",
			"because Hello cannot be converted into a base 10 integer.",
			"You can't take text that is not a number and turn it into an integer.",
			"So instead, I'm getting this value error here.",
			"How can I deal with that?",
			"Well, I can deal with it in much the same way.",
			"When I'm getting this input x and y, I can say rather than just get the input,",
			"just try to get the input.",
			"Except if a value error happens, which is the area that we got a moment ago,",
			"this value error, then print error invalid input,",
			"and go ahead and sys.exit1.",
			"So now I've been able to handle that error as well.",
			"I can say Python exceptions.py.",
			"I can say Hello.",
			"And I just get error invalid input.",
			"I can divide by zero.",
			"I get error cannot divide by zero.",
			"But if I do type of valid x and a y value,",
			"then I get the result of dividing one number by the other.",
			"So exception handling is often a helpful tool",
			"for if you expect that some lines of code you might be running",
			"might run into some sort of problem, be they a value error, or a zero division",
			"error, or some other error altogether, to be",
			"able to handle those errors gracefully.",
			"And that's probably what you want if you're",
			"going about building a web application using Python,",
			"is the ability to say that if something goes wrong,",
			"we want to handle the error nicely, display a nice error",
			"message to the user telling them what was wrong instead",
			"of having the program entirely crash.",
			"So those are some of the key features now with this Python programming",
			"languagem this language that gives us the ability",
			"to define these functions, and loops, and conditions in very convenient ways,",
			"to create classes where we can begin to build objects that are able to perform",
			"various different types of tasks.",
			"And next time using Python, we'll be able to design web applications such",
			"that users are able to make requests to our web applications",
			"and get some sort of response back.",
			"So we will see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_005": {
		"section": "CS50W 2020",
		"subsection": "Django",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001700_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V001700/HarvardXCS50W-V001700.m3u8"
		],
		"video_duration": 5944,
		"speech_period": [
			17.79, 2.25, 1.335, 1.875, 1.83, 2.73, 2.49, 1.737, 2.583, 2.292, 3.348,
			2.64, 1.5, 2.61, 4.26, 5.5, 2.0, 4.05, 5.25, 0.9, 3.03, 1.028, 1.792,
			2.91, 2.25, 3.51, 0.63, 2.01, 1.71, 2.833, 3.377, 2.04, 3.12, 2.678,
			2.542, 2.16, 2.94, 3.78, 2.67, 1.602, 2.958, 2.19, 2.02, 3.33, 2.01, 2.1,
			3.56, 2.25, 2.34, 3.33, 2.92, 3.41, 2.37, 1.53, 2.28, 2.07, 2.85, 2.31,
			2.333, 2.407, 1.68, 3.75, 2.55, 2.49, 1.47, 3.84, 3.39, 3.45, 2.07, 3.45,
			2.16, 4.513, 3.167, 4.17, 2.81, 2.83, 1.14, 2.8, 3.56, 3.51, 0.995, 3.595,
			2.162, 1.708, 2.64, 2.34, 2.25, 3.06, 3.21, 2.4, 1.83, 1.19, 0.94, 2.74,
			3.259, 1.111, 2.94, 2.58, 1.35, 2.37, 2.155, 2.875, 3.52, 2.21, 3.438,
			1.792, 2.04, 2.04, 1.47, 3.06, 2.79, 1.54, 1.79, 3.0, 4.59, 1.95, 3.81,
			1.84, 3.78, 3.12, 3.6, 2.8, 1.75, 3.07, 2.77, 4.28, 2.19, 4.59, 1.26, 2.4,
			2.28, 4.11, 3.39, 1.013, 1.917, 4.15, 2.05, 3.41, 2.22, 2.4, 5.19, 3.12,
			5.62, 4.26, 2.81, 1.558, 1.292, 2.458, 2.709, 1.583, 2.19, 4.23, 1.26,
			1.95, 2.5, 2.375, 3.075, 2.19, 2.74, 2.0, 2.61, 3.15, 4.8, 3.87, 3.0,
			3.18, 3.45, 3.27, 4.82, 2.47, 4.14, 4.2, 1.9, 2.18, 3.45, 1.53, 5.4,
			2.917, 1.583, 2.79, 6.3, 2.19, 4.62, 3.529, 2.801, 2.91, 2.913, 1.917,
			1.77, 4.2, 3.54, 4.44, 1.74, 2.1, 2.25, 1.74, 3.42, 2.67, 3.48, 2.46,
			4.35, 1.14, 3.7, 3.17, 2.49, 3.09, 1.26, 3.27, 1.77, 3.09, 3.39, 3.007,
			3.083, 3.16, 3.17, 2.26, 2.0, 3.03, 3.12, 2.27, 1.86, 3.69, 3.54, 1.8,
			4.072, 1.958, 3.51, 5.16, 2.0, 4.43, 3.15, 2.84, 1.77, 2.49, 2.52, 4.5,
			3.863, 2.917, 1.875, 2.113, 2.792, 2.82, 2.01, 1.992, 2.958, 3.79, 2.09,
			2.5, 1.73, 2.98, 2.63, 4.89, 1.84, 3.77, 2.82, 3.81, 2.223, 1.917, 2.695,
			3.125, 1.15, 3.59, 2.22, 3.69, 1.49, 4.72, 1.5, 3.18, 2.79, 2.68, 1.95,
			2.51, 4.36, 2.42, 1.89, 2.07, 4.45, 2.2, 3.95, 2.38, 4.47, 1.75, 3.93,
			1.575, 1.875, 1.92, 1.59, 2.91, 2.35, 2.75, 7.51, 3.78, 2.94, 1.68, 2.083,
			3.137, 1.875, 3.225, 7.59, 1.98, 3.3, 1.72, 2.72, 4.14, 1.65, 2.37, 2.22,
			2.71, 3.71, 4.26, 4.74, 1.27, 1.107, 2.333, 3.73, 3.83, 3.96, 2.582,
			2.458, 3.69, 3.54, 3.22, 3.35, 6.12, 4.95, 3.3, 2.49, 6.87, 1.68, 0.668,
			1.792, 3.393, 2.667, 1.99, 3.26, 2.76, 2.16, 3.93, 4.23, 3.92, 4.37, 3.32,
			4.87, 3.56, 3.39, 1.83, 3.42, 2.865, 1.875, 3.167, 2.953, 3.09, 4.18, 2.6,
			3.27, 1.59, 2.82, 1.99, 3.77, 3.589, 3.871, 3.44, 4.969, 3.031, 3.122,
			2.458, 3.87, 1.23, 1.96, 2.453, 1.917, 4.63, 3.22, 2.5, 3.96, 3.36, 4.36,
			4.91, 4.62, 3.29, 4.03, 3.33, 2.28, 2.73, 2.82, 2.58, 2.44, 4.07, 0.6,
			1.84, 4.16, 0.99, 2.22, 3.24, 3.15, 2.49, 5.19, 4.38, 2.34, 4.56, 2.77,
			2.55, 1.97, 5.89, 3.65, 4.83, 4.5, 2.97, 1.8, 3.87, 3.69, 1.77, 2.16,
			2.71, 3.05, 1.476, 1.914, 4.62, 1.59, 1.875, 2.715, 4.35, 1.41, 1.8, 1.86,
			1.77, 2.52, 4.11, 0.96, 2.7, 2.637, 2.583, 4.36, 4.19, 3.723, 1.917, 3.06,
			6.99, 1.62, 3.63, 4.57, 3.35, 2.07, 3.51, 2.82, 1.71, 4.57, 3.74, 2.26,
			3.89, 4.36, 3.56, 5.343, 1.917, 3.03, 0.96, 2.4, 7.68, 2.61, 4.86, 2.36,
			4.35, 4.98, 4.7, 4.48, 3.87, 2.22, 3.11, 1.96, 3.36, 2.64, 4.15, 2.54,
			2.25, 2.6, 4.18, 1.328, 3.292, 4.89, 2.1, 3.18, 2.07, 3.75, 2.46, 3.87,
			3.57, 3.48, 3.46, 3.11, 1.18, 3.74, 2.4, 5.4, 1.99, 2.08, 2.11, 2.77,
			4.55, 4.2, 2.25, 6.51, 0.8, 2.17, 1.35, 1.68, 3.22, 2.95, 4.24, 4.52,
			4.69, 5.01, 3.28, 3.83, 3.65, 4.15, 3.45, 2.542, 3.038, 3.522, 1.458,
			2.59, 0.95, 1.292, 1.508, 2.45, 4.23, 2.68, 2.3, 2.76, 2.52, 2.97, 3.28,
			1.22, 0.71, 1.21, 5.16, 1.59, 0.75, 2.61, 1.89, 3.63, 2.18, 4.09, 3.96,
			2.01, 2.94, 2.79, 3.03, 2.17, 3.2, 3.78, 4.14, 3.36, 5.34, 3.97, 2.34,
			2.62, 4.16, 3.278, 1.792, 4.493, 2.167, 2.042, 3.928, 0.75, 1.708, 2.142,
			1.5, 3.2, 2.91, 1.18, 5.03, 3.96, 4.47, 0.84, 2.04, 5.07, 4.05, 3.4, 2.42,
			3.54, 2.23, 4.61, 3.84, 2.7, 3.135, 3.885, 3.09, 3.99, 3.27, 1.62, 3.51,
			3.33, 2.58, 2.382, 3.208, 3.89, 1.62, 6.3, 5.05, 5.21, 4.33, 0.87, 3.84,
			4.1, 3.57, 5.42, 4.21, 3.96, 3.4, 6.14, 2.19, 3.35, 3.89, 3.44, 1.83,
			4.53, 3.87, 3.11, 4.0, 3.03, 4.75, 2.09, 1.86, 4.62, 4.0, 1.19, 3.57,
			3.36, 3.58, 1.94, 2.67, 3.97, 2.59, 2.5, 3.76, 4.5, 2.75, 1.2, 2.28, 2.62,
			3.9, 4.55, 3.54, 3.86, 3.58, 3.48, 4.33, 1.7, 5.51, 2.15, 2.99, 6.06,
			4.65, 2.98, 4.02, 2.86, 3.252, 1.458, 4.62, 3.37, 1.98, 3.71, 3.36, 3.9,
			3.9, 3.51, 4.68, 3.81, 1.02, 1.8, 3.337, 2.333, 1.958, 3.052, 2.37, 3.8,
			2.85, 5.772, 1.708, 2.19, 2.37, 2.89, 1.719, 4.541, 3.99, 4.05, 4.58,
			4.06, 3.13, 2.42, 2.7, 3.779, 1.771, 4.649, 2.761, 2.65, 3.56, 3.17, 3.73,
			3.69, 3.23, 4.34, 2.13, 2.01, 3.72, 2.58, 3.0, 3.03, 1.88, 2.21, 3.472,
			2.708, 2.27, 5.41, 1.25, 1.59, 1.112, 1.708, 2.1, 3.85, 1.91, 3.48, 3.03,
			2.31, 2.46, 2.52, 4.98, 2.97, 1.95, 2.31, 4.2, 3.662, 2.458, 4.832, 1.708,
			3.15, 1.52, 1.75, 1.833, 3.687, 1.622, 1.708, 1.95, 2.37, 3.9, 2.44, 4.43,
			2.25, 2.86, 1.25, 2.13, 2.73, 2.94, 3.21, 5.25, 4.53, 3.69, 3.013, 1.667,
			5.85, 3.9, 2.73, 5.04, 4.33, 6.47, 3.69, 8.37, 6.51, 4.61, 3.85, 1.44,
			2.73, 2.52, 2.29, 3.53, 2.88, 3.4, 1.97, 2.85, 2.73, 2.49, 4.428, 2.042,
			3.802, 2.958, 1.47, 3.78, 1.193, 2.917, 1.59, 3.18, 3.69, 3.57, 3.18,
			3.94, 6.26, 2.43, 2.91, 3.04, 3.86, 2.91, 3.13, 3.44, 2.64, 1.89, 1.95,
			5.28, 6.87, 0.5, 4.43, 4.36, 1.54, 2.16, 4.2, 4.03, 1.83, 2.09, 3.19,
			4.49, 3.18, 2.22, 2.033, 2.167, 2.33, 2.95, 7.16, 2.74, 5.07, 3.77, 8.42,
			2.45, 2.82, 1.89, 4.06, 2.0, 2.73, 2.67, 3.37, 3.35, 5.4, 3.49, 1.133,
			2.667, 4.11, 4.32, 5.43, 6.06, 3.84, 1.77, 4.11, 3.63, 3.18, 2.85, 3.81,
			1.72, 2.4, 2.81, 4.14, 4.68, 2.62, 3.17, 3.44, 2.552, 1.208, 3.54, 3.68,
			5.14, 5.22, 3.6, 1.62, 1.11, 3.33, 1.98, 4.02, 1.95, 2.4, 2.37, 2.4, 3.04,
			2.81, 4.77, 2.16, 2.19, 3.24, 1.44, 2.52, 5.22, 1.33, 1.5, 2.45, 3.36,
			2.583, 1.327, 2.27, 3.93, 3.18, 3.39, 1.98, 4.62, 3.89, 2.68, 2.7, 1.997,
			1.583, 1.042, 3.098, 3.17, 3.59, 3.19, 3.39, 1.35, 3.3, 2.67, 3.36, 2.16,
			3.4, 2.36, 3.12, 2.76, 3.39, 2.91, 1.845, 1.125, 3.93, 2.778, 2.042, 3.61,
			2.462, 1.708, 2.7, 3.6, 2.58, 2.708, 2.512, 3.87, 2.32, 4.19, 2.31, 1.16,
			2.5, 1.74, 3.54, 3.96, 3.81, 1.83, 2.73, 2.267, 2.083, 2.97, 1.35, 2.1,
			5.28, 2.61, 2.37, 3.27, 3.57, 1.71, 4.598, 1.792, 2.7, 1.83, 3.03, 3.84,
			2.85, 2.97, 1.92, 2.83, 2.03, 3.13, 3.24, 3.83, 3.0, 1.98, 2.49, 3.75,
			1.038, 2.292, 2.25, 2.76, 2.19, 3.54, 3.18, 3.54, 2.58, 6.9, 3.63, 2.94,
			3.54, 4.23, 3.422, 1.708, 7.02, 4.05, 3.63, 2.16, 4.09, 5.26, 4.67, 4.85,
			4.63, 5.22, 3.45, 2.74, 2.72, 4.47, 2.37, 2.1, 3.08, 2.64, 2.8, 3.6, 1.62,
			3.84, 2.82, 3.03, 1.83, 2.25, 1.18, 3.08, 3.72, 3.33, 4.09, 3.41, 3.36,
			3.33, 2.22, 2.79, 1.44, 3.888, 3.042, 4.53, 2.98, 5.33, 1.65, 5.13, 1.122,
			2.208, 3.15, 3.03, 3.78, 2.98, 3.03, 1.19, 2.58, 2.61, 3.45, 3.48, 2.61,
			3.09, 3.09, 3.87, 2.64, 3.48, 3.57, 3.66, 1.8, 2.28, 2.76, 3.45, 2.33,
			1.6, 2.28, 2.64, 4.98, 3.24, 3.63, 5.79, 2.7, 4.7, 3.88, 2.07, 4.56, 4.02,
			3.002, 1.708, 4.29, 4.6, 2.75, 3.4, 4.25, 3.84, 2.13, 3.0, 5.76, 2.73,
			4.68, 6.1, 3.83, 4.38, 3.33, 3.21, 2.1, 3.3, 1.11, 3.07, 2.34, 1.25, 2.1,
			3.9, 2.73, 2.49, 3.24, 4.42, 2.765, 2.685, 2.7, 1.89, 2.82, 5.34, 1.273,
			2.417, 2.19, 3.03, 3.33, 3.31, 1.79, 3.54, 4.32, 4.35, 2.73, 2.23, 3.38,
			4.02, 3.72, 1.87, 2.72, 2.25, 4.26, 6.03, 4.47, 2.25, 3.33, 1.92, 2.73,
			4.72, 2.75, 3.33, 5.25, 3.48, 2.46, 2.44, 2.75, 3.69, 4.41, 3.09, 3.96,
			5.94, 2.4, 4.14, 3.36, 3.75, 0.54, 2.34, 4.26, 3.762, 2.958, 2.0, 2.5,
			3.21, 4.63, 1.82, 4.68, 2.31, 2.82, 3.34, 3.59, 3.87, 3.9, 2.56, 3.59,
			4.93, 2.84, 4.1, 1.0, 4.38, 3.18, 1.35, 3.18, 1.71, 3.87, 4.02, 3.42,
			2.23, 3.09, 2.67, 2.37, 2.85, 2.64, 4.11, 5.23, 1.22, 6.3, 5.31, 3.6,
			3.32, 4.12, 4.71, 4.83, 6.5, 1.268, 1.792, 3.9, 3.54, 1.315, 3.335, 0.75,
			4.05, 2.55, 3.49, 1.91, 2.223, 2.167, 5.06, 2.43, 3.21, 2.43, 3.073,
			2.417, 4.4, 2.2, 4.45, 5.21, 2.07, 2.55, 3.21, 1.89, 2.4, 3.65, 1.93,
			1.29, 0.84, 2.34, 3.72, 4.73, 1.9, 1.792, 2.258, 2.82, 4.11, 4.02, 2.46,
			2.95, 4.04, 5.07, 1.74, 3.93, 2.13, 3.45, 1.95, 4.531, 4.859, 1.4, 4.56,
			2.91, 4.32, 2.59, 2.24, 1.357, 2.333, 1.32, 2.73, 3.75, 3.05, 2.89, 2.76,
			1.86, 1.542, 2.291, 1.567, 4.92, 2.76, 4.35, 3.087, 1.833, 5.76, 3.42,
			3.81, 5.46, 3.63, 2.67, 2.49, 5.1, 4.32, 5.82, 2.31, 3.33, 6.63, 4.33,
			5.67, 2.9, 3.39, 4.14, 3.12, 2.39, 3.16, 4.8, 2.0, 3.49, 4.29, 5.01, 3.25,
			1.708, 2.332, 3.72, 2.73, 2.35, 1.94, 2.85, 2.972, 1.708, 5.2, 5.03, 2.1,
			5.55, 3.63, 3.24, 4.18, 3.53, 0.93, 1.92, 2.64, 3.63, 3.0, 4.71, 3.12,
			2.55, 3.3, 2.94, 5.94, 1.799, 4.561, 2.26, 2.87, 3.179, 3.271, 2.59, 2.63,
			4.56, 3.909, 2.901, 9.09, 2.87, 5.099, 3.66, 1.871, 1.46, 1.799, 4.431,
			4.41, 2.5, 2.406, 1.583, 3.261, 2.89, 2.099, 2.664, 2.167, 6.0, 2.009,
			2.583, 1.708, 3.21, 5.52, 2.49, 1.737, 1.833, 1.98, 3.048, 1.792, 3.29,
			4.145, 1.135, 4.56, 1.65, 1.42, 1.76, 1.51, 3.2, 3.19, 1.97, 4.98, 3.9,
			3.72, 4.56, 4.86, 2.43, 2.55, 2.748, 3.042, 1.75, 1.88, 2.1, 1.875, 2.423,
			2.292, 2.167, 1.593, 2.67, 3.24, 2.61, 6.06, 5.82, 3.24, 4.89, 6.42, 3.9,
			5.55, 4.86, 4.26, 1.32, 1.56, 5.22, 0.75, 3.15, 2.25, 3.51, 0.87, 2.79,
			0.957, 1.083, 3.0, 2.32, 3.8, 1.81, 3.98, 2.37, 3.45, 6.87, 4.15, 2.69,
			2.37, 2.28, 3.66, 3.0, 4.41, 2.88, 2.85, 2.43, 3.63, 2.262, 2.558, 2.25,
			3.06, 2.04, 3.84, 2.57, 2.28, 2.56, 1.74, 5.25, 2.45, 3.55, 2.56, 2.45,
			2.56, 2.3, 3.57, 3.81, 2.97, 3.33, 4.53, 3.09, 2.4, 2.25, 3.0, 2.46,
			1.877, 2.833, 1.95, 3.87, 2.13, 3.51, 4.13, 1.87, 3.36, 2.61, 3.3, 4.77,
			1.63, 1.85, 3.9, 4.09, 3.29, 2.85, 2.28, 2.1, 2.25, 2.42, 1.58, 3.51,
			2.03, 2.13, 2.88, 2.19, 3.86, 4.42, 4.05, 2.34, 4.35, 0.99, 3.15, 5.61,
			2.82, 3.9, 3.0, 1.26, 5.28, 2.28, 3.24, 3.48, 2.44, 2.42, 4.68, 5.05,
			3.08, 1.1, 2.92, 3.87, 5.64, 4.5, 3.48, 1.8, 1.92, 1.89, 2.94, 2.31, 4.17,
			2.94, 3.61, 2.37, 4.27, 2.09, 3.6, 4.4, 3.66, 3.173, 1.417, 2.49, 3.11,
			3.7, 2.07, 3.507, 1.833, 2.548, 2.792, 3.87, 2.43, 3.03, 1.65, 3.79, 1.38,
			4.34, 3.36, 3.12, 3.93, 3.12, 3.29, 2.26, 2.84, 2.29, 3.75, 1.76, 2.5,
			2.46, 2.52, 4.32, 5.25, 3.66, 2.17, 4.58, 4.5, 2.73, 4.28, 1.75, 5.35,
			3.498, 1.292, 0.98, 3.042, 0.598, 3.27, 3.51, 2.1, 3.12, 3.75, 3.96, 3.48,
			6.08, 1.69, 2.46, 5.01, 1.5, 2.25, 3.82, 2.51, 2.7, 3.09, 2.58, 1.27,
			4.66, 4.24, 2.117, 2.083, 2.01, 1.23, 3.12, 2.04, 4.448, 1.792, 2.94, 3.0,
			2.67, 5.58, 1.32, 4.17, 2.13, 1.5, 3.27, 3.46, 2.83, 2.63, 2.26, 3.45,
			4.823, 0.917, 1.29, 3.23, 2.38, 2.21, 4.41, 4.87, 4.88, 1.91, 4.79, 1.88,
			6.21, 4.632, 2.958, 2.86, 3.53, 2.01, 3.48, 4.59, 3.69, 2.716, 2.384,
			3.33, 4.06, 1.32, 2.0, 6.84, 4.72, 3.77, 3.79, 2.75, 4.26, 4.5, 3.33,
			4.16, 4.23, 1.75, 4.06, 4.61, 5.05, 4.89, 3.68, 3.6, 5.107, 1.333, 0.82,
			3.34, 1.67, 3.09, 3.45, 3.33, 3.66, 3.69, 4.41, 2.55, 5.22, 2.58, 2.7,
			1.56, 1.65, 3.87, 4.49, 2.71, 4.86, 2.13, 2.76, 3.55, 1.82, 1.92, 1.467,
			1.833, 4.11, 1.51, 2.3, 3.09, 2.59, 2.11, 2.65, 2.61, 1.71, 1.56, 1.65,
			3.09, 3.78, 2.22, 3.18, 2.67, 1.53, 4.2, 2.55, 4.42, 2.67, 2.212, 1.958,
			2.97, 2.85, 2.52, 4.29, 3.51, 3.27, 2.61, 2.28, 2.37, 5.58, 2.79, 1.47,
			2.94, 2.9, 2.77, 2.37, 3.31, 1.94, 2.67, 4.23, 3.71, 3.19, 2.04, 4.53,
			5.16, 2.91, 3.61, 4.31, 4.5, 3.72, 3.36, 7.8, 1.8, 2.67, 4.62, 2.71, 4.31,
			3.45, 5.61, 2.01, 3.84, 2.22, 4.092, 2.958, 2.67, 3.37, 1.16, 2.73, 4.56,
			1.77, 2.55, 3.75, 3.54, 2.52, 2.28, 4.35, 4.42, 3.56, 2.82, 2.01, 3.99,
			2.34, 3.47, 2.2, 2.76, 2.13, 3.15, 2.13, 3.42, 2.31, 4.92, 2.61, 4.45,
			2.36, 1.75, 3.44, 3.728, 1.792, 2.61, 2.22, 2.91, 3.78, 3.06, 1.82, 2.95,
			4.24, 3.29, 3.24, 3.33, 4.05, 3.99, 5.892, 2.958, 3.75, 1.99, 2.66, 8.89,
			3.56, 2.94, 2.15, 3.435, 1.375, 2.61, 2.79, 2.31, 4.11, 3.51, 5.22, 5.76,
			3.5, 6.34, 1.5, 2.793, 1.917, 2.988, 2.292, 3.15, 3.75, 3.0, 0.69, 2.73,
			1.32, 2.04, 3.54, 1.92, 1.72, 3.14, 2.25, 6.01, 3.62, 2.86, 2.87, 3.3,
			1.328, 2.917, 2.925, 3.81, 4.45, 3.53, 4.19, 1.06, 1.587, 2.583, 2.82,
			1.68, 3.06, 2.82, 2.97, 4.47, 3.09, 3.042, 2.208, 3.69, 4.03, 4.76, 3.0,
			4.68, 3.48, 4.63, 3.75, 2.36, 4.83, 1.65, 3.33, 2.04, 2.76, 4.53, 2.64,
			1.26, 2.16, 2.47, 3.38, 4.37, 1.32, 3.37, 1.95, 4.8, 3.96, 3.06, 1.992,
			1.708, 2.167, 3.153, 2.78, 2.06, 2.61, 3.86, 5.53, 3.17, 3.57, 0.66, 4.23,
			2.07, 4.62, 3.48, 2.28, 3.69, 2.55, 2.91, 2.16, 1.83, 3.078, 2.792, 3.58,
			2.34, 2.695, 3.125, 1.08, 1.568, 1.792, 3.36, 2.28, 2.09, 0.58
		],
		"transcript_en": [
			"",
			"SPEAKER: OK welcome back, everyone, to Web Programming",
			"with Python and JavaScript.",
			"So thus far in the course, we've taken a look",
			"at a couple of different technologies.",
			"We took a look at HTML and CSS which are languages",
			"we can use to describe the structure of a web page",
			"and then style it appropriately.",
			"And then we also took a look at Python, a programming language",
			"that we could use to get programming features, features",
			"like loops, and conditions, and variables, and functions and more.",
			"And what we're going to do today is introduce Django,",
			"which is going to combine these two.",
			"Django is a Python web framework which is",
			"going to allow us to write Python code that is able to dynamically generate",
			"HTML and CSS, ultimately allowing us to build a dynamic web application.",
			"So what is this now going to enable us to do",
			"that we weren't able to previously do using just HTML and CSS?",
			"Well, using HTML and CSS, the web pages that we created were static web pages.",
			"They were the same.",
			"And every time you visited the web page, the page you were looking at",
			"was identical.",
			"But ultimately, if you think about websites",
			"you interact with on a day to day basis, say like the New York Times,",
			"for example, it's not the case that every time you",
			"go to the New York Times home page you're seeing the exact same HTML.",
			"It changes.",
			"The next day, you might see the new date.",
			"You might see the next day's articles.",
			"Whenever someone comments in an article, you can see those comments.",
			"And you can see how many people have commented on an article, for example.",
			"And it's probably not the case that someone",
			"is sitting there updating the HTML of the New York Times website",
			"every time something changes, but rather more likely",
			"there is some program, maybe written in Python, maybe written",
			"in some other language, that is dynamically",
			"generating that HTML and CSS and allowing the web",
			"application to respond based on how users are interacting with it.",
			"And this is ultimately what we're going to be trying to create",
			"using this Django web framework.",
			"We're going to be creating software that's going to run on a web server",
			"such that clients, running in their web browser,",
			"can make requests to our web server.",
			"And our server is going to respond back with some sort of response.",
			"And so how does this process actually happen?",
			"Well ultimately, it boils down to this protocol,",
			"HTTP, otherwise known as the HyperText Transfer Protocol,",
			"which is the protocol for how messages are going to be",
			"sent back and forth over the internet.",
			"In this case, you can think about this as a computer, some user, which",
			"we might call the client, and then our server,",
			"which is going to be the server that is going to contain our web application.",
			"We are going to write a Django web application that",
			"is going to run on this server.",
			"And clients are going to make requests to that server.",
			"The server is going to process that request",
			"and then return some sort of response.",
			"That request might look a little something like this.",
			"Underneath the hood, it might start with the word \"get.\"",
			"Get is just an example of a request method,",
			"a way that you might try to get a page.",
			"So get just means, I would like to get a particular page.",
			"In this case, the page I'm trying to get is the slash page,",
			"just denoting the root of the website, usually",
			"the default page for the website.",
			"HTTP 1-1 is just the version of HTTP that we're using.",
			"And the host is what URL we're trying to access the web page for,",
			"so example.com or some other website, for example, that I",
			"might be trying to make a request to.",
			"So this request ultimately gets sent by my web browser, when I type",
			"in a URL and press Return, for example.",
			"The server processes that request and then gives back some sort of response.",
			"And the response will generally look a little something like this, beginning",
			"with the HTTP version 1.1, or in some cases 2, version 2 now,",
			"and then some sort of response code.",
			"200 is a response code the just means OK.",
			"Everything was OK.",
			"The page was returned successfully, for example.",
			"And here on the second line, we see Content-Type text/html,",
			"which just means the format of the data that's coming back in this response",
			"is HTML data.",
			"It's HTML data that the user's web browser on the client",
			"should then render as HTML, for example.",
			"And there are other content types as well",
			"and other information that comes back in that response,",
			"but the key idea is just thinking about the web",
			"in terms of requests and responses.",
			"One user makes a request to get a particular web page.",
			"And what they get back is a response like this that hopefully includes",
			"status code 200, which means OK, but there are",
			"a number of other status codes as well.",
			"Some of the more popular--",
			"200 means OK.",
			"You've probably seen 404, the status code",
			"that means not found, if you try to request a web page that doesn't exist,",
			"for example.",
			"Others you might see or 301, moved permanently.",
			"That often happens if you're redirected from one website",
			"to another, for example.",
			"We'll take a look at an example of that shortly.",
			"403 generally means forbidden.",
			"You're trying to access a page you're not supposed to have access to.",
			"And 500 usually refers to some sort of internal server error,",
			"usually meaning that whoever was writing the server,",
			"maybe our Django web application, has something that's buggy in it.",
			"And we might need to go back and figure out",
			"where that bug is in order to fix it.",
			"And again, there are other status codes as well,",
			"but these are some of the most common that we're",
			"going to be seeing and interacting with as we go about building",
			"web applications using Django.",
			"So Django is a web framework.",
			"It's a set of tools that is already built",
			"for us that's just going to make it easy to get started by writing",
			"Python code in order to design a fully fledged web application by taking care",
			"of some of the stuff that most web pages all",
			"have to do such that we can focus on the interesting logic of building",
			"our own web applications.",
			"So the first step you'll need to do in order to use Django is to install it.",
			"If you're using Python, you may be familiar with pip, the Python package",
			"manager, which makes it easy to be able to install new packages.",
			"And the first thing we'll probably want to do is install Django.",
			"And here we're going to be using Python 3,",
			"so you might need to specify pip3 install Django",
			"to install Django on your system.",
			"And after you do, we can run a command to be able to create a Django project.",
			"And that command looks something like this,",
			"django-admin startproject followed by the name of the project",
			"that we would like to create.",
			"When we run this command, Django is automatically",
			"going to create some starter files for us",
			"just to get started with the process of building a web application.",
			"So let's try creating a project now I'll go ahead and go into my terminal",
			"window.",
			"And what I'm going to do is type that command.",
			"I going to type django-admin and then startproject.",
			"And then I need to give this project a name.",
			"And I'm just going to give this project a name of lecture3, for example.",
			"You can name the project whatever you'd like.",
			"And when that happens, when I type ls, what I see",
			"is that a lecture3 directory or folder has been created for me by Django.",
			"And if I go ahead and open this up inside of my text editor,",
			"we can take a look at what files are inside of this lecture3 directory.",
			"So actually, I'll go ahead and cd into lecture3 and open it up.",
			"And what we see inside of lecture3 are a couple of files",
			"that we're given just to get started.",
			"So there are a couple of files.",
			"And not all of them are really interesting to us right now.",
			"But first and foremost, manage.py is a file",
			"that Django is going to create for us.",
			"We'll generally not need to touch that file,",
			"but we're going to use the manage.py file to be able to execute commands",
			"on this Django project.",
			"And we'll see a couple of examples of that now",
			"and a couple of examples of that in future lectures as well.",
			"And then the other important one that we'll be looking at",
			"is settings.py, which just contains important configuration",
			"settings for our Django application.",
			"Settings.py comes preloaded with a couple of default settings,",
			"but we might want to change those settings to be",
			"able to add features to our application as well",
			"or make some modifications to how the application behaves.",
			"And then the other important file that's pre-created for us now here is urls.py.",
			"And you can think of urls.py as a sort of table of contents for our web",
			"application, that on any given web application, on a website,",
			"there are a number of different URLs or routes that you can visit.",
			"On Google, for example, you can visit /search or /images.",
			"And urls.py is just going to be a table of contents",
			"of all of URLs on my web application that I can ultimately visit.",
			"And so if I'd like to try running this web application just",
			"to see what it looks like, the way to do it in Django is, in the terminal,",
			"I'll run python manage.py followed by a command.",
			"And the command is called runserver.",
			"And so this is generally how we'll use manage.py.",
			"We'll manage.py followed by an argument specifying",
			"what command we would like to run.",
			"And python manage.py runserver means go ahead and actually run this web server.",
			"And if I do this, I'm now running this web server locally.",
			"And I see a bunch of debugging output.",
			"But the interesting point to me is that it says down here,",
			"starting development server at http://127.0.0.1:8000",
			"And so this is where my web application is currently",
			"running, 127.0.0.1 is an IP address, an address on the internet that",
			"just refers to my local computer, the computer I'm looking at right now.",
			"So only I can access this, not anyone else on the internet.",
			"And 8000 is what we would call a port number.",
			"It just refers to what type of service is being run.",
			"And you might have multiple different internet",
			"services running on different ports.",
			"In this case, our Django application is running on port 8000.",
			"So if I copy this URL and just go ahead and go into my web browser",
			"and paste that URL in, what I see is just Django's default page to say,",
			"our installation of Django works.",
			"And this now is the default page the Django",
			"is going to give to us to say that Django has",
			"been loaded for this web application.",
			"And we can now actually start to begin building this web application",
			"by adding the features we want to it.",
			"And so what we've created here is what we call a Django project.",
			"And in terms of the way a Django project is structured,",
			"is that every Django project generally consists of one or more Django",
			"applications.",
			"So one project may have multiple applications within it.",
			"And the reason for this division is, if you think about big websites,",
			"oftentimes a big website, a big project has",
			"multiple different apps that are sort of separate services",
			"that operate within it.",
			"Google, for example, has Google search, but also Google Images, and Google",
			"News, and Google Maps, where you can think",
			"of each of those individual services as a separate app",
			"all under one larger project like Google, for example.",
			"Or Amazon's website, for instance, might be one big project",
			"that has a couple of different apps within it, one app for shopping maybe,",
			"and one application for Amazon's video service, for example.",
			"And so Django comes preloaded with its ability to take a project",
			"and divide it into multiple distinct apps.",
			"Maybe for simpler apps, we're only going to have",
			"a project that has one app inside of it instead of multiple.",
			"But it has the ability to allow us to create these separate apps that",
			"have different capacities.",
			"So if we want to get started with Django,",
			"the first thing we'll need to do after we create a project is create a Django.",
			"App and so the way to do that, so go back to the terminal.",
			"I'll go ahead and exit out of this server",
			"by pressing Control C to say I would like to exit, stop running the server.",
			"So now if I go back to that URL and refresh it,",
			"it won't work, because the Django server is no longer running.",
			"But I'll run the command python manage.py startapp and then",
			"the name of the app that I would like to create.",
			"And for our very first app, I'll just call this app hello, for example.",
			"So I've now created one Django project called lecture3,",
			"and inside of which I've created the very first app that I've now",
			"called hello.",
			"And so if we take a look at our files now,",
			"you'll see that, in addition to a lecture3 directory which",
			"existed before, we also now have a hello directory the Django created for us",
			"that is going to contain the information needed for the hello app to work.",
			"And there are a number of files, again, that are generated by default.",
			"We're not going to look at all of them today.",
			"We're going to focus primarily on views.py--",
			"we'll see why in a moment-- which is going to be the file that lets",
			"us describe what it is the user sees when they visit",
			"a particular route, for example, where we can",
			"decide what gets rendered to the user.",
			"And the other files, we'll take a look at over the course of this term,",
			"taking a look at what additional features Django has to offer.",
			"So we've now created this hello app that we would",
			"like to install into this project.",
			"And in order to install it, we need to go",
			"into the settings for this particular Django project.",
			"So if I go into the lecture3 directory and open up",
			"settings.py, what I'll see here is a big file all created for me by Django.",
			"I didn't write any of this code.",
			"But this is all just the default configuration for a Django project.",
			"And if you scroll down, somewhere there you'll see a variable",
			"called INSTALLED_APPS, which is where Django configures what",
			"apps are installed on this project.",
			"And there are a whole bunch of individual apps",
			"that are installed by default that are just created by Django.",
			"One, for example, manages sessions, which we'll take a look at a little bit",
			"later.",
			"But if I want to add my new app that I've just created called hello",
			"to these installed apps, I'll go ahead and just",
			"add to this list of strings, this INSTALLED_APPS variable,",
			"I'll just add hello.",
			"And so now hello is going to be an installed app on this particular Django",
			"project.",
			"So now what I'd like to do is actually make this app,",
			"this hello app do something and display something",
			"when I try and visit a particular route, for example.",
			"So how can I go about doing that?",
			"Well, let's go ahead and go into the hello directory.",
			"And let's take a look at views.py inside of my hello app.",
			"So here is the default file, again, from views.py.",
			"I see comment that's given to me by default",
			"that says, create your views here.",
			"And you can think of each view as something the user might want to see.",
			"So let's go ahead and just create a default view.",
			"In order to create a view in Django, we're going to define a function.",
			"So this function I'll just call index.",
			"This function, by convention, takes as argument a request argument.",
			"And this is going to be an argument that's",
			"going to represent the HTTP request that the user made in order",
			"to access our web server.",
			"So if we want information about that request,",
			"we can look inside of this requested object",
			"to get access to some other data.",
			"And we'll take a look at that momentarily too.",
			"But now, what would I like for this request to do?",
			"Well, what I want to do for now is, let's just do something simple",
			"and return an HttpResponse of, \"Hello, world!,\" for example.",
			"Now, HttpResponse is a special class created by Django.",
			"And so if I want to use it, I'll generally need to import it.",
			"And so Django is going to give us a lot of features",
			"that we might want to use in our web applications,",
			"but if we want to use them, we generally have to import them first.",
			"And it just so happens-- and I only know this",
			"from reading Django's documentation-- that I can include a line like this,",
			"from django.http import HttpResponse, to say I would like to import the ability",
			"to give an HTTP response.",
			"And now what I have is a function representing my view.",
			"This function is called index.",
			"And what the index function does is it just returns",
			"an HTTP response of, \"Hello, world!\"",
			"And so this is the response.",
			"But now we need to tell the app, like, when should you",
			"actually return this response?",
			"What URL is the user going to visit?",
			"And this is where we now begin to create some URL configuration, some sort",
			"of setting to tell Django when a particular URL is visited,",
			"then this function should be run in order to return that particular HTTP",
			"response.",
			"So how to do that--",
			"well, in order to do that, we're going to need to create",
			"a urls.py file for this particular app.",
			"So Django has one urls.py file that works for the entire project.",
			"But oftentimes we'll have each app contain its own urls.py file just",
			"for the sake of separating things out into different places,",
			"such that if we have multiple different apps, each of which",
			"is doing something independent, we can have each of those individual apps",
			"have its own urls.py file to control what URLs",
			"are available for that particular app.",
			"So I'll go ahead and go into the hello directory.",
			"And I'll create a new file inside of the hello directory called you urls.py.",
			"And what urls.py needs is, it needs to define a variable called urlpatterns,",
			"which will be a list of all of the allowable URLs that can",
			"be accessed for this particular app.",
			"And the way you create a URL is by first importing from django.urls import path.",
			"And let's create our first URL.",
			"I'll say path.",
			"And then the first argument here, I'm going",
			"to give the empty string to mean no additional argument--",
			"and we'll see what that means in just a moment-- meaning nothing",
			"at the end of the route.",
			"And then the second argument to path is what view should",
			"be rendered when this URL is visited.",
			"And so if I want to render my index view--",
			"recall that in views.py over here, I have this index function--",
			"then what I want to render when someone visits this URL, the empty URL,",
			"is going to be views.index.",
			"Views represents views.py, that file where I've defined all of my views.",
			"And an index just so happens to be the name of the function",
			"that I want to call when someone visits this URL, for example.",
			"And then you can optionally provide a path with a string name .",
			"To represent this URL I'm going to give this a name of index.",
			"We'll see why this can be useful later on,",
			"but the idea is, giving a name to a particular URL pattern",
			"makes it easy to reference it from other parts of the application.",
			"So later when we might want to link to things",
			"or have forms that are submitting to different parts of the web application,",
			"giving a name to a path can be a useful tool.",
			"In order to use views, last line I need to add to urls.py",
			"is to say from dot, in other words, from the current directory,",
			"go ahead and import views.",
			"Anytime I'm using a variable name like views, I'm using that name,",
			"I need to import it from somewhere.",
			"And it just so happens that views.py and urls.py",
			"are located in the same directory.",
			"So I can just say from dot import views to import all of that",
			"into this particular file.",
			"So this now is the urls.py file for this application.",
			"But the last step in order to get all of this working for the very first time",
			"is to go back into the lecture3 directory and open up urls.py here.",
			"This is the urls.py file for the entire project,",
			"for all of the apps that might be contained within this project.",
			"And it just so happens that there is one path already given",
			"to us by default called admin which runs a default Django application called",
			"the admin application.",
			"We'll see more about that in the next lecture.",
			"But for now, I'd like to add my own route here",
			"to say that I would like for a particular path",
			"to lead to not the admin app, but the hello app that I have just now created.",
			"So I'll go ahead and give this a path of hello.",
			"And what I'd like to do is say that, after you've",
			"included the path hello, go ahead and include all of the URLs",
			"from the urls.py my hello application.",
			"I'd basically like to link these two URL configuration files together.",
			"And so the command to do that is include hello.urls.",
			"Inside of the hello module, get at the urls file there.",
			"And that is now what I would like to add as a URL pattern.",
			"And in order to do this, I also need to import include since I'm",
			"using include inside of URL patterns.",
			"So that was a lot of steps just to get things started.",
			"But just to get a high-level overview of how this is all working,",
			"I have a Django project called lecture3.",
			"And inside of lecture3, there is a URLs file",
			"that decides what URLs I can access.",
			"I can access /admin, which takes me to the admin application which is created",
			"by Django.",
			"We don't have to worry about that just yet.",
			"But now I've just added that you can go to /hello to go to the hello",
			"application.",
			"And when you do that, I'm telling Django to look",
			"at the urls.py inside of the hello directory",
			"to figure out what additional URLs I can get to from there.",
			"So this is one master urls.py file that might",
			"connect to multiple different other URL configurations that exist as well.",
			"Then inside of the urls.py for my app, for the hello app,",
			"I've said that when someone visits just the default",
			"route on this particular application, go ahead and just run the index",
			"function that is one of my views.",
			"So all that's to say, now that that is done,",
			"I should be able to go back into my terminal",
			"and run python manage.py runserver to actually start up this web server.",
			"And now I can go back to this URL, but instead of just going to that default",
			"URL, I'll go ahead and go to that URL /hello.",
			"And when I go to /hello, what I see is hello world.",
			"So what was happening there is that I typed in a URL.",
			"That URL went to Django.",
			"And Django looked at that URL and looked at my urls.py file and said, you know,",
			"anytime something starts with /hello, that belongs to the hello app.",
			"And inside of our hello configuration, we",
			"said that when we go to the default route,",
			"we should run the index function.",
			"And the index function returns this \"Hello, world!\"",
			"response.",
			"And now we can begin to change that response.",
			"We can begin to adjust what it is that views.py is actually doing.",
			"Right now it says \"Hello, world.\"",
			"But if I want to change it to just say, like,",
			"hello, for example, I can just edit it.",
			"Now say the index function just returns and HTTP response of \"Hello!,\"",
			"for example.",
			"And so now I have to refresh this page.",
			"Now it just says \"Hello!\"",
			"So I can edit my files.",
			"When I do, Django notices that a change has been made.",
			"And it will re-update the server with my latest code such that now I can visit",
			"/hello.",
			"And I can see that an HTTP response of \"Hello!\"",
			"is what ultimately comes back to me.",
			"So now let's take a look at the idea that, in addition to just",
			"having one view inside of views.py, I can have as many views as I want.",
			"I can create additional functions that each return different responses.",
			"Maybe I'd like a route that says hello to me, for example.",
			"So let me define a new function that I'll call",
			"brian that accepts a request argument.",
			"And this function is just going to return HttpResponse \"Hello, Brian!,\"",
			"for example.",
			"And now I need to associate this new view that I've created with the URL.",
			"So I'll go ahead and go back to urls.py inside of my hello directory.",
			"And so I have a default route represented by the empty string",
			"that loads the index function.",
			"But I can add to this, just add to this list, add a new path,",
			"where if I type brian into the URL instead,",
			"that will load the brian function.",
			"And I'll go ahead and give that a name as well.",
			"So now if I refresh the page-- and I'm still on just a /hello route.",
			"And that just displays \"Hello!,\" for example.",
			"But if I go to /brian, for example, now I see \"Hello, Brian!\"",
			"I have two different URLs, one that is just /hello with nothing after it,",
			"which was that empty string, and one which was /hello with brian following",
			"it that loads a different view function that returns a different HTTP response.",
			"And so we could imagine continuing to do this.",
			"I might want a web application that has a number of different URLs",
			"that I can visit.",
			"So I could go ahead and add, like, a david function,",
			"for example, that returns in HttpResponse of \"Hello, David!\"",
			"And then again, inside of my URL configuration,",
			"I would say, go ahead and give me another route called david that loads",
			"the david function.",
			"Each time, I'm giving it a URL, so what comes after the /hello.",
			"I'm giving it a function to run, the david function inside of views.py,",
			"and giving it a name just to make it easier to reference a little bit later.",
			"And so now I have /hello/brian, and now I have /hello/david,",
			"each of which displays a different HTTP response.",
			"So you can imagine starting to use this feature",
			"to begin to build a web application that has a number of different routes.",
			"It has different routes to do different things.",
			"And many web applications are parameterized",
			"by what it is it's actually in the URL.",
			"So for example, on Twitter, you can go to a Twitter.com slash someone's user",
			"name to see all of that user's tweets, for example.",
			"Or GitHub, a service we've taken a look at now,",
			"you can go to GitHub.com slash your GitHub user",
			"name to be able to see all of the repositories for a particular user,",
			"for example.",
			"So if you think about how that might be implemented if either of these services",
			"were using Django, they might have a urls.py file or something like it",
			"that is just defining a whole bunch of URLs",
			"and saying what route should be associated with them when",
			"someone visits that page.",
			"But you can imagine ultimately that this is probably going to start to get",
			"tedious, that if I want to say hello to anyone,",
			"if I want to not only support /hello, /brian, and /david,",
			"but I also want to support arbitrary names like /harry, or /ron,",
			"or /hermione, well then it would seem that I need to create a whole bunch",
			"of different functions, each of which says hello to a different person,",
			"and then create a whole bunch of different URLs to be able to do that",
			"as well.",
			"But it turns out that what I can do is create URL patterns that",
			"have placeholders, in effect, things that",
			"allow me to parameterize the path via certain path converters, so to speak.",
			"So what does that actually mean?",
			"Well, let's instead of creating functions",
			"that just say \"Hello, Brian!\" and \"Hello, David!,\"",
			"let me create a new function that's just called greet,",
			"for example, that also takes a request, but takes an additional parameter.",
			"It takes a parameter like someone's name, for example.",
			"And this greet function is going to return",
			"an HttpResponse of \"Hello comma,\" and then I'll go ahead and plug in the name",
			"here.",
			"And I'll need to add an f to the beginning of the string to indicate",
			"that it's a formatted string--",
			"this is just Python syntax--",
			"to say that I would like to say hello, not just to anyone,",
			"but to whatever the value of the name variable happens to be.",
			"I'd like to substitute the name variable into that greet function.",
			"And then what I can do is, inside of you urls.py,",
			"I'll go ahead and add another path, but instead of saying a name like Brian,",
			"or David, or Harry, for example here, I'm going to say in angled brackets",
			"str:name.",
			"And when someone visits that route, let's go to the views.greet function.",
			"And the name for this route will be greet.",
			"And so what's going on here is we have a fundamentally different kind of path.",
			"Rather than prescribing exactly what the URL should look like, like, nothing",
			"after the end of the route, or Brian at the end of the route,",
			"or David at the end of the route, this route here on line seven",
			"is saying this route code be any string that we're going",
			"to give a variable name of name to.",
			"But you could replace a name with something else entirely.",
			"And this could be any string.",
			"So it could be Brian, or David.",
			"Or it could be any other name.",
			"And when that happens, we'll call the greet function.",
			"And when that function is called, it will pass in this argument, this name,",
			"as a parameter to that function.",
			"So now I'd be able to create a custom route that",
			"allows me to specify any string and figure out",
			"how to deal with that appropriately.",
			"So now if I visit /hello/harry, for example,",
			"not a route that I explicitly created, but that is a string--",
			"harry is a string.",
			"I press Return.",
			"It says, \"Hello, harry!\"",
			"I can go to /hello/ron and say \"Hello, ron!,\" and /hermione to see \"Hello,",
			"hermione!\" as well.",
			"And you know what?",
			"Maybe just for good measure, I'd like to capitalize this name,",
			"like Hermione, for example.",
			"Well, the way to do that is that I can add arbitrary Python logic.",
			"It turns out that with any Python string,",
			"there is a function or method on that string called capitalize that I can say",
			"is just dot capitalize.",
			"And if I can do it in Python, then Django",
			"allows me to incorporate it into the response that I'm giving back.",
			"So I'm now using Python to take the name,",
			"capitalize it, and use that in the response that",
			"gets sent back to the user.",
			"So now /hermione returns \"Hello, Hermione!\" name with a capital H,",
			"likewise for \"Hello, Ron!,\" likewise for \"Hello, Harry!\"",
			"I've now been able to add a route that takes an HTTP request",
			"as well as a parameter, that name, whatever was in the URL,",
			"and return an HTTP response that just says hello to that person.",
			"So these HTTP responses can be any HTML content.",
			"Right now we're just using text, but you can imagine",
			"adding lists or tables to this as well.",
			"But you might imagine that if I have to include an entire HTML page just",
			"inside these double quotes, that that's going to get unwieldy very quickly.",
			"Very quickly we're going to find that there",
			"is a lot of HTML to just go in a single string inside of a Python program.",
			"And if we think back to the principles and the ideas",
			"that we've been looking at in this course so far,",
			"we've generally tried to separate out different parts of our application",
			"wherever possible.",
			"And there is a lot of value in that, one,",
			"in just keeping things clean, two in making sure",
			"that people are able to collaborate.",
			"If you want one person working on the Python logic and one person working",
			"on the HTML, you'd rather they not step on each other's toes",
			"as they're working.",
			"And so what we can do in Django as well is separate the response, the HTML,",
			"from the actual Python code here as well.",
			"And so the way we can do that is, instead of returning an HTTP response,",
			"I can instead--",
			"let's say for this default route, instead",
			"of returning an HTTP response of hello, let me go ahead and render.",
			"And when I render something I need to pass in the HTTP request.",
			"But I'll also pass in the name of a template.",
			"And I'll go ahead and call this template hello/index.html.",
			"",
			"So if I don't want to render just a string,",
			"but I want to render an entire HTML file, I can call this render function,",
			"pass in the request, but then also pass in the name of a template.",
			"And now all I need to do is create that template.",
			"So let me go ahead, and inside of the hello directory,",
			"I'll create a new folder called templates.",
			"Inside of that template, I'll create a folder called hello,",
			"because the template name here is hello/index.html.",
			"So I need to create a folder called hello, inside of which is a file",
			"called index.html.",
			"I could have just called it index.html without the hello, but the reason",
			"we often want to prefix our templates with a directory name",
			"is to so-called namespace them, to make sure",
			"that if we have multiple different index.html files",
			"in multiple different apps, to make sure they don't conflict with each other.",
			"So Django best practice is to use hello/index.html,",
			"or whatever your app name is.",
			"And inside of that hello directory, I'll then create a file called index.html.",
			"And this index.html can contain any HTML content, same as we've seen before.",
			"So I could add that doc type, the HTML tag, a title of hello.",
			"And maybe inside the body I'll have an h1 that says, \"Hello, World!,\"",
			"for example.",
			"So I can have an entire HTML page just like this.",
			"And now when I visit the default route of my web application by going back",
			"into my web browser and just going to /hello, for example,",
			"now I see that HTML that I've defined inside of index.html.",
			"It's a big h1 that just says, \"Hello, world!\"",
			"And it turns out that these HTML pages, these templates that I can render using",
			"Django are parameterizable as well.",
			"Maybe I want to implement hello/hermione as some sort of HTML page, an HTML page",
			"that says, \"Hello, Hermione!\"",
			"And using HTML out of the box, you can't really do stuff like this.",
			"HTML is a markup language, not so much a programming language,",
			"which means it doesn't, by default, have support for things like a variable",
			"to represent someone's name.",
			"But using Django's ability to take an HTML page and treat it like a template",
			"that we can render, Django has added its own templating language,",
			"so to speak, on top of the existing HTML.",
			"And I can take advantage of that to be able to render an HTML page that",
			"actually has a variable inside of it, or a condition inside of it,",
			"or a loop inside of it, as we'll see in just a moment as well.",
			"So let's go ahead and go back to the views.py.",
			"And the function that I would like to change",
			"is this greet function here that right now is just returning an HTTP response,",
			"but I'd like to render an entire page, for example.",
			"So what might I render?",
			"Well, let's render a template called hello/greet.html.",
			"",
			"And then this render function can take an optional third argument",
			"which is called the context.",
			"And the context is all of the information",
			"that I would like to provide to the template, all the variables,",
			"for example, that I want the template to have access to.",
			"And so one thing I might want my template to have access to,",
			"for instance, is something like a name.",
			"And so this is a Python dictionary, just a sequence of key value pairs.",
			"And this name might be associated with what value?",
			"So name is the key.",
			"The value I want to be name.capitalize.",
			"",
			"And so what's going on here is that now when I render this template,",
			"this template hello/greet.html, I'm providing that template with some",
			"additional content, some additional information as represented by this",
			"dictionary here, where I'm providing information with a key of name",
			"and effectively giving this template access to a variable called name.",
			"And its value is whatever name.capitalize",
			"is equal to, where this name here is the argument to the function greet.",
			"So now I can return this template.",
			"And inside of greet.html, I can use this variable called name.",
			"So how do I go about doing that?",
			"Well, let's first create that greet.html file.",
			"So inside of the template/hello directory, I already have index.html.",
			"I'll go ahead and create a new file called greet.html.",
			"And inside of greet.html, I'll go ahead and write some HTML.",
			"",
			"And inside the body of the HTML, whereas before I",
			"might have said something like \"Hello, world,\"",
			"I don't want to say hello to world.",
			"I just want to say hello to whoever the name is, whatever is contained inside",
			"of that variable called name.",
			"So how might they go about doing that?",
			"Well, what I can do is use these double curly braces.",
			"And double curly braces are part of the Django templating language",
			"that allows me to say, I would like to plug in the value of the variable",
			"into this particular position inside of my template.",
			"And so if I include the word name here, then what I'm saying here",
			"is that when you render this greet.html template, inside the body of the page,",
			"I would like for there to be an h1, a big heading that just says \"hello",
			"comma.\"",
			"And then inside these double curly braces,",
			"I'm saying plug-in the value of the variable name there.",
			"If name is Hermione, it's going to be \"Hello, Hermoine!\"",
			"If it's Harry, it's going to be \"Hello, Harry!\"",
			"If it's David, it's going to be \"Hello, David!\".",
			"So let's go ahead and give this a try now.",
			"Now when I go to /hello/harry, for example,",
			"I now see a big h1 tag that says \"Hello, Harry!\"",
			"If I go to /hello/Ron, I see a big h1 that says \"Hello, Ron!\"",
			"And the reason why all this is happening,",
			"the way we're getting to that final position",
			"is because you urls says that when I have",
			"a URL that just is a string like someone's name,",
			"we'll call the greet function.",
			"The greet function inside of views.py is taking the name as an argument,",
			"rendering the greet.html template, and passing in that name",
			"as part of the context, part of what the template has access to.",
			"And inside of greet.html, here is the actual HTML file.",
			"Here is where we then plug in the value of name.",
			"So it's a lot happening across a lot of different files.",
			"But the reason for all of these various different files",
			"is to help keep things separate, to have one file that",
			"is just responsible for URLs and directing people to what should",
			"happen when those URLs are clicked.",
			"Then we have one file, views.py, that is entirely responsible for deciding, ,",
			"on this particular view what template should be rendered,",
			"what information should be passed in this context.",
			"And then I separately have a file for each of my HTML templates",
			"that are saying what does the page actually look like.",
			"And so if you start to begin to think about the separation of components",
			"inside of a web application, it can help to make the structure of a Django",
			"application a little bit clearer.",
			"So we've now been able to use the Django templating language to put variables",
			"inside of our HTML templates, to be able to create",
			"an infinite number of different routes where",
			"I can visit slash hello slash some name in order",
			"to display hello to that person's name.",
			"But the Django templating language is even more powerful than just that.",
			"There are a lot of additional features that the templating language",
			"is going to give us access to.",
			"And we'll take a look at a couple of those now.",
			"And to start I'm going to introduce you to a website you may be familiar with.",
			"I consider it to be one of the simplest websites on the internet.",
			"It's a real website called isitchristmas.com.",
			"And if I visit isitchristmas.com and press Return,",
			"here is what the website says.",
			"The website says, no.",
			"It is not Christmas.",
			"And you just have to take my word for it.",
			"If you visit this website on Christmas day,",
			"you go to isitchristmas.com, it will instead say, yes.",
			"And so this website is very simple.",
			"You might imagine that it's really just an HTML page that probably contains",
			"a big heading that, in this case, just says the word \"no,\"",
			"but on Christmas day, just as the word \"yes.\"",
			"Now, how might a page like this be implemented?",
			"Well, one way you could imagine is that on Christmas day",
			"whoever maintains the website goes into the HTML and changes no to yes,",
			"and then afterwards changes the yes back to a no.",
			"But we can be a little bit cleverer about this",
			"if we realize now that we have the ability",
			"to use Python logic to be able to use logic like a condition",
			"to be able to decide how a web page is ultimately going to be rendered.",
			"For instance, the condition might be something simple like,",
			"if today's date is Christmas, then render yes, else render no.",
			"And so we're going to use Django and take",
			"a look at some of the features of Django's templating syntax to be",
			"able to create a website like this.",
			"We're not going to create Is It Christmas.",
			"We're going to create Is It New Year's, that",
			"checks if the current date is January 1 or not.",
			"This is going to be a separate app.",
			"It's sort of distinct from our hello app.",
			"The hello app just says hello to people.",
			"The new year app, for example, is just going",
			"to see whether or not it happens to be New Year's, for example.",
			"So I will now go ahead and create a new app.",
			"And I can do that by some writing python manage.py startapp.",
			"And I'll call the app newyear, for example.",
			"I'd like to create a new app called newyear.",
			"I've now created that new app.",
			"If I type ls, you'll see that not only do",
			"I have a hello directory that represents the hello app,",
			"I now have this newyear directory that represents the fact",
			"that this is a new app called newyear.",
			"As with before, I'll need to go into settings.py inside of my project",
			"directory and add newyear as an installed app.",
			"This is now a new app that exists in my web application,",
			"so it too now needs to be a new installed app.",
			"What else do we need to do for new apps?",
			"Well, I need to go into urls.py for lecture3.",
			"And just as before, I had a path saying when I go to /hello,",
			"then you should go to all the URLs for the hello app,",
			"let me add a new path that says that if I go to my application /newyear,",
			"well then you should go to all of URLs for the newyear file,",
			"go to newyear.urls, representing the urls.py file inside of the newyear app.",
			"Now, that file isn't given to us by default, so we need to create it.",
			"I need to go into my newyear folder and create a new file called urls.py.",
			"And inside of that file, I'll do from django.urls import path, from .",
			"import views, and then define some urlpattern, same as before,",
			"where I'll just have a single path that loads the index function inside",
			"of views.py.",
			"And it has a name of index.",
			"So again, just mirroring the type of structure",
			"that we've already seen before in the hello app--",
			"this app is just going to have a single route, the empty route, that",
			"loads the index function.",
			"Now all that's left to do is to actually create that index function.",
			"So we go into views.py.",
			"And here now I'll define an index function that",
			"takes an HTTP request as an argument.",
			"And now inside of this index function, I would",
			"like to add some logic that checks whether or not it's January 1.",
			"And so how might I go about doing that in Python?",
			"Well, it turns out that there is a date time module in Python.",
			"And you can learn about this just by reading up about its documentation",
			"to figure out how it works.",
			"And the date time module gives me access to things about the date and time,",
			"for instance.",
			"And I can play around with the date time module outside of Django just",
			"to get a feel for how it works.",
			"If I just type python into the interpreter--",
			"into my command line, rather, what I get is the Python interpreter that",
			"lets me just write Python code just to experiment, and test,",
			"and see what the result of running this Python code would be.",
			"So I can try, like, import datetime, for example.",
			"And let me create a new variable called now, which is datetime.datetime.now.",
			"It just so happens that inside of the datetime module",
			"is a function called datetime.now that gets",
			"the current date and time, for example.",
			"And so inside of now, I have access to variables like now.year,",
			"for example, which tells me the year, now.month,",
			"now.day that gives me information about the year,",
			"the month, and the day of the current timestamp based on getting",
			"whatever the current time is right now.",
			"And given that I have this information.",
			"You can imagine us constructing a Boolean",
			"condition to check whether or not today is in fact the new year.",
			"And that condition might look like now.month equals 1 and now.day equals",
			"1.",
			"And I can press Return and see that, OK, the result of this condition is false.",
			"It is not true that both the month the day are true--",
			"or are 1, rather.",
			"And so using that sort of condition, I can now",
			"take that and adapt it into my Django view",
			"that I'm using to try and render whether or not it's the new year or not.",
			"So how might I go about doing that?",
			"Well, what I'd like for my index function to do",
			"is return render a template.",
			"The template will be called newyear/index.html.",
			"And then what context what I would like to provide to this template?",
			"What information, what variables do I want",
			"for this template to have access to?",
			"Well, I want it to have access to a variable that'll",
			"just be called newyear.",
			"And in order to access that, I need access to the current date.",
			"So to do that, at the top of my file, I'll go ahead and import datetime.",
			"And inside of my index function, let me give myself",
			"a variable called now, which is equal to datetime.datetime.now.",
			"And this newyear variable that I'm passing in to my template",
			"will be equal to now.month equals 1 and now.day equals 1.",
			"So if it is the case that after I get the current date",
			"and time by running datetime.datetime.now,",
			"saving the result inside of this variable",
			"called now, if both and the day are equal to 1,",
			"then the value of this new year variable is",
			"going to be true when the template gets access to it.",
			"Otherwise, as it is the case today and on most days,",
			"the value of that variable is going to be false.",
			"Now all that remains for us to do is to actually create this template,",
			"newyear/index.html, and have that template somehow use this newyear",
			"variable in some interesting or meaningful way.",
			"So how do we do that?",
			"Well, if you recall what we did with the hello application, when",
			"we want a template, then inside of our application, this newyear app,",
			"we'll need a new folder that we'll call templates,",
			"inside of which I'll create a new folder called newyear.",
			"And inside of that, I'll create a new file that will be called index.html.",
			"Here will be the index.html file for this new year application.",
			"The structure will be very similar.",
			"I'll give it a title of Is it New Year's?",
			"And inside the body, now here is where the interesting logic is.",
			"Sometimes I might want a big h1 that says, YES.",
			"Other times, I might want a big h1 that says, NO.",
			"And what I need to do is conditionally decide when to say yes",
			"and when to say no.",
			"And inside Django's templating language--",
			"and again, you'd only know this by reading Django's documentation--",
			"just as we used double curly braces to say plug in the value of a variable",
			"here, the syntax for logic inside of a Django template, like conditions,",
			"is curly brace percent sign.",
			"So we use curly brace percent sign, some logical statement, and then",
			"percent sine curly brace to include any kind of logic.",
			"And the logic in this case is an if statement.",
			"And this is very Python-like.",
			"We'll say if newyear--",
			"newyear is the name of that variable that I passed into this template.",
			"And if it is a new year, then I want to display an h1 that just says, YES.",
			"And then else, also inside of curly braces and percent signs,",
			"I want a big h1 that just says, NO.",
			"So if it's the new year, then yes.",
			"Else, no.",
			"And then Django also requires me to give an endif tag",
			"to say this is the end of the if statement.",
			"Unlike Python itself that uses indentation to denote when the if",
			"statement is beginning and ending, in Django,",
			"the indentation is optional inside of the template.",
			"But in order to distinguish when the if statement is",
			"happening from when the if statement is over,",
			"we need this endif tag at the very end.",
			"So this here is a condition inside of our Django template.",
			"We're saying, if a particular variable is true, then render this in the HTML.",
			"And else render something else.",
			"If it's the new year, say, yes, it's the new year.",
			"Otherwise say, no, it is not the new year.",
			"So we can try this out.",
			"Right now we're on the route /hello/ron.",
			"If I instead, not go to /hello, but go to /newyear, for example,",
			"this site can't be reached.",
			"OK, so why did that happen?",
			"127.0.0.1 refused to connect.",
			"So what must be happening is, for some reason, my web server isn't running.",
			"And it turns out that, in order to create the new application,",
			"I had stopped my web server.",
			"And so if ever that happens, to start it up again,",
			"we can just rerun python manage.py runserver",
			"to say I would like to now start up this web application again.",
			"And all right, it looks like now I have another error.",
			"There is some sort of syntax error.",
			"And the syntax error is a newyear/views.py So let me go ahead",
			"and go back into views.py and see if I can spot where the syntax error is.",
			"And all right, it looks like render is a function.",
			"Function arguments need to be enclosed in parentheses.",
			"And while I have a starting parenthesis here,",
			"I had forgotten a closing parenthesis.",
			"So I'll go ahead and add.",
			"That and now that will complete the render function.",
			"And now I should be able to load /newyear.",
			"And indeed what I see is that, no, it is not the new year.",
			"And so what happened is we ran some Python logic, calculated",
			"the current date and time, checked to see is the current month 1,",
			"is the current day 1.",
			"And if that's not true, then we're here displaying, no.",
			"And if we look at the actual HTML of this page,",
			"like, what HTML is actually making up this particular page,",
			"which I can do by right clicking or Control",
			"clicking and just clicking View Page Source--",
			"this will show me the HTML of this page.",
			"So this is the HTML that came back from the web server",
			"that my web browser, Chrome in this case, is rendering.",
			"And what you can see is it looks very similar to the index.html template we",
			"wrote before, but it only contains no.",
			"It doesn't contain any of that if logic.",
			"It doesn't contain the yes.",
			"It just contains the HTML content that we wanted",
			"to respond with back to the user.",
			"And so you might imagine based on this that would",
			"Django is really doing is taking the index.html template",
			"and then manipulating it based on the input we get,",
			"based on whether or not it's the new year",
			"or not, to say that, if it's not the new year,",
			"then all we should do inside the body is display an h1 that says, no.",
			"And the user when they get it, they don't see the conditions.",
			"They don't see there was another branch that could've been taken.",
			"They only see the final result of rendering",
			"the template with whatever variables, and logic, and conditions happened",
			"to be inside of that rendering process.",
			"So when the user sees it, all they see is the word \"no.\"",
			"And if we were to run this program on New Year's Day,",
			"it would indeed say, yes.",
			"And we can test it just to see what it would be like if that",
			"were the case by cheating a little bit.",
			"Instead of now.month equals 1 and now.day equals 1, let me just go ahead",
			"and replace this condition with newyear is equal to true.",
			"Just to test it, let's try passing in the value true as the value of newyear",
			"and see what happens instead.",
			"And now when I run this page, now it does say yes,",
			"as we might expect it to on New Year's.",
			"And so that can be a nice way of just testing what",
			"would happen if you were to replace a particular variable",
			"with a particular value.",
			"We can substitute inside the context just",
			"for development purposes what value we would like that variable to take on.",
			"Now we've rendered HTML, but we haven't really",
			"added any styling to this website just yet.",
			"The real isitchristmas.com has the text centered a little bit.",
			"It's in sans serif font instead of having the little serifs or the glyphs",
			"at the edge of each of the characters.",
			"So maybe I'd like to add some custom CSS to this file as well.",
			"And we could do this conventionally the way",
			"we've seen it done before by just including a CSS file.",
			"And that is what we're still going to do.",
			"But Django has a special build system for dealing",
			"with what are called static files, files that aren't going to change.",
			"The HTML of this page, that's not a static file,",
			"because it changes depending on whether it's New Year's or not.",
			"If I visit it on New Year's, it says, yes.",
			"If I visit it when it's not New Year's, it says, no.",
			"And so this is a dynamic page.",
			"But static files, files that don't change, like our CSS--",
			"the CSS doesn't change whether it's New Year's or not.",
			"And because that file is unchanging, Django calls it a static file.",
			"And it means that Django can be a little bit cleverer about it.",
			"If you start to think about projects of scale,",
			"you might store your static file somewhere separate",
			"just in some place that makes it easy to access, where they're cached for faster",
			"reads later on.",
			"We'll talk about that a little more later in the course",
			"as we start to delve into topics like scalability,",
			"as you begin to build larger web applications on the internet.",
			"But long story short, Django contains a lot",
			"of features that make it easy for us to deal with static files, files",
			"that don't change like CSS files.",
			"And generally the way that we'll add static files is,",
			"inside of the newyear folder, in addition to having",
			"a templates/newyear/index.html, we'll also create a new folder called static",
			"that will contain all of the static files that we would like to include",
			"inside of this application as well.",
			"Inside of static, I'll create a new folder called newyear,",
			"inside of which is a new file called styles.css.",
			"And so inside of styles.css, I can now write all of the same CSS",
			"that I would want to have written before.",
			"So maybe I want all my h1s to have a font family of sans serif, a font size",
			"of 90 pixels, maybe, and I want the text alignment",
			"to be centered, just a couple of CSS properties and values, same",
			"as we've already seen, just to say I would like",
			"to give h1 tags this particular style.",
			"Now what's left to do inside of index.html is, at the top of our page,",
			"I'll go ahead and add a command that says load static to mean go ahead",
			"and load static files for this particular HTML page.",
			"And now I'll go ahead and link a style sheet.",
			"You'll recall that this type of command inside the head section of my web page",
			"where I would like to link some particular URL as a style sheet",
			"is how I add CSS to a page.",
			"But what I'm going to include in here as the link is,",
			"I'm going to include, rather than hardcoding a URL, which I could do,",
			"Django best practice says that, instead, let's just",
			"say it's going to be a static file.",
			"And the static file is called newyear/styles.css.",
			"",
			"So I'm not specifying exactly what the URL is,",
			"but I'm saying it is a static file that is inside of a newyear folder",
			"called styles.css.",
			"And Django is going to figure out what that URL ought to be.",
			"And this is often better than hardcoding a specific URL,",
			"because maybe you might imagine in larger web applications, where",
			"you're static files are might change.",
			"You might move your static files to a different domain",
			"or to a different route.",
			"And so in order to deal with that, this static keyword",
			"just means Django will figure out where your static files are located and will",
			"replace this command here in the curly braces and percent",
			"signs with the actual URL for this particular file.",
			"So now that I've said that I want to link this particular static file,",
			"styles.css, into this web page, what I might first",
			"need to do just to let Django load static files is restart the server.",
			"So you might sometimes need to Control C and then",
			"go ahead and rerun python manage.py runserver.",
			"That will rerun the server.",
			"And now if I go back to the /newyear route inside my web browser,",
			"now I see the style look a little more close to what I actually wanted it",
			"to be, centered, sans serif, in a larger font that, here, just says, no.",
			"And if we look at the underlying HTML of this page,",
			"we see that Django has actually for us filled in what the static URL is",
			"for these particular static files.",
			"And by default, Django just uses /static/ and then whatever the files",
			"happen to be.",
			"And so anytime we're dealing with static files, files",
			"that don't change like CSS files or JavaScript files, which",
			"we'll take a look at later in the course, that's generally where they're",
			"going to go, in some sort of static file that we're going to ultimately link",
			"to this particular page.",
			"So now we've seen a couple of examples of web applications",
			"we can make using Django.",
			"We've seen the hello app in Django that can parameterize",
			"URLs, that, depending on the URL we visit,",
			"can say hello to Brian, or hello to David, or Harry, or Ron, or Hermione.",
			"And we've seen the ability to, using Django, add some conditions,",
			"to be able to conditionally say, if something is true,",
			"render this page, if something else is true, render another page.",
			"Let's now use these features plus some additional features",
			"to begin to build a more sophisticated web application, something like a to do",
			"list, that maybe I want to web application that gives me",
			"a list of tasks, that lets me add new tasks to my to do list,",
			"and lets me view all of the tasks that are currently on my list.",
			"And I'd like to build this up one step at a time.",
			"So where can I start with this?",
			"Well this, again, is going to be a new app.",
			"Inside of my lecture3 project, I have two apps so far,",
			"a hello app and an app for the newyear.",
			"And now what I'd like to do is create a third app",
			"that I'm just going to call tasks.",
			"That is going to be my task management app that's all",
			"under this umbrella lecture3 project.",
			"So I'll go ahead and run python manage.py startapp tasks",
			"to say I'd like to go ahead and create a new app called tasks.",
			"Anytime I create a new app, a couple of steps I need to follow--",
			"recall that I need to go into settings.py inside of lecture3",
			"to say that, in addition to installing hello and newyear,",
			"I'd also like to install the tasks app, for example.",
			"Then I need to go into urls.py inside of lecture3",
			"to say that, in addition to hello and newyear,",
			"I'd also like for us to include the URLs for tasks.",
			"This urls is, again, the table of contents for my entire web application,",
			"where in my web application, if I visit /hello,",
			"then we go to the URLs for the hello app.",
			"If I go to /tasks, then I go to the URLs for the tasks up, so on and so forth.",
			"It tells me all of the different URLs that I now have access to.",
			"And as with before, the URLs file isn't created",
			"for me inside of my application.",
			"So I will need to go into the tasks directory.",
			"And inside of the task directory, I'll go ahead and create a new file",
			"that I will call urls.py.",
			"And the format of this is going to be very similar to what we've already",
			"seen, from django.urls import path from . import views.",
			"And now I define my urlpatterns, where I would",
			"like a path that is just the empty string, the empty path for now,",
			"that loads the index function whose name is index, for example.",
			"So now let's actually write this index function inside of views.py.",
			"What I'd like to do is define a function called index that accepts a request.",
			"And what I'd like to do is render a page that",
			"displays a list of all of my tasks.",
			"So before we get to the idea of adding tasks,",
			"let's just see if we can get our program to display a list of tasks,",
			"for example.",
			"So I'll, up at the top, create a global variable",
			"that I'll just call tasks that the entire application is",
			"going to have access to.",
			"And I'll add three tasks to it.",
			"For now, we'll just use foo, bar, and baz, just sort of nonsense names",
			"that are just useful strings for testing purposes,",
			"just placing those as sample tasks that I might",
			"want to have inside of my application.",
			"And now what I'd like to do is render a template.",
			"The template I'd like to render will be called tasks/index.html.",
			"",
			"And then I'll provide some context to it, some information",
			"that index.html needs.",
			"What information does index.html need?",
			"Well, index.html needs access to all of my tasks.",
			"And where are all of my tasks?",
			"Well, they're inside of this variable that just so happens",
			"to also be called tasks.",
			"And this will be something we see quite often as a paradigm in Django,",
			"where we see a key and a value that look like they have the same name.",
			"The key distinction is, whatever is here on the right after the colon,",
			"this is the value the variable takes on.",
			"This is a Python variable, like this Python variable tasks here.",
			"On the left, this key, this string tasks, that is the name of the variable",
			"that the HTML template will have access to when Django is rendering it.",
			"So Django has access to this variable name on the left that",
			"has this value on the right.",
			"So if you see this paradigm, that's ultimately what that's going to mean.",
			"And now what I need to do is create this index.html file",
			"and make it use this tasks variable somehow.",
			"How might I to go about doing that?",
			"Well, I can go back into my tasks directory,",
			"create a new folder for my templates.",
			"So I'll create a templates directory, inside of which is a tasks directory,",
			"because the template that I'm rendering, again, is tasks/index.html.",
			"And inside of tasks, I'll create a new file called index.html, inside",
			"of which we'll include some HTML.",
			"I'll include just the standard starting HTML.",
			"The title will be Tasks.",
			"And now we'll have the body of the HTML page,",
			"that I want to display all the tasks inside of an unordered list, perhaps.",
			"And if you recall from HTML, to create an unordered list,",
			"it looks a little something like this. ul starts the unordered list.",
			"And each list item is an li tag, like item one, and then item two,",
			"and then item three.",
			"Something like that gives me an unordered list",
			"that has three elements inside of it.",
			"But I don't want to do this now, because I don't want to hard code",
			"or exactly specify what all of the tasks are going to be.",
			"What I really want to do is loop over this tasks variable",
			"here, looping over all of the tasks inside of it",
			"and creating a list item for each one of those tasks.",
			"And just as in before where we could use if inside of curly braces and percent",
			"signs to use a condition, likewise we can",
			"use for to say something like, for task in tasks,",
			"I would like to display a list item.",
			"And then using these double curly braces, I'm saying plug in the task",
			"here.",
			"In between these list item tasks, I would",
			"like to plug in whatever the value of the task variable is.",
			"And then I'll go ahead and end the for loop there.",
			"So what I've done here is, rather than add a condition into a template,",
			"which we've already seen, I now have the ability",
			"to add a loop into an HTML template using",
			"Django to say that, for task in tasks, I'd",
			"like to loop over all of the elements inside of this sequence called tasks.",
			"And for each one of those individual tasks,",
			"I would like to display a list item in HTML that includes whatever",
			"the value of the task happens to be.",
			"An endfor, just like endif in the if statement,",
			"endfor is going to end the for loop.",
			"So this syntax now, rather than give me exactly the same number",
			"of list items every time with exactly the same content, will be dynamic.",
			"Whatever the value of tasks is, we will now see on this page",
			"each one as a list item.",
			"And we can test this right now if actually run this application",
			"by going to python manage.py runserver.",
			"I'll go ahead and go to this URL.",
			"The default URL has no page, but if I go to /tasks, well,",
			"then here is what I see.",
			"I see an unordered list that has foo, bar, and baz, each one as a list item.",
			"And if I view the page source to see what the actual HTML is,",
			"here is what I see.",
			"I only wrote one li tag inside of my template,",
			"but because I put it inside of a for loop",
			"that iterates over each of the tasks, what I ultimately get in the HTML that",
			"comes back to the user is one list item for each of the elements",
			"that was originally inside of that list.",
			"So I now have the ability to loop over a list",
			"in order to generate that list of tasks.",
			"Of course, there is still no way to modify any of these tasks.",
			"What we have here is just a fixed list of tasks",
			"that just so happens to be rendering using a loop.",
			"What I'd maybe like is another page that will",
			"allow me to add in new tasks, a form, effectively,",
			"that lets me type in a new task and press add in order to add a new task.",
			"So let's do that.",
			"Inside of views.py, I'll define a new function that I'm going to call add.",
			"And would the add function is going to do is render tasks/add.html.",
			"",
			"In order to know when to run the view, I need to give this view a URL.",
			"So I go into urls.py and add a new path.",
			"When I go to the add route, I want to go to the views.add function.",
			"And I'll call this function add, for example.",
			"And so now when I go to /task/add, it's going to call the function inside",
			"of views.",
			"And inside of views here, it's going to run",
			"the function that will render add.html.",
			"So let's go ahead and now write add.html.",
			"We'll go into templates.",
			"I'll create a new file called add.html.",
			"And you know what?",
			"Add.html syntax is very similar to the syntax from index.html",
			"in terms of what the HTML content is.",
			"So I'll go ahead and just copy this whole page from index.html,",
			"paste it into add.html.",
			"The only thing that's different is the body",
			"of the page, where instead of an unordered list that",
			"displays all the tasks, I'd instead like a form, where that form has",
			"an input whose type is text--",
			"and maybe this input field has a name called task such",
			"that I can access that input data later--",
			"and an input whose type is submit, for example.",
			"And maybe I'll give it a big heading at the top that says,",
			"like, add task, for example.",
			"So now I have a new route that adds a task.",
			"So my default /tasks route just displays a bulleted list of all the tasks.",
			"And if I go to /tasks/add, here now is my form that gives me a place where I",
			"can type in a task, press Submit.",
			"That right now does nothing, but that ultimately, I hope,",
			"will actually add a new task.",
			"Of course, something I just did there should",
			"strike us as not the best design.",
			"In particular, the decision I made was because the general structure",
			"of this HTML page is similar--",
			"it's got the HTML tag.",
			"It's got a head.",
			"The title of the page is Tasks.",
			"Ultimately I just copied over the content of index.html",
			"and pasted it into this new HTML page add.html.",
			"And any time you find yourself copy pasting,",
			"this should be another area where you start",
			"to think there is probably a better way to do this.",
			"And with just pure HTML, there kind of wasn't.",
			"If we wanted in multiple different HTML pages that displayed similar content,",
			"we needed the same HTML on all those different pages.",
			"But now in the world of Django, we have the ability",
			"to use something called template inheritance.",
			"What I'm now going to do is define an HTML file called the layout, just",
			"some file that the other files add.html and index.html",
			"are going to inherit from.",
			"They're going to inherit from my layout all of the structure of the page that's",
			"the same on both of the pages.",
			"And all I then need to write is what differs between the pages.",
			"And as I mentioned before, the only thing",
			"that differs between add.html and index.html",
			"is the content of the body of the page over here.",
			"So what can I now do?",
			"Well, I will create a new file inside of my template/tasks directory called",
			"layout.html.",
			"And layout is going to have the basic layout that",
			"is common to both of these pages.",
			"I have a title whose title is Tasks.",
			"I have the body of the page.",
			"And maybe there is more in common with both of the pages",
			"as well that I could add.",
			"But right here, this, in between the body tags,",
			"this is the body of the page that is going to change",
			"between each of the different pages.",
			"So to denote this inside of it in layout in Django,",
			"I'll again use the curly brace and percent signs.",
			"I'll call this a block.",
			"And then I'll give this block a name.",
			"I'll call it body, just because it's the body the page,",
			"but I could give it any name.",
			"And then I'll add an end the block at the bottom here.",
			"And so what I've now said inside of this layout file",
			"is that this layout file has a body inside of this structure of the page.",
			"And inside the body is this block called body.",
			"And what I'm saying here is this block might",
			"change depending on which file we're using, add.html or index.html.",
			"The rest of the structure won't change, but the content of this block,",
			"this block called body, might change.",
			"And so now what I can do inside of index.html and add.html is,",
			"instead of including all of this logic, I can get rid of everything",
			"other than the key part of the page that's",
			"going to be different about index.html.",
			"The only thing different about index.html is this unordered list.",
			"And what I will now included the top of index.html is I'll say that this HTML",
			"page extends tasks/layout.html.",
			"So this is now this idea of template inheritance.",
			"I'm inheriting from the layout.html template,",
			"basically saying use the layout.html template, except inside of block body,",
			"I would like to include all of this content.",
			"And maybe I'll give it a h1 that just says Tasks just as a title as well.",
			"And so now what index.html is saying is, rather than need",
			"to include all of that HTML, all I need to say",
			"is this HTML file is based on the layout.html file,",
			"but the difference is that inside the body of the page,",
			"it's going to be this particular content here.",
			"And for add.html, I can do exactly the same thing.",
			"I can just add this line, extends tasks/layout.html to the top",
			"of add.html.",
			"And then I can get rid of all of this boilerplate code,",
			"so to speak, and just include the part of the page that",
			"differs inside the body of the page.",
			"And so it seems like we've done a fair bit more work for just these two pages.",
			"But if you imagine more complex websites,",
			"and they have dozens or hundreds of different pages,",
			"the ability to factor out the HTML the pages have in common",
			"can definitely be very helpful just for good design,",
			"to be able to make sure we're not repeating ourselves.",
			"And if we ever need to change the structure,",
			"rather than change it in dozens or hundreds of different places,",
			"we just change it in one place inside of the layout file.",
			"And the result of that is that it's going",
			"to change in each of the pages that inherit from that page as well.",
			"And we can test this by just going back to /task/add, which looks fine.",
			"And back to tasks looks fine too.",
			"Both of these pages now are inheriting from that basic layout.",
			"Now, it's a little annoying that anytime I want to switch between this page",
			"and the add page, I have to go to the URL and know that I need to go",
			"to /tasks/add in order to get back and forth between them.",
			"So I might like to add a link that takes me from one page to the other and vice",
			"versa.",
			"And I can do that.",
			"if I go into index.html, you might imagine",
			"that I could just add a link here, a href to create a link.",
			"Let's go to /tasks/add.",
			"And, like, Add a New Task would be the name of that link.",
			"Except the problem is or the reason why this isn't necessarily good",
			"design is that Django is designed to make it such",
			"that it's very easy to change the structure of the pages",
			"in terms of how the URLs all relate to each other.",
			"And I have here hardcoded that, when you click this link, we go to /tasks/add.",
			"And if ever I wanted to change that URL--",
			"maybe instead of /tasks/add, I wanted to /new instead of /add--",
			"well, then I need to change it in two places.",
			"I'd need to go back to the urls.py file to change",
			"the actual URL to say, instead of add, it should be called new.",
			"But then I'd need to find every place where I use that URL",
			"and I'd need to change it there as well.",
			"So in order to deal with this, Django has an additional feature",
			"that basically lets Django figure out what the URL should be instead.",
			"And we do that by using the name that we gave to each of those routes.",
			"And so this is where that name becomes relevant, that I can hear just",
			"say, link to a particular URL, link to the URL called add.",
			"So I just said, link to URL called add.",
			"And how Django figures this out is based on the contents of my urls.py,",
			"that inside my urls.py file, I defined a number of different paths.",
			"And I gave each of those paths a name.",
			"This one was called index.",
			"This one was called add.",
			"And so when I did that, I was able to say, if you link to a URL called add,",
			"Django will find a URL whose name is add and link me directly to that route.",
			"And so if ever I were to change the route to something else,",
			"Django would just figure out what the new URL should be.",
			"And I wouldn't have to worry about it.",
			"Django would fix the problems for me.",
			"And so now if I go back to the tasks site,",
			"I can click the Add a New Task button.",
			"And that will take me to the add task.",
			"And maybe now I'd like to add a link that goes back.",
			"So I can go to add.html and maybe add a link down at the bottom, a href equals.",
			"And what URL would I like to link to?",
			"Well, my default page was just called index.",
			"So I'll go ahead include the word index--",
			"I'd like to link to the URL index--",
			"and then view tasks, maybe, as the name of the link.",
			"So now if I go to just the default tasks page,",
			"I see a link to go Add a New Task.",
			"And now I see a link that's going to take me",
			"back to the ability to view tasks.",
			"And when I click on that link, I see \"NO.\"",
			"And now, that's probably not what I wanted.",
			"I wanted to go back to the index page for my tasks application,",
			"but it seems that when I clicked on View Tasks, I'm taken to \"NO.\"",
			"And what's going on here?",
			"Well, if you look at the URL, the URL is /newyear.",
			"Somehow I was on the tasks app.",
			"I clicked a link.",
			"And I'm back at the newyear app.",
			"How did that happen?",
			"Well, it turns out this is an example of a namespace collision, where I have",
			"two things that all have the same name.",
			"And in this case, what's happening is that I",
			"have a urls.py file for my tasks application",
			"where I have a route called add and a route called index.",
			"But it just so happens that inside of the newyear folder,",
			"if I go up to newyear and I look at newyear's urls.py file,",
			"the newyear's urls.py file also has a path whose name is index.",
			"And so what I said was, create a link.",
			"And I would like that link to link to the thing that",
			"has the URL with a name of index.",
			"And it turns out there were multiple things that all had a name of index.",
			"And so Django didn't know which to choose.",
			"And it just chose the newyear one.",
			"And you might imagine that linking between apps",
			"is something you might reasonably want to do.",
			"You want to, from the Amazon shopping page, for example,",
			"be able to click a link that takes you to Amazon Video.",
			"Or you want, from Google search, to be able to click",
			"a button that gets you to Google Maps.",
			"But in this case, this isn't quite what I wanted.",
			"There is a namespace collision where two things have the same name that I",
			"would now like to be able to fix.",
			"And the easy way to fix this is inside of urls.py for my tasks application,",
			"let me just give each of these URLs an app_name called tasks.",
			"This just helps uniquely identify all of the URLs,",
			"because now inside of add.html, rather than just link to a URL whose name is",
			"index, I'm going to instead link to tasks:index, to mean, from tasks,",
			"the tasks app, get the index URL.",
			"And likewise, inside of index.html, I'll link to tasks:add to get at that",
			"particular route from this particular application name.",
			"So now if I go back to the site, go back to my tasks page,",
			"now the links work as expected.",
			"I can get to the new tasks.",
			"And I can get back to the list of all of my tasks as well.",
			"So this now works.",
			"I now have these two pages, one that displays my list, one that",
			"displays my ability to add a new task.",
			"But the form to add a new task doesn't really do anything right now.",
			"I type in a task.",
			"I type in, like, foo, if I want to add a task called foo.",
			"And I press Submit.",
			"And like, nothing happens.",
			"Nothing changes meaningfully on this site.",
			"So I'd like for this form to do something.",
			"And we've seen that we can add an action to a form to be able to take that form",
			"and submit it somewhere.",
			"And that's what I'd like to do when I add a new task.",
			"I'm going to add an action to this form.",
			"And when I submit the form, what URL would l like to submit it to?",
			"Well, I'll go ahead and submit it back to the URL for tasks:add.",
			"I'll send it back to that add URL when I submit the form.",
			"And I'm going to give this form a specific request method.",
			"Its method is going to be post.",
			"And so we've already seen a request method of get.",
			"Anytime you type in a URL or click on a link to go to another page,",
			"the request method implicitly associated with that request",
			"is called get, which just means I would like to get a particular page.",
			"Anytime you're submitting data that has the potential",
			"to change some state inside the application",
			"like changing the state of the list of tasks that",
			"is stored inside the application, then we'll generally use a different request",
			"method called post.",
			"Post is generally used for submitting form data.",
			"It doesn't include parameters inside the URL",
			"the way a get request does, as we saw with Google, for example.",
			"But this post ability is going to give us",
			"the ability now to send data via a different request method",
			"to my add route.",
			"And so let's now give this a try.",
			"Now I'm going to go to task/add.",
			"I see the ability to add a task.",
			"And maybe I'll add a task like check email or something and press Submit.",
			"And all right, I get an error, forbidden.",
			"This 403 in parentheses means that is the response code that came back.",
			"This is an error that Django has generated for me.",
			"So this 403, as we saw before, means forbidden.",
			"I don't have permission to do this for some reason.",
			"Now, why don't I have permission to submit this form?",
			"It says, CSRF verification failed.",
			"So CSRF stands for Cross-Site Request Forgery.",
			"And what that means, it is a security vulnerability",
			"that is inherent in some forms if they're not designed in a secure way,",
			"meaning that someone could forge a request to a particular website using",
			"some form on their own separate website, for example.",
			"You might imagine that someone on a different website",
			"might trick the user into submitting a form that",
			"submits its data to our add task function that",
			"adds a new task to their task list.",
			"And maybe that's not a big deal for tasks,",
			"but you might imagine in more secure context, more sensitive context",
			"like a bank, for example, they might have",
			"a form on their website for transferring money from one user to another.",
			"And if they're vulnerable to this sort of attack,",
			"cross-site request forgery, someone else on a different website",
			"could trick the user into submitting a form where it submits form data.",
			"And it goes to the bank's website to say,",
			"I would like to transfer money from this one user to another user.",
			"So we would like to be able to design forms that are not",
			"vulnerable to that particular security vulnerability, that",
			"don't allow for requests to be forged by another website.",
			"So how can we go about doing this?",
			"Well, one strategy that can be used in order",
			"to deal with these sorts of attacks is to add into our form",
			"a hidden Cross-Site Request Forgery token, or CSRF token,",
			"which would just be some unique token that's generated for every session.",
			"So every time a different user visits this particular form,",
			"they see a different CSRF token.",
			"And then when the user submits the form, they're",
			"submitting that token with the form.",
			"And our web application is going to check to make sure",
			"that that token is indeed valid.",
			"And if it is valid, then they'll allow the form submission to go through.",
			"But this means that an adversary wouldn't",
			"be able to fake a request to our website,",
			"because that adversary doesn't know specifically",
			"what the generated token is so they would",
			"fail the check for CSRF validation.",
			"And it just so happens that Django has CSRF validation turned on by default.",
			"And it's done so via specific add-on known as Django Middleware.",
			"Middleware refers to the ability in Django",
			"to be able to sort of intervene in the request response processing of a Django",
			"request.",
			"And if I look at the settings.py file, if you're curious,",
			"for this particular web application, inside of settings,py,",
			"if we scroll down, we see there's a whole bunch of middleware",
			"that's installed by default inside of a Django application in terms of making",
			"sure that we have various different features hooked into this request",
			"response processing.",
			"And one of those is the CSRF view middleware, this feature of Django",
			"that allows it to make sure that our requests,",
			"whenever we're submitting data via post, something that has the potential",
			"to change the state of the application in some way,",
			"that we need to have CSRF validation.",
			"We need to add some sort of token to our form",
			"to make sure that Django is able to authenticate the validity of this form",
			"to make sure they know the form actually came from the web application itself.",
			"And it's quite easy to be able to add this token into our HTML page.",
			"Django has it built in.",
			"Inside the curly brace and percent sign, we can just say,",
			"I would like to add into this page the CSRF",
			"token, for example, to go ahead and fill it in the CSRF token right there.",
			"If I now go back to the page and refresh the page, now I see add task.",
			"But if we're curious, I can actually go and view the page source.",
			"I can look inside this page.",
			"And here now is the form.",
			"And this is the form same as we saw before,",
			"but you'll notice that Django has inserted this additional input",
			"field, this input whose type is hidden, meaning",
			"we won't be able to see it normally, whose name is CSRF middleware token.",
			"And here is its value, some long string of characters",
			"that Django has generated for me, such that when I submit this form,",
			"it's going to check to make sure this token is valid.",
			"And if it doesn't find this token, it is not going to accept my form submission.",
			"And if someone else goes to this website,",
			"they are going to see a different token presented to them as well.",
			"And that helps to make sure that nobody can forge these sorts of requests.",
			"So now if I type in a task that I like to add , something like check email,",
			"and press Submit, now the form does submit without errors.",
			"Of course, it doesn't do anything.",
			"If I go back to my task list, it's still empty.",
			"But at least I've now been able to submit that form.",
			"It's worth noting that inside of add.html,",
			"we created this form sort of from scratch.",
			"I created an input field whose type is text and whose name is task.",
			"But creating forms is something that happens",
			"so often in the world of web programming, oftentimes",
			"with many different fields that you might want to change over time,",
			"but Django has added a number of ways to make it easier to create forms,",
			"to validate the data inside of those forms",
			"just to make our lives a little bit easier when it comes to dealing",
			"with and interacting with forms.",
			"And so now we'll explore an alternative way of doing the same thing.",
			"What we did here just works.",
			"We can create a form just using raw HTML, as we've seen before.",
			"But Django also has the ability to create forms for us.",
			"So in order to do this, I'll go into views.py and at the top,",
			"add from django import forms.",
			"And now I'm going to create a new class to represent this form.",
			"I'll create a Python class that I'll just call NewTaskForm,",
			"since I'll use it to create a new task.",
			"It will inherit from forms.form.",
			"And now inside of this class, I need to define",
			"all of the fields I would like for this form to have, all of the inputs",
			"that I would like the user to provide.",
			"And so I want them to provide the name of a task which",
			"will be a character field, or a CharField,",
			"meaning I want the user to type in characters.",
			"And I can give this a label, call it New Task, for example.",
			"And now what I can do is, when I render add.html, I can add some context",
			"and say, give this template access to a variable called form which",
			"will just be a new task form.",
			"So I'm going to create a new task form, pass it into this add.html template.",
			"And now inside of add.html, instead of writing the input whose type is text,",
			"name is task, and having to do that on my own,",
			"I can just use double curly braces and say, plug in the form here.",
			"And that will automatically take care of--",
			"Django will generate the necessary HTML to make that form work.",
			"So if I refresh this page, now I see that here is the form",
			"that Django has created for me.",
			"It's created an input field.",
			"It's given it a label of New Task, so I know that it's where in new tasks",
			"should go.",
			"But now rather than needing to edit the HTML anytime",
			"I want to change the form data that's involved inside of this application,",
			"I can just change this new task form.",
			"If maybe I want to eventually make upgrades to my application,",
			"where in addition to specifying a text field where I can type in the new task,",
			"maybe I also want to be able to specify a number indicating the priority",
			"that task should have, I could additionally give this form access",
			"to a priority variable, which is an integer field whose label is priority.",
			"And I can even add constraints on this.",
			"To be able to ensure that it's valid data,",
			"I can give it a min value of maybe 1 and a max value of 10, for example,",
			"in order to add all of that.",
			"And now without touching anything in my HTML,",
			"I just changed the form itself inside of my Python code,",
			"now if I refresh the page, I see an additional field.",
			"I see an opportunity for me to type in a new task.",
			"And I see an opportunity for me to specify some priority.",
			"And of course, you could add CSS in order to style this up",
			"a little bit nicer.",
			"But now Django will automatically do client-side validation,",
			"where if I type in a new task like check email but I don't specify a priority,",
			"and submit it, it tells me to fill it out.",
			"If I type in a number that's in an invalid range--",
			"I only wanted numbers from 0 to 10--",
			"it fills it out.",
			"And this is all what we would call, again, client-side validation.",
			"The server isn't getting any of this data.",
			"It's just the web page has been encoded to know what the valid values are.",
			"And it's going to constrain me to make sure",
			"that I'm typing in something that matches those values.",
			"But in general, when we're doing form validation, when we're making sure",
			"that forms are valid data, we want to somehow",
			"make sure to include not only client-side validation, but also",
			"server-side validation.",
			"We also want to check on the server to make sure that inputs are valid",
			"as well, because there are many reasons why",
			"we might want to be able to do this.",
			"One is that it's very easy to disable this sort of client-side validation,",
			"or just submit a request without doing any of the client-side validation.",
			"And maybe if the user is looking at an old version of the page,",
			"the validation we're doing on the server is more up to date",
			"than this client-side validation as well.",
			"And Django's forms will make it very easy for us to do both of these things,",
			"both the client-side validation and the server-side validation as well.",
			"So how does this work?",
			"How do we do that?",
			"Well, inside of the add function, this add",
			"function now gets called in two different ways",
			"depending upon the request method.",
			"If I try to get the add page by just clicking on the link for Add a New Task",
			"or going to the URL of /add, then I want to just render a new blank form.",
			"But if I post data to this page by using the post request method instead of get,",
			"that means I'm submitting the form.",
			"And I now want to submit a new task to be added to my list of tasks.",
			"So I'd like to add a check for that.",
			"I'm going add a condition here that says, if request.method equals POST,",
			"well, then here what I'd like to do is process the result of that request.",
			"And the way you do that and a Django form is by creating a new variable",
			"called form which will be a NewTaskForm.",
			"And if I just use NewTaskForm with two parentheses like I did before,",
			"that creates a blank form.",
			"But you can also populate that form with some data.",
			"And if I populate it with request.post, what that is going to do",
			"is request.post contains all of the data that the user",
			"submitted when they submitted the form.",
			"And so what I'm doing now is I'm creating a form",
			"variable by taking all of that data and filling it",
			"into this new task form, which will contain now all of the data",
			"the user submitted.",
			"And you could imagine checking this manually,",
			"but I can just call if form.is_valid, and inside this if statement,",
			"use some logic using the cleaned data as a result of using this form.",
			"And so inside of a variable called form.cleaned_data,",
			"that will give me access to all of the data the user submitted.",
			"And so if I want to get what task they submitted,",
			"because I had a variable here called task inside of NewTaskForm, well,",
			"I'll just go to form.cleaned_data and then task.",
			"And I'll go ahead and save this inside of a variable called task.",
			"And now what I might like to do is add this task to my list of tasks,",
			"go tasks.append this new task.",
			"So that's what we do if the form is valid.",
			"If the form is valid, we take the data from the form, get the task,",
			"save it inside this variable called tasks, and add it to my growing list.",
			"But else if the form is not valid, what should we do instead?",
			"Well, then I should return the add.html file again.",
			"But instead of providing the form back to them, a new form back to them,",
			"I'm going to send back the existing form data back to them.",
			"So we can display information about any errors that might have come up as well.",
			"So what does this now look like?",
			"Let's show an example.",
			"And then I'll go back to the code so you can see in better detail how it works.",
			"Here is task/add.",
			"Recall that if I type in a task like check email",
			"and a priority that's not valid, that's out of range, like 11,",
			"and press Submit, it says, value must be less than or equal to 10.",
			"But let's now imagine a situation where the client and server are",
			"validating different things, that maybe I've now decided, you know what?",
			"Priority, instead of being from 1 to 10, can only be from one to five.",
			"That's now the valid range for priorities.",
			"But this client, which is still an older version of the page, doesn't know this.",
			"So it thinks that a priority of eight is still valid.",
			"And it's going to past client side validation.",
			"But now I press Submit.",
			"And the server is going to process it.",
			"And because it's invalid, it gives me back the form and gives me an error.",
			"Ensure this value is less than or equal to five.",
			"And so this now is why we generally want both client-",
			"and server-side validation, to make sure that the data we ultimately get",
			"is going to be accurate and it's going to be clean,",
			"matching whatever specification we sent out when we were",
			"creating that form for the first time.",
			"And so for the purposes of now, we're not",
			"going to really worry about priority too much, because we just",
			"really care about what the task is.",
			"But just know that if you wanted a form that",
			"had multiple fields, that you can add additional fields to this form input",
			"as well.",
			"So now we've added some application logic",
			"to our route that checks to make sure that the form is valid or not.",
			"If we take a look at what the add function is really doing,",
			"we're checking if the request method is POST,",
			"meaning if the user submitted some form data.",
			"Then we figure out all the data they submitted and save it",
			"inside this form variable.",
			"We check to see if the form is valid.",
			"Did they actually provide a task?",
			"Are they providing all the necessary data in the right format?",
			"If so, then we get the task and add it to the list of tasks.",
			"Otherwise, if the form is not valid, then we",
			"go ahead and render that same add.html file back to them,",
			"but we pass in the form that they submitted so that they",
			"can see all of the errors they made.",
			"They can make modifications to their own form submission if they'd like to.",
			"And then otherwise, meaning if the request method wasn't POST",
			"at all, if the user just tried to get the page rather than submit data to it,",
			"then we're just going to render to them an empty form.",
			"And this sort of paradigm is actually quite common",
			"when we're dealing with requests and responses,",
			"that oftentimes pages that have forms will want you to first",
			"be able to get that form via the GET method,",
			"to just get the page in order to display the contents,",
			"but those routes will also often support a POST method, where you can post data",
			"to those routes in order to say, I would like to now submit data",
			"to a particular route in order to get some sort of results some,",
			"sort of addition to a list of tasks, transferring money",
			"in a bank from one account to another, for example,",
			"or something else entirely.",
			"But watch what happens if I now try inside of /tasks/add to add a new task",
			"that's valid, something like check email, for example.",
			"I press Submit.",
			"And all right, nothing quite seems to happen,",
			"because I just get back this NewTaskForm.",
			"But if I go back to view tasks, now, I see",
			"that check email has been added to my list of tasks,",
			"because the original list of tasks just foo, bar, baz.",
			"And now we've added check email to it.",
			"But this wasn't quite the behavior that I might have expected.",
			"Maybe I wanted that, after I submitted the task form to add a new task,",
			"I would like to be redirected back to this page as well.",
			"And it turns out Django makes it easy for us to be able to redirect users",
			"from one page to another.",
			"In order to do that, after we add a new task to my list of tasks,",
			"I'm going to return an HttpResponseRedirect",
			"and redirect the user to a particular route.",
			"I could redirect them to just, like, /tasks, for example.",
			"But again, we generally try not to hardcode URLs into our application.",
			"So better design would be to say, let me give you the name of the route",
			"and go ahead and reverse engineer what the route actually is from that.",
			"And so in order to do that, we can use the function called reverse built",
			"into Django, and say tasks:index, to say figure out what the URL of the index",
			"URL for the tasks app is.",
			"And use that URL as the one that we ultimately",
			"redirect to when we return this HttpResponseRedirect.",
			"In order to use these, we need to import both of them.",
			"So from the top, I'll say, from django.http import",
			"HttpResponseRedirect.",
			"And from Django.urls, I'll go an import reverse.",
			"So now I've imported both of these.",
			"And now the effect of this is that, after I submit a new task",
			"and add it to my list of tasks, I'm going",
			"to be redirected back to the index page of my tasks application.",
			"And for good measure, I'll go ahead and start us off with an empty list",
			"to get rid of the foo, bar, baz that we saw there originally.",
			"So tasks start out as the empty list.",
			"Now refresh the page.",
			"I see no tasks in here by default. But if I",
			"add a new task, I type in something like check email, press Submit,",
			"I now see that added to the task list.",
			"And I get redirected back to the task page.",
			"I can add new task, something like do laundry, press Submit.",
			"And that gets added to my task as well too.",
			"So by maintaining was global variable called tasks",
			"and updating it anytime I submit the form,",
			"I've been able to dynamically grow this list of tasks inside of my application",
			"and display all of those tasks here inside of my HTML page.",
			"However, there is still one big problem with the application that I've built.",
			"And it goes back to the idea that I've stored these tasks",
			"inside of a global variable.",
			"This variable is something the entire application has access to,",
			"which means that anyone who visits my website",
			"is going to be able to see the same exact list of tasks.",
			"And we can simulate this by imagining someone else",
			"visiting this URL, which I can simulate in Google Chrome",
			"by opening an incognito window to simulate",
			"a different session, a different person interacting with the page,",
			"and going to the same URL.",
			"What they see when, any incognito window, they go to the same URL,",
			"is they see the exact same list of tasks.",
			"Both me and another person see the same list, because there is just one tasks",
			"variable across the entire application that",
			"is shared among all of the requests that come in to that particular application.",
			"And that's probably not what I want when I'm dealing",
			"with something like a list of tasks.",
			"I probably want it to be per user, such that if a different user visits",
			"the page, they have their own list of tasks as well.",
			"And so in order to do this, we'll introduce",
			"the concept of sessions in Django, or in the web more",
			"generally, where sessions are away way for,",
			"one, Django to be able to remember who you are, such",
			"that on subsequent visits, it remembers who you are and knows who you are.",
			"But more importantly, it's able to then store",
			"data about your particular session.",
			"It's able to store your user ID or information about you.",
			"Or in this case, it's able to store all of your tasks.",
			"And so in order to take advantage of sessions,",
			"instead of having a global variable called tasks,",
			"we're going to go ahead and delete this and instead store",
			"tasks inside of the user's session.",
			"So inside the index route, I'll include a line like this.",
			"I'll check to see if tasks is not in request.session,",
			"meaning if I look inside the session-- and you can think of the session",
			"as like a big dictionary representing all the data we have on file inside",
			"the session about the user--",
			"and if tasks is not in that session, well,",
			"let me add to request.session tasks and set that equal to the empty list.",
			"And so what I've done here is I'm looking inside of the session.",
			"I'm looking inside the session to see is there already",
			"a list of tasks in that session.",
			"And if there isn't, if there isn't already a list of tasks in the session,",
			"well, then I'd like to create it.",
			"Then I'd like to set request.session square bracket",
			"tasks equal to the empty list.",
			"If the user doesn't already have a list of tasks,",
			"go ahead and give them an empty list of tasks.",
			"And now here in tasks, instead of rendering the variable tasks which",
			"no longer exists, I'll render request.session tasks",
			"to pass in that list of tasks to this particular template.",
			"And now, index.html, we're still looping over that list of tasks.",
			"And now we'll see if I go back to Tasks, I see, no such table django_session.",
			"So this is a bit of a strange error.",
			"What's going on here, no such table django_session?",
			"Well it turns out, as we'll see in the future,",
			"Django tends to store data inside of tables.",
			"And we haven't yet gotten to what that ultimately means",
			"or how to manipulate or interact with data stored inside of tables.",
			"But Django stores data about sessions that would happen inside of a table",
			"by default. And you can change to have Django store data about sessions",
			"elsewhere.",
			"But ultimately, Django is keeping data about who you are",
			"and what your tasks are.",
			"And that data needs to be stored somewhere.",
			"And by default, Django wants to store it inside of a table.",
			"And right now that table doesn't exist.",
			"So we need to create it.",
			"And the way to give Django access to that table that it wants to create,",
			"that it has been waiting to create, but it hasn't yet,",
			"is to run this command inside the terminal, python manage.py migrate.",
			"And we'll learn more about what that means in terms of what a migration is",
			"and what it means to migrate data into a database.",
			"But for now, just know that python manage.py migrate",
			"will allow us to create all of the default tables",
			"inside of Django's database.",
			"Next time we'll take a look at actually creating databases of our own,",
			"and adding tables of our own to store our own custom data.",
			"But Django has some initial default tables that it wants to create.",
			"And running python manage.py migrate allows for those tables to be created.",
			"Now that those exist, I first need to run the server, so python",
			"manage.py runserver.",
			"I load the page.",
			"And here now is my list of tasks.",
			"There is nothing here, so when I loop over all the list items,",
			"it's sort of empty, which maybe isn't the best user",
			"experience or user design.",
			"So what I might want to do is add an additional condition.",
			"It turns out inside of index.html, whenever",
			"I have a for loop inside of a Django template,",
			"I can also add an empty condition to say, if I run the for loop",
			"but it doesn't run at all because the sequence is empty, well,",
			"then let me just say, like, no tasks, for example.",
			"And this is just a nice to have feature of the Django",
			"language that just makes it easy for us to be able to deal with situations",
			"where we're iterating over a list and there is nothing in that list.",
			"So now I refresh the page, No tasks, exactly what I would expect to see.",
			"And now this index route seems to be working fine.",
			"What now needs to change when it comes to adding a new task?",
			"Well, rather than append the task to my list of tasks, let me go ahead",
			"and say, request.session tasks, because that is my list of tasks.",
			"And let me add to request.session tasks this new task.",
			"And I'm adding to it a new-- sort of adding",
			"a list to the end of it that just contains the one new task",
			"that I got from the form.",
			"So when the form is submitted, we check to make sure the form is valid.",
			"We get the task that the user submitted.",
			"And we append that to the list of tasks that's",
			"already stored inside of the session before redirecting the user back",
			"to the index page.",
			"So let's give it a try.",
			"We'll go back to this URL, back to Tasks.",
			"I see I have no tasks initially.",
			"And now I can go ahead and add a new task, type in something",
			"like check email, press Submit.",
			"And right, now that's added.",
			"Add our new task, something like do laundry, Submit.",
			"And now both of those tasks are there.",
			"But now, importantly, if you imagine someone in an incognito window",
			"or on a different computer visiting that same website going back to this page,",
			"what they see is an entirely different list of tasks",
			"because they have a different session.",
			"Their sessions are determined by cookies,",
			"these little hand stamps that help the browser to be",
			"able to give some information to Django's web server to say, here",
			"is who I am, so Django knows what data to show you.",
			"And in this case, my original case, Django",
			"knows who I am, knows to show me these tasks.",
			"And in this case, it's a different user in an incognito window, in this case.",
			"And so what they see is a list that has no tasks inside it at all.",
			"So now we've really just scratched the surface of what Django has to offer.",
			"But we see now the ability it has to be able to create dynamic web",
			"applications.",
			"Instead of just displaying HTML and CSS that's the same every time,",
			"using Django, we now have the ability to be",
			"able to generate programmatically custom HTML and CSS, either saying hello",
			"to a person's name based on what name is provided inside of URL,",
			"or the ability to say-- to check the current date",
			"and conditionally display something if the date is one thing versus another,",
			"and the ability to store data on a session basis,",
			"to be able to store information about a user's to do list,",
			"for example, such that on subsequent visits,",
			"they can see their list of things they need",
			"to do with a different list for each of these possible users.",
			"And here really is just the beginning of where Django has to offer.",
			"Where Django gets very powerful is when it comes towards storing data inside",
			"of databases, and manipulating that data,",
			"and interacting with that data in various different ways.",
			"And that's ultimately where a lot of the power of a web framework like this",
			"ultimately comes in.",
			"We'll explore more of that next time.",
			"But for now, that was just a look at Django",
			"and how we can use it to be able to build these sorts of web applications.",
			"This was \"Web Programming with Python and JavaScript.\"",
			"We'll see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_006": {
		"section": "CS50W 2020",
		"subsection": "SQL, Models, and Migrations",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V002100_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V002100/HarvardXCS50W-V002100.m3u8"
		],
		"video_duration": 6846,
		"speech_period": [
			4.419, 13.301, 1.75, 2.28, 2.88, 2.01, 3.63, 2.31, 3.96, 2.37, 3.36, 3.45,
			0.78, 4.17, 1.83, 1.928, 2.542, 2.67, 3.832, 2.708, 3.24, 1.17, 4.05,
			4.35, 2.64, 2.85, 2.002, 1.958, 3.81, 2.74, 2.57, 2.46, 3.03, 1.56, 3.3,
			2.82, 3.6, 3.36, 2.35, 2.0, 2.73, 1.142, 2.458, 4.14, 3.15, 3.6, 3.15,
			2.73, 2.292, 1.578, 2.37, 3.0, 3.79, 2.18, 2.34, 3.81, 3.78, 5.01, 2.04,
			2.49, 3.84, 4.95, 3.21, 3.36, 3.84, 1.667, 3.0, 1.653, 3.88, 3.63, 4.11,
			2.613, 2.667, 2.88, 1.933, 1.667, 2.97, 4.32, 2.43, 1.98, 3.41, 2.77,
			3.55, 2.48, 2.25, 3.3, 2.43, 3.54, 2.58, 4.32, 3.12, 2.997, 1.833, 3.33,
			2.04, 4.8, 2.2, 3.29, 4.92, 3.66, 3.12, 3.3, 4.45, 2.48, 3.29, 3.51, 3.57,
			2.41, 3.98, 1.68, 2.083, 3.987, 3.41, 1.86, 3.61, 2.27, 2.43, 2.62, 4.71,
			3.02, 1.83, 1.59, 3.24, 1.08, 3.57, 4.41, 3.12, 1.92, 3.06, 1.92, 1.68,
			3.24, 2.97, 1.77, 3.81, 1.385, 2.755, 2.61, 1.59, 2.07, 2.07, 3.0, 2.34,
			2.1, 1.47, 3.21, 2.175, 2.125, 1.92, 3.65, 2.29, 3.17, 2.278, 2.042, 2.0,
			3.25, 2.792, 1.888, 3.66, 2.7, 1.63, 2.99, 3.06, 2.07, 2.5, 2.3, 4.66,
			3.65, 3.777, 1.833, 2.58, 1.59, 1.83, 3.28, 1.62, 1.75, 2.56, 4.17, 2.789,
			2.88, 3.63, 1.921, 2.43, 3.6, 3.87, 3.09, 2.22, 3.79, 3.1, 2.32, 5.62,
			4.13, 1.89, 3.902, 1.708, 3.45, 2.31, 3.93, 4.827, 2.583, 2.94, 3.27,
			1.65, 2.79, 2.01, 3.0, 2.22, 2.87, 2.65, 2.305, 1.875, 1.75, 3.4, 2.72,
			1.83, 4.82, 1.75, 3.48, 1.98, 2.37, 4.02, 1.8, 4.26, 3.91, 3.39, 2.75,
			2.38, 3.65, 2.49, 1.74, 4.53, 2.88, 3.87, 1.612, 1.958, 2.01, 2.338,
			2.042, 6.75, 1.05, 3.3, 2.91, 4.45, 2.3, 1.68, 1.77, 4.65, 1.26, 3.18,
			2.61, 2.417, 2.083, 1.86, 3.96, 2.738, 3.292, 1.8, 3.9, 3.3, 2.31, 3.96,
			2.67, 2.11, 2.66, 2.4, 2.64, 2.49, 3.24, 3.36, 3.36, 1.62, 2.64, 2.49,
			3.03, 2.07, 1.833, 2.577, 2.01, 3.24, 4.93, 3.84, 2.06, 1.8, 2.588, 1.792,
			3.54, 1.89, 2.56, 3.77, 3.3, 1.9, 1.94, 2.04, 3.06, 3.84, 4.26, 2.28,
			3.18, 2.31, 2.79, 3.24, 1.53, 2.58, 3.86, 2.44, 2.13, 2.94, 1.47, 3.93,
			2.992, 1.958, 3.702, 1.458, 2.708, 2.632, 4.44, 3.42, 2.56, 0.5, 1.86,
			5.05, 3.12, 2.22, 3.638, 3.292, 2.398, 2.792, 2.73, 2.01, 4.06, 2.66,
			6.42, 1.93, 3.26, 3.69, 4.2, 1.98, 2.52, 2.28, 4.65, 3.45, 3.12, 2.43,
			4.09, 2.79, 2.54, 2.07, 4.31, 2.29, 3.78, 1.32, 2.76, 1.38, 1.8, 2.67,
			2.85, 4.77, 5.129, 3.901, 2.79, 2.61, 3.25, 2.054, 1.875, 2.721, 2.43,
			3.48, 1.29, 2.28, 4.08, 3.19, 2.78, 4.21, 3.75, 2.18, 3.18, 2.19, 4.04,
			4.03, 2.46, 5.01, 2.55, 5.53, 4.14, 4.29, 3.59, 2.643, 2.667, 2.63, 4.3,
			2.16, 2.76, 3.42, 2.61, 2.82, 3.89, 4.06, 3.125, 2.125, 3.02, 2.65, 2.01,
			1.05, 2.55, 3.613, 2.417, 2.618, 1.292, 2.98, 4.87, 4.01, 4.03, 2.03,
			3.03, 4.62, 3.09, 3.51, 2.46, 1.46, 1.75, 2.34, 2.74, 2.94, 2.72, 2.31,
			3.36, 5.49, 1.94, 3.23, 3.32, 2.28, 3.03, 2.74, 2.93, 1.792, 3.748, 1.75,
			4.24, 1.67, 5.22, 2.62, 7.19, 2.61, 2.97, 2.64, 3.45, 2.43, 2.22, 2.19,
			2.835, 2.875, 1.5, 3.29, 2.76, 2.91, 2.41, 2.81, 4.11, 3.5, 2.62, 2.34,
			2.97, 3.96, 3.12, 2.67, 2.4, 3.6, 3.99, 3.06, 2.1, 2.97, 2.16, 3.27, 2.97,
			2.13, 6.12, 3.81, 3.93, 3.36, 2.01, 2.74, 3.23, 2.7, 6.028, 2.792, 2.37,
			2.97, 4.23, 4.05, 1.74, 3.36, 1.68, 3.33, 3.36, 2.97, 2.7, 2.167, 2.943,
			3.98, 3.36, 5.49, 3.07, 3.48, 3.2, 3.81, 3.09, 3.06, 2.17, 2.39, 2.97,
			3.54, 2.13, 3.0, 2.82, 2.88, 2.37, 3.083, 0.757, 2.46, 3.828, 3.042, 2.19,
			1.86, 2.917, 2.333, 2.61, 2.31, 3.663, 2.667, 3.87, 2.82, 3.727, 2.333,
			1.44, 1.9, 3.53, 2.14, 2.9, 1.92, 1.86, 3.53, 0.5, 2.503, 2.917, 3.09,
			2.85, 2.243, 1.417, 2.34, 1.47, 4.29, 2.7, 2.04, 3.75, 3.73, 2.57, 2.14,
			4.22, 2.29, 2.45, 3.6, 2.34, 3.51, 2.91, 2.61, 4.32, 0.99, 4.77, 3.33,
			3.36, 2.46, 3.31, 2.24, 1.538, 2.542, 2.31, 4.41, 3.54, 4.482, 2.958, 3.6,
			3.45, 4.62, 3.81, 2.28, 3.6, 2.04, 2.67, 2.16, 3.9, 3.9, 4.02, 0.84, 3.99,
			3.9, 3.97, 2.913, 3.167, 2.73, 4.83, 2.73, 4.62, 3.27, 2.55, 1.74, 0.84,
			1.83, 2.64, 2.31, 3.09, 2.13, 3.27, 2.43, 2.09, 2.29, 1.8, 3.97, 2.42,
			2.46, 3.54, 1.2, 3.61, 2.15, 1.87, 4.198, 2.542, 2.7, 2.77, 2.15, 5.58,
			3.945, 1.875, 3.75, 2.7, 4.53, 3.66, 1.44, 2.26, 3.02, 2.0, 1.75, 6.33,
			2.88, 3.64, 2.68, 3.37, 2.91, 3.67, 3.65, 2.01, 3.18, 1.89, 3.3, 3.14,
			3.28, 3.48, 3.75, 2.91, 2.21, 2.74, 2.22, 2.85, 2.07, 2.7, 3.15, 1.71,
			3.18, 5.31, 4.2, 3.09, 4.04, 1.75, 2.46, 3.49, 3.26, 2.25, 3.78, 3.39,
			4.38, 3.36, 4.34, 4.96, 2.23, 2.69, 4.33, 2.57, 4.17, 3.36, 1.2, 3.99,
			2.52, 4.62, 2.49, 2.28, 2.48, 2.097, 2.083, 3.36, 2.7, 2.09, 2.98, 3.96,
			2.24, 2.11, 5.08, 3.77, 1.889, 2.311, 2.61, 2.94, 2.369, 3.091, 0.929,
			1.98, 4.591, 3.27, 5.94, 3.12, 3.18, 2.55, 2.25, 3.0, 3.78, 2.97, 2.67,
			2.29, 2.78, 3.87, 3.7, 3.27, 2.42, 2.49, 3.27, 2.19, 3.42, 1.35, 4.17,
			1.95, 3.66, 1.38, 3.36, 1.31, 3.31, 2.443, 2.417, 4.35, 1.29, 3.09, 3.39,
			2.97, 2.55, 2.67, 3.58, 3.56, 3.06, 4.23, 2.34, 4.26, 2.22, 3.06, 2.19,
			2.92, 3.89, 5.7, 2.82, 1.74, 4.32, 4.14, 2.74, 2.6, 2.34, 2.52, 3.39,
			2.82, 4.62, 2.47, 3.83, 1.68, 3.34, 4.01, 1.38, 2.71, 2.48, 3.03, 2.825,
			2.875, 2.91, 2.22, 3.63, 2.1, 2.19, 3.33, 2.19, 4.05, 1.29, 3.58, 2.48,
			3.18, 1.41, 2.19, 2.35, 3.2, 2.82, 2.22, 2.91, 2.67, 2.022, 2.208, 4.05,
			4.08, 3.63, 2.82, 3.12, 1.74, 2.7, 2.39, 1.77, 6.06, 3.21, 2.64, 4.08,
			3.36, 2.31, 2.79, 2.88, 2.94, 3.99, 4.67, 1.75, 2.61, 2.01, 1.708, 2.75,
			0.642, 4.74, 3.04, 3.44, 3.57, 1.44, 3.7, 3.43, 3.795, 2.125, 2.49, 4.78,
			2.15, 2.13, 2.64, 3.27, 3.18, 3.73, 4.37, 0.66, 2.76, 3.07, 3.07, 3.43,
			3.72, 3.33, 2.86, 2.54, 3.03, 2.89, 3.43, 4.12, 4.26, 1.67, 2.89, 3.3,
			2.37, 2.19, 2.85, 5.01, 2.43, 4.078, 1.292, 3.85, 3.47, 2.64, 1.7, 1.12,
			1.92, 3.87, 1.35, 2.16, 3.145, 2.125, 4.03, 4.53, 2.49, 3.872, 1.708,
			4.29, 1.65, 3.45, 3.12, 2.31, 4.92, 3.21, 3.36, 5.49, 2.252, 2.458, 3.45,
			3.18, 1.23, 2.16, 3.0, 3.66, 2.64, 1.12, 3.41, 2.88, 3.69, 2.16, 3.48,
			2.77, 2.86, 4.55, 2.03, 2.82, 2.52, 3.57, 4.14, 3.57, 2.25, 3.84, 3.36,
			4.53, 2.885, 2.875, 3.03, 2.94, 2.25, 2.46, 3.81, 0.54, 3.75, 3.12, 3.4,
			0.99, 5.03, 3.27, 4.65, 3.57, 2.278, 2.042, 2.93, 1.96, 3.3, 2.83, 1.49,
			3.3, 2.88, 1.18, 2.29, 3.31, 1.47, 4.26, 2.1, 2.37, 5.43, 2.28, 3.03,
			2.23, 3.05, 4.098, 3.042, 4.468, 2.792, 3.9, 2.7, 0.5, 3.16, 2.955, 2.375,
			3.37, 2.06, 1.78, 2.37, 4.32, 2.61, 3.15, 2.7, 2.31, 2.91, 2.97, 2.88,
			3.36, 3.15, 6.662, 1.708, 2.46, 4.29, 5.56, 4.82, 1.41, 4.01, 4.09, 2.82,
			5.34, 4.9, 2.15, 3.28, 2.93, 4.62, 1.77, 4.08, 1.8, 4.71, 3.54, 3.35,
			1.75, 2.98, 2.79, 2.31, 3.39, 2.62, 2.42, 3.48, 3.75, 3.69, 0.77, 3.76,
			2.13, 3.51, 1.83, 3.3, 2.25, 2.71, 3.34, 3.34, 3.72, 1.32, 1.98, 4.41,
			4.68, 3.03, 3.87, 2.85, 1.56, 5.31, 2.07, 3.93, 1.2, 2.32, 5.61, 2.69,
			2.52, 3.06, 4.17, 1.5, 3.15, 1.24, 3.05, 2.37, 3.6, 2.18, 1.33, 3.93, 1.5,
			4.29, 3.9, 2.52, 3.66, 2.85, 5.46, 6.3, 5.06, 3.22, 2.89, 1.85, 3.72,
			4.47, 3.75, 3.75, 3.39, 4.59, 4.47, 5.542, 2.708, 3.87, 5.1, 4.53, 5.37,
			3.72, 2.827, 2.333, 3.72, 3.51, 3.51, 3.63, 4.41, 2.88, 3.757, 1.417,
			3.166, 1.92, 3.03, 2.67, 3.99, 2.66, 1.48, 1.74, 4.53, 3.54, 5.88, 6.63,
			4.442, 3.208, 0.99, 3.67, 2.39, 3.09, 4.14, 1.59, 3.57, 4.11, 1.04, 3.1,
			4.08, 1.77, 4.38, 4.35, 3.33, 2.76, 3.12, 2.16, 4.23, 1.8, 3.54, 3.84,
			4.2, 1.89, 3.48, 3.31, 4.7, 4.32, 4.11, 4.5, 4.77, 6.35, 3.508, 2.042,
			3.66, 5.4, 2.22, 3.69, 5.34, 1.47, 2.44, 3.5, 2.13, 2.18, 2.26, 1.77,
			1.44, 1.63, 3.54, 1.22, 5.13, 2.79, 2.1, 3.48, 1.92, 4.38, 3.36, 2.34,
			2.46, 4.29, 2.4, 1.77, 2.52, 5.43, 1.47, 2.49, 2.79, 3.79, 2.39, 4.29,
			1.1, 2.583, 4.147, 3.27, 3.27, 1.53, 4.83, 5.157, 2.083, 1.35, 5.57, 1.21,
			3.052, 1.708, 1.83, 5.07, 2.79, 1.65, 4.44, 2.94, 3.54, 1.737, 1.833,
			2.57, 1.75, 3.06, 4.41, 2.04, 2.49, 2.34, 4.47, 4.17, 1.648, 2.792, 3.6,
			1.83, 3.24, 2.73, 1.99, 2.39, 3.36, 4.68, 2.61, 2.91, 2.4, 2.61, 3.12,
			1.92, 2.31, 2.85, 1.89, 2.76, 2.91, 2.675, 1.375, 2.85, 2.76, 2.73, 1.78,
			3.78, 3.83, 4.87, 2.96, 2.62, 4.49, 3.09, 2.85, 2.91, 3.06, 2.43, 2.1,
			3.15, 4.86, 2.58, 3.09, 3.39, 1.24, 2.96, 3.27, 2.23, 1.67, 5.94, 3.18,
			1.44, 1.17, 5.6, 1.413, 0.917, 6.29, 1.4, 5.44, 1.09, 4.28, 2.25, 5.97,
			4.34, 4.083, 1.417, 2.13, 3.84, 2.73, 5.49, 1.92, 1.26, 4.58, 4.33, 3.9,
			6.48, 2.038, 2.042, 3.15, 2.58, 3.3, 1.82, 2.59, 2.19, 2.61, 2.16, 3.9,
			2.28, 3.03, 3.78, 3.9, 3.96, 1.44, 2.19, 1.2, 3.12, 3.06, 4.17, 2.94,
			5.76, 1.297, 1.583, 2.89, 2.36, 4.8, 4.62, 2.27, 3.25, 4.89, 1.66, 3.38,
			5.01, 2.88, 2.73, 2.22, 4.56, 6.1, 5.31, 4.2, 5.31, 2.67, 4.23, 3.21,
			2.67, 3.51, 1.53, 2.65, 3.44, 3.9, 2.4, 6.1, 3.32, 3.57, 3.39, 3.72, 3.48,
			4.56, 1.44, 3.3, 2.91, 1.87, 7.07, 2.72, 3.15, 2.19, 3.21, 1.2, 2.19,
			5.58, 0.8, 3.49, 0.95, 4.249, 4.221, 3.569, 2.34, 3.04, 3.051, 2.71,
			5.029, 1.201, 5.259, 2.511, 1.81, 3.99, 3.17, 5.82, 6.409, 2.921, 2.07,
			4.56, 2.46, 2.7, 3.3, 4.529, 1.201, 2.72, 1.72, 2.85, 2.1, 4.35, 2.25,
			4.38, 2.38, 1.76, 2.07, 2.64, 2.39, 3.696, 1.774, 4.02, 4.02, 2.19, 6.8,
			2.72, 1.87, 3.73, 4.9, 2.75, 1.98, 2.76, 3.18, 2.55, 2.13, 1.86, 3.0,
			1.828, 1.792, 3.82, 2.64, 2.73, 3.84, 3.0, 3.63, 2.07, 5.07, 2.73, 3.06,
			2.49, 6.15, 2.94, 3.96, 3.37, 2.54, 4.29, 2.34, 4.775, 1.375, 3.77, 1.75,
			2.79, 1.86, 5.61, 2.91, 2.46, 4.12, 3.83, 2.43, 3.72, 1.51, 1.88, 4.77,
			6.24, 4.41, 4.88, 2.11, 3.57, 4.59, 1.78, 3.47, 4.35, 1.92, 1.23, 3.39,
			3.94, 1.13, 2.82, 3.36, 1.59, 4.5, 3.09, 2.1, 2.37, 3.51, 1.15, 2.54,
			1.95, 4.74, 2.78, 2.98, 2.22, 1.08, 4.14, 3.32, 2.875, 2.925, 6.84, 1.62,
			3.6, 3.02, 2.65, 1.41, 2.43, 2.52, 3.27, 3.81, 1.03, 5.09, 1.38, 2.58,
			2.46, 1.38, 2.88, 2.67, 3.05, 2.23, 2.67, 3.11, 2.27, 2.1, 1.65, 3.78,
			2.76, 2.82, 3.463, 3.167, 0.78, 4.57, 2.06, 2.45, 2.86, 3.72, 1.98, 2.82,
			4.86, 3.72, 4.41, 1.44, 2.67, 2.73, 4.32, 4.92, 2.34, 4.14, 3.18, 2.35,
			3.08, 2.81, 6.34, 3.72, 1.8, 3.36, 2.31, 6.63, 3.63, 3.87, 2.01, 5.73,
			4.06, 3.23, 5.55, 4.05, 2.43, 4.46, 5.88, 2.88, 1.86, 5.1, 0.692, 2.208,
			3.61, 2.4, 3.04, 2.75, 2.0, 2.54, 2.78, 2.04, 3.283, 2.417, 1.5, 2.52,
			2.49, 3.24, 2.61, 3.15, 2.06, 3.83, 4.43, 4.23, 1.62, 2.22, 1.92, 5.34,
			2.16, 2.82, 1.95, 2.91, 3.435, 1.875, 1.98, 2.91, 2.82, 4.62, 4.65, 3.64,
			4.07, 0.6, 3.25, 4.01, 3.81, 1.68, 4.23, 3.06, 2.73, 3.09, 4.05, 3.81,
			2.31, 2.16, 3.36, 2.7, 2.91, 3.75, 4.86, 4.8, 4.56, 2.25, 5.28, 4.26,
			4.43, 2.08, 5.11, 0.5, 1.88, 3.55, 1.5, 1.86, 1.792, 2.018, 1.08, 2.7,
			3.17, 1.96, 2.94, 2.52, 2.52, 2.37, 5.46, 3.99, 2.49, 3.28, 4.66, 3.07,
			1.29, 4.02, 2.7, 6.48, 2.93, 6.41, 4.35, 3.13, 2.42, 3.0, 3.9, 2.25, 2.08,
			2.35, 3.76, 2.35, 4.013, 1.917, 3.27, 1.65, 2.55, 3.48, 6.21, 3.0, 3.15,
			3.36, 3.51, 7.5, 3.87, 2.88, 4.74, 2.59, 2.9, 2.7, 3.27, 3.53, 4.15, 3.37,
			4.25, 1.71, 3.0, 2.59, 3.5, 3.57, 4.3, 2.09, 2.73, 3.24, 2.01, 3.07,
			2.117, 1.833, 4.55, 3.28, 8.82, 2.25, 3.0, 3.81, 5.07, 3.673, 1.417, 3.64,
			3.78, 1.89, 3.15, 2.43, 2.07, 2.86, 2.48, 2.19, 2.19, 4.24, 2.12, 2.31,
			2.16, 2.25, 3.69, 3.9, 5.31, 4.86, 4.29, 3.48, 3.18, 3.66, 1.972, 1.958,
			2.28, 3.04, 2.48, 5.37, 3.06, 3.63, 4.59, 4.24, 2.66, 3.16, 1.9, 3.43,
			2.4, 1.65, 2.61, 7.89, 2.73, 4.05, 3.81, 2.55, 1.77, 1.5, 3.36, 3.96,
			1.89, 3.97, 3.29, 2.82, 1.7, 1.75, 1.78, 4.01, 1.62, 2.43, 3.45, 3.6,
			3.992, 1.708, 3.9, 2.19, 2.67, 2.82, 4.44, 3.42, 2.54, 3.43, 4.17, 1.14,
			4.65, 1.96, 3.53, 3.18, 3.3, 1.75, 3.688, 1.792, 3.21, 3.6, 3.57, 4.95,
			11.63, 2.18, 2.67, 1.68, 3.21, 4.11, 3.1, 2.0, 4.02, 2.28, 2.25, 3.72,
			3.9, 3.89, 2.23, 3.63, 2.22, 3.39, 1.68, 2.83, 4.32, 2.57, 3.93, 7.04,
			1.72, 2.77, 5.54, 3.81, 1.86, 2.97, 2.84, 3.67, 2.76, 3.45, 2.55, 1.56,
			2.49, 3.06, 4.14, 4.56, 3.6, 2.31, 3.77, 3.46, 1.57, 2.72, 3.3, 3.15, 3.3,
			3.87, 2.4, 3.57, 2.88, 3.39, 2.28, 2.46, 1.92, 3.72, 3.61, 4.73, 3.82,
			3.65, 3.15, 1.69, 2.63, 2.61, 2.34, 3.13, 2.69, 2.13, 2.49, 1.53, 5.52,
			4.2, 3.27, 5.07, 7.74, 4.6, 5.02, 3.42, 4.145, 2.125, 1.59, 1.74, 2.7,
			2.66, 1.75, 2.47, 2.54, 3.12, 2.94, 2.63, 1.75, 2.063, 2.917, 3.54, 2.07,
			3.53, 0.64, 0.99, 1.56, 3.63, 4.65, 1.02, 4.0, 2.3, 4.09, 1.12, 3.79,
			1.15, 2.0, 3.45, 3.27, 3.84, 2.49, 2.16, 5.33, 1.34, 3.08, 1.89, 3.66,
			1.62, 4.21, 2.87, 3.03, 3.39, 4.11, 2.04, 3.88, 3.32, 1.56, 3.84, 3.03,
			1.86, 4.47, 3.22, 2.21, 3.96, 1.97, 2.92, 1.83, 3.06, 2.22, 2.58, 4.26,
			3.54, 2.76, 4.3, 2.56, 3.25, 1.18, 3.2, 3.39, 3.45, 6.03, 3.42, 3.09,
			2.93, 3.61, 2.85, 3.78, 3.03, 2.52, 3.75, 1.38, 3.96, 2.4, 3.84, 3.12,
			3.57, 2.85, 3.48, 2.79, 1.62, 3.06, 3.27, 3.0, 2.85, 2.99, 2.58, 2.28,
			2.82, 1.17, 2.16, 1.47, 1.98, 1.53, 3.75, 4.05, 3.57, 4.89, 2.32, 2.6,
			2.64, 1.92, 3.668, 2.542, 3.15, 3.57, 1.83, 3.7, 2.78, 2.87, 3.55, 1.89,
			2.7, 3.1, 2.18, 2.01, 1.86, 3.18, 1.3, 3.89, 3.63, 4.01, 2.08, 5.46, 6.44,
			4.0, 3.75, 2.51, 3.05, 3.74, 3.15, 4.125, 2.615, 7.4, 2.01, 6.01, 2.36,
			4.85, 2.258, 2.042, 3.09, 1.6, 1.94, 2.4, 1.26, 4.08, 1.285, 2.375, 2.07,
			3.57, 4.22, 1.96, 3.84, 3.83, 2.14, 2.4, 3.9, 3.1, 6.25, 2.84, 2.27, 2.22,
			4.08, 2.4, 3.9, 4.442, 1.708, 5.46, 6.16, 2.45, 3.63, 1.42, 4.97, 2.73,
			3.11, 1.57, 4.14, 2.4, 3.31, 3.81, 2.79, 5.61, 3.93, 7.73, 6.552, 1.708,
			3.54, 3.0, 3.09, 2.16, 1.792, 3.458, 1.842, 2.958, 2.43, 3.93, 4.56, 3.15,
			3.12, 5.11, 2.15, 3.57, 4.02, 3.48, 4.32, 3.39, 3.96, 4.44, 3.45, 1.89,
			2.94, 1.86, 1.91, 3.43, 2.52, 2.16, 3.84, 3.34, 2.63, 2.697, 1.833, 3.56,
			1.45, 1.262, 2.208, 0.875, 3.75, 1.345, 2.67, 1.312, 2.708, 0.57, 3.68,
			2.0, 3.29, 2.61, 2.13, 2.16, 4.435, 2.375, 3.33, 2.55, 3.27, 2.44, 2.99,
			2.663, 0.667, 3.66, 3.58, 4.73, 3.06, 2.1, 1.98, 5.0, 3.94, 1.52, 2.0,
			1.76, 4.27, 2.79, 3.67, 4.75, 3.52, 1.95, 1.53, 2.65, 5.18, 3.04, 1.55,
			3.57, 2.13, 3.61, 4.31, 4.11, 1.5, 2.43, 3.43, 2.42, 4.2, 2.767, 1.583,
			2.04, 3.69, 5.13, 2.52, 6.13, 2.66, 3.39, 4.17, 1.47, 2.46, 2.86, 2.66,
			1.47, 2.36, 2.98, 1.5, 1.11, 2.35, 2.45, 4.178, 2.542, 1.53, 4.62, 3.12,
			4.7, 2.55, 2.7, 2.13, 3.86, 4.84, 1.99, 2.39, 4.44, 4.41, 1.29, 5.965,
			2.375, 3.78, 4.23, 3.72, 3.84, 4.56, 2.91, 1.08, 1.98, 5.13, 4.8, 3.06,
			2.5, 3.86, 3.24, 1.83, 5.25, 3.21, 5.5, 6.0, 7.89, 5.61, 2.06, 2.19, 4.23,
			4.15, 1.88, 3.06, 3.84, 3.39, 3.27, 2.04, 3.18, 1.35, 3.93, 1.59, 2.46,
			2.61, 4.268, 1.792, 3.57, 3.18, 2.67, 2.28, 2.27, 0.84
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRIAN YU: All right, welcome back everyone",
			"to Web Programming with Python and JavaScript.",
			"So last time we took a look at a brand new web framework",
			"written in Python called Django.",
			"And what Django allowed us to do was to build dynamic web applications.",
			"Applications where we now had the ability",
			"to not just display the same HTML and CSS to the user every single time,",
			"but to dynamically generate HTML in order",
			"to allow users to interact with a page that was a little bit more dynamic.",
			"Doing things like rendering things on the page only if a certain condition",
			"was true.",
			"Or looping over a list of values and displaying one HTML element",
			"for each of those possible values.",
			"But where Django gets especially powerful",
			"and we're web application certainly get much more interesting",
			"is as we start to delve into the world of data",
			"and trying to have web applications that store data inside of a database.",
			"And to do that we're going to introduce a couple of topics today.",
			"In particular, we're going to introduce the idea of SQL, models,",
			"and migrations.",
			"SQL is a database language that we can use to interact with databases",
			"and Django is going to allow us to have an abstraction layer on top of SQL.",
			"To interact not by writing direct SQL queries,",
			"but by interacting with Python classes and objects",
			"that we're going to refer to as models.",
			"And migrations are going to be a technique that",
			"are going to allow us to update our database in response to changes",
			"that we make to our underlying models.",
			"So before we get into things that are more Django specific,",
			"let's begin with a discussion of SQL more generally.",
			"And more broadly, just a discussion of data and the types of data",
			"that we're going to want to store.",
			"And now there are a number of ways that we could try to store data inside",
			"of a computer system but oftentimes in databases,",
			"in particular, in a type of database known as a relational database,",
			"we're going to store data inside of a table where each table is",
			"going to have rows and columns.",
			"So for the sake of today, we're going to imagine",
			"starting to construct a database and a web application",
			"that an airline might use.",
			"For example, for keeping track of various different flights",
			"on that airline and keeping track of which passengers are on those flights.",
			"And so what we have here is a sample table, for example,",
			"of how you might represent a whole bunch of flight related data.",
			"Here I have three columns for three pieces of information",
			"that I might want to keep track of for any particular flight.",
			"For any given flight I might want to know that flight's",
			"origin, what city it's weaving from.",
			"Its destination, what city it's arriving at.",
			"And its duration, some value in minutes of how long",
			"it's going to take the flight to get from the origin to the destination.",
			"So each of those columns represents one field",
			"that I might want to keep track of about my data.",
			"And each row, meanwhile, is going to represent an individual flight.",
			"So here, for example, is one row representing one flight from New York",
			"to London and that flight just so happens to take 415 minutes.",
			"And so what SQL is going to allow us to do",
			"is it is going to be a database of language that",
			"is designed to interact with relational database management systems.",
			"Databases that organize data into tables where every table has rows and columns.",
			"And it turns out, there are a number of different database management systems",
			"that implement parts of the SQL standard of this type of language.",
			"Some of the more popular are MySQL, PostgreSQL, and SQLite",
			"but there are definitely others as well.",
			"And each of these has various different features and different use cases",
			"where some might be more appropriate.",
			"MySQL and PostgreSQL, otherwise known as just Postgres,",
			"are more heavier database management systems, so to speak.",
			"They're generally running on servers elsewhere where a lot of big companies",
			"will use servers like this in order to store data",
			"and represent their data in a sort of a separate database where.",
			"The idea of that is that you might want your web application running",
			"on one server but you might want your database",
			"running as an entirely separate process.",
			"Such that they can behave independently, you can debug and test them",
			"independently, and if one goes down, the other doesn't go down as well.",
			"SQLite is a bit of a simpler lighter weight",
			"implementation of the SQL standard.",
			"And what SQLite is going to do is rather than be an entire server that",
			"is going to be listening for requests and making responses,",
			"SQLite is just going to store all of its data as a single file.",
			"So we're going to store SQL data inside of a SQLite file",
			"and that's going to make it a little bit easier for us",
			"as we're just getting started to begin to write queries and add things",
			"to our database and retrieve things from our database.",
			"But know that many of the same types of SQL syntax that we'll see with SQLite,",
			"which is Django's default, can also be applied",
			"to other languages as well and other database management systems too.",
			"So as we begin to store data inside of a SQL database,",
			"ultimately each of those pieces of data has a type.",
			"In the same way that in Python we have types",
			"for various different types of data, we have integers and we have strings",
			"and we have lists and tuples and so forth.",
			"SQL too has types that represent various different categories of information",
			"that you might want to store inside of a database.",
			"And each database management system has its own different set of types.",
			"SQLite for example, has a fairly short list of basic types that it supports.",
			"It supports text for just like strings of text, for example.",
			"Something like a city name, for instance, might be stored as text.",
			"We have support for integers, which are just 0, 1, 2, 3 4",
			"plus the negative numbers, negative 1, negative 2, negative 3, and so forth.",
			"We have support for real numbers where real numbers don't",
			"have to just be integers, they can have something after the decimal point.",
			"Something like 2.8 or something else that might have a decimal in it.",
			"And then numeric is another category for data that's just more generally",
			"some sort of number that might number like data,",
			"so something like a Boolean value or something like a date, for example,",
			"might be stored using this numeric type.",
			"Where it's not really an integer or a real number,",
			"though you could represented at such, it's other numeric type of data.",
			"And then finally blob, which stands for binary large object,",
			"is any type of other binary data.",
			"Just zeros and ones that you might want to store inside of your database.",
			"So for example, if you're storing files, maybe they're",
			"audio files or images or other types of files",
			"that you want to keep track of inside of your database,",
			"you can store just pure binary data inside of a SQL database as well.",
			"So these now are the basic types of SQLite supports",
			"but other database management systems have",
			"other types that they support as well.",
			"MySQL, you all for example, has a much longer list of other types",
			"that it supports.",
			"In addition to just supporting a text type for arbitrary length text,",
			"MySQL also has a type called char that takes an argument of size.",
			"For saying I want like size characters worth of data",
			"that we're going to store inside the database.",
			"And you might imagine that this can be advantageous in situations",
			"where you know that your data is going to be",
			"within a certain number of characters.",
			"So if you're storing a zip code for example, in the United States.",
			"A zip code in the United States might just be five characters",
			"and so you can allocate a character length",
			"of five characters worth of space for storing every single zip code",
			"inside of your database table.",
			"So for efficiency's sake, if you know the maximum length,",
			"and you can fix that length inside your database,",
			"that can be an efficient choice.",
			"VARCHAR of a size is similar.",
			"And this is a variable length character.",
			"If something isn't going to be exactly a certain number of characters,",
			"but maybe up to a certain number of characters,",
			"you can use VARCHAR to say maybe sometimes it's",
			"going to be fewer characters.",
			"But it could be up to size, number of characters.",
			"And there are tradeoffs there, too.",
			"Then there are various different types of integers.",
			"There's not just a single integer type.",
			"But SMALLINT and INT and BIGINT, each of which uses a different number of",
			"bytes in order to store an integer data.",
			"So if you want to be able to store much larger or much smaller numbers,",
			"you might need a bigger type, like an INT or a BIGINT.",
			"But if your numbers are going to be pretty small,",
			"maybe you're OK with just a SMALLINT.",
			"And likewise there are similar types of trade-offs for floating point numbers.",
			"Where, much as in programming languages like C, if you're familiar,",
			"have both a float and a double type.",
			"Where a double uses more bytes of memory in order to store information.",
			"Here, too, we have FLOAT and DOUBLE, which allow",
			"us to store floating point numbers.",
			"Numbers that might be real numbered values, where a double just",
			"allows us to express a number to a little bit more precision",
			"than a floating point number might be able to.",
			"And there are many other types as well, but the general idea",
			"is that here even in SQL, much as in a language",
			"like Python, we have types for each of these various different kinds of data.",
			"So now that we understand that each type of data has types, what we'd like to do",
			"is to be able to, inside of a database, actually create a table.",
			"And there are various different SQL commands",
			"that we can run on our database in order to perform",
			"various different operations.",
			"And the first we might want to execute is",
			"a command that is just going to create a table, for example.",
			"So how might we go about doing that?",
			"Well, it turns out the syntax for creating",
			"a table is going to look a little something like this.",
			"This here is the syntax we would use to create a table in SQLite",
			"for representing flights, for example.",
			"So we begin with the keyword Create Table,",
			"to say I would like to create a new table inside of this database.",
			"Next I give the name of the table.",
			"Every table has a name just for ease of reference.",
			"And here the name and the table is just the word \"flights.\"",
			"Then what follows in parentheses are a comma-separated list",
			"of all of the columns that should be present in the table.",
			"I'm not yet adding any data to the table.",
			"The Create Table query is just going to decide the structure of the table.",
			"What are the columns and what are the columns' types.",
			"And so here we see that in the beginning of each",
			"of these clauses that are separated by commas, we have the name of the column.",
			"So we have an id column because, though we didn't see this before, often in SQL",
			"it's going to be helpful to be able to have",
			"some way of uniquely referencing a particular element inside of the table.",
			"Maybe there are multiple flights that are",
			"going from New York to London, for example,",
			"and I want some way of distinguishing between them.",
			"And one easy way is to give every single entry inside of a table",
			"a unique identifier, or a unique id, represented here by this id column.",
			"And that's going to be a way of making sure that we can always",
			"access a particular flight uniquely.",
			"So we have an id column, an origin column, a destination column,",
			"and a duration column.",
			"Each of those columns has a type.",
			"So the types here, id is an integer.",
			"It's just going to be some number representing the flight, counting one,",
			"two, three, four, and so on and so forth.",
			"Origin and destination we'll label here as text.",
			"Though you'll see that if we were using my SQL,",
			"I might make these a variable length character that",
			"could be up to a certain number of characters",
			"if I know there's probably not going to be",
			"a city that's longer than a certain number of characters, for instance.",
			"Then I have a duration, which here is an integer.",
			"Some number of minutes that is going to be",
			"how long it takes for this flight to go from the origin to the destination.",
			"After the types for each of the columns, I",
			"have additional constraints that I might add to the columns as well.",
			"So integer Primary Key.",
			"The Primary Key here means that the id is",
			"going to be the primary way via which I uniquely identify a flight.",
			"There's going to be some optimizations here",
			"to make it very quick to be able to look up a flight by its id.",
			"Null is a constraint that I can place on columns to be able to say,",
			"I don't want to allow for this particular column to ever be empty.",
			"I don't want there to ever be a flight that doesn't have an origin",
			"or doesn't have a destination or a duration.",
			"So I can add constraints to a particular column to say,",
			"the origin, destination, duration, columns",
			"should not be allowed to be null.",
			"I want to always have an origin and a destination and a duration.",
			"Finally this Autoincrement after the Primary Key",
			"is a cue into SQL to automatically update the id every time",
			"I add a new row into the table.",
			"So if I add a new flight, I can give the flight",
			"an origin, destination, and duration.",
			"But I don't have to worry about giving it an id.",
			"SQL is going to handle that for me automatically.",
			"Automatically giving that new row in that table the next available id",
			"number.",
			"Here, then, is the way we create a table by giving the name of the table,",
			"each of the columns, the types for each of those columns,",
			"and then any constraints we would want to place on the columns.",
			"There are a number of different types of constraints",
			"that I can add to a particular column.",
			"Not null is one we've seen before.",
			"You can add a default, which just adds a default value to a particular column.",
			"Primary Key we've seen.",
			"Unique guarantees that every value is going to be unique.",
			"So if you don't want to allow for the same value",
			"to appear twice for a particular column, you",
			"can add a unique constraint to a particular column",
			"to enforce that as well.",
			"Check can be used to make sure that a value obeys a certain condition.",
			"Like, a number falls within a certain range, for example.",
			"If you have movie ratings, for example, and you're storing movie ratings inside",
			"of a database, you might care to make sure",
			"that those ratings are within the 1 to 5 range or the 1 to 10 range",
			"or whatever range you deem valid for the database.",
			"So via constraints you can begin to ensure",
			"that as you add data to the table, that data is going to be valid in some way.",
			"That it needs to obey and certain constraints,",
			"otherwise, if you try to add it to the table,",
			"it's not going to be accepted at all.",
			"And so that leads into the natural next question, which",
			"is, I now have all of these various different tables",
			"that I can create using these create table commands,",
			"but how do I actually add data into those tables?",
			"The way we're going to do that is via an INSERT command, where we're",
			"going to insert data into a SQL table.",
			"So what might that command look like?",
			"The command is generally going to look like this.",
			"We're going to say, INSERT Into, to say I",
			"would like to add a new row into a table.",
			"Following that, we provide the name of the table.",
			"Something like \"flight\" to say, I would like",
			"to add a new row to the flights table.",
			"And following the name of the table, we need",
			"to provide in parentheses a comma-separated list",
			"of all of the column names for which we are going to provide values.",
			"So here I said I want to provide values for the origin, destination,",
			"and duration of this flight.",
			"Note that I'm leaving out the ID column.",
			"I don't have to worry about adding a value for the ID,",
			"because I said the id should autoincrement.",
			"So it's going to automatically give the next available ID.",
			"And what values am I going to provide?",
			"Well, after the word \"values\", I provide, again,",
			"in parentheses, a comma-separated list of all of the values",
			"that are to be associated with those columns in the same order.",
			"So origin was the first one here.",
			"So origin will correspond to New York.",
			"Destination will correspond to London.",
			"Duration will correspond to 415.",
			"So this query let's me take the flights table that I've already created",
			"and add some data into that table.",
			"So you can use these INSERT queries once you",
			"have a table to being able to add new rows of data to that table.",
			"Every time a new flight comes up for an airline,",
			"the airline might, behind the scenes, be running an INSERT",
			"into Flights command that takes data about that flight",
			"and adds it to the table.",
			"But, of course, once we've added data to a table,",
			"we'd ideally like some way to get data out of that table, as well.",
			"That once we've stored data inside of our database",
			"we want to retrieve that data, too.",
			"To do that, we're going to use a particular type of query",
			"called a SELECT query.",
			"What SELECT is going to do is take a table that already exists",
			"and allow us to get data out of that table.",
			"It's not going to modify the data that's there,",
			"it's just going to retrieve data that might be inside a particular table.",
			"So what do those queries look like?",
			"Well, the simplest query might look a little something like this.",
			"SELECT * from flights.",
			"SELECT from flights means I want to select data from the flights table.",
			"And this * is a wild card that here just means",
			"select all of the possible columns that you can.",
			"",
			"So if this is my table, my table of flights",
			"where each flight has an id, an origin, a destination, and a duration,",
			"then select * from flights will select all of that data.",
			"All of the rows and all of the columns are",
			"going to come back to me when I run a query like this.",
			"Now it's possible that when I'm running these queries, when I'm accessing data,",
			"that I don't actually care about all of these columns,",
			"especially if I have a table with many more columns than just this.",
			"Maybe I only care about particular columns.",
			"And it would be wasteful to query the database",
			"asking it to return to me a whole lot more data than I actually need.",
			"So instead I could run query like this.",
			"SELECT-- instead of * I'm saying select origin comma destination from flights.",
			"So I'm again selecting from the flights table.",
			"Selecting all of the rows still, but the difference",
			"is that instead of select *, which means select all of the columns that",
			"are present in the table, select origin comma destination means I'm only",
			"going to select these two columns--",
			"the origin column and the destination column.",
			"So highlighted in blue here is the data that",
			"would be returned if someone were to run this particular SQL query.",
			"Now especially as tables begin to get larger and begin to have more and more",
			"rows-- here I just have six rows, but you might imagine a table with",
			"thousands or even millions of rows within it--",
			"you probably don't want to be returning every single row every single time.",
			"So just as you can constrain which columns come back to you,",
			"likewise, you too can constrain which rows come back",
			"to you when you perform a query.",
			"So I could say something like select * from flights where id= \"3.\"",
			"Again, this reads as very English like.",
			"I'm saying select all of the columns from the flights table,",
			"but not all of the rows.",
			"I only want to select the rows where--",
			"this is a SQL keyword--",
			"where id= \"3.\"",
			"ID is the name of a column, 3 is the value,",
			"and it's going to look through this table, only find me the flights",
			"where the id is equal to 3, and I'll just get back that one row as a result.",
			"It finds the row with an ID of 3, and it gives that back to me.",
			"If, instead, I said select * from flights where origin= \"New York,\"",
			"I can see that I don't just need to filter on the primary key--",
			"the id-- I can also filter on any other column.",
			"I can say, give me all the flights where New York is the origin.",
			"So all the flights leaving from New York.",
			"You might imagine that in New York's airport,",
			"for example they likely want some sort of query that's",
			"going to find all the flights leaving from New York such",
			"that they can display on a screen of some sort all of the departures",
			"from that particular airport.",
			"So you could run a query like this and get back",
			"only the rows in this database, inside of this table, that happened to have",
			"an origin of New York, for example.",
			"So let's go ahead and take a look at how we might actually",
			"run some of these queries inside of a SQL database.",
			"So in order to create a SQLite database, which is really just a file,",
			"I can start just by creating the file.",
			"It turns out that in the terminal, there is a command called Touch that",
			"will create a brand new file for me.",
			"So I'm going to create a file called flights.sql.",
			"It's going to be a SQLite database file that by default has nothing in it.",
			"But then, assuming you have SQLite installed,",
			"I can run SQLite 3 followed by flights.sql,",
			"and now I'm inside of the SQLite prompt.",
			"I can now begin to write commands that will be executed on this SQL database.",
			"So one thing I might do is create a table called \"flights.\"",
			"In this table, I want to have an id column, which is an integer.",
			"It should be the primary key, the main way via which I identify a flight.",
			"I would like to autoincrement it.",
			"I would also like for the flights table to have an origin, which",
			"will be a text field that is not null.",
			"I'll add a destination field, also a text field that is not null.",
			"And then finally I'll add a duration field,",
			"which is an integer that also shouldn't be null.",
			"I'll end with an end parentheses and a semicolon, press Return,",
			"and that executes that command on my database.",
			"I have now created a table called \"flights.\"",
			"To verify this in SQLite, in the prompt I can type .tables,",
			"and that will show me all of the tables that currently exist in my database.",
			"It just so happens that I have a table called \"flights.\"",
			"Of course, there's nothing inside this table, which",
			"I can verify by running SELECT * from flights,",
			"meaning get all the data from the flights table.",
			"If I press Return nothing happens.",
			"I don't see anything.",
			"There is no data that happens to be here.",
			"But now I could say something like INSERT into Flights.",
			"Then I'll provide in parentheses the names of the columns.",
			"And on the slide a moment ago I showed this on multiple lines.",
			"That was just for visuals sake.",
			"These commands can be entirely on one line if we would like it to.",
			"So I can say origin, destination, and duration and then provide values.",
			"I can say let's add New York to London, and I'd",
			"like for this flight to be duration of 415 minutes.",
			"So I type in the command, press Return.",
			"That adds a new row to my flights table.",
			"I can verify this by running SELECT * from flights.",
			"And I see that now I have this table whose id is one--",
			"that's the id column from New York to London--",
			"with a duration of 415 minutes.",
			"I could do this again and again.",
			"I, in advance, prepared a couple of INSERT",
			"queries just to give us a little bit more data.",
			"Each of this is just a different INSERT query",
			"that's going to add one new flight into our database.",
			"So I'll go ahead and copy those and then into the database",
			"I'll go ahead and paste in all these INSERT commands",
			"to insert a whole bunch of flights into this database.",
			"Now if I run SELECT * from flights what I get is all of the flights.",
			"This is not formatted particularly nicely.",
			"SQLite has some additional tricks if you'd like to format it a little nicer.",
			"So I can say, go ahead and put this into columns mode,",
			"and it gives me some headers.",
			"So .headers yes.",
			"And now if I SELECT * from flights, the data",
			"is organized a little more nicely where things are really into columns",
			"and there are headers for each of the rows.",
			"Where I can see that I kind have a text-based representation of what",
			"I was displaying graphically a moment ago.",
			"That inside of my flights table I have four columns-- an id column, origin,",
			"destination, and duration.",
			"Each flight is just one of the rows that's inside of this table.",
			"Now I can begin to run additional SELECT queries.",
			"If I want to do something like SELECT * from flights where origin= \"New York,\"",
			"well then instead of getting back all of the flights,",
			"I'm only going to get back the flights where the origin is New York.",
			"So I can very quickly filter down on this data,",
			"only getting the information that I actually care about taking a look at.",
			"There are other ways of interacting with SQLite as well,",
			"but this SQLite prompt is a very direct way",
			"of just being able to write a query very quickly",
			"and see the results of that query.",
			"So it turns out, there are other types of queries we can run as well.",
			"So we'll take a look at some others.",
			"We don't just need to say where something equals something else.",
			"Other types of Boolean expressions are allowed as well.",
			"So I could say something like SELECT * from flights",
			"where duration is greater than 500.",
			"Where the idea here is let's look at the duration column.",
			"It's an integer, so we can do arithmetic expressions on these values.",
			"I can take a value and see if it's greater than 500 or not.",
			"When I do that, what I get back is all of the rows that have",
			"a duration that's greater than 500.",
			"I can begin to query not just on whether one value equals",
			"another value, but also other types of comparisons as well.",
			"Much as in Python, as when we had Boolean expressions in Python,",
			"I could join multiple Boolean expressions together",
			"using words like AND and OR.",
			"SQL has the same type of thing in its own query syntax, too.",
			"I could say something like SELECT * from flights where duration is greater than",
			"500 AND destination= \"Paris.\"",
			"As you might logically intuit this means,",
			"this means get me all the flights that are going to Paris",
			"and that take longer than 500 minutes.",
			"It turns out there's only one such row inside this table that",
			"satisfies both of those constraints.",
			"Of course, instead of using AND I could've also",
			"used OR to get a different query where now I'm looking for all of the flights",
			"longer than 500 minutes or the destination is Paris.",
			"So as long as either of those conditions are met, I'm going to get results back.",
			"So what I get back are some of the rows where the destination is Paris,",
			"some rows where the destination isn't Paris,",
			"but the duration is more than 500 minutes,",
			"and of course any row that satisfies both of these constraints.",
			"In particular, flight id number 2.",
			"That gets resulted as well when I run this particular query on this table.",
			"There are other types of queries I can perform in addition to that.",
			"So I can say something like SELECT * from flights",
			"where origin is in-- and then in parentheses-- in \"New York\"",
			"comma \"Lima\" to say, check if the origin is in this sequence of possible values.",
			"The sequence of New York and Lima, as long as it is one of those two, then",
			"I want for the results to come back.",
			"So then you'll get back rows that have an origin of New York, rows",
			"that have an origin of Lima, as well.",
			"So you can begin to construct more sophisticated queries that",
			"are able to check for whether an origin is in a list of possible values",
			"or even if it matches a particular pattern.",
			"That maybe you know that one of the columns looks a certain way",
			"or is formatted according to a particular structure,",
			"but you don't know exactly what the value is.",
			"I could run a query like SELECT * from flights where origin--",
			"not equals-- but where origin is like--",
			"and then in quotation marks, I have a bit of a strange expression \"%a%\"",
			"This percent stands for a wild card.",
			"And this time the wild card is looking at the values of a particular column.",
			"In this case, the value of the origin column, meaning the percent",
			"stands for zero or more characters, no matter what those characters are.",
			"We're looking for some number of characters-- maybe zero maybe more--",
			"followed by an A, followed by some other number of characters--",
			"maybe zero maybe more.",
			"And ultimately what this query is going to do",
			"is look inside of the flights table and get back to me",
			"all of the results where there is an A the origin.",
			"As long as there is an A in the origin column,",
			"doesn't matter if there are characters before it or characters after it,",
			"all of the rows that come back are going to be the rows that",
			"just so happened to have an A in it.",
			"So lots of ways we can begin to run SELECT queries.",
			"And there are even additional functions you can add to your select queries",
			"as well.",
			"If instead of just selecting the values of columns,",
			"I want to compute the average duration of a particular category of flights,",
			"or I want to count how many flights that are coming out of New York, or I",
			"want to find the longest flight that goes to London,",
			"or the shortest flight that goes to London,",
			"or I want to add up all of the durations for a whole bunch of flights.",
			"Maybe there are flights that are connected to each other",
			"and I want to add up the total travel time that might take.",
			"SQL has a number of built-in functions that",
			"allow us to perform these sorts of calculations, as well.",
			"So a couple of different SQL commands we've now taken a look at.",
			"We've taken a look at Create Table that allows us to create a new table.",
			"INSERT that lets us add data to a table.",
			"SELECT, which lets us take data inside of the table and retrieve it.",
			"But, of course, often when we're dealing with databases,",
			"the data doesn't just get added.",
			"The data changes in some way.",
			"So we also need some way of being able to update data after it's already",
			"inside of our database.",
			"There's another query for that, which is an Update command that we",
			"can execute on our database.",
			"And that command looks something like this.",
			"Again displayed on multiple lines, but you could put this entirely just on one",
			"line.",
			"SQL doesn't really care if you add line breaks.",
			"It just knows that when it sees a semicolon at the end of the command,",
			"that is the end of this particular command.",
			"But here what I've said is used the Update keyword",
			"to say I would like to update a table.",
			"What table would I like to update?",
			"I'd like to update the flights table.",
			"What would I like to do?",
			"Well I'd like to set the duration equal to 430.",
			"So whatever the value of duration happens to be right now,",
			"change it to 430.",
			"But of course I don't want to change it to 430 for every single flight.",
			"Just as in a SELECT clause, I could say WHERE something = something or WHERE",
			"and then some other clause to specify where",
			"I want the rows to be selected from.",
			"Likewise, to an Update I can say set duration equal to 430",
			"WHERE a particular condition is true.",
			"So here I'm going to look through the flights table,",
			"find myself all of the flights where the origin is New York",
			"and the destination is London.",
			"For those rows I'm going to update the value of the duration column",
			"setting the duration column equal to 430.",
			"So using that syntax I can take data and update it,",
			"changing one value to another value by pinpointing which row or rows I",
			"would like to change.",
			"If I only want to change one row, I might do Update flights SET duration=",
			"something WHERE id= a particular id.",
			"To be able to pinpoint one id and then take that row",
			"and make some modification to it.",
			"In addition to inserting data, selecting data, and updating data,",
			"the last main command we'll concern ourselves with",
			"is the ability to delete data.",
			"The ability to take a row and say, I'd like to get rid of it.",
			"Or take multiple rows and get rid of them.",
			"And so a command like delete from flights, where destination= \"Tokyo\"",
			"as you might imagine deletes from the flights table all of the rows that",
			"satisfy this condition where the destination is equal to Tokyo.",
			"So a number of different operations now that we have the ability to do.",
			"The ability to delete from a particular table where a condition is true,",
			"the ability to update a table based on particular conditions, the ability",
			"to select data from a table, and insert data into a table as well.",
			"There are a couple other clauses that can be used to add SQL queries as well.",
			"Just to add additional functionality.",
			"If I don't want all of the rows to come back from a particular SQL query,",
			"I can limit the results that come back.",
			"So normally SELECT * from flights would get me",
			"all of the flights inside of the table.",
			"But I could say SELECT * from flights, LIMIT 5 to just say,",
			"I only want five results to come back from this table.",
			"ORDER BY allows me to decide how the results are ordered inside the results",
			"to come back.",
			"So I can say SELECT * from flights, ORDER BY destination, or ORDER BY",
			"duration to get all of the flights in order by how long they are.",
			"GROUP BY allows me to group a whole bunch of rows together.",
			"So if I wanted to group all of the flights by their origin",
			"so I can get all of the flights leaving New York and all the flights leaving",
			"London and so forth, I could do something like SELECT *",
			"from flights GROUP BY origin to group flights by their origin as well.",
			"HAVING is a constraint I can place on GROUP BY",
			"to say that I would like to select all of the flights grouping them",
			"by their origin, but they need to have a count of at least three.",
			"Meaning there needs to be at least three flights that",
			"are leaving from that particular city.",
			"",
			"For all of these particular clauses, these",
			"are helpful to know if you're going to be directly writing SQL.",
			"We won't worry about them too much here, in particular",
			"because fairly shortly we're not going to be writing SQL ourselves.",
			"We're going to just be writing Python code",
			"and Django is going to, under the hood, be manipulating the database",
			"and creating the SQL commands that it is going",
			"to run on the underlying database.",
			"So we will see how we don't actually need to worry",
			"about writing the specific syntax.",
			"But Django is going to handle much of that for us.",
			"So here now we have a flights table, a table",
			"that keeps track of all of the flights that we have,",
			"organizing them by their id and their origin and their destination",
			"and their duration.",
			"But oftentimes when we're dealing with data, especially in a larger database,",
			"we don't just have one table of data.",
			"We have multiple tables of data.",
			"And those multiple tables might relate to each other in some way.",
			"Let's take a look at an example of how that might come about.",
			"We're going to introduce a concept that will call foreign keys,",
			"and we'll see what that means in just a moment.",
			"So here again is our flights table.",
			"The flights table has four columns-- an id, origin, destination, and duration.",
			"But of course in New York, there are multiple airports.",
			"And so it might not make sense for me to just",
			"label each origin or each destination just by the name of the city.",
			"Maybe I also want to give the three letter airport",
			"code that corresponds to the airport to which I'm referring in this case.",
			"So how would I encode into this table, not only the origin, but also",
			"that city's airport code?",
			"And not only for the destination the name of the city,",
			"but also the airport code for that airport as well?",
			"Well I could just add more columns.",
			"I could say something like, all right, now",
			"we have this table that has an id, an origin, an origin code, a destination,",
			"a destination code, and a duration.",
			"But here now, the table is starting to get fairly wide.",
			"There are a lot of columns here and in particular, there",
			"is some duplicate data.",
			"Paris is associated with this particular three letter",
			"code, and the same thing for New York and other airports as well.",
			"There is some messiness in the structure of this data.",
			"Often what we'll want to do as we begin to deal",
			"with data in larger and larger sets with more and more columns",
			"is we'll want to normalize this data.",
			"Separating things out into multiple different tables that",
			"just reference one another in some way.",
			"So instead of just having a single flights table what we might consider",
			"doing is saying that flights are one type of object",
			"but another type of object that I care about is an airport.",
			"So I might just have a separate table just for airports",
			"where this table has three columns.",
			"A column for the ID of the airport, just some unique number",
			"that can identify a particular airport.",
			"One column for the three letter code for that airport,",
			"and one letter for the city, or one column",
			"for the city where that airport is in.",
			"Now this is a much more straightforward, simpler representation",
			"of all of the airports.",
			"The question becomes what happens to my flights table?",
			"My flights table that here had an id, an origin, destination, and duration where",
			"the type of origin and destination were in this case just text.",
			"Text-based data representing the name of the city",
			"from which the flight is departing or to which the flight is arriving.",
			"Well now that I have the separate airports",
			"table where every row in the airports table",
			"has its own unique id, then what I can do in this case is,",
			"instead of storing an origin and a destination as text,",
			"I can store what we'll call a foreign key.",
			"A reference to a key in another table and rename these columns",
			"to origin id and destination id.",
			"That instead of storing text are going to store a number where",
			"origin_id 1 means the origin of flight one",
			"is whatever airport number 1 happens to be.",
			"I could go to the airports table, look up which airport has an id of 1,",
			"and that would tell me the origin of this flight.",
			"And if I went to the airports table and looked up which airport",
			"had an ID of 4 that would tell me the destination of this flight as well.",
			"So by combining two different tables.",
			"One table for representing airports, and one table for representing flights.",
			"I'm able to connect these two different tables together",
			"by way of a foreign key.",
			"Some columns inside of my flights table, namely the origin id column",
			"and the destination id column that together",
			"allow me to reference information stored inside of another table as well.",
			"As you imagine this sort of airlines database",
			"growing and storing more different kinds of data,",
			"the ability to relate tables to each other",
			"is going to become incredibly powerful.",
			"So one thing you might imagine is that in addition",
			"to storing airports and storing flights, an airline probably",
			"also needs to store information about its passengers,",
			"like who on which flight.",
			"So you could imagine constructing a passenger's table",
			"that has an id column to uniquely identify every passenger, a first name",
			"column that stores every passenger's first name,",
			"a last name column for storing their last name,",
			"and a flight id column for storing what flight that passenger happens to be on.",
			"So in this case, I could say that Harry Potter is on flight number one.",
			"I could look that up in the flights table",
			"to find out inside the flights table, here",
			"is where the flight is leaving from, where it's going to",
			"and what its duration happens to be.",
			"Now as we begin to design these tables, we",
			"have to think about what the implications of that design",
			"happen to be.",
			"In the case of this passenger's table, it",
			"does seem that there is a limitation on the table design that I have created.",
			"Namely, if you think about it you'll see the limitation of this table design",
			"is that any particular row can only have one flight id associated with it.",
			"That Harry Potter has a single flight id column",
			"that can only have one value stored inside of it.",
			"This would seem to make it impossible to allow",
			"for us to be able to represent a person that",
			"could be on multiple different flights.",
			"So this starts to get at the idea of different types of relationships",
			"that rows in a table can have to one another.",
			"One type of relationship is a many to one",
			"relationship, or a one to many relationship,",
			"where I express the idea that one flight can",
			"be associated with many different passengers, for instance.",
			"But we might also want is a many to many relationship,",
			"where many different passengers can be associated with many different flights.",
			"A passenger might have more than one flight.",
			"A flight might have more than one passenger.",
			"To do that we're going to need a slightly different structure",
			"for this particular type of table.",
			"One way we could approach it is by creating a separate table",
			"for storing people.",
			"I can have a people table where every person has an id, has a first name,",
			"and has a last name same as before.",
			"But I'm no longer storing flight information inside of the table.",
			"I've cleaned my setup up.",
			"I'm only storing people in this table and nothing about their flight",
			"information.",
			"I'll have a separate table for dealing with passengers on the flight",
			"and mapping people to their flights.",
			"We can think about what does that table need to look like?",
			"Well I need some sort of table that is going to relate people to what flights",
			"they happen to be on.",
			"So odds are we're going to need one column that is a foreign key that",
			"references this people table, and we'll need another column that",
			"is a foreign key that references the flights table, such",
			"that I can relate those two tables together.",
			"So that table could look like this.",
			"This now is a simplified passengers table that only has two columns.",
			"It has a person id column and a flight id column.",
			"The idea of this table now is it's known as an association",
			"table, or a joined table that just associates one value from one table",
			"with another value from another table.",
			"This row here, one and one, means the person with an id of one",
			"is on flight number one.",
			"I could look up that person inside of the people table,",
			"look up that flight inside of the flights table,",
			"and figure out who the person is and what flight they're on.",
			"Down here, two and four, means whoever the person with an ID of 2",
			"is on whichever flight happens to have an ID of 4.",
			"So this now has allowed us to be able to represent",
			"the types of relationships we want.",
			"We have a table for airports and a table for flights and any flight",
			"is going to map to two different airports, one destination one origin.",
			"And any airport might appear on multiple different flights.",
			"It's sort of a one to many relationship.",
			"Then over here, when it comes to passengers,",
			"we've stored people inside of a separate table,",
			"and then had a many to many mapping between people and flights",
			"so that any person could be on multiple different flights.",
			"Like here, for example, person number two is on both flights one and four.",
			"Likewise, a flight could have multiple people.",
			"So in this case flight number six has passengers five and six",
			"that are on that flight as well.",
			"We've been able to represent those relationships.",
			"Of course a byproduct of doing this is that now our tables are a little bit",
			"messier to look at.",
			"Messy in the sense that it's not immediately obvious to me,",
			"when I look at this table, what data I'm looking at.",
			"I see these numbers, but I don't know what these numbers mean.",
			"I've separated all these tables into different places.",
			"Now it's a little harder for me to figure out who is on which flight.",
			"I have to look at this data, look up people in the people table,",
			"look up flights in the flights table, and somehow",
			"associate all of that information back together in order",
			"to draw any sort of conclusion.",
			"But luckily, SQL makes it pretty easy for us",
			"to be able to take data across multiple different tables",
			"and join them all back together.",
			"We can do this using a JOIN query that takes multiple tables",
			"and joins them together.",
			"So the syntax for a JOIN query might look something like this.",
			"And here we'll go back to just the two-table setup where",
			"I have flights and passengers, where every passenger is",
			"associated with one flight.",
			"But you could extend this and join multiple tables",
			"to deal with our more complex example as well.",
			"But here, I'd like to select every person's first name",
			"and their origin and their destination.",
			"I'm going to select that from the flights table,",
			"but I need to join it with the passengers table.",
			"Then I say ON to indicate how it is these two",
			"tables are related to one another.",
			"In this case, I'm saying the way these two tables are",
			"related to one another is that the flight id column of the passengers",
			"table is associated with the id column of the flights table.",
			"The flights table has an id that uniquely identifies every flight,",
			"and the passengers table has a flight id column",
			"that uniquely identifies the flight that we're referring to",
			"for this particular passenger.",
			"And so the result I might get is a table that looks like this.",
			"That gives me everyone's first name, but also",
			"their origin and their destination.",
			"Our origin and destination are going to be drawn from that table of flights",
			"and the first name is going to be drawn from the table of passengers.",
			"But by using a JOIN query, I've been able to take data",
			"from two separate tables and join them both back together.",
			"And there are a number of different types of JOIN queries that I can run.",
			"What we saw here was just the default JOIN, which",
			"is otherwise known as an INNER JOIN.",
			"Effectively, an INNER JOIN will take the two tables,",
			"it will cross compare them based on the condition that I specified",
			"and only return back to me the results where there's a match on both sides.",
			"Where we match a passenger's flight id with an id in the flights table.",
			"There are various different kinds of outer",
			"joins if I want to be OK with the idea that maybe",
			"something on the left table that I'm joining",
			"doesn't match with anything on the right,",
			"or maybe something on the right table doesn't match with something",
			"on the left.",
			"But just know there are other types of JOIN queries that I can run as well.",
			"Other strategies that can be helpful when dealing with SQL tables",
			"are optimizations we can make to make queries more efficient.",
			"One thing we can do with our tables is to create an index",
			"on a particular table.",
			"You can think of an index as kind of like the index in the back of a book,",
			"for example, where if you wanted to be able to search for a topic in a text",
			"book, you could open the textbook and just page by page look for every topic",
			"and just try and find the topic you're looking for.",
			"But often what you'll be able to do if the table has",
			"an index is go to the index of the book, find the topic you're looking for,",
			"and that will quickly give you a reference for how",
			"to get to the right page in question.",
			"An index on a table operates in much the same way.",
			"It is an additional data structure that can be constructed,",
			"and it does take time and memory to be able to construct this data structure",
			"and to maintain it anytime you update the data inside the table.",
			"But once it exists it makes querying on a particular column much more",
			"efficient.",
			"You can very quickly look something up in the index",
			"and find the corresponding rows that go along with it.",
			"So here we can have a command like create an index that we're",
			"going to call name index on the passengers table,",
			"and in particular on the last name column.",
			"I expect that as I query this table, I'm pretty frequently",
			"going to be looking up passengers by their last name.",
			"So I would like to create an index on that table",
			"to be able to more efficiently search for a passenger",
			"based on their last name as well.",
			"So that's just a general overview of what SQL syntax is all about.",
			"A syntax that we can use to be able to create data tables inside of which",
			"are storing rows of data where every row consists of some number of columns,",
			"and every column has a type.",
			"We have the ability to create tables, add data to them,",
			"update, delete, and get data out of those tables as well.",
			"But as we begin to introduce these new technologies,",
			"there are always risks and potential threats",
			"that are associated with those technologies as well.",
			"In SQL, the key one to be aware of is what's known as a SQL injection attack.",
			"A security vulnerability that can happen if you're not",
			"careful about how it is you actually execute your SQL commands.",
			"So where might this come about?",
			"You might imagine for instance, that if a database has some number of users,",
			"you might be storing those users inside of a database.",
			"For instance, in a users table where there's a user name",
			"column and a password column.",
			"Though, in practice you probably wouldn't",
			"want to store passwords and clear text, let's",
			"imagine here for example that you are storing usernames and passwords inside",
			"of a table.",
			"We have a log in form for a website that looks",
			"like this, where you get to type in your username and your password.",
			"So if someone types in their username and password,",
			"what might happen is that the web application might look SELECT * FROM",
			"users, where username= this particular user name highlighted here.",
			"We're just going to substitute the user name right there.",
			"And password= and we'll substitute the password over there.",
			"So if someone tries to log into our site,",
			"like Harry logs in with a password of 12345, what we might do",
			"is run this SELECT query.",
			"Say SELECT * FROM users where username is \"Harry\"",
			"and where the password is 12345.",
			"Our logic might be if we get results back,",
			"then that means there is a user whose username is Harry and password is 12345",
			"and we can go ahead and sign that user in.",
			"But imagine now what might happen if instead,",
			"the user who typed in a username of hacker\"--.",
			"Seems like a bit of a strange username to type in.",
			"It doesn't matter what they put in their password here now.",
			"The result might be that what they would plug into the username is where",
			"username=\"hacker\" and then the - -.",
			"It turns out --",
			"in SQL stands for a comment in SQL.",
			"It just means ignore everything that comes after it in the same way that",
			"in Python you can use the hashtag symbol to mean the rest of this line is",
			"a comment, and the compiler-- whoever is running the program--",
			"should just ignore it.",
			"So everything after the - - kind of gets ignored.",
			"We've effectively been able to bypass the password check.",
			"Someone could bypass a password check and log into an account",
			"even if they were unauthorized to do so.",
			"So here is a vulnerability within the SQL syntax.",
			"If we're not careful about when we're running SQL syntax,",
			"we could be running untrusted SQL commands",
			"that some hacker or some adversary has been able to plug-in to our program.",
			"So how do we solve this sort of problem?",
			"One strategy is to escape these characters.",
			"Escaping just meaning add some back slashes",
			"that just makes sure that SQL knows to treat these as a literal quotation",
			"mark and a literal dash, and not special SQL syntax of any sort.",
			"Another strategy is to use an abstraction layer on top of SQL",
			"so that we don't have to write the SQL queries at all.",
			"That's in fact what we're about to do as we transition to the world of Django",
			"to take a look at how when we begin to use a web framework like Django,",
			"we now have the ability to not worry about the nuances of the syntax of SQL",
			"and just deal a little more high level with what our models are.",
			"What the types of objects are that we're dealing with and interacting",
			"with inside of this application.",
			"One other concern worth noting about with regards to SQL",
			"is the possibility of race conditions.",
			"A race condition is something that might happen",
			"anytime you have multiple events that are happening in parallel threads,",
			"so to speak.",
			"That you have one thing happening and another thing happening simultaneously.",
			"You might imagine that in the case of social media sites",
			"where you can like a post, like an image on Instagram or a tweet on Twitter,",
			"for example.",
			"What would happen if two people tried to like the same post at the same time?",
			"If we're not careful about how we run those particular SQL queries",
			"there's a potential for us to be able to get race condition problems,",
			"where we end up trying to query for the number of likes that a post has",
			"and then another person tries to do the same thing",
			"and there are conflicts when we try and update it",
			"where the result might not be what we would expect it to be.",
			"There are a number of unexpected results that",
			"can happen when we deal with problems related to race conditions",
			"where multiple things are happening simultaneously.",
			"How do we solve those problems?",
			"Well, one strategy is to sort of place a lock on the database.",
			"To say, while I'm working on this database nobody else",
			"can touch this data.",
			"Let me finish this transaction, so to speak.",
			"Finish working on this particular transaction and making all the changes",
			"I need to make to the database.",
			"Only after I'm done I can release the lock and let someone else go ahead",
			"and modify the database as well.",
			"So a number of concerns to be aware of as we",
			"begin dealing in this world of SQL and trying to work with databases.",
			"So now that we've taken a look at the syntax of SQL,",
			"understanding how these tables work, how they're structured,",
			"and what it is that we can add to those tables,",
			"let's go ahead and turn our attention in particular to Django",
			"models, which are a way of representing data inside of a Django application.",
			"Because where Django is really going to get powerful in designing our web",
			"applications is the ability to represent data in terms of these models.",
			"So we're going to go ahead and try to create a web application that",
			"is going to represent what an airline might want to store inside",
			"of its own web application.",
			"All right.",
			"So the first thing I want to do is create a Django project.",
			"So I'll go ahead and type Django-admin START PROJECT",
			"and the name of my project will just be called \"airline.\"",
			"I'm creating a project for an airline's website for example.",
			"I'll go ahead and go into the airline directory,",
			"open that up in my code editor.",
			"Before I actually begin editing any code,",
			"remember that every Django project needs to have one or more apps within it.",
			"So the first app that I'll create for this airline",
			"is an app for keeping track of flights.",
			"So keeping track of flight related information,",
			"like origins and destinations and durations",
			"and what passengers are on those flights.",
			"When I create a new app, first thing I'll need to do",
			"is go into settings.py inside of airline,",
			"and go ahead and add this app as an installed app.",
			"So \"flights\" is now an app that I have installed.",
			"Then what I'll want to do is say, go ahead and go into urls.py, which is,",
			"again, that table of contents for all the",
			"URLs I can get to for this particular web application.",
			"I'll IMPORT include, because I want to do is when someone visits the path",
			"of flights/ something, I want to take them to flights.urls,",
			"mapping them to the urls.py file that will be inside of my \"flights\"",
			"application.",
			"Of course, now I need a urls.py file inside of my \"flights\" application.",
			"So I go into \"flights\" and create a new file that I'll call urls.py.",
			"",
			"We can do from FROM.django.urls IMPORT path FROM .IMPORT views.",
			"And then my URL patterns are going to go inside of this list right here.",
			"But before I begin dealing with actual URLs,",
			"the first thing I'm going to want to do is create some models.",
			"Models are going to be a way of creating a Python class that",
			"is going to represent data that I want Django to store inside of a database.",
			"So when I create a model, Django is going",
			"to figure out what SQL syntax it needs to use it to A-- create that table",
			"but then B-- manipulate that table.",
			"Selecting and updating and inserting anytime I make changes to those models.",
			"So here what I can do is inside of every app that gets created--",
			"in this case called \"flights\"-- there is a models.py file.",
			"We haven't looked at this before, but this",
			"is going to be the place where we get to define what models",
			"are going to exist for our application.",
			"Every model is going to be a Python class.",
			"You can think of this as having one model for each of the main tables",
			"we care about storing information about.",
			"So let me define a new class called \"flight\"",
			"that is going to inherit from models dot model some creating a new class",
			"called \"flight\" that is going to be a model.",
			"Then I need to provide inside of this class all of the parameters",
			"that a flight has.",
			"What properties does a flight have that I might want to keep track of?",
			"Well, a flight has an origin.",
			"And the origin is going to be a models.charfield.",
			"This is all documented on Django's website",
			"in terms of the various different types of fields that exist that I",
			"can include inside of a Django model.",
			"Where here I'm saying here is a character field",
			"whose max length is going to be 64.",
			"I assume that most city names are not going to go longer than 64 characters.",
			"That seems like a reasonable maximum length for the origin of the flight,",
			"for example.",
			"Every flight will also have a destination,",
			"which will be a character field whose max length is also 64.",
			"Every flight will have a duration, which will just be an integer field.",
			"So now this is my very first Django model.",
			"It is a class called \"flight\" where I've defined all of the properties",
			"that a flight has, and then using Django syntax to find",
			"what type they should have as well.",
			"Every flight has an origin, has a destination, and has a duration.",
			"But of course nothing here is actually modified",
			"the database the Django is using in order to store information",
			"about my web application.",
			"And we can see if we, in fact go back to airline,",
			"and I type LS, what you see here is that there isn't yet a database that exists.",
			"I just have an airline directory, a flights directory,",
			"and a manage.py file.",
			"So what I'd like to do is somehow tell Django",
			"that you should update the database to include information about the models",
			"that I have just created.",
			"This is a process that we refer to in Django and more generally as",
			"migrations.",
			"I create a migration to say, here are some changes",
			"that I would like to apply to the database.",
			"Then I migrate them to tell Django to take those changes",
			"and actually apply them to the database.",
			"So it's a 2-step process.",
			"One is creating the migration, the instructions for how to actually go",
			"about manipulating the database.",
			"And then one to take that migration step of saying now take those instructions",
			"and actually apply them to the underlying database.",
			"We can make the migrations via command.",
			"Again we'll use the manage.py script that has a number of different commands",
			"that allow us to control various parts of the application.",
			"I'll use python manage .py and then MAKE migrations.",
			"Now what we see is we've created a migration inside of 0001_initial.py",
			"where in this migration it's created a model called \"flight.\"",
			"So if I go ahead and look at the migrations directory,",
			"I see this file has been created for me.",
			"I didn't have to create it myself.",
			"This file has instructions to Django for how",
			"to manipulate the database to reflect the changes I have made to the model.",
			"Here is an instruction to Django to create a new model called",
			"\"flight\" that has these particular fields inside of it.",
			"It's basing this off of the changes that I made to models.py.",
			"The model that I added is now reflected in this migration.",
			"Now if I want to apply the migration, actually apply it to Django's database,",
			"I can run python manage.py MIGRATE to go ahead and apply these migrations.",
			"There are a bunch of default migrations that get applied as well,",
			"but notice that one of the migrations that gets applied is this one here.",
			"Applying flights.0001_initial to say let's go ahead and apply that",
			"migration, create that table that is going to represent flights.",
			"If I type LS now, you'll see that now I have a db.sqlite3 file.",
			"A SQLite database that is going to contain a table that",
			"is going to store all of my flights.",
			"And so how can I actually begin to manipulate this data?",
			"How can I interact with these sorts of models?",
			"I could use direct SQL syntax by opening up this database file",
			"and running commands, but Django provides some nice abstraction layers",
			"on top of it so that I don't actually need to execute those commands myself.",
			"I can begin to work more generally with Python classes and variables and things",
			"that I'm used to inside the Python language.",
			"So I can enter Django's shell where I can just run Python commands",
			"by running python manage.py shell.",
			"",
			"What this does is open up a shell or a console",
			"where I can begin to write Python commands that",
			"get executed on this web application.",
			"The first thing I'd like to do is from flights.models",
			"let me just import flight.",
			"So \"flights\" is the name of my app.",
			"\"Models\" is the name of that file.",
			"I'm importing the flight class from that models file that I've just created.",
			"Now what I can do is I can create a new flight.",
			"I can say something like f= a flight whose origin is \"New York\"",
			"and whose destination is \"London\" and whose duration= 415 minutes.",
			"And then I can say f.save to save that new flight that I have created.",
			"This syntax-- I'll go ahead and make it a little bit bigger so you can see it",
			"a little easier--",
			"is my way of inserting data into this table.",
			"I don't need to use an INSERT query in SQL.",
			"I just have to write a Python command, and Django knows that when",
			"I create a new flight and save it, that it should run an instant command",
			"on the underlying SQL tables.",
			"Where here I've created a new flight with this particular origin",
			"and destination and duration and I've gone ahead and saved that flight as",
			"well.",
			"If I want to query that flight, get information about that flight,",
			"I can say something like, flight.objects.all",
			"is the equivalent of a Select-All.",
			"Get me all of the flights that exist inside of my database.",
			"Here I see I get back a query set, which is just a set of results.",
			"Here I have one flight that came back, flight object 1.",
			"So a flight has been created for me with ID 1.",
			"Now \"flight object 1\" probably not all that helpful of a name.",
			"It'd be nicer if this model had a cleaner",
			"way of seeing the name of a particular flight, for example.",
			"And it turns out we can do that.",
			"Any model-- I'll go back to the code inside of models.py--",
			"any model can implement double underscore str",
			"function, which returns a string representation",
			"of that particular object.",
			"This applies not just to Django models but to Python classes more generally.",
			"That if this function returns a string representation of the object,",
			"let's go ahead and return a formatted string that is self.id",
			"I'll say self.origin to self.destination.",
			"So here what I've said is that the string representation of any flight",
			"is going to be a string that gives its ID and then says origin to destination.",
			"Just a nice clean name that is going to represent this particular flight.",
			"So now if I go back to the shell by running python manage.py shell,",
			"I can say from flights.models import Flight.",
			"I can say, all right, let's let a variable called",
			"flights be equal to flight.objects.all.",
			"And now flights is going to be this flight, flight 1, New York to London.",
			"It now has a much nicer, string representation",
			"of the name, which just makes it a little bit easier to interact with.",
			"If I wanted to get just that one flight, I can say flight equals flights.first.",
			"Flights is a query set.",
			"First gets me that first flight.",
			"And so now, I have this flight from New York to London.",
			"And just as in any Python object, I can begin",
			"to access properties of that object.",
			"I can say, all right, flight, what is your ID?",
			"Flight, what is your origin?",
			"Flight, what is your destination?",
			"Flight, what is your duration?",
			"And I can access, as values, all of the properties of this flight",
			"that I ultimately care about.",
			"And if I want to delete the flight, I can say something like flight.delete.",
			"Now, ultimately though, this is not the model",
			"that I actually want to represent my flight.",
			"Because here again, I'm using a character field, a char field,",
			"for things like origin and destination.",
			"When in reality, I'd probably like to use something like another table",
			"for representing airports, and then some relationship",
			"between every flight and an airport.",
			"So let's go ahead and try and implement that idea now,",
			"that I can go back into models.py and create a new class.",
			"I'll create a class called airport.",
			"That is also a model.",
			"And I'd like for this airport class to have",
			"a code, which is a character field with a max length of 3,",
			"for the airports code.",
			"As well as a city, which would be a character field",
			"with a max length of 64.",
			"And let's also give this airport a string representation.",
			"We'll say that the string representation of an airport",
			"will just be the city of the airport, and then in parentheses,",
			"the code of the airport.",
			"So it will be something like New York, and then in parentheses",
			"JFK to represent a particular airport.",
			"And now, our flight model needs to change a little bit.",
			"No longer will origin and destination be character fields",
			"that are just storing text.",
			"But instead, origin is going to be a foreign key.",
			"A foreign key that references another table, like the airport table.",
			"And then, I can provide some additional arguments.",
			"So this alone would be enough.",
			"But I can add some additional arguments like on delete equals models.cascade.",
			"So what does this mean?",
			"Well, when I have tables that are related to each other,",
			"SQL needs some way of knowing what should",
			"happen if you ever delete something.",
			"If I have a flight from JFK to London, and later in time",
			"decide to delete JFK airport from my database,",
			"what should happen to that flight?",
			"What happens to flights when the thing that it is referencing gets deleted?",
			"What models.cascade means is if I were to ever delete",
			"an airport from the airports table, it's going to also delete",
			"any of the corresponding flights.",
			"And there are other on delete parameters you",
			"can set for saying like, don't even let me delete an airport",
			"if there are flights that are leaving from",
			"or going to that airport, that's called models.protect.",
			"But there are other ways of implementing similar types of constraints.",
			"And the other argument that I'm going to provide",
			"is what's called a related name.",
			"And a related name, as we'll see in just a moment,",
			"is going to be a way of me accessing a relationship in the reverse order.",
			"That from a flight, I can take a flight and say .origin to get",
			"the flight's origin in airport.",
			"But the other question I might want to ask is in the reverse order.",
			"If I have an airport, how do I get all of the flights that",
			"have that airport as an origin?",
			"And so here, if I give a related name to this foreign key,",
			"Django will automatically set up the relationship",
			"going in that opposite direction.",
			"And so here, well, if we have an airport,",
			"and I want to know all of the flights that have that airport as their origin,",
			"the reasonable name for a related name here is something like departures.",
			"So if I have an airport, I can access all",
			"of the departures, which gets me all of the flights that",
			"are leaving from that airport.",
			"And I'll likewise do the same thing here for destination.",
			"Instead of a character field it's going to be a foreign key.",
			"It's going to reference airport.",
			"When we delete it, we'll go ahead and cascade it.",
			"And the related name will be arrivals.",
			"Because if I have an airport, I might want",
			"to access all of the arrivals, all of the flights",
			"that correspond to flights that are arriving",
			"at that particular destination.",
			"And so now, I've done two things.",
			"I've added a new class called airport, and I've",
			"modified my existing flight model.",
			"So this has changed in my Python code, but it hasn't yet",
			"changed in my database.",
			"So in order to make the change in the database, again, it's a 2-step process.",
			"Step one, python manage.py, make migrations,",
			"to say look for any new changes that have been made to models.py,",
			"and go ahead and create a migration instruction",
			"for how to make those changes to the database.",
			"And here, we see that we've created a new migration file.",
			"And this migration is going to create a model called airport.",
			"And it's also going to alter the destination field",
			"and alter the origin field on my flight model.",
			"Because as we know, we've changed destination and origin",
			"to no longer be character fields, but to instead",
			"be references to a particular airport.",
			"So that's something that's going to need to change in the database.",
			"And to make that change, I can run something like python manage.py",
			"migrate to go ahead and apply those changes.",
			"We've now applied this migration that we just created,",
			"and our database is now up to date.",
			"So what can we do?",
			"Well, now I can go ahead and go back into the shell.",
			"And I'll just go ahead and import from flights.models import",
			"star, import everything.",
			"And I can now create an airport.",
			"I can say something like JFK equals an airport whose code is JFK",
			"and whose city is New York, for example.",
			"And then save that.",
			"I can create a London one.",
			"So LHR is an airport whose code is LHR and whose city is London.",
			"And I can save that.",
			"You could create more.",
			"I could say CDG equals an airport whose code is CDG and city is Paris.",
			"And maybe we'll do one more.",
			"We'll say NRT is the airport whose code is NRT and whose city is Tokyo,",
			"for example.",
			"So I've created and saved four airports that get added to my airport table.",
			"And now, I can add a flight.",
			"F equals flight whose origin equals JFK whose destination equals",
			"London Heathrow and whose duration equals 415 minutes.",
			"And I'll go ahead and save that as well.",
			"So I've now created four airports.",
			"I've created a flight and saved it.",
			"If I type F just for my flight, I see that, all right,",
			"this is a flight from New York to London.",
			"But I can also say what is f.origin, and to write f.origin,",
			"that is now an airport object.",
			"It's JFK, in particular.",
			"And I can do f.origin.city to get the city of the origin, which is New York.",
			"f.origin.code to get the code of that airport, which is JFK.",
			"And if I start with an origin, something like JFK or London Heathrow,",
			"I can say LHR.arrivals.all to get all of the arrivals, all",
			"of the flights arriving in London Heathrow.",
			"And it looks like there's just one of them, which",
			"is this flight that I've just created from New York that",
			"is going to London as well.",
			"And so this now gives us the ability to manipulate SQL",
			"just by using these Python models.",
			"And I now have Python classes that represent",
			"all of these various different types of data.",
			"And now, instead of running SQL queries like select star",
			"from flights or from airports, I can just",
			"interact with these classes and these properties on the classes,",
			"and Django takes care of the process for me",
			"of figuring out what the underlying SQL queries should be,",
			"executing those queries, and just giving those results back to me.",
			"And we can begin now to design a web application around this idea.",
			"That I can go into urls.py, and lets add a url pattern that says,",
			"the default route.",
			"We'll go ahead and load the index view.",
			"Give it a name of index.",
			"Same as similar things we've seen from last time.",
			"And now, what should we do in the index view?",
			"Well, the index view, let's go ahead and say, what I would like to do",
			"is just display a list of all the flights.",
			"So I might from.models import flight and airport.",
			"Or maybe I just need flight.",
			"I just want a list of all the flights.",
			"So I'm going to import flight from all of my models.",
			"And now, what I'd like to do is return--",
			"let's go ahead and render a template called flight/index.html,",
			"and give index.html access to a variable called flights.",
			"And what is that variable going to be equal to?",
			"It's going to be equal to flight.objects.all",
			"to get me all of the flights that I would like to put right here.",
			"All right, so what can I do from now?",
			"Now, what I need to do is actually create those individual templates.",
			"So inside of flights, I'll create a new folder called templates.",
			"Inside of which I'll create a new folder called flights.",
			"Inside of which I'll go ahead and create a layout.html,",
			"much as we've done before, where that layout",
			"is going to contain the basic structure of our HTML page.",
			"So a head section whose title is flights, and a body section that",
			"is going to have a block body, and the end of the block.",
			"Much as before, this is the default layout for this particular page.",
			"And then, I'll add a new template called index.html that is going to extend",
			"flight/layout.html.",
			"And then, inside the body of the page, I'm",
			"going to display an H1 that just says flights.",
			"And let's now create an unordered list where I can now",
			"loop over for flight in flights.",
			"endfor to end the loop.",
			"But inside the loop, let me create a list item",
			"where I just print out a flight--",
			"maybe I'll print out the flight and then flight.id",
			"to print out flight 1, flight 2, flight 3.",
			"And then, I'll print flight.origin to flight.destination.",
			"So what I've done here is create a template",
			"that I'm going to give access to a variable called flights, where flights",
			"is going to be a variable that represents all of the flights",
			"that I queried by running flight.objects.all, that is my way",
			"using Django's API, using the functions that it has given me access to,",
			"to say, take the flight and get all of the flights that are stored inside",
			"of Django's database.",
			"Then here in the template, I'm looping over each one of those flights.",
			"For each one, printing out a list item where",
			"I can access properties of that flight.",
			"Say flight this ID from origin to a particular destination.",
			"So now, I'll go ahead and go into my terminal.",
			"Run python manage.py run server, which again,",
			"is how we run a Django web application.",
			"And now, if I go to that URL, flash flights this time,",
			"because that's the URL.",
			"What I see is exactly what I'd expect to see.",
			"An unordered list that just so happens to have flight one New York to London",
			"displayed there.",
			"It is taking data from my database, and now displaying it inside",
			"of this template.",
			"And if I were to add new flights, it would also update on this page as well.",
			"So if I go ahead and go back, go into the shell, python manage.py shell.",
			"I'll go from flights.models import star.",
			"Let's go ahead and--",
			"well, all right, let's add a flight from Shanghai to Paris, for example.",
			"Well, how do I get the airports for Shanghai and Paris?",
			"Well, it turns out that if I want to get Shanghai,",
			"I can say Shanghai equals airport.objects.",
			"and then I can say--",
			"if I do airport.objects.all, that gets me all of the airports, for example.",
			"Oh, and it seems I don't actually have a Shanghai one,",
			"but I can add one if I wanted to.",
			"But if I do airport.objects.all, that, again, gives me all of them.",
			"But if I want to filter my airports list, not get all of the airports",
			"but just get some of them, I can say airport.objects.filter, and I can say,",
			"get me all the airports where the city is New York, for example.",
			"And that is going to go ahead and give me a query set that only",
			"contains the results that I care about.",
			"So again, airport.objects.filter lets me constrain the results that come back.",
			"Not get me all of the airports, but only get me",
			"airports whose city is New York, for example.",
			"And it is only giving back one, so I could say .filter city equals New",
			"York.first, to say, take that query set, and just get me the first and only",
			"thing in that query set.",
			"And that gives me airport New York.",
			"A simplified way of doing the same thing.",
			"If you know you're only going to get one result back, is I",
			"can say something like airport.objects.get,",
			"which will only get one result if it knows that there's only going to be",
			"one airport with the city of New York.",
			"That too will return to me New York JFK airport.",
			"But it will throw an error if ever there's more than one,",
			"or if there's none, for example.",
			"So we'll go in and save that inside of JFK,",
			"and we'll go ahead and create a flight that is going",
			"from New York to Paris, for example.",
			"I can do CDG equals airport.objects.get.",
			"City equals Paris.",
			"And now, I have this variable CDG, which represents the airport Paris.",
			"And if I want to create a new flight that goes from New York to Paris,",
			"I can say F is going to be a flight whose",
			"origin is JFK whose destination equals CDG and whose duration equals 435.",
			"And I can save that flight as well.",
			"And so I've added a new flight.",
			"And so now, if I run the server, python manage.py,",
			"run server, refresh the page, I now see that I have two flights.",
			"One flight that's going from New York to London, one flight that's",
			"going from New York to Paris.",
			"But of course, it's going to be pretty annoying if every time I",
			"want to update the data, adding new data, manipulating the data,",
			"I need to go into the shell in order to run",
			"direct commands that are able to add new flights,",
			"add new airport, so on and so forth.",
			"What I'd really like to be able to do is just very simply",
			"to add it via a web interface.",
			"Via the web, be able to say, all right, let",
			"me add a new flight that goes from location 1 to location 2.",
			"And it's possible, using the information we know now,",
			"to build a web page that does just this.",
			"But Django is built on this idea that it doesn't want you, the programmer,",
			"to have to repeat work that other people have already done.",
			"And this process of trying to define models and very quickly be",
			"able to create and edit and manipulate models",
			"is so common that Django has already built for us an entire app that is just",
			"designed for the manipulation of these models,",
			"and it's known as the Django admin app.",
			"And this is an app that we've seen traces of already,",
			"that if we remember that urls.py file from inside of our application.",
			"We saw that we added a path for our own app,",
			"but there was already a path given to us by default, /admin,",
			"that takes us to the admin app as well.",
			"And so in order to use the admin app, we need",
			"to create an administrative account inside of our Django web application.",
			"And the way to do that is via the command line.",
			"I can run python manage.py create super user.",
			"It's going to ask me for my name.",
			"I'll go in and type in my user name, my email address,",
			"and it's also going to ask for a password.",
			"I can just make up a password that I would like to use.",
			"Retype it in just to confirm it.",
			"And now, Django has created a super user account for me in this web application",
			"so that I, using these credentials, have the ability",
			"to visit the web interface for the admin app",
			"and actually manipulate some of these underlying models.",
			"So in order to do this, the first thing I need to do is take my models",
			"and add those models to the admin app.",
			"So inside of models.py, I have a class called airport and a class",
			"called flight.",
			"And if we look at the files I have, there's",
			"another file we haven't really looked at yet called admin.py inside of my app.",
			"And inside of admin.py, I'll first from my models import flight and airport.",
			"And now, I'm going to say, admin.site.register airport.",
			"And admin.site.register flight.",
			"And what this is going to do is it is going",
			"to tell Django's admin app that I would like to use the admin",
			"app to be able to manipulate airports and to be able to manipulate flights",
			"as well.",
			"So let's take a look at this admin app and see how it actually works.",
			"I can run python manage.py run server.",
			"That will start up the web server.",
			"I'll now visit this URL.",
			"Instead of going to /flights I'll go /admin.",
			"And this opens up this Django administration app",
			"that is not written by me.",
			"Django has written this, and it's asking me to log in.",
			"I'll go ahead and log in using those credentials I used a moment ago, typing",
			"in my username and password.",
			"And what I get here is Django's site administration interface.",
			"Built for me by Django, where I didn't need to design this at all.",
			"But importantly, if we noticed down here,",
			"I now have the ability to add and manipulate",
			"airports and flights via this web interface, this Django",
			"administrative interface.",
			"So now, using this interface, I have the ability",
			"to manipulate the underlying database.",
			"To manipulate my models to add and modify data that already exists.",
			"So if I click on airports, for example, I see here,",
			"here are all of the airports that I've already added to my database.",
			"Tokyo, Paris, London, and New York.",
			"And I can add a new one.",
			"I can say, let's go ahead and add PVG which is Shanghai.",
			"And I can either save it, save and continue editing, save and add another.",
			"I'm going to add a couple, so I'll go ahead and save and add another.",
			"Let's go ahead and add Istanbul airport as well.",
			"Let's add Moscow as an airport two, and maybe one more, we'll add Lima as well.",
			"And I'll just go ahead and click save.",
			"And now, I've added a whole bunch of airports all via this web interface.",
			"Django was originally created for news organization that",
			"very quickly wanted to be able to post articles and post",
			"new posts on their website.",
			"And it made it very easy via an interface like this",
			"to very quickly just say, here, add a new article",
			"and here's the content of the article, to be able to display on a page.",
			"And now, we've been able to very quickly add new airports to our website",
			"as well.",
			"And so if we want to add flights, well, we can go ahead and go back home.",
			"Click on flights.",
			"I see that I already have two flights inside of my database.",
			"I have New York to London and New York to Paris.",
			"I'll add a new one.",
			"It's letting me choose an origin, destination, and duration.",
			"And Django knows that the origin must be an airport,",
			"so it's going to give me the opportunity to just choose an airport.",
			"Where I can say, OK, Shanghai is the origin.",
			"The destination is going to be Paris, and the duration",
			"is going to be 760 minutes, for example.",
			"So now, using Django's admin interface, I've",
			"been able to add a number of different flights",
			"and a number of different airports.",
			"And if I go back, not to the admin app, but to my flights app,",
			"the app that I wrote myself, and go back to /flights.",
			"Now, I actually see all of the new flights",
			"that I have added to my database via Django's admin interface.",
			"I added them to the admin interface, and now I see this flight from Shanghai",
			"to Paris.",
			"I see this flight from Paris to New York as well.",
			"And so now, what I might like to do is begin",
			"to add some more pages to this web application.",
			"Make this web application a little more sophisticated",
			"by maybe giving me the ability to click on a particular flight",
			"to view details about that flight.",
			"What I'd like is for every flight to have its own page,",
			"not just /flights for all the flights, but /flight/one for flight ID one.",
			"/flight/two for ID two, so on and so forth.",
			"What I can do in order to do that is go back into urls.py",
			"and create a new path.",
			"We'll create a path where I'm going to specify",
			"a flight ID, which would be an integer.",
			"When I do, let's go ahead and load the flight view, whose name will be flight.",
			"And now, I need to just go to views.py and add a function called flight.",
			"So I go back, go into views.py.",
			"In addition to an index function, we'll define a flight function that",
			"accepts as an argument a flight ID.",
			"So now, what is the flight function going to do?",
			"Well, the first thing I need to do is actually get that flight.",
			"I can say flight equals flight.objects.get.",
			"Get me the flight whose idea is equal to flight ID, for example.",
			"Or alternatively, Django also let's you say pk instead of ID.",
			"It's a much more generic way of referencing",
			"the primary key, for whatever the primary key happens to be called.",
			"The pk in this case is just the ID.",
			"But then what I can do is render a template, like flight/flight.html,",
			"and pass as input to that the flight.",
			"So we're passing this flight to flight.html.",
			"And now, I can create a template--",
			"create a new file called flight.html which is going to also extend",
			"flight/layout.html using that same HTML layout.",
			"And inside the body of the page, let's just",
			"say something like in big we'll say flight ID.",
			"And then, maybe an unordered list where I can say something like the origin",
			"is flight.origin.",
			"The destination is flight.destination.",
			"And the duration is flight.duration.",
			"So now, I have a page that displays flight information",
			"about any particular flight.",
			"And if I go ahead and load not /flights in my web browser, but /flights/one,",
			"for example.",
			"Well, now I have information about flight number one.",
			"And /flight/two gets me information about flight number two.",
			"Querying for that particular flight, then printing out",
			"its origin, destination, and duration.",
			"Now, there is some error checking that we probably should do here.",
			"If I try and access a flight that doesn't exist,",
			"something like flight 28, for example.",
			"I'm going to get some sort of error that does not exist error.",
			"Flight matching query does not exist.",
			"I might like to control what happens in that situation a little better.",
			"So you might imagine adding some additional error checking",
			"to handle those cases as well.",
			"But we'll leave it at this just for now.",
			"But now, let's go ahead and add the ability,",
			"not only to have flights that have airports associated with them,",
			"but let's also add passengers to our flights",
			"as well to be able to represent passengers that might actually",
			"be on these flights, too.",
			"So go ahead and go back into models.py.",
			"And in models.py, in addition to an airport class and a flight class,",
			"let me create a new class called passenger.",
			"Also going to be a model.",
			"And what properties does a passenger have?",
			"Well, a passenger has a first name, which",
			"we'll go ahead and make a models.CharField whose max length",
			"we'll put at 64.",
			"And the last name.",
			"Max length equals 64.",
			"And passengers also, as we described before,",
			"they have a many to many relationship with flights.",
			"That a flight could have multiple passengers,",
			"a passenger could be on multiple flights,",
			"and ultimately, we need an additional table to keep track of this.",
			"But we can think a little bit more abstractly here in Django",
			"and just say that every passenger has flights associated with them, which are",
			"a models.manytomanyfield with flight.",
			"So every passenger could be associated with many flights.",
			"We'll say blank equals true to allow the possibility that a passenger has",
			"no flights.",
			"Maybe if they're not registered for any flights at all.",
			"And we'll also give this a related name of passengers,",
			"meaning if I have a passenger, I can use the flights attribute",
			"to access all of their flights.",
			"And likewise, if I have a flight, I can use this passenger's related name",
			"to access all of the passengers who are on that flight.",
			"And we'll see how that'll be useful in a moment, too.",
			"The string representation of a passenger will just",
			"go ahead and be their first name space their last name,",
			"which feels like a reasonable way of representing a particular passenger.",
			"And now, I need to apply these changes.",
			"I need to say, python manage.py.",
			"Make migrations because I've made new changes to my model.",
			"I've created a model passenger, in particular.",
			"And now, if I do python manage.py migrate,",
			"now I've applied those changes to my actual database.",
			"And if I go into admin.py, so we'll go into admin.py,",
			"and register not only flight and airport but passenger,",
			"admin.site.register passenger, then now via the admin interface,",
			"I can manipulate passengers as well.",
			"I can say python manage.py run server to run my web server.",
			"Go to my web servers admin view by going to /admin.",
			"Go down to passengers, and let's go ahead and add a passenger.",
			"Where I can say, all right, first name Harry,",
			"last name Potter, and we'll go ahead and put him on flight 1 and flight 3,",
			"maybe.",
			"He's on two different flights, for example.",
			"And you can hold down command or control to be able to select multiple flights.",
			"And we'll go ahead and save that.",
			"Harry Potter has been added successfully.",
			"And let's add a couple of other passengers.",
			"We'll add Ron Weasley.",
			"And we'll add another.",
			"We'll add Hermione Granger.",
			"And we'll add Ginny Weasley as well.",
			"So we've added a number of different passengers",
			"that now all exist in Django's admin interface.",
			"And now, what I'd like to do is on the flight page,",
			"display information about which passengers",
			"happened to be on any given flight.",
			"So the way I might do that is by going into views.py.",
			"And on the flight page, in addition to giving access to the flight,",
			"let me also give it access to passengers.",
			"So passengers this template is going to get access to.",
			"And we get passengers by saying flight.passengers.all.",
			"And the reason we can do this is, again, because passengers",
			"is that related name.",
			"It is our way of taking a flight and getting all of the passengers that",
			"happened to be on that flight.",
			"And so now, inside of flight.html I can add something like,",
			"let's add an H2 called passengers.",
			"Where here, I'm going to loop for passenger in passengers.",
			"Go ahead and display that passenger.",
			"Just print out that passenger inside of a list item.",
			"And in Django, I can say, if the list is empty,",
			"let's just have a list item that says, no passengers.",
			"Meaning nobody is currently on this flight.",
			"So now, my web server is still running.",
			"I can go back to /flights.",
			"Here are all of the flights.",
			"And if I go to /flight/one I now see that I'm flight one.",
			"Harry Potter is a passenger on that flight.",
			"But if I go to flight two, all right, no passengers are on that flight either.",
			"And now, it's been a little annoying that I've",
			"had to do everything by using the URL here to be able to go",
			"back and forth between pages.",
			"I could link to those pages if I want to.",
			"And the way I might do that is, let's on the flight page,",
			"add a link that goes to the URL index that says something",
			"like, back to flight list, maybe.",
			"So here is now a link that takes me to the index view.",
			"And likewise, I can go into index.html.",
			"And for each of these list items, each of these list items",
			"is really going to be a link that links to it's a url to a particular flight.",
			"And the flight route takes as a parameter a flight ID.",
			"And so inside this url a substitution here.",
			"I can specify use flight.id as the ID of the flight",
			"that I would like to use here.",
			"And so now, I've put every single flight inside",
			"of a link that takes me to the flight route.",
			"But because the flight route requires as an argument the flight ID,",
			"I can specify the flight ID here.",
			"And so now, if I go back to /flights, I now see a list of flights where every",
			"flight is in fact a link that can take me somewhere else.",
			"And so now, I can click on any one of those links, like New York to Paris,",
			"and that takes me to the flight page.",
			"I can click back to flight lists, that takes me back to the flight list.",
			"Click on another flight and go to that flight as well.",
			"So I've now been able to come up with this way of linking",
			"these pages together by having links in each of the various different pages",
			"that take me to some other route as well.",
			"And so now what I might like to do is, in addition",
			"to displaying all the passengers on any particular flight,",
			"also give myself the ability to add passengers to a flight",
			"as well, which feels like a reasonable thing",
			"that I might want to do inside of this web application.",
			"And so how can I go about doing that?",
			"Well, in order to do that, I'm going to need",
			"some new route that lets me book a flight for a particular passenger.",
			"And so I'll go ahead and go back to urls.py.",
			"And inside of urls.py I'll add a new path that will be int flightid/book.",
			"And int flightid/book is going to let me book",
			"a flight for this particular flight ID.",
			"For flight one or flight two or flight three, or so forth.",
			"When I do, we'll go ahead and go to the book view, and we'll name that book.",
			"And so now, I need to implement the book view.",
			"So how is this view going to work?",
			"I'm going to define a function called book",
			"that is going to take as its argument, not only the request,",
			"but also a flight ID.",
			"The first thing, as with before, is I want to get the flight ID.",
			"But remember from before, that there are multiple ways",
			"that I can request a web page.",
			"I can request a web page via the get request method,",
			"which means I would just like to get this page.",
			"Or I can request the method via post, meaning",
			"I would like to send data to the page.",
			"And generally speaking, anytime you want to manipulate the state of something,",
			"especially manipulating our database, that",
			"should be inside of a post request.",
			"I'm submitting some form, some data.",
			"And in response to that post submission, you",
			"should manipulate what's going on inside of the database.",
			"So we're going to check when this book route is called upon.",
			"If request method is post, then we want to perform some sort of action.",
			"The flight in question is just going to be flight.objects.get.",
			"Get the flight whose primary key is that flight ID.",
			"And then, what I'd also like to do is associated with the form.",
			"When someone submits this form to book a new passenger on the flight,",
			"they should tell me what the ID is of the passenger.",
			"What passenger should I book on the flight?",
			"Because those are the two pieces of information",
			"you need to know in order to actually book a flight.",
			"You need the flight and the passenger information.",
			"So let's assume for now that the information is",
			"going to be in request.post and then in square brackets passenger.",
			"What this means is that the data about which passenger",
			"ID we want to register on this flight is going",
			"to be passed in via a form with an input field whose name is passenger.",
			"The name on any particular input field dictates what name we get--",
			"is received when a route like this book route",
			"is able to process the request from the user.",
			"So we'll go ahead and take that information.",
			"And because by default this might be a string, let's go ahead",
			"and convert it into an integer just to make sure",
			"we're dealing with an integer.",
			"And let me say that the passenger in question",
			"is going to be passenger.objects.get pk equals this whole thing.",
			"So now what I've done is, if the request method",
			"is post, meaning someone submitted this form via the post request method,",
			"I'm first thing flights.objects.get. to get a particular flight,",
			"get me the flight with that flight ID.",
			"And then, I'm getting a passenger.",
			"Which passenger am I getting?",
			"The one who's pk, their primary key, otherwise known as ID,",
			"is equal to whatever was submitted via this post form",
			"with a name of passenger.",
			"And we haven't yet created that form, but we'll do so in just a moment.",
			"Now ultimately, we'll want to add some more error checking to this as well,",
			"like what if someone requests a passenger that doesn't exist,",
			"or a flight that doesn't exist either.",
			"So there is definitely some error checking",
			"that we probably should be doing here.",
			"But for simplicity, let's just assume for now that we're able to get a flight",
			"and get a passenger.",
			"Well, how do we access a passenger's flights?",
			"I can just say passenger.flights.",
			"And in order to add a new item to some set like flights,",
			"I can just say passenger.flights.add flight.",
			"And this will do the equivalent of adding",
			"a new row into a table of keeping track that the passengers on that flight.",
			"But the nice thing about Django's abstractions",
			"is that I don't have to worry about those underlying details.",
			"I don't have to worry about what the structures of the tables are.",
			"I can think at a much higher level and just say take this passenger,",
			"take their set of flights, and go ahead and add a new flight",
			"to that set of flights.",
			"And when all that's said and done, what I probably want to do",
			"is return some sort of redirect that redirects the user back",
			"to the flight page.",
			"So we'll go ahead and return an HTTP response redirect.",
			"What you URL would I like to take them to?",
			"Well, I'd like to take them to the flight route.",
			"And reverse, again, takes the name of a particular view,",
			"and gets me what the URL is, and we saw that last time.",
			"And the flight route takes an argument.",
			"So I need to pass as an argument the flight's ID.",
			"So I need to provide it to the flight route",
			"what the flight's ID is, structured it as a tuple,",
			"and that is going to redirect me back to the flight route",
			"so that I can see that flight page again.",
			"And what I need to add up at the top here is from django.http.",
			"Import HttpResponseRedirect in addition to from django.urls import reverse.",
			"And so those I'll need to add as well so that I",
			"can redirect the user back to the flight page",
			"after they're done submitting the form.",
			"And reverse takes the name of a particular view,",
			"as defined in urls.py, something like index or flight or book,",
			"and gets me what the actual URL path should be.",
			"And as we talked about last time, that's helpful",
			"so that I don't have to hard code URLs into my Django web application.",
			"I can just reference URLs by their name.",
			"And if ever I need to change a URL, I can just",
			"change it in one place in urls.py, and that change",
			"is going to reflect everywhere else as well.",
			"So now, the next thing I need to do is actually create this form.",
			"That what I have so far is just a function",
			"called book that is waiting for a post request to be made to it.",
			"And when a post request is made to it, then we're",
			"going to go ahead and submit this form and go ahead and add the flight",
			"for this particular passenger.",
			"But what I'd like to do now is actually add that form.",
			"So I'll go back into templates, go into flight.html,",
			"and what I'd like to add here is a form.",
			"I'll go ahead and label it with an H2 called add passenger.",
			"And we'll create a form whose action is going to be URL of book.",
			"So we're going to go to the book route.",
			"And again, if we recall the book route in urls.py,",
			"the route with name book, this view, requires as a parameter some flight ID.",
			"So I need to provide the flight ID as an argument for what flight",
			"I'm booking the passenger on.",
			"And it just so happens to be flight.id because this template has",
			"access to a variable called flight.",
			"The method of this submission is, again, going to be post.",
			"And recall from before that whenever I have a form in Django,",
			"I need to give it the CSRF token just for security to make sure",
			"that Django knows it's really this application that",
			"is submitting this form.",
			"We'll go ahead and add a dropdown list, which you can",
			"create in HTML using a select field.",
			"The name of this select field is going to be passenger.",
			"And the reason for that is inside of views.py, when I get the passenger,",
			"I'm looking for inside the post data, inside of request.post,",
			"for a field whose name is passenger.",
			"And so that is what I would like the name of this dropdown to be.",
			"And inside of a select dropdown, we have a whole bunch of options.",
			"Options that we can choose from.",
			"And there's going to be one option for everyone who",
			"isn't a passenger on this flight.",
			"And so how do I get everyone who isn't a passenger on the flight?",
			"Well, it seems that right now, the flight page only has access",
			"to actual passengers, and doesn't yet have access to people",
			"that are not passengers on the flight.",
			"So it sounds like I need to add some additional context to this template.",
			"Additional information that we want access to.",
			"So I'll go ahead and give this flight access to additional information",
			"that we'll call non-passengers.",
			"For people that are not on the flight.",
			"And how do we I non-passengers?",
			"Well, just as I could say passenger.objects.filter",
			"to only get passengers that match a particular query,",
			"there's also a way in Django to say passenger.objects.exclude to say",
			"exclude passengers that satisfy a particular query.",
			"So I want to exclude passengers who, among their flights,",
			"have this as one of their flights.",
			"And so what does this actually mean?",
			"Well, it means that when I render flight.html,",
			"there's a couple pieces of information that it should have.",
			"It needs to know what flight is being rendered.",
			"It needs to know who is on the flight, who are the passengers.",
			"But if I want a dropdown where I can choose from all the people",
			"who aren't already on the flight, like I would",
			"like to register you for the flight, well, I also",
			"need all of the non-passengers.",
			"Passengers except, excluding the ones who are already on the flight,",
			"and get me all of them is what that .all is ultimately saying.",
			"And so using that, I now have access to this variable",
			"called non-passengers that I can use as I'm constructing this page.",
			"So back on flight.html, I can say, for every passenger in non-passengers,",
			"let me create a option that I can choose from.",
			"And the options value is going to be the passenger's ID.",
			"Because ultimately, when I submit the form, what I care about getting",
			"is what is the ID of this passenger that I've chosen from this dropdown.",
			"But of course, the user who's looking at this page,",
			"they don't want to see people's IDs.",
			"They want to see people's names.",
			"So inside of the option tag, we'll go ahead",
			"and just print out the passenger's name.",
			"And we'll see in a moment what all of this",
			"actually looks like in terms of HTML.",
			"So now that I've created this form, I'll also",
			"need at the bottom to add an input whose type is submit",
			"to let myself submit this form to.",
			"Let's now try running this application.",
			"It looks like there's a slight error where",
			"I said view.book instead of views.book.",
			"Views is the name of the module, since it's in a file called views.py.",
			"And now, it looks like my server is running OK.",
			"I can go back to /flights.",
			"Let me get one of the flights, like New York to London, flight number one.",
			"And all right.",
			"Name error.",
			"Name passenger is not defined.",
			"This is how Django renders to me errors that are occurring in my Python code.",
			"Looks like it just means inside of veiws.py I'm referencing passenger,",
			"but I never imported it.",
			"So up at the top, I'll go ahead and import passenger as well.",
			"Now, it seems that my web application is working OK.",
			"So now, hopefully, I refresh this page, I see flight information.",
			"I see passengers.",
			"And I also down at the bottom now see an add passenger section",
			"with a dropdown list.",
			"Where I can click on it and see, all right, here",
			"are the three people that are not already on this flight.",
			"And so if I want to add Ginny Weasley to this flight,",
			"I can click Ginny Weasley, click submit, and that submits the form.",
			"And I'm redirected back to the same flight page.",
			"Now, Harry and Ginny are both on the flight.",
			"And in the add passenger list, I see Ron and Hermione as the options for me",
			"there.",
			"And so using Django's models, I've been able to very quickly build up",
			"a reasonably sophisticated application.",
			"An application that has models, that displays that information to me,",
			"and lets me manipulate that data.",
			"And that data is ultimately stored inside of a SQL database.",
			"And one of the big powers of Django that it really gives to me",
			"is this admin interface that I ordinarily",
			"might have had to spend a lot of time designing a web interface that just",
			"lets me do things like take some person and go ahead and update",
			"what is their name, what flights are they on,",
			"and the ability to very quickly add and delete and edit the models",
			"is something that in a web application could take quite a lot of time",
			"to be able to build from scratch.",
			"But Django, very fortunately, gives all of that right to me.",
			"And this admin interface, even though it is designed by Django,",
			"it's very customizable in terms of things",
			"that I can do on this admin interface if I want to manipulate it in certain ways",
			"in order to add additional features to it as well.",
			"So we'll see a couple of brief examples of this.",
			"If I go into admin.py, here's my configuration",
			"for Django's admin interface.",
			"And I can say, I would like to configure the admin",
			"interface in a particular way.",
			"That in a flight, for example, by default all I saw",
			"was the flight's origin and destination.",
			"If I want to be able to see more information about a flight,",
			"I can say, go ahead and give me a class called flight admin, which is",
			"going to be a subclass of model admin.",
			"Where I can specify any particular settings",
			"that I want to apply to how the flight admin page is displayed.",
			"So I can-- and all of this is documented on Django's website.",
			"And you just have to read it to be able to know what configuration options are",
			"available to you.",
			"But I can say, in the list display, when you list all the flights",
			"and display them all to me, what field should I have access to?",
			"Well, go ahead and show me something like the origin",
			"and the destination and the duration and maybe also show me the ID, for example.",
			"So I want to see all of this information when you load a flight.",
			"And when I register the flight, I'll say register this flight,",
			"but use the flight admin settings when you do so.",
			"So I can specify, I would like to use these particular settings",
			"when you view the admin interface.",
			"And so now, if I go back and go ahead and click on flights,",
			"then now in this list display, whereas before I only",
			"saw IDs and origins and destinations, now I",
			"can configure it to show me all of the IDs and origins and destinations",
			"and durations as well.",
			"I've been able to configure this display to work the way I would like it to.",
			"And there are other configurations you can do as well.",
			"One that I quite like to use is if I want to update my passenger admin,",
			"so when I'm editing a passenger, you can have",
			"a special way of manipulating many to many relationships inside",
			"of an attribute called filter horizontal.",
			"And if I use a horizontal filter on flights,",
			"this will just make it a little bit nicer for manipulating",
			"the flights that a passenger is on.",
			"And again, the specific syntax of this not as important as the idea",
			"that these are all just configurable settings that Django has documented.",
			"That you can look at to see how to configure the Admin interface to work",
			"exactly the way you want it to work.",
			"And so now, if I go back home and go to passengers,",
			"and maybe click on a passenger like Harry Potter,",
			"I now see this horizontal filter, which is",
			"a very nice way of being able to manipulate flights",
			"that the person is on.",
			"I see on the left a list of their available flights",
			"that I could add them to.",
			"On the right, a list of their chosen flights.",
			"Flights that they're already on.",
			"And it becomes very easy for me to just take a flight and double click on it",
			"to move it from an available flight to a flight that they're on and vise versa.",
			"Just very quickly being able to control and manipulate these models.",
			"And this is all stuff that Django just gives to you right out of the box.",
			"So Django now has given us a lot of features.",
			"The ability to represent models very succinctly.",
			"A migration method for being able to very quickly apply",
			"those changes to our database.",
			"And the last thing we'll take a look at is this idea of authentication.",
			"That on many websites, we want some method of authentication.",
			"Some ability for users to be able to log in and log out.",
			"For Django to remember who a particular user happens to be.",
			"And what we're going to do now is introduce",
			"an application that lets us interact with this authentication method.",
			"Because Django has a whole bunch of authentication features",
			"built right into the framework that we can take advantage of so",
			"that we don't need to rewrite all the logic for how do you log someone in,",
			"and what does it mean to represent the user.",
			"Django has done a whole lot of that for us.",
			"So we'll go ahead and create an application to do that now.",
			"All right, so let's go back into my terminal now.",
			"And now, I have this airline project inside",
			"of which is one app called flights.",
			"And I'd like to now create another app that's going to maintain users inside",
			"of this application.",
			"So I'll go ahead and run python manage.py start app users.",
			"Which will just be an app that's going to allow me to represent users.",
			"As before, when I create a new application,",
			"I'll need to go into settings.py.",
			"Add users as one of the installed apps inside of this project.",
			"And I'll go into urls.py to say I'd also like when I go to users,",
			"we'll go ahead and include users.urls.",
			"So all the URLs that are associated with my user's application.",
			"Now, I'll need to actually create those URLs.",
			"So I'll go ahead and go down into my users application,",
			"create a new file called urls.py, inside of which",
			"is the same as what we've normally see inside of these URLs files.",
			"I need to import path, import my views, and then define some URL patterns.",
			"",
			"Where here what I'd like to do is define one path that takes me to views.index.",
			"And we'll call this one index.",
			"Then I'll create another path that takes me to log in, called the log in view.",
			"And the name will be log in.",
			"And we'll have another path called log out for a function called log out",
			"view that will be associated with it.",
			"So we'll effectively have three different routes.",
			"One main index route that's just going to display information about the",
			"currently signed in user.",
			"One route for logging someone in, a form that",
			"will display the place where they can type in a user name",
			"and password to log in.",
			"And then, one route to allow users to be able to log out from this application",
			"as well.",
			"So let's go ahead now and actually write these functions.",
			"We need one function called index, one function",
			"called log in view, one function called log out view.",
			"So we'll go into views.py, and we'll start with index.",
			"And so what does the index function need to do?",
			"It's going to display information about the currently signed in user.",
			"That I sign into this website, and then I'm presented with the index page.",
			"Because if we think about this programmatically,",
			"we first need to think about what should happen",
			"if someone tries to access this page but they're not authenticated.",
			"How would we even find that out, and what do we do in that situation?",
			"Well, let's say, if not request.user.is_authenticated.",
			"The request object that gets passed in as part of the request",
			"to every user in Django automatically has",
			"a user attribute associated with it.",
			"And that user object has an is authenticated attribute that tells us",
			"if the user is signed in or not.",
			"If they're not signed in, we'll go ahead and HTTP response",
			"redirect them to the log in view.",
			"And in order to make this work, I'm going",
			"to need to-- from django.http import HttpResponseRedirect.",
			"And likewise, from django.urls, let's go ahead and import reverse as well.",
			"So if the user is not authenticated, then",
			"we're going to redirect them to the log in view, where what is the log in view",
			"going to do?",
			"Well, the log in view for now, let's just go ahead and render",
			"users/login.html.",
			"Some form where the user can log themselves in.",
			"We'll need to create some templates.",
			"I'll create a templates folder inside of which is a user's folder.",
			"Inside of which we'll just create a basic layout,",
			"as we've done multiple times now.",
			"This is, again, going to be the general structure for pages in this app.",
			"Title will be users, and the body will just",
			"have a block called body that I can later fill in with other content.",
			"And now that I have this HTML layout, I can go ahead and create a new file",
			"called login.html, where login.html will extend user/layout.html.",
			"And inside the body block, I can just display in HTML form.",
			"So I can say something like, I would like",
			"for there to be a form, whose action, when I submit the forum--",
			"let's go ahead and still go to the log in URL,",
			"but let's do so using the post request method.",
			"Again, I'm logging in, I'm submitting a form.",
			"Generally, when you're doing that, you want",
			"to submit form data via post, especially in the case of user name and password.",
			"Because if you do this sort of thing, you",
			"don't want the user name and password to be passed in as get parameters",
			"because those show up in the URL.",
			"Our form will have our CSRF token for security as before.",
			"And input whose type is text, whose name is username, and just",
			"for user friendliness, let's give it a placeholder also of user name",
			"so the user knows to type in their user name here.",
			"We'll also have an input whose type is password, whose name is also password,",
			"and when an input's type is password, that just",
			"means our HTML will know in the browser that chrome or Safari or whatnot",
			"will know to show the password as dots instead of as characters.",
			"And we'll give that a placeholder of password.",
			"And then an input of type submit whose value is log in.",
			"So we now have the ability to log in.",
			"So if we go ahead and run this program, python manage.py run server,",
			"we should see users.views has no attribute log in view.",
			"All right, it looks like I called this function log in request.",
			"It should actually be called log in view.",
			"And I'll also need a function called log out view.",
			"But I haven't implemented that yet.",
			"So I'll just go ahead and say pass for now,",
			"but I'll come back to that later to implement the log out view.",
			"All right, so it looks like my web server is running now.",
			"And before I actually go to the login page,",
			"let me first go back to the admin page and actually just create some users.",
			"I can go to users and then add, and let's add a user.",
			"The user name will be Harry, for example.",
			"And we'll go ahead and give Harry a password.",
			"And we'll go ahead and save and add another.",
			"Let's add maybe Ron as well.",
			"Go ahead and add him.",
			"We'll go ahead and save that.",
			"And these users, they can have additional information",
			"associated with them.",
			"I can give Ron a name like Ron Weasley, RonWeasley@example.com",
			"is his email address.",
			"There are a bunch of default fields that Django gives you",
			"for manipulating users.",
			"And you can take these users and go ahead and add to those fields",
			"if I want to.",
			"Giving them a first name, last name, email address, and whatnot.",
			"And you can also customize these fields as well.",
			"If you'd like to add custom fields that you would like to keep track of with",
			"regards to your individual users.",
			"And I will go ahead and log out from Django admin",
			"now because I don't need it anymore.",
			"But now, if I go to /users, I'm not authenticated.",
			"So what I see is a log in form that just looks like this.",
			"A place for me to type in a user name and a password.",
			"And of course, I could type in Harry's username and password.",
			"But I haven't yet implemented the processing of that data yet.",
			"So let's go ahead and do that now.",
			"We'll go ahead and go back to views.py.",
			"In the log in view, there are two ways the log in view function",
			"could be called.",
			"One is via the get request method, meaning just show me the log in form.",
			"And one is via post, submit data to the log in form as well.",
			"So if the request method is post, well then,",
			"let me first get the user name which will be inside of the post",
			"data in a field called user name.",
			"And let me get the password, which will be",
			"in a field in the request.post inside of password.",
			"And now what I'd like to do is try to authenticate this user.",
			"And how do I go about doing that?",
			"Well, it turns out there are a couple of functions that Django",
			"has given to me that I can import.",
			"So from django.contrib.auth, auth for authentication.",
			"I'm going to import three functions we're ultimately going to use.",
			"One is authenticate that checks if user name and password are correct.",
			"One is called log in, one is called log out.",
			"And I can now use those functions inside of this log in view here.",
			"After I've gotten the username and password,",
			"I'd like to authenticate the user.",
			"Check if the user name and password are correct.",
			"So I'll go ahead and say user is equal to authenticate request username is",
			"the username password equals password.",
			"And so authenticate is a function.",
			"Just takes the request, takes a user name, takes a password,",
			"and if the user name and password are valid,",
			"they give me back who the user actually is.",
			"And as long as the user is not none, that",
			"means the authentication was successful, and I can go ahead and log the user in.",
			"How do I log the user in?",
			"I use the log in function the Django gives me.",
			"Logging in with this request, this user.",
			"And now I can go ahead and redirect them.",
			"HttpResponseRedirect the user back to the index route.",
			"Back to the original route that the user started out as.",
			"And so that's if the user is not none.",
			"If the authentication was successful.",
			"But otherwise, if the authentication failed, what should I do?",
			"Well, let me go ahead and render the same users login page again.",
			"But let me add some additional context.",
			"The context will be a message that says invalid credentials.",
			"And now, inside of login.html, I can just",
			"add some logic that says, if there's a message,",
			"then go ahead and display that message inside of a div.",
			"And then endif to end that.",
			"So if there is a message, we'll see the message printed.",
			"Otherwise, we won't see it at all.",
			"So now, if I go ahead and refresh the login page,",
			"nothing seems to have changed.",
			"But let's say I type in a user name that doesn't exist.",
			"Hermione and some password and I log in.",
			"Well, then I get this error message.",
			"Invalid credentials.",
			"We were not able to log the user in.",
			"So what happens if we do successfully logged in?",
			"Well, then the user is going to be taken to this index route.",
			"And it looks like now we need to finish off this index route.",
			"What does the index route do?",
			"Well, let's go ahead and return render a template called users/user.html.",
			"",
			"And inside of user.html, we'll go ahead and display",
			"some information about the user.",
			"We'll still extend user/layout because we're",
			"going to use the same basic layout.",
			"But in the body of this page, the information I want to show--",
			"if I want to say welcome and then like Harry or welcome Ron or whoever",
			"the user happens to be.",
			"And it turns out inside of Django templates,",
			"I have access to the request that was used to make this HTTP request, which",
			"means I also have access to request.user who is the user associated",
			"with that request.",
			"And if the user has a first name, I can access request.user.firstname.",
			"And in addition to that, I can display other information.",
			"Maybe their user name is request.user.username.",
			"And maybe their email address is request.user.email.",
			"And so I can show the user information about them.",
			"Such that if Harry logs in, for example, I sign in as Harry,",
			"sign in with Harry's credentials, click log in.",
			"Well then, Harry sees a page that says welcome Harry.",
			"Harry is logged in.",
			"They are request.user.",
			"And using that information, we can access first name, username, and email",
			"as well just by accessing properties of request.user.",
			"Now, last thing we need to add, which still doesn't yet exist,",
			"is a way to actually log the user out.",
			"And it turns out that just as Django has a log in function,",
			"Django also has a log out function that handles log out for us so we",
			"don't need to implement it ourselves.",
			"So all our log out view needs to do is make a call to this log out function.",
			"And then, figure out where should the user go after they've been logged out.",
			"And you know what, let's go ahead and take them back to the login page",
			"with a message of logged out to indicate that the user has now been logged out.",
			"Then in user.html, we'll go ahead and add a link that will go to the log",
			"out route that just says, log out, for example.",
			"So now, when Harry goes back to Harry's page,",
			"Harry sees a URL that says log out.",
			"If Harry clicks log out, Harry gets logged out is brought back to this page",
			"because now request.user.isauthenticated is going to be false.",
			"There is no authenticated user.",
			"And so they now see just the default login page.",
			"And if now Ron were to log in, for example, using Ron's username",
			"and Ron's password logging in, then Ron now",
			"sees information associated with him as well.",
			"So Django gives us a lot out of the box.",
			"Gives us the ability to represent these models in admin interface,",
			"to be able to manipulate them.",
			"A migration system that allows us to very quickly make changes to our models",
			"and apply them to our database.",
			"And also, a built in user authentication system.",
			"A system that allows us to very quickly enable",
			"users to be able to log in, log out, from our web application as well.",
			"So all of this are features that just helps",
			"to make it so that we can very quickly take advantage of things like SQL",
			"and models and migrations to build dynamic, interesting web",
			"applications with data to back them up.",
			"This was web programming with Python and JavaScript.",
			"We will see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_007": {
		"section": "CS50W 2020",
		"subsection": "JavaScript",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001900_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V001900/HarvardXCS50W-V001900.m3u8"
		],
		"video_duration": 6685,
		"speech_period": [
			2.994, 14.751, 2.375, 1.313, 2.917, 3.66, 3.46, 3.59, 1.32, 2.79, 2.16,
			2.67, 2.19, 2.89, 4.13, 1.71, 2.01, 3.52, 0.9, 2.84, 3.21, 3.54, 4.83,
			2.22, 2.49, 2.16, 4.12, 2.04, 1.97, 3.31, 2.3, 2.862, 2.208, 1.74, 2.22,
			4.47, 0.66, 3.105, 1.625, 3.46, 2.07, 2.41, 2.81, 4.35, 1.95, 2.73, 2.82,
			2.31, 2.19, 2.55, 2.79, 2.46, 3.18, 3.48, 2.73, 2.43, 4.5, 1.84, 3.47,
			4.3, 3.35, 3.18, 1.11, 2.64, 2.01, 3.25, 1.91, 2.19, 4.3, 4.46, 5.61,
			3.34, 4.11, 3.59, 1.38, 2.21, 3.97, 3.06, 3.27, 2.91, 4.74, 2.97, 2.94,
			3.33, 1.89, 3.06, 5.23, 4.49, 2.25, 1.74, 2.31, 2.85, 3.3, 3.72, 1.918,
			2.042, 3.54, 2.76, 2.34, 1.93, 2.42, 2.73, 2.17, 3.32, 4.02, 1.5, 2.91,
			1.87, 2.13, 4.775, 1.375, 2.82, 2.4, 2.52, 3.61, 4.4, 2.94, 3.81, 2.4,
			4.44, 2.22, 4.09, 2.21, 4.17, 2.53, 2.21, 3.32, 2.02, 2.835, 2.125, 2.81,
			3.9, 2.97, 3.362, 1.708, 2.37, 2.46, 1.98, 4.12, 2.69, 4.02, 1.935, 3.405,
			4.9, 4.94, 2.1, 1.93, 2.75, 2.49, 2.52, 4.2, 3.3, 3.03, 1.14, 3.63, 1.77,
			3.375, 1.875, 1.89, 3.21, 2.37, 2.18, 1.7, 2.5, 2.81, 2.03, 3.46, 3.38,
			2.22, 3.84, 2.19, 2.25, 1.75, 1.917, 3.873, 3.469, 2.0, 3.011, 2.43, 3.03,
			1.98, 0.802, 1.958, 2.468, 1.792, 1.83, 6.39, 3.12, 3.273, 1.917, 2.58,
			2.945, 2.875, 3.03, 2.79, 1.92, 3.24, 2.83, 1.86, 4.225, 2.625, 1.84,
			4.41, 3.88, 3.44, 2.37, 3.3, 2.98, 4.68, 4.46, 3.6, 1.95, 4.44, 1.92,
			3.15, 4.87, 4.79, 3.48, 4.32, 1.52, 3.1, 4.92, 0.885, 1.875, 4.74, 2.388,
			2.292, 5.19, 3.24, 3.87, 3.75, 2.82, 5.64, 1.87, 1.88, 4.8, 5.7, 4.23,
			3.69, 2.82, 2.7, 2.885, 2.875, 1.83, 4.53, 2.97, 2.62, 3.77, 2.79, 2.38,
			2.78, 2.43, 2.565, 2.625, 2.19, 2.733, 2.667, 3.93, 2.82, 3.03, 1.4, 2.08,
			3.42, 4.17, 2.68, 4.61, 4.17, 3.66, 1.26, 4.53, 4.225, 1.625, 3.06, 2.37,
			2.34, 3.87, 1.42, 1.82, 5.31, 2.47, 4.37, 4.56, 2.98, 2.84, 2.25, 3.39,
			3.75, 2.1, 2.25, 2.73, 2.28, 4.868, 1.792, 7.53, 2.54, 3.9, 2.73, 1.56,
			1.89, 3.0, 3.9, 1.95, 3.03, 4.77, 3.36, 4.69, 2.66, 5.37, 2.82, 3.21,
			2.74, 2.06, 4.96, 2.51, 3.1, 4.74, 2.99, 4.8, 1.92, 2.16, 4.09, 2.24,
			3.72, 4.27, 2.21, 4.05, 4.65, 2.43, 3.3, 3.4, 3.01, 2.5, 2.71, 3.08, 1.95,
			3.51, 3.78, 4.44, 1.36, 1.409, 3.621, 1.44, 10.89, 7.17, 3.51, 3.918,
			1.542, 1.708, 3.392, 3.24, 2.55, 4.86, 3.66, 1.86, 3.87, 1.39, 2.66, 2.01,
			2.64, 1.71, 2.742, 2.208, 3.32, 3.13, 3.32, 1.75, 2.13, 3.04, 2.99, 3.12,
			1.59, 2.8, 3.89, 4.08, 5.04, 4.92, 1.68, 3.72, 2.73, 0.87, 1.6, 3.5, 4.11,
			3.72, 2.752, 1.458, 3.02, 0.5, 3.43, 4.83, 2.99, 3.18, 3.15, 2.767, 2.583,
			3.02, 1.11, 3.85, 3.89, 3.21, 3.74, 1.75, 1.77, 2.55, 2.31, 4.02, 4.17,
			2.87, 3.13, 2.7, 2.37, 2.97, 3.54, 4.71, 2.04, 4.93, 1.19, 2.52, 2.61,
			5.28, 2.34, 3.063, 1.917, 2.222, 0.958, 2.55, 3.153, 1.917, 4.35, 2.85,
			2.65, 3.59, 3.78, 3.33, 3.96, 3.89, 2.86, 4.02, 2.738, 1.792, 3.57, 3.28,
			3.09, 3.98, 3.09, 3.3, 2.13, 4.8, 3.51, 3.69, 2.89, 3.57, 3.44, 5.19,
			2.52, 2.32, 2.42, 2.76, 1.8, 1.47, 4.95, 3.45, 2.19, 3.15, 10.53, 5.27,
			4.42, 3.99, 1.232, 1.708, 2.65, 3.38, 1.77, 2.01, 3.66, 5.52, 2.91, 2.28,
			1.86, 1.02, 3.27, 3.12, 1.15, 4.46, 2.877, 1.833, 3.37, 2.23, 4.74, 4.738,
			2.042, 3.48, 3.093, 1.917, 5.2, 3.17, 2.73, 1.83, 2.25, 2.625, 2.265,
			1.38, 1.57, 4.61, 5.35, 2.818, 1.792, 2.25, 4.62, 2.4, 3.57, 2.35, 2.09,
			1.74, 2.79, 4.15, 3.11, 2.97, 3.42, 3.51, 3.01, 3.17, 3.45, 3.24, 3.32,
			3.97, 4.14, 2.223, 2.167, 2.96, 1.98, 3.0, 3.9, 2.58, 2.91, 1.35, 2.85,
			3.21, 2.28, 2.468, 3.292, 3.48, 3.39, 1.96, 2.26, 2.99, 5.06, 13.18, 1.14,
			3.12, 3.42, 1.383, 1.917, 1.56, 1.83, 5.01, 2.76, 1.41, 1.71, 1.99, 2.09,
			3.288, 2.292, 3.67, 2.72, 2.01, 3.33, 2.34, 4.14, 1.96, 1.94, 2.28, 3.39,
			4.17, 1.05, 4.23, 2.88, 2.19, 2.76, 2.34, 4.68, 4.21, 3.05, 4.02, 4.3,
			3.983, 0.667, 0.83, 1.61, 2.24, 0.59, 3.48, 0.96, 1.817, 2.333, 2.45,
			3.06, 2.82, 1.83, 3.21, 2.91, 2.28, 4.908, 2.292, 6.78, 2.445, 2.625,
			2.94, 2.04, 3.36, 2.1, 3.51, 2.73, 2.67, 2.98, 3.83, 3.27, 2.11, 2.18,
			3.09, 2.64, 3.78, 2.01, 3.06, 3.52, 1.88, 2.208, 3.732, 2.76, 1.218,
			3.042, 3.18, 4.5, 3.81, 2.76, 4.57, 0.65, 2.85, 2.61, 1.353, 1.167, 2.61,
			3.417, 1.333, 2.99, 1.282, 2.708, 3.06, 3.21, 3.36, 1.833, 1.477, 3.14,
			3.572, 2.458, 3.48, 2.73, 3.14, 3.97, 3.45, 4.41, 5.88, 3.533, 2.167,
			3.57, 4.32, 1.913, 2.917, 3.86, 2.5, 4.26, 2.61, 3.36, 2.43, 0.78, 2.34,
			2.64, 2.07, 2.61, 4.44, 1.83, 2.88, 3.9, 2.13, 2.19, 3.089, 4.831, 2.25,
			3.6, 3.299, 5.341, 1.082, 1.708, 2.04, 1.8, 3.48, 1.569, 2.54, 2.551,
			2.94, 3.18, 1.2, 2.22, 4.53, 2.79, 4.29, 2.02, 3.23, 3.69, 2.94, 3.27,
			4.17, 3.06, 3.18, 4.08, 3.9, 3.13, 3.74, 2.43, 3.93, 3.18, 1.81, 4.46,
			2.01, 3.63, 3.36, 1.437, 1.833, 2.81, 3.55, 2.97, 3.36, 2.19, 2.46, 2.79,
			3.16, 2.24, 4.14, 3.03, 2.37, 3.38, 3.13, 0.54, 2.13, 0.792, 2.598, 1.53,
			2.675, 2.125, 2.44, 4.46, 2.85, 3.63, 4.86, 3.25, 2.51, 2.94, 3.9, 2.35,
			3.95, 5.94, 4.05, 6.06, 7.2, 3.443, 2.167, 2.02, 2.84, 2.14, 0.89, 4.05,
			4.02, 2.97, 0.87, 3.15, 4.17, 4.638, 1.542, 3.03, 2.94, 2.55, 3.76, 3.95,
			2.52, 1.81, 1.97, 2.01, 1.95, 3.72, 6.88, 2.54, 4.02, 3.6, 3.78, 3.24,
			1.09, 2.03, 2.08, 2.51, 1.65, 4.56, 3.63, 3.9, 3.0, 3.002, 2.458, 4.47,
			5.1, 4.03, 2.188, 1.042, 3.03, 3.12, 2.4, 2.66, 4.13, 5.69, 2.94, 4.87,
			5.12, 3.0, 5.32, 2.96, 2.46, 2.73, 1.24, 1.43, 1.708, 2.452, 3.67, 2.91,
			5.31, 1.14, 2.418, 3.042, 2.08, 1.613, 1.167, 1.083, 1.827, 3.93, 4.988,
			1.792, 1.5, 2.64, 3.0, 3.5, 2.47, 4.2, 2.28, 2.58, 1.98, 4.5, 3.66, 3.84,
			4.71, 1.41, 2.13, 3.18, 2.74, 5.09, 2.16, 1.98, 1.833, 4.107, 2.67, 2.55,
			4.24, 2.03, 2.88, 2.77, 3.05, 4.05, 3.48, 2.61, 4.47, 4.0, 3.29, 5.07,
			3.03, 3.96, 2.82, 2.64, 3.15, 3.72, 3.39, 3.24, 4.11, 4.29, 1.382, 1.708,
			4.98, 3.21, 4.23, 2.61, 4.86, 2.91, 3.03, 2.46, 6.09, 2.73, 1.99, 2.31,
			3.37, 2.81, 4.11, 5.11, 2.84, 2.68, 4.13, 2.16, 2.185, 3.125, 1.11, 1.665,
			1.875, 4.11, 5.29, 1.7, 5.25, 2.34, 5.13, 1.92, 4.06, 4.77, 2.27, 5.57,
			1.96, 0.62, 1.35, 4.14, 2.46, 3.75, 4.68, 4.62, 4.29, 1.83, 3.04, 2.33,
			3.93, 4.99, 2.0, 3.51, 3.96, 2.17, 2.9, 4.02, 5.012, 1.708, 2.67, 2.75,
			4.725, 2.965, 2.13, 2.82, 4.71, 3.58, 4.968, 2.792, 0.92, 3.85, 1.92,
			2.16, 2.48, 3.49, 2.7, 5.88, 3.66, 3.69, 2.91, 2.792, 2.856, 3.292, 1.95,
			1.95, 1.95, 1.68, 3.06, 4.6, 3.92, 7.04, 3.48, 2.61, 2.863, 1.167, 3.75,
			2.81, 1.62, 2.125, 2.615, 2.498, 1.042, 3.207, 1.833, 3.9, 5.31, 3.27,
			3.33, 2.34, 2.77, 3.11, 6.08, 3.24, 2.08, 4.822, 0.958, 1.5, 1.68, 1.805,
			2.875, 2.68, 1.39, 2.35, 3.42, 4.05, 4.75, 4.21, 2.8, 1.89, 1.92, 1.89,
			1.89, 3.81, 1.57, 2.99, 2.01, 4.38, 1.57, 2.78, 4.16, 2.5, 3.09, 2.85,
			2.95, 2.84, 4.2, 2.04, 1.32, 2.25, 3.45, 3.51, 4.41, 1.4, 3.43, 4.432,
			1.958, 3.72, 3.96, 4.88, 4.3, 4.26, 9.33, 3.06, 3.36, 2.97, 2.25, 4.35,
			1.35, 3.33, 2.82, 3.93, 2.64, 4.44, 3.68, 5.71, 2.43, 2.22, 3.33, 4.83,
			3.61, 2.54, 2.67, 3.72, 1.87, 2.7, 4.93, 3.28, 3.0, 3.12, 3.27, 5.67,
			3.84, 4.62, 5.35, 3.57, 3.18, 3.66, 2.61, 3.06, 3.36, 2.91, 2.43, 1.852,
			1.958, 4.92, 4.53, 2.31, 6.94, 2.51, 4.17, 2.04, 1.65, 3.052, 1.958, 5.19,
			1.05, 1.875, 2.595, 2.58, 2.06, 2.17, 3.45, 3.44, 2.56, 4.74, 2.53, 3.62,
			2.31, 4.71, 4.05, 5.01, 5.13, 1.8, 4.05, 2.95, 5.33, 3.03, 2.625, 3.225,
			4.32, 4.74, 9.17, 3.88, 1.52, 2.31, 2.052, 1.458, 2.49, 3.18, 2.34, 4.14,
			1.29, 3.96, 3.36, 1.405, 2.375, 2.125, 2.195, 1.44, 3.72, 2.29, 2.51,
			1.96, 2.17, 1.0, 4.2, 2.177, 2.083, 1.98, 2.125, 4.665, 2.93, 2.32, 2.77,
			2.5, 2.017, 1.833, 1.95, 1.82, 1.71, 2.462, 2.458, 2.2, 4.52, 4.31, 1.75,
			4.02, 6.36, 2.37, 2.55, 3.36, 4.11, 0.96, 3.73, 2.24, 3.45, 2.79, 2.1,
			4.46, 1.337, 2.333, 2.67, 1.55, 3.22, 1.83, 1.2, 2.34, 3.61, 4.1, 4.53,
			2.337, 1.833, 2.13, 3.09, 0.87, 3.55, 1.85, 2.7, 1.5, 1.47, 2.97, 2.43,
			3.09, 2.22, 3.81, 1.605, 1.875, 2.79, 1.753, 2.417, 2.76, 1.715, 2.125,
			3.51, 5.835, 0.915, 2.417, 3.283, 4.02, 4.56, 1.83, 3.24, 5.4, 2.66,
			1.917, 1.703, 3.227, 1.833, 3.9, 2.1, 3.81, 2.97, 3.18, 2.38, 2.06, 3.21,
			4.11, 1.56, 3.15, 2.55, 4.02, 2.25, 2.82, 4.05, 1.23, 4.02, 2.61, 2.91,
			2.28, 3.0, 2.37, 2.11, 1.04, 3.97, 2.677, 2.833, 2.89, 3.38, 2.38, 2.662,
			1.708, 1.74, 5.76, 2.07, 3.37, 2.63, 2.28, 3.51, 3.06, 2.43, 3.75, 3.902,
			0.958, 1.338, 1.542, 4.32, 3.39, 4.5, 2.58, 2.29, 2.36, 2.67, 3.0, 2.64,
			1.35, 1.38, 2.73, 3.63, 2.88, 1.66, 2.458, 2.212, 4.98, 2.46, 2.43, 2.49,
			3.63, 2.34, 1.68, 2.58, 1.41, 2.89, 3.53, 1.89, 3.33, 1.98, 2.97, 1.652,
			1.708, 2.49, 1.83, 2.79, 3.28, 2.66, 2.54, 2.65, 3.84, 2.16, 2.46, 3.84,
			3.54, 2.73, 1.98, 3.09, 1.62, 4.2, 2.3, 2.82, 5.72, 2.2, 2.31, 3.945,
			1.665, 2.59, 1.4, 2.67, 3.24, 3.6, 2.82, 4.59, 3.95, 2.36, 3.29, 2.16,
			3.78, 1.45, 4.31, 3.53, 3.58, 2.19, 4.27, 3.3, 1.84, 1.55, 7.86, 4.14,
			3.64, 7.25, 1.5, 1.53, 1.36, 1.309, 2.011, 2.699, 1.561, 1.917, 1.863,
			6.084, 2.066, 1.41, 1.349, 2.311, 2.79, 3.689, 3.42, 2.161, 3.66, 4.065,
			1.875, 1.92, 1.917, 3.453, 1.86, 2.62, 1.328, 2.292, 3.42, 3.099, 4.581,
			3.0, 1.643, 2.167, 1.9, 2.708, 0.792, 3.042, 3.978, 2.64, 1.8, 2.34,
			2.652, 2.208, 4.453, 2.417, 2.4, 2.565, 1.875, 2.95, 2.18, 2.76, 3.81,
			1.33, 2.3, 4.02, 2.88, 2.7, 4.47, 4.68, 4.32, 2.1, 2.49, 3.33, 2.34, 3.79,
			3.05, 2.02, 2.75, 5.46, 2.46, 4.33, 5.15, 3.39, 2.13, 2.64, 3.24, 2.73,
			3.06, 4.44, 2.61, 1.98, 6.28, 2.48, 0.66, 1.47, 1.247, 1.333, 4.08, 1.0,
			1.16, 1.95, 2.43, 3.73, 3.05, 1.333, 1.367, 2.1, 2.19, 2.3, 5.17, 1.59,
			3.54, 2.85, 3.0, 3.51, 3.57, 3.965, 2.875, 4.47, 3.0, 3.12, 2.55, 2.07,
			3.33, 2.13, 3.15, 3.9, 5.44, 2.66, 3.61, 3.62, 3.0, 6.03, 5.25, 2.808,
			2.292, 2.5, 1.53, 3.89, 4.83, 2.16, 4.87, 2.593, 1.417, 0.958, 1.834,
			2.278, 2.43, 3.67, 3.44, 3.01, 4.31, 4.14, 2.085, 1.875, 2.64, 3.16, 4.04,
			2.73, 5.25, 2.46, 1.48, 3.5, 3.64, 1.58, 3.89, 0.99, 2.34, 3.18, 4.9,
			3.38, 2.5, 2.6, 2.68, 3.59, 4.14, 4.327, 2.333, 1.78, 2.6, 2.22, 2.17,
			4.16, 3.09, 5.85, 3.03, 2.7, 4.29, 0.9, 3.573, 2.667, 2.82, 3.873, 1.417,
			4.32, 3.267, 1.583, 2.31, 2.25, 4.74, 9.95, 3.45, 8.96, 3.55, 1.25, 2.88,
			2.31, 2.91, 2.53, 1.46, 2.04, 0.84, 3.93, 2.1, 3.09, 2.49, 3.51, 3.21,
			3.84, 2.43, 1.71, 2.43, 4.58, 2.2, 4.08, 2.22, 3.33, 1.298, 1.792, 4.51,
			3.77, 2.43, 3.39, 4.57, 6.57, 7.69, 7.66, 1.26, 2.79, 3.12, 2.83, 2.0,
			3.36, 2.5, 2.9, 2.19, 3.39, 4.42, 5.54, 2.795, 1.375, 2.47, 3.38, 1.59,
			1.71, 3.27, 2.76, 2.22, 2.82, 2.16, 4.62, 4.38, 4.41, 3.54, 2.4, 3.143,
			2.167, 2.14, 3.32, 2.63, 1.0, 3.96, 3.66, 4.46, 2.59, 3.87, 2.34, 3.63,
			4.5, 2.22, 3.33, 3.21, 3.0, 2.73, 2.64, 2.61, 2.94, 3.24, 2.43, 2.55,
			3.87, 4.29, 4.06, 3.44, 5.22, 3.66, 2.97, 3.21, 7.44, 4.62, 4.11, 1.08,
			2.898, 1.542, 3.68, 3.25, 2.37, 6.0, 2.17, 3.08, 5.16, 2.0, 2.833, 0.937,
			5.053, 3.167, 1.98, 2.91, 2.99, 5.4, 3.12, 2.79, 4.35, 1.32, 6.21, 3.27,
			3.09, 1.71, 1.95, 2.46, 1.85, 2.178, 1.792, 4.47, 3.04, 4.14, 3.51, 6.08,
			5.4, 1.69, 1.7, 2.64, 1.552, 1.958, 0.932, 1.708, 1.54, 2.205, 2.375,
			1.173, 1.917, 2.67, 2.125, 1.625, 0.57, 1.41, 2.67, 1.14, 2.62, 1.7, 1.84,
			2.3, 2.79, 3.03, 2.13, 2.46, 3.7, 6.98, 2.13, 3.24, 2.22, 2.28, 4.68,
			2.53, 2.626, 1.664, 2.03, 1.62, 2.48, 1.93, 2.94, 3.11, 2.94, 2.47, 1.35,
			6.13, 3.38, 0.94, 1.22, 1.35, 1.26, 1.958, 4.132, 3.93, 2.31, 3.418,
			2.792, 2.82, 3.45, 2.637, 2.583, 2.47, 4.4, 1.95, 1.74, 2.975, 1.625,
			2.09, 4.23, 2.22, 2.75, 2.65, 2.82, 2.88, 2.76, 3.43, 2.63, 5.1, 4.44,
			4.11, 2.67, 3.03, 3.113, 1.417, 3.57, 2.62, 1.67, 3.24, 3.66, 2.55, 2.49,
			2.28, 3.06, 2.85, 2.61, 2.7, 5.08, 3.59, 3.93, 3.75, 2.7, 3.63, 2.725,
			3.125, 0.99, 3.51, 3.54, 3.87, 3.78, 4.62, 4.86, 3.84, 1.75, 2.25, 2.875,
			2.965, 3.6, 4.32, 3.57, 4.05, 2.49, 2.64, 2.73, 3.09, 4.35, 3.12, 2.13,
			2.73, 3.12, 3.33, 2.73, 3.03, 5.07, 3.24, 2.31, 3.45, 2.91, 0.76, 3.26,
			3.64, 3.17, 2.85, 2.253, 2.667, 2.28, 4.43, 2.8, 3.3, 3.21, 2.31, 2.82,
			4.14, 3.0, 2.58, 4.08, 4.89, 3.39, 2.37, 2.55, 2.97, 4.47, 4.53, 3.48,
			2.61, 2.52, 2.97, 4.18, 1.88, 2.95, 2.51, 2.85, 2.52, 3.81, 4.53, 1.383,
			1.917, 2.19, 2.88, 1.83, 5.94, 2.94, 4.17, 3.09, 3.24, 2.9, 1.78, 2.52,
			2.73, 3.32, 7.4, 4.28, 6.09, 1.91, 3.14, 2.48, 4.08, 3.21, 2.37, 2.22,
			3.87, 4.53, 3.03, 4.5, 2.65, 1.25, 5.1, 1.92, 3.3, 6.21, 4.58, 2.9, 2.09,
			5.25, 2.85, 4.44, 3.45, 2.09, 1.75, 3.18, 4.44, 4.23, 3.52, 3.11, 2.01,
			4.05, 4.52, 1.52, 6.18, 2.102, 1.708, 2.458, 4.322, 3.3, 1.747, 0.833,
			1.29, 4.552, 0.958, 3.22, 4.83, 2.49, 2.19, 2.55, 2.9, 3.61, 5.13, 3.0,
			2.28, 2.28, 4.05, 3.167, 3.083, 2.91, 6.09, 2.03, 4.03, 2.3, 2.43, 3.66,
			1.56, 3.24, 5.26, 4.29, 1.687, 1.333, 1.31, 3.38, 3.99, 2.55, 3.9, 0.96,
			1.832, 2.458, 2.97, 2.55, 3.42, 3.48, 2.61, 5.1, 3.3, 5.55, 5.64, 3.945,
			1.395, 1.75, 2.63, 3.96, 2.73, 2.55, 3.66, 3.15, 1.38, 3.48, 3.9, 3.74,
			4.54, 2.25, 2.0, 2.17, 3.2, 3.24, 2.31, 6.33, 3.58, 4.64, 2.8, 4.37, 4.39,
			5.42, 2.92, 4.28, 2.38, 4.64, 5.34, 0.96, 4.0, 6.86, 2.46, 4.26, 0.99,
			2.82, 1.59, 7.78, 5.865, 1.625, 2.417, 3.533, 3.148, 1.792, 4.92, 2.76,
			3.61, 5.372, 2.208, 3.25, 2.81, 2.28, 3.42, 4.35, 5.46, 4.087, 3.083,
			0.87, 3.12, 1.92, 3.87, 3.9, 1.51, 3.29, 2.13, 4.52, 2.92, 1.637, 1.333,
			3.9, 2.85, 3.957, 2.583, 2.708, 2.312, 3.45, 3.52, 6.05, 2.023, 1.917,
			2.96, 1.69, 3.93, 3.47, 4.81, 2.69, 2.52, 2.53, 4.7, 1.538, 3.042, 2.44,
			3.51, 4.39, 2.0, 6.67, 5.97, 7.57, 2.91, 1.92, 2.22, 2.31, 3.06, 4.41,
			4.78, 2.19, 1.56, 5.08, 2.15, 3.12, 2.88, 1.71, 6.33, 2.91, 3.72, 2.49,
			2.58, 3.81, 3.887, 2.833, 2.32, 5.75, 10.24, 2.34, 6.35, 5.87, 5.7, 2.933,
			2.917, 1.91, 1.95, 2.79, 2.4, 2.67, 4.29, 1.92, 0.92, 2.47, 2.25, 3.36,
			3.0, 1.57, 2.27, 3.06, 3.24, 3.0, 2.56, 4.252, 3.208, 2.44, 1.58, 2.02,
			3.26, 3.0, 3.37, 2.57, 1.23, 3.22, 2.51, 4.14, 4.11, 3.84, 2.53, 2.57,
			2.28, 4.18, 4.13, 3.03, 1.95, 3.93, 3.627, 1.833, 2.16, 5.1, 3.777, 3.333,
			3.375, 2.625, 2.328, 0.792, 1.23, 2.58, 2.47, 2.22, 2.48, 5.04, 2.44,
			1.46, 4.23, 2.07, 2.82, 3.33, 2.91, 3.218, 2.542, 2.43, 4.26, 1.89, 2.52,
			2.85, 3.51, 3.36, 4.47, 0.51, 3.93, 3.06, 3.25, 3.2, 3.87, 2.94, 1.765,
			3.125, 3.57, 2.85, 1.86, 1.5, 4.62, 2.58, 2.4, 1.86, 3.91, 0.5
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRIAN YU: OK, welcome back, everyone, to \"Web Programming",
			"with Python and JavaScript.\"",
			"And today, we turn our attention to the second of the main programming",
			"languages that we'll be looking at in this class, in particular, JavaScript.",
			"And to get an understanding for why it is that JavaScript is actually helpful,",
			"let's go back and revisit this diagram of what communication over the internet",
			"will generally look like.",
			"Oftentimes, we'll have a user, otherwise known as the client,",
			"using their computer on their web browser,",
			"whether that's Chrome, or Safari, or some other web browser,",
			"that sends an HTTP request--",
			"a web request-- to some sort of web server.",
			"That server then processes that request, and then returns some sort of response",
			"that comes back to the client.",
			"Thus far, all of the code that we've written--",
			"the Python web application code running in a Django web application,",
			"for example--",
			"has all been code that runs on some sort of server,",
			"code that is listening for requests, doing some computation in order",
			"to process that request, and then generating some sort of response,",
			"usually in the form of an HTML template that we then send back to the client.",
			"What JavaScript is going to enable us to do",
			"is to begin to write client-side code.",
			"JavaScript is going to allow us to write code",
			"that actually runs inside of the user's web browser on the client.",
			"And this can be useful for a number of reasons.",
			"One, if there's computation that we want to do,",
			"but we don't need to go out and reach out to a server in order to do so,",
			"we can do the computation potentially faster",
			"just by running the code exclusively on the client.",
			"And in addition to that, we can begin to make our web",
			"pages a whole lot more interactive.",
			"JavaScript is going to give us the ability",
			"to directly manipulate the DOM, where again, the DOM is the Document Object",
			"Model--",
			"that tree-like hierarchy that represents the web page",
			"that the user happens to be looking at.",
			"So JavaScript will enable us to write code that directly manipulates",
			"the content on the web page and we'll see how",
			"that can be quite powerful very soon.",
			"So how do we then use JavaScript inside of a web page",
			"in order to add some code, add some programming logic to a web page?",
			"Well, so far, we've already seen HTML--",
			"the language we use to describe the structure of a web page--",
			"where an HTML page just describes the structure",
			"of a page in terms of nested tags.",
			"We had those head tags at the top of the page,",
			"the body tags that describe the structure of the page,",
			"and then additional tags that could be nested within those.",
			"And in order to add JavaScript to a web page,",
			"it's as simple as including some script tags that are often",
			"located inside of the HTML page itself.",
			"When we use these script tags, we're telling the browser",
			"that anything in between these script tags",
			"should be interpreted, in this case, as JavaScript code that the web browser is",
			"then going to execute.",
			"So our very first program, for example, might just look like a line of code",
			"inside of the script tags, something like this, where alert, for example,",
			"is the name of a function-- a function that's going to produce an alert--",
			"and then just as with functions in Python, functions in JavaScript",
			"can take arguments.",
			"So in between these parentheses, we have an argument,",
			"something like the string \"hello, world\"--",
			"the text that we would like to display to the user.",
			"So let's go ahead and give this a try and see",
			"how we can actually use this code to write",
			"JavaScript that is going to run inside of the user's web browser.",
			"I'll go ahead and create a new file that we'll call hello.html.",
			"And inside of it, I'll include the same basic HTML structure",
			"that we've already seen before, where I have a head section that has a title,",
			"and then a body that maybe just says hello, for example.",
			"And so now, what I'd like to do is add a little bit of JavaScript",
			"to this web page.",
			"So in the head section of my web page, I'm",
			"going to go ahead and add a script tag, where in between these scripts",
			"tags now, I can write JavaScript code-- code that",
			"is going to be written in JavaScript that will run inside of the web browser",
			"when the user actually opens up this page.",
			"And for now, I'll just say, alert, and then hello world.",
			"It turns out in JavaScript, you can use either single quotation marks",
			"or double quotation marks in order to represent strings.",
			"I'll generally use single quotation marks here just by convention.",
			"So here, I'm running a function called alert",
			"that's going to display an alert, something like hello world to the user.",
			"And that's going to be inside of the script tags of this HTML page.",
			"So now if I want to actually open the page up, I can open hello.html",
			"or you could just visit it inside of your web browser,",
			"whether it's Chrome or something else.",
			"And now at the top of the page, what you'll notice",
			"is that I get a little bit of an alert-- some interaction where",
			"it says this page says hello world, and it gives me an option to, like,",
			"press a button, for example, like the OK button that'll",
			"say, all right, dismiss the alert now.",
			"And this is our very first example of JavaScript.",
			"We have a function called alert built into JavaScript for our web browser,",
			"and our web browser knows that when we call the alert function,",
			"the browser should display an alert message that",
			"looks a little something like that.",
			"And if I click the OK button to dismiss the alert,",
			"then we go ahead and get back the original page",
			"that I had from the beginning.",
			"And so now, we can begin to imagine that using this ability",
			"to programmatically display alerts, that we can add additional features",
			"to our applications as well.",
			"And one big area where JavaScript can be quite powerful",
			"is with event-driven programming.",
			"And what event-driven programming is all about",
			"is thinking about things that happen on the web in terms of events that happen.",
			"What are some examples of events?",
			"Events are things like the user clicks on a button,",
			"or the user selects something from a dropdown list,",
			"or the user scrolls through a list, or submits a form.",
			"Anything the user does can generally be thought of as an event.",
			"And what we can do with JavaScript is add event listeners or event handlers--",
			"things that say when an event happens, go ahead",
			"and run this particular block of code or this function, for example.",
			"And using that, we can begin to allow our JavaScript",
			"code to respond to how the user is actually interacting with our web page",
			"to say when the user clicks on a button, I",
			"would like to run this particular JavaScript function, for example.",
			"So let's go ahead and give that a try.",
			"I'll go ahead and now instead of just saying, alert hello world,",
			"let me put this alert inside of a function.",
			"And to create a function in JavaScript, you just",
			"use the keyword function followed by the name of the function.",
			"I'll call the function hello, for example.",
			"And then in parentheses, any inputs that function takes.",
			"This hello function is not going to take any input,",
			"so I'll just use an empty set of parentheses.",
			"And then inside of curly braces, I include any of the code",
			"that I want to run in this function.",
			"And so what I've done here now is create a function called hello,",
			"and then inside of the curly braces, I've",
			"defined the body of the function-- what code should",
			"run when I run the hello function.",
			"And what the hello function should do is it",
			"should display an alert that, in this case, says hello, world.",
			"So now, what I'd like to do is get this function",
			"to run when something happens on the page-- for example,",
			"when a user clicks on a button.",
			"So to do that, the first thing I'll need to do is actually create a button.",
			"So I'll add a button that just says, like, click here, for example.",
			"So now if I refresh this page, I now see that I have hello",
			"and I also have this button that says click here,",
			"but when I click here, like, nothing happens.",
			"I'm clicking the Click Here button, but it's not changing anything",
			"because I haven't yet said what should happen when",
			"the user does click on this button.",
			"And so one way we could do this is by adding an attribute to this HTML",
			"element called onclick.",
			"What this is going to do is it's going to add an onclick",
			"handler to this button.",
			"It's going to say what should happen when the user clicks on this button.",
			"And I'm going to set the onclick attribute",
			"equal to running the function hello.",
			"And in order to run a function in JavaScript,",
			"just as you ran a function with Python, you",
			"use the name of the function followed by a set of parentheses",
			"to say, go ahead and actually run this function.",
			"Using those parentheses calls the function--",
			"another word for running the function.",
			"And the fact that there's nothing in between the parentheses",
			"means we're not providing anything as input to the hello function,",
			"though if the hello function did take inputs,",
			"we could certainly add that in between the parentheses.",
			"So now, I've tied the two pieces of this page together.",
			"I have a button that says click here and I've",
			"added an onclick handler that says that when you click on the button,",
			"you should run the hello function.",
			"And then up above, I've defined the hello function",
			"to say what should the hello function do.",
			"Well, when the function is called, we're going",
			"to display an alert that in this case, says hello, world.",
			"So now, we should be able to refresh the page.",
			"We still see the same thing, at least initially,",
			"where it just says hello and a button that tells me to click here.",
			"But now if I go ahead and click the button that",
			"says click here, well, then I get the alert that says,",
			"this page says hello, world.",
			"I can press OK.",
			"And this event handler is always going to work.",
			"I click the button again, and I get the alert a second time",
			"because every time I click the button, it's",
			"going to call the hello function again.",
			"And when the hello function runs, it is going to display this particular alert.",
			"So this now appears to give us a fair amount of power.",
			"And much as in other programming languages, languages like Python",
			"or other languages you might have worked with,",
			"JavaScript has all these same types of language feature.",
			"So far, we've seen data types-- things like a string--",
			"but we also have other data types that we'll take a look at soon too.",
			"We've seen functions-- some functions that are built into JavaScript,",
			"like the alert function, and other functions that we can write",
			"for ourselves, functions like hello--",
			"but we also have the ability to include things like variables",
			"inside of our program as well.",
			"So what might that look like?",
			"Well, I'll go ahead and create a new file that we'll call counter.html.",
			"And counter is going to have some of the similar code to hello,",
			"so I'll just go ahead and copy it for now,",
			"but I'll clear out the script section, change the title from hello to counter.",
			"And now inside, I'll get rid of the button--",
			"or actually, I'll keep the button, but instead of saying, click here,",
			"the button is going to say count.",
			"I'd like to create a program that just counts for me from 0 to 1 to 2,",
			"3, 4, so on and so forth.",
			"And now in order to do that, in order to have some way of counting repeatedly 0,",
			"1, 2, 3, 4, 5, I'm going to need to have some sort of variable inside",
			"of my program, something that is keeping track of data, like the number",
			"that I currently have counted to.",
			"So in order to do that in JavaScript, I can say something like let counter",
			"equal 0.",
			"This is the way in JavaScript that I define a new variable.",
			"I first say let counter, meaning let there be a new variable called counter,",
			"and I'm going to initially set the value of counter equal to the number 0.",
			"And now when I click on the button, instead of running the hello function,",
			"I'm going to go ahead and run the count function, which doesn't exist yet,",
			"but I'll now write it.",
			"I'll define a function called count.",
			"And what the count function is going to do is it is going to first increment",
			"the value of counter.",
			"And there are number of ways I could do that.",
			"One is by saying counter = counter + 1 to say, go ahead and reset",
			"the value of counter to whatever counter is plus 1.",
			"And there are a couple of shorthand notations for this.",
			"I could equivalently say counter += 1 to say, add 1 to the counter,",
			"or in the case of adding 1, JavaScript, much like languages like C",
			"if you've seen them before, support notation like this-- counter++,",
			"which just means take the value of counter and increment it-- add 1 to it.",
			"So I'll add 1 to the value of counter, and then I'll",
			"just display an alert that has whatever the current value of counter",
			"happens to be.",
			"And so I've incremented the value of counter,",
			"and then displayed an alert that shows me what's contained inside of counter.",
			"And so now if I go ahead and not go to hello.html, but to counter.html",
			"instead, I now see that I still see a button that says count.",
			"And if I click on that button, I get an alert that this time, says 1.",
			"We've incremented the value of counter from 0 to 1.",
			"The alert now says 1 and I can press OK.",
			"If I press count again, the count now goes to 2.",
			"If I press OK, press count again, it goes to 3.",
			"And every time I click count, it is going",
			"to increment the value of the variable counter inside of my JavaScript web",
			"page, and then it's going to display an alert that is going",
			"to contain the value of that variable.",
			"So using alerts now, we're able to manipulate-- we can inside a function,",
			"manipulate the values of variables, and then display alerts that",
			"show the contents of those variables.",
			"But ultimately when users are interacting with the page,",
			"it's going to be fairly annoying if the only way that we",
			"have to interact with the user is via displaying",
			"these alerts-- the equivalent of, like, printing something out,",
			"except instead of printing it to a terminal,",
			"we're printing it via an alert that appears on the screen.",
			"What would be more interesting, and more powerful, and much more",
			"useful in the context of a web page is if we could programmatically",
			"update the website-- change something about the web page",
			"that the user is actually seeing, changing the content that",
			"happens to be on the page.",
			"And it turns out JavaScript is going to enable",
			"us to do that as well because JavaScript allows us to manipulate",
			"the DOM-- the Document Object Model that represents all of the elements that",
			"happen to be on that page.",
			"So to do that, let's go ahead and return to hello.html.",
			"This again, was this web page that just said hello and gave me a button,",
			"where if I clicked on that button, it would display an alert that said,",
			"hello, world.",
			"Now what I'd like to do is instead of having the hello function display",
			"an alert, I'd like to have it manipulate something on the page.",
			"And what might I want it to manipulate?",
			"Well, inside the body of the page, I here have this heading--",
			"this heading that just says hello, for example,",
			"which is inside of an h1 element.",
			"And what I might like to do is actually change that element.",
			"How can I do that?",
			"Well, it turns out that in JavaScript, we",
			"have access to a function called document.querySelector.",
			"And what document.querySelector is going to do",
			"is it is going to give us the ability to look through an HTML page",
			"and extract an element out of that page so that we can manipulate that HTML",
			"element using JavaScript code.",
			"And so if I want to select like an h1 element,",
			"I can say document.querySelector.",
			"And then as the argument, the input to document.querySelector,",
			"I'll go ahead and say each one, meaning go through the page,",
			"find me an h1 element.",
			"And querySelector is only going to return one element,",
			"so if there are multiple, it's going to return the first thing it finds.",
			"But here, we only have one h1 element, so it's OK.",
			"I'm going to say look through this document, try and find an h1 element,",
			"and when you do, I'd like to manipulate it.",
			"And the way I'd like to manipulate it is by saying .innerHTML =, let's say,",
			"goodbye, for example.",
			"So all right, what's going on 6 Well, right now initially when we first load",
			"the page, we have an h1-- a big heading at the top--",
			"that just says hello.",
			"And now when this hello function is called,",
			"which is called when this button is clicked on because it has an onclick",
			"attribute that is equal to hello, calling the hello function,",
			"what the hello function is going to do is",
			"it's going to say document.querySelector h1.",
			"Find me the h1 element that will return this element right here--",
			"the JavaScript representation of this HTML element",
			"that is just an h1, whose HTML inside of it says hello.",
			"And if I want to change that HTML, I can do that",
			"by modifying the innerHTML property of the JavaScript element.",
			"In order to update a property of anything in JavaScript,",
			"well generally use this dot notation, where dot accesses",
			"a property of some particular object.",
			"And so I have this element, this h1.",
			"And saying .innerHTML means take that element and access its innerHTML",
			"property, some property of that object.",
			"And I would like to update its innerHTML to just in this case",
			"be the word goodbye followed by an exclamation point, for example.",
			"So now, what we'll see is that when we run",
			"this page, when we open this page up as by opening up hello.html,",
			"I still see an h1 that says hello.",
			"I still see a button that says click here.",
			"But now when I actually click on the button click here,",
			"you'll see that hello changes to goodbye.",
			"We've run JavaScript code that finds an h1 element on the page",
			"and manipulates it, changing it to something else than it was originally.",
			"Now every time I click here, nothing else",
			"happens because every time I click here, it's going to find the same h1",
			"and it's going to update its HTML, changing it from hello to goodbye.",
			"So maybe what I'd really like then is the ability",
			"to toggle back and forth-- to toggle back and forth between hello",
			"and goodbye, rather than just change it from one thing to something else.",
			"Every time I click the button, I'd like it to alternate back and forth.",
			"And there are a number of ways you could imagine doing this,",
			"but one way is by taking advantage of conditions.",
			"So much in the same way that a language like Python has conditions--",
			"if's, and elif's, and else's--",
			"JavaScript too has if, and else if, and else that",
			"allow us to describe conditions, such that we can only",
			"run certain blocks of code when a particular Boolean expression is true,",
			"for example.",
			"So what would that look like?",
			"Well, let's go ahead and say inside of this hello function,",
			"I can ask a question.",
			"If document.querySelector h1 innerHTML is equal to hello,",
			"we'll then go ahead and set it to goodbye and else then go",
			"ahead and update the innerHTML of this h1 element,",
			"go ahead and set it to hello instead.",
			"So what is this hello function doing?",
			"It's now a little bit more sophisticated.",
			"It now has a condition where I say if-- the keyword if--",
			"followed by in parentheses, the condition that I want to check for,",
			"the thing I want to see is this true or not.",
			"And what I'm checking for is let me run document.querySelector h1--",
			"which again, looks through the page, finds me the h1 tag,",
			"and gets that element for me--",
			"if I look at that innerHTML, if it is equal to hello,",
			"then I want to do something.",
			"And this triple equal sign here is JavaScript's way",
			"of checking for strict equality, checking",
			"to make sure the two values are equal and also",
			"that their types are the same thing--",
			"that if this is a string, this must also be a string.",
			"It turns out in JavaScript, there's also a weaker way",
			"to check for equality that just uses two equal signs.",
			"And that is going to check that values are the same,",
			"but it's going to allow for a bit of differences in type.",
			"The two things might have different types,",
			"but so long as they're basically the same value,",
			"the double equal sign might generally come to be true.",
			"Usually if you can, you'll want to use this triple equal sign--",
			"the strict equality-- to make sure that not only are the types the same,",
			"but the values are the same too.",
			"And the triple equal sign will check both of those things.",
			"So if I go ahead and find the h1 element and its innerHTML",
			"is the word hello, we'll then go ahead and find the h1 element",
			"and update its innerHTML, setting it equal to goodbye, for example.",
			"And else go ahead and find that same h1 element, update its innerHTML,",
			"set it equal to hello.",
			"And again, just as in functions, where we use these curly braces to enclose",
			"the body of the function-- all of lines of code that are inside",
			"of the function--",
			"JavaScript does the same thing too--",
			"that inside of a condition when we want to express that this is inside",
			"the body of an if condition, I can use curly braces to say this line of code",
			"and that line of code, that's inside of the if expression or that's inside",
			"of the else expression, for example.",
			"So let's go ahead and try this now.",
			"I can go ahead and open hello.html.",
			"Refresh it.",
			"It currently says hello with a button that says click here.",
			"And now when I click here, hello changes to goodbye.",
			"And when I click here again, goodbye changes back to hello.",
			"And every time I click the button, it's going to alternate between hello",
			"and goodbye because we either get caught in the if expression",
			"or we get caught in the else expression.",
			"Now, there are a couple of places where you might look at this",
			"and notice that maybe this isn't as efficient as this code could",
			"potentially be.",
			"And recall that every time we run document.querySelector to say,",
			"go ahead and try and find a particular HTML element for me,",
			"it's going to look through that page trying to find the h1 element.",
			"And it turns out that right now, we have three separate calls to querySelector,",
			"even though only two of them will ever run",
			"on any given instance of the function.",
			"But we call document.querySelector, then we call it",
			"again inside of the if expression.",
			"We can probably improve the design of this page by factoring that out,",
			"by just looking for the h1 element once, and then manipulating it and checking",
			"it using that element that we have found.",
			"And to do that, we can store an element inside of a variable.",
			"In the same way that a variable can store a number,",
			"like a counter, or a string, like hello world,",
			"it can also store other values like an HTML element",
			"that we get back from document.querySelector.",
			"So I could say something like let heading,",
			"where heading is just the name of a variable,",
			"be equal to document.querySelector h1, for instance.",
			"Find the h1 element.",
			"Save it inside of a variable called heading.",
			"And now rather than document.querySelector h1",
			"all the time, I can just say if the heading's innerHTML is hello, then set",
			"the heading's innerHTML to goodbye.",
			"Otherwise, set the heading's innerHTML to hello.",
			"So I've improve the efficiency of the program,",
			"but also reduced the number of characters of code",
			"that I've had to write.",
			"My lines are now much shorter, a little bit easier to read.",
			"This we would consider to be an improvement in design.",
			"And it turns out there's one other improvement",
			"we can make here too that we can define a variable like let something",
			"equal something else, but it turns out that JavaScript gives us",
			"a couple of ways to define a variable.",
			"And if we're going to be creating a variable whose value is never",
			"going to change, we're never going to reassign the variable name to something",
			"else, then instead of let, we can enforce",
			"that it's never going to change by calling it a const variable.",
			"So const heading = document.querySelector h1",
			"means I am going to create a variable called heading, setting",
			"it equal to the result of document.querySelector h1 and never",
			"again will I change what heading is equal to.",
			"I will never have another line of code that",
			"says heading equals something else because it is constant.",
			"And JavaScript will then enforce that this variable should not change.",
			"And if ever I do try to change it, JavaScript will give me an error.",
			"And this can just be helpful to prevent against possible unintended behavior--",
			"that if you know you have a variable that is never going to change,",
			"it's often good design to label it as a const variable",
			"so that you and other people looking at your code",
			"know that that is never going to have a value that gets changed later on.",
			"So this then will behave the same way where it says hello,",
			"but I can toggle it back and forth, changing it to goodbye,",
			"and then changing it back to hello again.",
			"And so now using this ability-- this ability to manipulate the DOM--",
			"we can go back to our counter program and actually improve upon it.",
			"Right now the counter program, I count and it displays an alert that says one.",
			"I count and it displays an alert that says two.",
			"I can probably do a little bit better than that",
			"by instead of displaying an alert, actually",
			"manipulating the DOM in some way--",
			"that I would like to have this h1--",
			"this big heading at the top--",
			"instead of starting up by saying hello, let's have it start out by saying zero,",
			"for example-- just some initial value for the counter.",
			"And now when I increment the value of counter,",
			"rather than display an alert that just tells me the value of the counter",
			"in an alert, I'm going to instead say document.querySelector h1 .innerHTML =",
			"counter, where I'm saying find the h1 element, update its innerHTML,",
			"set it equal to whatever the value of the variable counter happens to be,",
			"such that now if I refresh this page, the value of this h1 initially is zero.",
			"That's the initial value.",
			"But every time I click count, we're going",
			"to update the contents of that h1 element.",
			"And this time, setting it to 1, 2, 3, 4, and so forth.",
			"Every time I click the count button, it's",
			"going to increment the value of the variable,",
			"as well as manipulate the DOM, actually making changes",
			"in order to produce the effect that I want to see on this actual page.",
			"And we can begin to add additional logic to this as well.",
			"Maybe I do occasionally want an alert, but I",
			"don't want an alert every single time.",
			"I could add a condition.",
			"I could say something like if I only want to display an alert every time I",
			"count to a multiple of 10-- like 10, and 20, and 30, and 40, and 50,",
			"and so forth--",
			"I could add a condition that says that if counter mod 10--",
			"and mod just gets the remainder when you divide by 10--",
			"so if you take the counter, divide it by 10,",
			"if the remainder is 0 when I divide by 10,",
			"well, that means counter is a multiple of 10,",
			"and so I can now display an alert, where I can display an alert that says, like,",
			"I want to say something like the counter is now 10 or the counter is now 20.",
			"And in order to do that, what I really want to do",
			"is have some way of plugging in a variable",
			"into a string inside of JavaScript.",
			"And in Python, the way we would have done this",
			"is by prepending f in front of the string to create a formatted string.",
			"And then I would have said something like the count is now,",
			"and then I'd use curly braces to say go ahead",
			"and print out the value of counter.",
			"So this f for formatted string followed by this string",
			"would have been the way in Python that we would have done this.",
			"It turns out JavaScript does the same thing, just",
			"with slightly different syntax.",
			"It doesn't use f.",
			"Instead of using the regular quotation marks or the single or double quotation",
			"marks, JavaScript uses these backticks, which are usually located above the Tab",
			"key on a standard US keyboard.",
			"And this is going to create what JavaScript",
			"calls a template literal, where I can then",
			"substitute the value of a variable somewhere inside of this template.",
			"And then in order to actually do the substitution,",
			"while Python uses double curly braces to say plug-in the value of counter",
			"right here, JavaScript does something similar.",
			"It also uses double curly braces, but there",
			"needs to be dollar sign in front of it.",
			"The dollar sign, and then the double curly braces",
			"mean go ahead and plug-in the value of a variable there.",
			"So this then is a template literal, where every time we",
			"get to a multiple of 10, we're going to display an alert that says,",
			"the count is now, and then this dollar sign curly brace",
			"means actually plug-in whatever the value of counter",
			"happens to be right there.",
			"So now if I go ahead and refresh counter, it starts at 0.",
			"I can count 3, 4, 5, 6, 7, 8, 9, but when I get to 10,",
			"then I get an alert that says the count is now 10, and then I",
			"see the result update on the page.",
			"And so that template literal can allow us to combine variables and strings",
			"in order to generate new strings that are able to represent data inside",
			"of them as well.",
			"So now, what improvements can we begin to make here?",
			"What changes can we make to this to improve upon the design of it?",
			"Well, one thing, especially as our programs",
			"get a little bit more sophisticated, a little bit more complicated",
			"is that we often don't want to be intermingling our JavaScript",
			"code with the contents of our HTML.",
			"Down here, we have button onclick=\"count,\"",
			"this name of this function.",
			"And especially as our page starts to get more complicated,",
			"it's going to start to get a little bit annoying if we're constantly",
			"having to maintain a little bit of JavaScript code,",
			"like making a call to a function, inside of our HTML.",
			"We'll see a little bit later, there are other paradigms that actually encourage",
			"this type of thing, but right now, it can start to get a little poorly",
			"designed, as we'd really like to separate all of our JavaScript-related",
			"code from all of the HTML--",
			"the general structure of our page.",
			"And so there are ways we can begin to do that as well.",
			"I can add an event listener inside of JavaScript too that I can say something",
			"like document.querySelector button, and then I can say .onclick = count.",
			"So what's going on here?",
			"And I can do this instead of this onclick=\"count.\"",
			"What I'm now saying is document.querySelector button,",
			"find me the button on the page.",
			"And it turns out there's only one button here,",
			"so it's fine, though if there were more, I might",
			"have to be a little bit more specific.",
			"But once I get that button, then I'm going to access its onclick property",
			"and I'm going to set it equal to count.",
			"And what is count?",
			"Count is the name of a function.",
			"Count is itself a function.",
			"And so what I'm here saying is I would like",
			"to set the value of the onclick property of the button",
			"equal to count-- that count is the function that should",
			"run when the button is clicked on.",
			"And notice that I am not actually calling the function.",
			"It's not count, and then parentheses, which",
			"would mean run the count function, and then get its return value",
			"and use that as the value for onclick.",
			"I'm just setting onclick equal literally to the count function itself",
			"without actually calling the function.",
			"And what this is going to do is it is going",
			"to say when the button is clicked on, then",
			"and only then should you actually run this count function.",
			"And we're not going to run the count function until that button actually",
			"gets clicked on.",
			"And so in JavaScript, functions can be treated as values of their own.",
			"Just as you can set a variable equal to a string,",
			"just as you can set a variable equal to an integer,",
			"just as you can set a variable equal to, like, an HTML element,",
			"like the result of document.querySelector,",
			"you can also set a variable equal to a function-- something like count--",
			"and pass that around as a value, just as you could with any other value.",
			"And this is a paradigm we generally call functional programming, where",
			"we have functions as values of their own-- things that we can reassign,",
			"things that we can manipulate just as we could any other value.",
			"So now, I can try and run this program by going ahead and refreshing the page.",
			"I'll refresh it.",
			"It's 0.",
			"I press count.",
			"And all right, nothing seems to be happening.",
			"It's still 0.",
			"I want it to be counting, but it doesn't seem to be working.",
			"So why not?",
			"Anytime you run into problems in JavaScript",
			"where you're not getting the behavior you want, often it",
			"can be helpful to look at the JavaScript console,",
			"where the JavaScript console is the equivalent of, like, the terminal",
			"window when you were running your Django application in Python",
			"that would display any error messages.",
			"The JavaScript console will display any of the JavaScript logging",
			"information and error messages as well.",
			"In Chrome, I can get to it if I first go ahead",
			"and go to inspect, and then just open up the Console tab here.",
			"And all right, we seem to have some sort of error here.",
			"It's an Uncaught TypeError that says we cannot set property onclick of null",
			"in counter.html line 18.",
			"So that will generally tell you where the error is coming from.",
			"It's coming from counter.html on line 18.",
			"And the problem seems to be that I'm trying",
			"to access the onclick property of null.",
			"And null is JavaScript's way of expressing, like,",
			"nothing-- some object that doesn't exist.",
			"So somehow, I'm trying to set the onclick property of null.",
			"Well, let's see what's going on line 18, and see if we",
			"can figure out what's happening there.",
			"Well, all right, here's line 18, where I say document.querySelector button,",
			"setting it's onclick property equal to count.",
			"And now, what seems to be the problem here?",
			"Well, the error message was that I was trying",
			"to modify the onclick property of null.",
			"Well, here then is the onclick property, so why",
			"would this document.querySelector button be returning or giving me",
			"an output of null?",
			"Well, it turns out that document.querySelector will return null",
			"if it's not able to find something-- if I try and find a button,",
			"but it's not able to find a button.",
			"Well, this seems a little bit strange because there's",
			"a button down here on line 24 that I'd like for my JavaScript code",
			"to be able to find when it runs querySelector and tries",
			"to find the button.",
			"As it turns out, this is a bit of a quirk of the way the browser is going",
			"to work, but if the browser is running our code from top to bottom,",
			"just reading it from line 1 on and on, then it's going to get to line 18,",
			"where I've said document.querySelector button .onclick = count,",
			"and it's going to try and find a button on line 18,",
			"but the button doesn't show up in my HTML page until much further down",
			"in the page.",
			"So at this point, when we get to this line of JavaScript,",
			"JavaScript is looking for the button, but the DOM--",
			"the body of the page--",
			"hasn't finished loading yet.",
			"The content of the DOM has not yet loaded.",
			"And as a result, we're not able to find this button.",
			"So how do we solve this problem?",
			"How do we get it so we actually are able to, like, ask for the button",
			"and actually get the button?",
			"Well, it turns out there are a couple of strategies we could use.",
			"One would be take the script tag and go ahead and just move it",
			"to the bottom section of the body, so that after we've already",
			"defined the button that says count, then we have the script tag that then says,",
			"all right, go ahead and now find the button,",
			"and now we'll be able to find it.",
			"It turns out another way, and perhaps the more common way,",
			"is to instead add yet another event listener.",
			"And we're going to add an event listener not to the button,",
			"but to the entire document, where document is a variable built",
			"into this JavaScript that we have access to on the web page",
			"that just refers to this entire web document, where I've",
			"document.querySelector already to look through the whole web document trying",
			"to find a button or trying to find an h1 tag, for example.",
			"But I can also add an event listener to the document itself.",
			"And in order to do that, I can say document.addEventListener.",
			"And when I call addEventListener-- and I can do this on any HTML element,",
			"not just the document, but I could run this function",
			"on a button, or on an h1 element, or any other HTML element.",
			"addEventListener will generally take two arguments, where the first is",
			"what event I want to listen for.",
			"The event could be something like click, when I click on the document.",
			"It could be something like when I scroll through a page, for example.",
			"But with the event I'm going to listen for is a particularly",
			"special event called DOMContentLoaded.",
			"And the DOMContentLoaded event is an event",
			"that is going to be fired or triggered when the DOM--",
			"the Document Object Model, the structure of the page--",
			"is done loading.",
			"When all of the elements on the page are done loading,",
			"the DOM content has been loaded, and then",
			"if I attach an event listener to it, it'll",
			"run whatever code I want to run that should only",
			"run after the DOM is fully loaded, after all of the content on the page",
			"has then been loaded.",
			"And the second argument to addEventListener",
			"is what function should run once the event actually happens,",
			"when the DOMContentLoaded does happen.",
			"So I could pass in the name of a function",
			"if I had the name of a function that I wanted to pass in,",
			"but alternatively, JavaScript allows me to just directly write a function here",
			"in the argument to addEventListener.",
			"I can just say function, and then a set of parentheses to mean the function",
			"doesn't take any input, and then in curly braces,",
			"I can include the body of the function right here as the second argument",
			"to addEventListener.",
			"And this is a little bit of tricky syntax",
			"to wrap your mind around if you've never seen it before,",
			"but the big picture way to think of it is",
			"addEventListener takes two arguments-- one is the event,",
			"the second is the function.",
			"So here first is the event DOMContentLoaded.",
			"And the second argument is a function.",
			"And I would declare the function same as before, just using function.",
			"I haven't given the function a name because strictly speaking,",
			"it doesn't need a name.",
			"I'm never going to refer to this function by name.",
			"So it is what we might call an anonymous function-- a function that has no name,",
			"but I'm still passing it into the addEventListener function",
			"as an argument because I want to run the code inside of the function",
			"once the DOM has done loading.",
			"And so inside of curly braces then is the content of that function--",
			"the content of what code should run when the DOM is done loading.",
			"And then at the end, I again use just this end parenthesis,",
			"where that end parenthesis lines up with this parenthesis here.",
			"This is enclosing all of the arguments to addEventListener,",
			"where the first one is DOMContentLoaded and the second one",
			"is this entire function that might span multiple lines.",
			"So you'll see syntax like this quite a bit in JavaScript.",
			"But now, what I want to do is adding the event listener to the button.",
			"I can go ahead and just replace and put it here.",
			"And it turns out that if I wanted to instead of saying .onclick = count,",
			"you could have used the same syntax of addEventListener.",
			"I could say addEventListener click, and then",
			"count to mean when the click event happens,",
			"go ahead and run the count function.",
			"But you can equivalently shorthand this and just say .onclick = count,",
			"and that would work just as well.",
			"So now, what we're saying here is that wait until the DOM has done loaded,",
			"wait until all the content on the page is loaded, and then go ahead",
			"and run this function.",
			"And what the function is going to do is it's",
			"going to add the event handler to this button.",
			"And that will work because now, we'll be able to find the button because now,",
			"all of the content of the DOM has loaded.",
			"So now, if I go back, refresh counter.html,",
			"you'll notice that the JavaScript error goes away.",
			"I don't seem to have that error anymore.",
			"And now if I press count, we're able to see the count",
			"increment just as before as well.",
			"And so this then is an improvement upon what",
			"I've had before, where now I'm able to separate out my JavaScript",
			"code from all of the rest of my code as well.",
			"But much as in the case of CSS, where we were",
			"able to take CSS that was originally located in the head of our page",
			"and move it into a separate file, you can do the same thing with JavaScript",
			"too.",
			"And this can be helpful if you have multiple people working",
			"on different files.",
			"You want one person working on the HTML and someone else",
			"working on the JavaScript.",
			"It can be helpful if you expect that one of these things",
			"is going to change more frequently than the others,",
			"so you might not need to load the other one as often.",
			"So there can be value in separating our HTML code from our JavaScript even more",
			"by moving our JavaScript into a separate file.",
			"And so in order to do that, I can create a new file",
			"that I'll just call counter.js, which will contain all of the JavaScript",
			"for my counter.html file.",
			"So in order to do that, what I can say is let's go ahead",
			"and copy all of this JavaScript code.",
			"Go ahead and cut it out of this page, and I'll paste it into counter.js.",
			"Remove some of that indentation.",
			"So now, I have a file called counter.js that",
			"just contains all of the JavaScript I want to run on my counter.html page.",
			"And now rather than include actual JavaScript in between these script",
			"tags, what I can say is script src-- src for source--",
			"=counter.js, for example, to say go ahead and reference counter.js and use",
			"that JavaScript in the head of the page here.",
			"And that then is going to work exactly the same way.",
			"I still am able to count as high as I'd like.",
			"I still get an alert every time the count reaches a multiple of 10,",
			"but my HTML is now a little bit simpler.",
			"It's just the body.",
			"It's just the h1 and the button, and then all of my JavaScript",
			"is now located in a separate file that allows",
			"me to keep my HTML code and my JavaScript code separate",
			"from each other.",
			"And that can be valuable for a couple of reasons, among them",
			"if I have common JavaScript code that's in use by multiple different HTML",
			"pages, multiple HTML pages can all include the same JavaScript source",
			"rather than needing to repeat myself.",
			"If you use the same JavaScript across multiple different pages,",
			"I can just use the same JavaScript across all of them.",
			"And that'll be helpful too as we begin to take a look later",
			"at some JavaScript libraries, which are JavaScript written by other people.",
			"We can just include other people's JavaScript in our own web pages",
			"just by adding a script tag at the top of our page",
			"that specifies a particular source.",
			"You may already interacted with Bootstrap.",
			"That has its own JavaScript code.",
			"And you can include Bootstrap's JavaScript",
			"just by including a script tag at the top of our HTML page",
			"in order to say go ahead and include all of that JavaScript in our page as well.",
			"So what else can we do now, now that we have the ability",
			"to get at elements of the DOM and actually manipulate their contents?",
			"Well, one thing we can do is begin to make our pages a little bit more",
			"interactive, actually respond to what users are doing on the page,",
			"whether the user is typing something in or maybe filling out a form,",
			"for example.",
			"So let's go ahead and try an example of that,",
			"where the user might be filling out a form",
			"and we would like for our code to somehow respond",
			"to what it is that they type.",
			"I'll go ahead and go back into hello.html.",
			"And now inside of the body of the page, I've said hello at the top.",
			"And here instead of a button, I'm going to have a form.",
			"This HTML form will look like the HTML forms we've seen before.",
			"I have an input field that I'll add the autofocus attribute",
			"to to mean, like, automatically focus this input field when",
			"I open the page because I might want the user to start typing right away.",
			"I'm going to give this input field an id of name, for example,",
			"and then a placeholder of Name-- capital N--",
			"whose type is text.",
			"So what have I done here?",
			"I've created an input field where the user can type in some text.",
			"The placeholder-- the thing the user sees filled into that input field",
			"originally-- will just be capital N Name,",
			"telling them they should type their name in here.",
			"And I've given this input field an id-- some unique identifier,",
			"such that I later on, can reference and find this particular input field.",
			"And then I have input type=submit--",
			"some way for me to now submit this form as well.",
			"And so if I load this page, load hello.html, here's what I see--",
			"hello, a field where I can type in my name, the placeholder name",
			"shows up there for me, and then a button where I can submit this form.",
			"And now, what I'd like to do inside of my JavaScript",
			"is instead of this hello function, what I'm going to do",
			"is I'm going to first run some JavaScript when",
			"the DOM is done loading.",
			"And so I'll use that same line from before.",
			"You're going to see it quite a bit, where",
			"we're going to say document.addEventListener",
			"DOMContentLoaded, and then this function to mean go ahead",
			"and run this code when the DOM is done loaded.",
			"And the code I'd like to run is to say when I submit the form,",
			"I want something to happen.",
			"When I submit the form, maybe I want to display an alert",
			"that if I typed in Brian, it'll say, hello, Brian or if I typed in David,",
			"it'll say, hello, David, for example.",
			"So how might I do that?",
			"Well, how do I get the form?",
			"That's the first question.",
			"Anytime you want to get at an element--",
			"one particular element-- on an HTML page, usually what we're going to do",
			"is document.querySelector to say get me the element that is a form.",
			"And there's only one form on the page, so I",
			"don't have to worry about ambiguity.",
			"I'm just saying get me that form.",
			"And then I can say .onsubmit.",
			"When you submit the form, what code should run?",
			"And if I had a name of a function, like a function f,",
			"I could just say like, run function f when the form is submitted.",
			"But alternatively, just as before, instead",
			"of providing the name of a function, I can also just",
			"provide the function itself.",
			"I can say function, and then in between these curly braces,",
			"I can specify exactly what code should run",
			"when the form is submitted by providing this anonymous function instead,",
			"using this anonymous function as the value of the onsubmit property",
			"of this form.",
			"And so now, what I'd like to do is somehow",
			"get access to whatever the user typed into the input field,",
			"whatever the user's name happens to be.",
			"And so I could get the input field via document.querySelector input.",
			"And that would work this time, but we'll want",
			"to start to be a little bit careful because on this page,",
			"there are multiple different input elements.",
			"There's an input element here for typing in the name and a second input element",
			"here for telling me you're giving me a button where",
			"I can submit this particular HTML form.",
			"And so what I probably want to do is be a little bit more specific.",
			"And it turns out that inside of querySelector,",
			"I can use all of the standard ways in CSS",
			"that we could select for a particular element.",
			"So in CSS, if you'll recall, we had the ability",
			"to run CSS and just say style all the h1's or we could say style",
			"all the things with this particular ID or with this particular class.",
			"And document.querySelector works the same way,",
			"that I can say document.querySelector and pass in a tag to say like,",
			"get me the h1 element, or get me the button, or get me the form.",
			"But if there are multiple h1 elements or multiple buttons and multiple forms,",
			"I can be more specific than that if, for example, an element has an ID.",
			"In which case, I can say document.querySelector, and then",
			"in quotation marks, the hash mark, and then the name of the ID",
			"to say get me the element with that particular ID,",
			"again using the exact same syntax that CSS",
			"uses if I want to apply a particular set of styles",
			"to only one element that only has one ID.",
			"Likewise too, I can say document.querySelector, and then",
			"use dot followed by the name of a class if there's",
			"a particular class of elements and I want to just get one of those",
			"to say get me an element that has this particular class in order",
			"to manipulate it as well.",
			"So the same types of syntax that we could",
			"use in CSS for trying to reference and get at a particular HTML element,",
			"we can do the same thing here with document.querySelector",
			"to go ahead and try and get a particular element based on its tag name,",
			"based on its ID, or based on its class.",
			"And it was for that reason that inside of the HTML page for my input,",
			"I gave the input an ID of name.",
			"I wanted some way to be able to uniquely reference it.",
			"And I can uniquely reference it not by input,",
			"but by #name, where I can say get me the element that has an ID of name.",
			"And that is the element that I would like to extract inside",
			"of my JavaScript code.",
			"Once I have that HTML element, what I want",
			"is, like, what the user actually typed into that input field.",
			"And it turns out that if you have an input field in HTML,",
			"I can get access to what the user typed in by accessing its value property.",
			"Value is a property that refers to what it is the user actually typed in.",
			"So I can say .value.",
			"And I'm going to go ahead and save that inside of a variable.",
			"So I could say something like let name = whatever the user typed in.",
			"But if I'm not going to reassign name to something",
			"else inside of this function--",
			"I'm really going to get the name once and I'm not going to change it inside",
			"of the function--",
			"so I can use a const variable instead.",
			"And that would be better design to say I have",
			"a constant variable called name, which is equal to document.querySelector.",
			"Get me the element whose ID is name and get access to its value.",
			"And now, I can display an alert.",
			"I can alert something like in backticks, hello, comma.",
			"And then using the dollar sign, curly brace syntax,",
			"I can say plug-in the name there followed by an exclamation point.",
			"So I've extracted the name from the form.",
			"Get me the input field where they typed the name, get access to its value,",
			"and then I'm displaying an alert that is going to say hello to that person,",
			"for example.",
			"And so now, if I refresh the page, I type in my name, I press Submit,",
			"I get an alert that says hello, Brian.",
			"I press OK.",
			"I can try it again.",
			"I can type in something like David, press Submit, and now the page",
			"says hello, David.",
			"So here again, we've been able to combine event listeners, and functions,",
			"and querySelector to be able to both read information from the page in order",
			"to say get me this particular HTML element, find me an HTML element,",
			"and access what the user typed into it-- the .value property that gets me what",
			"the user typed into an input field.",
			"And we've been able to combine that with event listeners and alerts",
			"that are able to actually respond dynamically",
			"to when a user submits the form or when the entire content of the page",
			"is done loading in order to produce some interesting effects as well.",
			"But it turns out we can do more than just",
			"change, like, the HTML that is contained within an element.",
			"We can also change CSS as well-- change the style properties",
			"of a particular element as well.",
			"So let's go ahead and see an example of that.",
			"Go ahead and create a new file that I'll call colors.html.",
			"And inside of colors, I'll include the same standard HTML boilerplate code",
			"that we often start with-- a head section",
			"with a title and a body section.",
			"And inside of the body of this page, I'm going",
			"to display a heading that just says hello, for example.",
			"And maybe I'll give it an ID just so I can reference it by name.",
			"Maybe it has an ID of hello.",
			"And then I'll have three buttons.",
			"I'll have a button called red, a button called blue,",
			"and then a button called green, for example,",
			"where now if I open up colors.html, here's what I see.",
			"I see a big heading that says hello, and then I see three buttons--",
			"Red, Blue, and Green.",
			"But of course right now, these buttons don't actually do anything.",
			"How do I get the buttons to do something?",
			"Well, that's where JavaScript is going to come in.",
			"I'll add a script tag to the top of my page.",
			"And I only want to run this JavaScript when the DOM is done loading.",
			"So again, we'll use the same syntax as before.",
			"document.addEventListener DOMContentLoaded, and then run",
			"this function to say everything in between these curly braces,",
			"this is all the code that should run once the page is done loading.",
			"And what I'd really like to do is get at these three buttons",
			"and say when you click on each one of them, do something different,",
			"like change the color of a particular HTML element.",
			"And in order to do that, I need some way of uniquely referencing these buttons.",
			"So to do that, I'm going to give them all IDs.",
			"This button will have an ID of red.",
			"This button will have an ID of blue.",
			"This button will have an ID of green.",
			"Just unique names I can give to the buttons in HTML,",
			"such that in JavaScript, I'm later able to reference them.",
			"So what do I include now here inside of my JavaScript code?",
			"Well, let me say document.querySelector #red to say",
			"get me the element whose ID is red.",
			"And when you're clicked on-- onclick--",
			"go ahead and run this function.",
			"What should the function do?",
			"Well, I want to take this h1 element and change its color to red.",
			"I want to change the font color to red.",
			"And I'll leave a comment to myself.",
			"In JavaScript, the way you can leave a comment just",
			"to document what you're doing is using these two slashes.",
			"The two slashes indicate everything after that on the page",
			"is going to be a comment.",
			"The browser will ignore it, but it can be useful to you, the programmer,",
			"and to someone who's reading your code to be",
			"able to see what it is that you're describing here on the page.",
			"And now, what I'd like to do is document.querySelector #hello.",
			"Get me the HTML element whose ID is hello",
			"and go ahead and modify its style property.",
			"And now inside of this style object, I can",
			"modify any of the CSS style properties.",
			"One of them, for example, is something like color.",
			"So I can update the color property and set it equal to red.",
			"So here now, I'm saying when you click on the red button,",
			"go ahead and run this function.",
			"And what the function should do is find the hello element, update its style.",
			"What part of the style?",
			"Update its color.",
			"What should we update it to?",
			"We should update it to red.",
			"And I'm going to do the same thing for the other two buttons as well.",
			"And it's pretty similar code, so I'm just going to Copy-Paste.",
			"Copy-Paste here.",
			"I'm going to have one for changing the color to blue.",
			"When I click the Blue button, it should change the color to blue.",
			"And then we'll do it one more time, change the font color to green.",
			"When you click on the Green button, you should change the color to green.",
			"So now when I refresh the colors.html, right now, hello by default",
			"is just in black-- standard font color for HTML.",
			"I click Red, hello changes to red.",
			"I click Blue, it changes to blue.",
			"I click Green, it changes to green.",
			"So depending on what button I click, that",
			"triggers some event listener that's going to then say when the button is",
			"clicked, run this function.",
			"And what the function does is it grabs this h1 element--",
			"the element whose ID is hello--",
			"modifies it style, updates its color property to be something like red,",
			"or blue, or green.",
			"And thus showing that we can modify style in addition",
			"to just modifying the content of the page itself.",
			"But it turns out that as you looked at me writing that code,",
			"something should've struck you as probably not optimal design--",
			"that in general, anytime you find yourself writing the same code",
			"again and again and again, especially if you're copy-pasting,",
			"that that is a generally bad sign-- usually a sign that there",
			"is some better way of trying to modify, of trying to implement",
			"the behavior that I'm trying to create.",
			"And it turns out that there is.",
			"And there are a number of ways that you could do this.",
			"One way here is that I might like to consolidate these three event",
			"listeners into just, like, a single function that",
			"is going to handle changing the color to whatever the button says the color",
			"should be changed to.",
			"But one problem here is that if I just attach the same event",
			"listener to all three of the buttons, it's not going to be clear to me",
			"when I click on the button, how does the button",
			"know what color we should change the text to.",
			"And so to that effect, we can add some additional special attributes",
			"to a particular HTML element that are called data attributes,",
			"where a data attribute is my way of saying that I would like to associate",
			"some data with this particular HTML element, where here,",
			"I can say data-color=\"red\", data-color=\"blue\", data-color=\"green\".",
			"Data attributes always start with data followed by a dash,",
			"and then I can specify really any name that I want for some information",
			"that I would like to store about the HTML element.",
			"And here, the information I want to store",
			"is I want to store data about what color you should change the text to when",
			"the button is clicked on.",
			"And so what we're going to have the ability to do now is the ability to say",
			"that if I have access to this element-- this button--",
			"I can access its data-color property to know",
			"whether we should change the text to red, or blue,",
			"or green by adding these data attributes to these HTML elements.",
			"And so now, what I want is some way of getting all of these buttons.",
			"Now document.querySelector, as you recall, just gets one element.",
			"It's just going to get for me a single element",
			"and it's going to get the first one that it finds.",
			"If I want to get multiple elements, what I can do instead",
			"is something like document.querySelectorAll.",
			"querySelectorAll is going to return the same thing that querySelector does,",
			"but instead of querySelector returning a single element that",
			"matches what it looks for, querySelectorAll",
			"is going to return to me an array of all of the elements",
			"that matched my particular query.",
			"So if I wanted to select not just the first button I find,",
			"but all of the buttons I find, I can here say querySelectorAll for button.",
			"And that will give me back a JavaScript array, the equivalent of a list,",
			"that represents all of those buttons.",
			"And we can actually test what this looks like by looking at things",
			"inside of the JavaScript console.",
			"If I go ahead and refresh this page colors, I can open up the inspector,",
			"go into the JavaScript console, and just as you could see error messages here,",
			"you can also actually write JavaScript code here as well.",
			"So I can say something like document.querySelector button",
			"to say, all right, what's going to happen when I try and select",
			"for a button on this particular page?",
			"And what I get is, all right, I get just this very first button--",
			"button who's data-color is equal to red.",
			"That's what I would expect. querySelector just finds me one element",
			"and it's going to find me the very first element.",
			"And likewise, I can say, all right, instead of querySelector,",
			"let's do querySelectorAll.",
			"And what I get back is a NodeList, which you",
			"can think of as kind of like an array or a list",
			"in Python, that's got three buttons in it-- button 0, 1, and 2.",
			"And just as with a list in Python as you can index into things,",
			"arrays in JavaScript can be indexed into as well.",
			"If I have something like const names = Harry, Ron, and Hermione--",
			"like an array of three names--",
			"I can say names square bracket 0 to get the first name, names square bracket 1",
			"to get the second one, names square bracket 2",
			"to get the third one, for example.",
			"And that gives me each of the individual elements in the array.",
			"If I want to get the whole length of the array,",
			"I can do names.length to get, all right, the length of the names array",
			"happens to be three.",
			"So just some additional features that we have",
			"access to if you happen to have an array of things.",
			"It turns out querySelectorAll returns to me a NodeList,",
			"which is kind of like an array.",
			"And that's going to be useful because when",
			"I say document.querySelectorAll button, I am saying",
			"get me all of the buttons on the page.",
			"And now, what I would like to do is effectively",
			"loop over all of those buttons and say for each of the buttons",
			"inside of this list that comes back to me,",
			"I would like to add an event handler for when that button is clicked on",
			"to say for each of the buttons that comes back,",
			"go ahead and say when you're clicked on, change the color of the h1 element.",
			"And so there are a number of ways, again, that you could do this,",
			"but one way is to use a particular property called forEach.",
			"And forEach is a function that accepts as an argument, another function, where",
			"the idea is going to be I would like to run",
			"a function for each of the elements inside of an array",
			"or inside of a NodeList, for example.",
			"So here, I can say forEach button, go ahead and run this function.",
			"This is going to be a function now that takes something as input.",
			"It's going to take one of the elements in the list",
			"as input, something like a button.",
			"And now for each button, what would I like to do for that button?",
			"Well, when the button is clicked on, button.onclick, then",
			"go ahead and run a function that is going to document.querySelector.",
			"Get me the element whose ID is #hello.",
			"Change its style.",
			"Within the style, change its color.",
			"And what do I want to change its color to?",
			"Well, I have access to this button.",
			"This argument to the function is whichever",
			"button I'm currently trying to add an event listener for.",
			"And in order to access its data properties,",
			"I can access a special property of an HTML element called it's dataset",
			"property.",
			"And then I can say something like button.dataset.color",
			"to get at the data-color attribute.",
			"So a lot of stuff going on here.",
			"Let's go ahead and try and read through this entire thing",
			"and just get a feel for what's happening because we",
			"have functions nested within other functions nested",
			"within other functions.",
			"Up at the very top, I've said add an event listener to the document.",
			"When the document's DOM content is loaded,",
			"meaning all of the content of the page is done loading,",
			"go ahead and run this function.",
			"This is the body of the function.",
			"So what do I want to do?",
			"When the page is done loading, I'm going to document.querySelectorAll,",
			"looking for all of the buttons.",
			"And if I wanted to if there could be more buttons,",
			"I could have added a class to these buttons",
			"and just looked for things of the particular class.",
			"querySelectorAll just returns all of the elements that match a particular query.",
			"And then I'm saying forEach of those buttons--",
			"for each of the buttons that came back--",
			"I would like to run a function on each of those buttons.",
			"I'm basically saying if I have three buttons that came back,",
			"let me run a function on the first button,",
			"then the same function on the second button,",
			"then the same function on the third button.",
			"And what is that function?",
			"Well, it's this function here--",
			"a function that takes as input, the button.",
			"It's first going to pass in as input the first button, then",
			"the second button, then the third.",
			"And what this function does is it adds an onclick handler to the button.",
			"It says when the button is clicked on, go ahead and run this other function.",
			"And this function now is the function that",
			"will run when the button is clicked on to say when the button is clicked on,",
			"get me the #hello element, change its color to button.dataset.color.",
			"And button.dataset.color takes a button--",
			"takes an HTML element like this one here--",
			"and accesses its data-set, all of its data properties,",
			"and specifically accesses the color data property, which in this case",
			"is equal to red.",
			"And that is what we would like to set color equal to.",
			"So a little bit more complex than we've seen before,",
			"but now we've been able to reduce what was three different event",
			"handlers into just a single one.",
			"And now, this is going to work the same way.",
			"Change it to red, blue, and green, all by just using those data properties",
			"that we have access to.",
			"And so when in doubt about how these things are working,",
			"about what querySelector is returning, the JavaScript console",
			"can be a very powerful tool for that.",
			"So you can go into the JavaScript console and actually manipulate things.",
			"You can run queries.",
			"You can run functions.",
			"You can even modify the values of variables.",
			"Like if I go back, for instance, to counter.html,",
			"where I had this counter that's counting 0, 1, 2, 3, 4,",
			"if I wanted to, I could say something like counter = 27--",
			"just, like, change the value of the counter.",
			"Nothing appears to have changed on the page.",
			"I didn't say update anything on the page.",
			"But now next time I run count, it's going to update the value of the count",
			"to 28.",
			"Because I had updated the value inside of the JavaScript console,",
			"it's going to increment that value, display",
			"that value inside of the h1 element.",
			"So you can modify variables.",
			"You can run functions.",
			"You can run document.querySelector to figure out",
			"what particular elements are going to come back all",
			"through the use of the JavaScript console, which can be a very, very",
			"powerful tool, especially as you begin working",
			"on trying to debug these programs and trying to figure out",
			"what might be wrong with them.",
			"It turns out too that there are other changes",
			"that we can make in order to optimize our code a little bit more, in order",
			"to make it a little bit more succinct.",
			"And one way is that in more recent versions of JavaScript,",
			"they've introduced a particular notation for functions called",
			"the arrow notation for functions.",
			"And I'll just show it to you because it'll come up.",
			"But oftentimes instead of using the keyword function before introducing",
			"a function, you'll just have something like button, and then arrow,",
			"then curly braces.",
			"And strictly speaking, you don't even need the parentheses",
			"around the input, where button arrow, and then in these curly braces,",
			"some code just means here is going to be a function that takes as input,",
			"a variable called button, and then runs this particular block of code",
			"when that function is run.",
			"And likewise if a function takes no input, like this function up here,",
			"you can express it using arrow notation with just parentheses, arrow, block.",
			"And so this is often a notation that you'll see in JavaScript.",
			"So if you ever see it, know that that's really",
			"just shorthand for creating a function.",
			"Whatever it is to the left of the arrow sign is the input to the function",
			"and whatever it is to the right of the arrow",
			"is what code should actually run when the function body gets executed, when",
			"the function is called upon.",
			"So what other changes might we want to make to colors.html?",
			"Well, if we look back at colors.html, here's what it looks like now.",
			"We've got a heading that says hello, and then buttons to change the color",
			"to red or blue or green, for example.",
			"We might instead if we want the user to choose",
			"from one from a number of options, decide upon the user interface",
			"choice of using a dropdown instead of a bunch of buttons, for example.",
			"And JavaScript supports that as well.",
			"And we'll use this as an opportunity to explore some of the other event",
			"handlers that exist within JavaScript.",
			"So for example, instead of having these all inside of buttons,",
			"I can make my life a little bit easier by making",
			"this a select dropdown, where the select is",
			"going to have an option whose value is, let's say, black is the default option.",
			"We'll just say black.",
			"And then we'll add another option whose value is red, and then we say red.",
			"And the value is what we'll get in JavaScript when we try",
			"and extract the value of a particular select dropdown.",
			"What's in between the option tags themselves",
			"is what the user is going to see on the page when they actually view it,",
			"so I'm capitalizing it just for them.",
			"Option value=\"blue\".",
			"That'll be Blue.",
			"And then option value=\"green\", and that'll be Green.",
			"So now what the user sees is they see hello,",
			"and then a dropdown menu where they can choose from a list of colors",
			"rather than click buttons in order to do so.",
			"And now of course, this select dropdown doesn't do anything at the moment,",
			"but I can modify it so that it does.",
			"So now instead of selecting for all of the buttons",
			"and doing something with all the buttons,",
			"we don't have any buttons anymore.",
			"What I do have is I have a select dropdown.",
			"And now just as we've seen like onclick to say",
			"when you click on something, as we've seen DOMContentLoaded as an event,",
			"there's another event called onchange, which",
			"applies to things like select dropdowns, where",
			"when something changes in the select dropdown, when a user chooses something",
			"different, I can run some code, for example.",
			"So I can run a function that in this case,",
			"is going to take document.querySelector #hello,",
			"meaning get me the hello HTML element, change its style.",
			"What part of the style?",
			"Change its color.",
			"And I want to change it to something.",
			"I want to change it to the value of this select dropdown.",
			"But how do I get access to this particular select dropdown?",
			"Well, in JavaScript, we have access to a special value called this.",
			"And this has special meaning in JavaScript",
			"and its meaning varies based on context.",
			"But in the context of an event handler, a function that",
			"is called when a particular event happens,",
			"this is going to be a special keyword that always refers",
			"to the thing that received the event.",
			"So what received the event?",
			"It was the select dropdown.",
			"That is what received the event of being changed,",
			"and so this is going to be a special keyword that always refers",
			"to that-- that always refers to the dropdown menu",
			"where I made a different selection.",
			"So if I wanted to get the value of that dropdown menu, what",
			"it is the user actually selected, I can just",
			"say this.value to mean get that dropdown menu and get at the value-- the thing",
			"that the user selected in that menu.",
			"And now much more succinctly than before,",
			"I've been able to implement the same kind of idea.",
			"It says hello right now in black, but if I choose from the dropdown menu",
			"to change its color to something like red for example,",
			"the color changes to red.",
			"If I instead choose blue, it changes to blue.",
			"Green changes to green.",
			"I choose black, it changes back to black.",
			"So now, I have this ability to detect these other types of events",
			"and respond to them as well.",
			"And there are many, many different events that exist in JavaScript.",
			"There's onclick, which we've seen already.",
			"Onmouseover can detect like when you mouse over something, when you're",
			"hovering over a particular element.",
			"If you've ever seen websites that somehow",
			"respond when your mouse moves over something,",
			"that can be how it's implemented.",
			"Onkeydown and onkeyup can respond to keyboard events,",
			"something like when you press a key on the keyboard.",
			"When you press down on the key, that's onkeydown,",
			"and when you lift your finger off the key, that's onkeyup.",
			"And there are other events as well, many more events",
			"than are just listed here that you can listen for and respond to,",
			"so that you can really interact with the user",
			"based on what it is that they're doing.",
			"So now, let's take a look at an example of how we can use some of these events",
			"to now begin to create a little bit of a more interesting application.",
			"We'll go ahead and build a to-do list application,",
			"this time using exclusively JavaScript.",
			"We've seen to-do lists before that involved communicating with a server,",
			"making requests and responses.",
			"We'll now build a to-do list that only uses JavaScript to do so.",
			"So I'll create a new file called tasks.html.",
			"",
			"And we'll create a head section whose title is tasks and a body section.",
			"And inside the body of the page, I'll go ahead",
			"and have a heading that says tasks.",
			"And underneath that, I want an unordered list of all of my tasks.",
			"So I'll have an unordered list.",
			"I'll give it an ID of tasks just for good measure,",
			"so I can reference it later.",
			"But initially, nothing is going to be in here.",
			"But what I'll have underneath the unordered list is a form--",
			"a form where I can submit a new task, for example.",
			"So I'll give myself an input field, also give it an ID.",
			"The ID will be task singular for the new task that I am typing in.",
			"The placeholder will be New Task, just so the user knows what to type in.",
			"And the type of the input field will be text.",
			"So I have an input field where the user can type in some new task.",
			"And I'll also add an input field for good measure",
			"whose type is submit that allows the user to submit a new task once they've",
			"created it.",
			"So if I open up tasks.html, here's then what I see.",
			"Big heading-- there is technically an unordered list underneath it here,",
			"but there is nothing in that unordered list yet, so it just shows up as empty.",
			"Then a text field where I can type in a task,",
			"and then a Submit button where I can submit my new task.",
			"So now, I'd like some JavaScript, such that when I submit this form,",
			"we actually do something.",
			"So I'll add a script tag.",
			"I want this JavaScript to run after the DOM content is loaded,",
			"so we'll go ahead and add the usual DOMContentLoaded event listener.",
			"And now, I want to run code when the form is submitted.",
			"So I can say document.querySelector form .onsubmit =,",
			"and then I want to run a function.",
			"And I could use the keyword function again,",
			"but I can just use an arrow function, which",
			"will be a little bit faster to type.",
			"Just say, all right, here's the function that I",
			"want to run when the form is submitted.",
			"And what would I like to do?",
			"Well, I'd first like to figure out, all right,",
			"what did the user actually type in?",
			"And what the user typed in, well, that'll be document.querySelector #task",
			".value.",
			"Get me the element with ID #task.",
			"That's the input field.",
			".value gets the value of the input field,",
			"which is what the user actually typed in.",
			"And I can save that as, like, const task.",
			"That is what it is the user typed in.",
			"And if I'm curious as to what the user typed in,",
			"I can actually print it out to the JavaScript console.",
			"And the way to do that is using a special function called console.log.",
			"And that just logs something to the console--",
			"the equivalent of printing something out in Python,",
			"where it just shows up in the Python terminal.",
			"Here, this is going to show up in the JavaScript console.",
			"And one other thing I'll add is by default,",
			"forms will try and submit when you press the Submit button,",
			"like take you to another page.",
			"We've seen this before already in the context of Django",
			"that when you submit a form it tries and submits another web request.",
			"If I want to prevent that behavior, stop the form from submitting,",
			"so stop form from submitting, I can return",
			"false at the end of my forum submission handler",
			"to say don't actually submit the form.",
			"We're going to do everything client side, everything",
			"just inside of the browser.",
			"So now, this won't quite work yet, but it will be progress.",
			"I refresh the page.",
			"I'm going to open up the JavaScript console so I can see what's going on.",
			"If I add a task, something just like foo, press Submit,",
			"this now gets logged to the JavaScript console.",
			"It's the equivalent of a way of providing",
			"debugging information to myself to know, all right,",
			"I now have access to this value foo.",
			"And it's also telling me what line of code logged it.",
			"It was tasks.html line 9 is the line of code that logged foo.",
			"And so this can be useful when you're debugging a program.",
			"When you want to see what the values of variables are,",
			"you can just print them out using console.log",
			"to figure out what's going on in your program",
			"at any particular point in time.",
			"But what I want to do is not console.log it.",
			"What I want to do is really create a new element",
			"that I'm going to add into my body of the HTML.",
			"So how can I do that?",
			"Well, to create a new element for my document,",
			"I can run a function called document.createElement",
			"followed by what type of element do I want to create.",
			"Well, I have an unordered list-- a ul--",
			"and every item inside of an unordered list is a list item-- an li.",
			"So I'll go ahead and create an li element, a list item.",
			"And I'll save that in a variable that I'll call li.",
			"So I've created a new list item.",
			"And this list item's innerHTML--",
			"the HTML content inside of that list item--",
			"well, that's just going to be task--",
			"this variable from up here, which is whatever the user typed in.",
			"So I've now created a new list item and said what",
			"HTML should go inside of the list item.",
			"It should be whatever task the user typed in.",
			"And now, I'm going to say document.querySelector #tasks.",
			"Get me the element whose ID is tasks, and that's",
			"going to be this unordered list here-- the unordered list whose ID is tasks.",
			"And if I have an HTML element, I can add a new element inside of it by saying",
			".append li.",
			"And what that now is going to do is it's going",
			"to say get me the unordered list whose ID is tasks.",
			"Get me the element whose ID is tasks via querySelector here.",
			"Once I have that element, append to the end",
			"of what's inside of that element, this value",
			"li, which happens to be this new element that I've created-- a new list item.",
			"So I've been able to add a new HTML element.",
			"And this line of code is going to say add it",
			"to the DOM-- add it to the unordered list that I'm here now constructing.",
			"So now, I rerun this.",
			"I see tasks.",
			"I type in something like foo.",
			"I press Submit.",
			"And all right, foo now shows up.",
			"I type in something like-- or I delete that, type in bar, bar now shows up.",
			"I type in baz.",
			"Baz now shows up.",
			"Now, one minor user interface annoyance is",
			"that it seems that every time I submit a new task,",
			"this input field retains the value of what it used to be.",
			"And that's probably not what I want because I'd rather it just clear out.",
			"I've already submitted the task.",
			"No need for it to stay there.",
			"But that's easy to manipulate in JavaScript.",
			"If I want to clear out this input field--",
			"the input field whose ID is task--",
			"then all I need to do is say document.querySelector task--",
			"get me that input field--",
			"change its value equal to the empty string--",
			"equal to nothing just to say clear out the value",
			"of what happens to be inside of that input field right now.",
			"And now if I refresh the page, type in foo, press Submit,",
			"input field clears out and now I can type in something like bar,",
			"and then something like baz to continue to add tasks as well.",
			"Now, one thing that might be slightly annoying is if I'm not careful,",
			"if I press Submit, well, it submits the empty string as a task,",
			"and so I just get this empty bullet point that shows up here.",
			"I press Submit, and I just get all of these empty bullet points.",
			"It might be nice from a user experience perspective",
			"if I were to not allow the user to do that,",
			"not allow them to submit a task if they haven't actually typed something",
			"in to the new task field.",
			"And we can do that just by modifying properties of elements.",
			"It turns out that HTML elements have a property called disabled",
			"that can be true or false that allows us to disable something like a button.",
			"So if I want to disable the Submit button,",
			"one thing I might want to do first is give this Submit button an ID.",
			"I'll give it an ID of submit, so that in my JavaScript code,",
			"I can reference the Submit button.",
			"And now inside of this JavaScript code, when the DOM content is loaded,",
			"by default, the Submit button should be disabled.",
			"Like when I first load the page, I don't want the Submit button",
			"to be enabled because I want the user to type in a task",
			"first before I enable the Submit button.",
			"So how do I do that?",
			"Well, I can document.querySelector get me the element whose ID is submit.",
			"Get me that Submit button, and just set its disabled property equal to true.",
			"JavaScript has Boolean values true and false.",
			"I set the disabled value equal to true to disable the Submit button.",
			"Now if I refresh the page, I can type in a new task,",
			"but the Submit button is disabled.",
			"It doesn't do anything.",
			"Obviously, I don't want to keep it that way.",
			"I'd like it such that as I begin to type things in,",
			"then the Submit button stops being disabled.",
			"Disabled gets set from true to false instead.",
			"And so what I really want to do is listen for me,",
			"like, pressing keys on the keyboard.",
			"And so the way I can do that is by adding yet another event listener.",
			"document.querySelector-- what do I want to add a querySelector to?",
			"What I want to add an event handler for?",
			"Well, I want to add an event handler for when",
			"I type something into this input field.",
			"And this input field has an ID of task.",
			"So let me go ahead and get the input field-- the element whose ID is task--",
			"and add an onkeyup handler.",
			"onkeyup, again, is the event when I lift my finger off of a key,",
			"go ahead and run this function.",
			"And what should the function do?",
			"Well, it's going to say document.querySelector #submit, set",
			"the disabled property equal to false.",
			"And so now, here's what we're doing.",
			"We're saying by default when I first load the page, take the Submit button",
			"and disable it.",
			"Set .disabled equal to true.",
			"Then anytime I type a key and my finger comes off",
			"the key, that means onkeyup is the event that gets triggered, run this function.",
			"And what the function is going to do is take that same Submit button",
			"and set its disabled property equal to false.",
			"So now instead of being disabled, it will be enabled.",
			"",
			"So if I go back to the page, and go here, right now by default,",
			"the Submit button is disabled, but as soon as I start typing something,",
			"now the Submit button is active and I can actually click on it.",
			"And all right, this isn't great because I clicked on it,",
			"but the Submit button is still enabled.",
			"So what I might like to do is after I've submitted",
			"the form, after I've added a new task, let's",
			"go back and disable the Submit button.",
			"So after I've submitted the form, after we've",
			"added the new task to my list of tasks, after we've cleared out",
			"the value from the input field, let me also get the Submit button,",
			"set its disabled property equal to true.",
			"Now even after I submit the form, the Submit button",
			"is still going to be disabled, such that I type in foo, now submit is active.",
			"I press it.",
			"The Submit button goes back to being inactive as well.",
			"It turns out that even now, there's still a little bit of a bug.",
			"If I go back here and I type in something like bar,",
			"but then I backspace back to, like, nothing here,",
			"the Submit button is still active.",
			"So I can still technically submit a task that has no content inside of it.",
			"And so I might like to have some way of preventing against that as well.",
			"And that's just some additional logic.",
			"We now have access to JavaScript that has conditions,",
			"that has loops, that has functions.",
			"And so if I want to do something like conditionally check,",
			"I can say if document.querySelector #task .value.length is greater than 0,",
			"meaning like something is actually typed in to the task field,",
			"we'll then go ahead and set disabled to false, but otherwise,",
			"go ahead and set disabled equal to true.",
			"So now here, we're checking.",
			"If the length of what the user has typed in is greater than 0,",
			"they actually typed something in, then yes,",
			"give them access to the Submit button, but otherwise,",
			"don't give them access to that button.",
			"So now, I refresh the page.",
			"Disabled by default. I type something in.",
			"It's enabled.",
			"I delete, delete, delete, and it goes back to being disabled.",
			"So JavaScript has allowed us to really make",
			"our pages much more interactive and immediately interactive",
			"based on how the user is interacting with the page.",
			"As they begin to type things, as they begin to delete things,",
			"as they press buttons, we're able to have the page respond either",
			"by adding content to the DOM by literally adding parts to the HTML",
			"page, changing the styles of things, changing",
			"particular properties of elements.",
			"And this is really where the power of JavaScript",
			"begins to come in is in allowing ourselves to do things like that.",
			"Now so far, we've only been able to have events",
			"happen when the user does something-- when the user clicks on a button",
			"or when the user presses a key, for example.",
			"But it turns out JavaScript has other ways of allowing functions",
			"to run in fact on their own.",
			"We can set what are called intervals, where",
			"a particular function runs every some number of milliseconds, for example.",
			"And so if we go back to like the counter example from before, right now",
			"for this counter example, I have to be the one",
			"to press the count button that is going to increment the value of count",
			"every single time, but I could put that inside of an interval instead.",
			"So let me go back to counter.html, whose JavaScript is inside of counter.js.",
			"And now, what I'd like to say is I would like when the DOM content is loaded,",
			"let me set an interval for count and 1,000.",
			"So what is that going to do?",
			"setInterval is a function built into JavaScript here,",
			"where I'm saying that I would like to create a new interval where every so",
			"often, go ahead and run a particular function.",
			"And I would like to run the count function.",
			"We'll recall that count function is going to increment the value of count.",
			"And I'll get rid of this alert for now, just for simplicity.",
			"All I want the count function to do is update the h1",
			"with the new value of the counter and go ahead",
			"and run that count function every 1,000 milliseconds, otherwise known",
			"as every 1 second, go ahead and run the count function.",
			"So now when I open counter.html, it's 0, but every second now, it's",
			"going to change-- every second, updating one by one by one.",
			"I don't have to click the button.",
			"Of course, I could and the event handler would still work,",
			"but the interval is saying now every one second,",
			"go ahead and run the count function.",
			"And that has this particular result.",
			"So if you've ever seen a web page that displays the current time in seconds",
			"and it was like a countdown timer or it was displaying the current time",
			"with seconds, it might be doing something like this,",
			"just having some sort of interval that every second is",
			"going to count and increment in order to say",
			"update the number to the one greater, one greater, and one greater than that.",
			"Of course if I close the page and go back to it-- if I close these pages,",
			"and then open counter.html again, I've gone back to 0.",
			"Like, JavaScript is not saving any state about my page.",
			"It's just every time we're running the page,",
			"it's going to go back to counter.js, it's going to say,",
			"all right, we're defining a variable called counter,",
			"we're setting that variable equal to 0.",
			"So every time I load the page, it's going to be set back to 0.",
			"And that might not be great depending on the type of page",
			"you're trying to create.",
			"Maybe you want to page that is somehow able to store information,",
			"such as that on subsequent visits, we're able to utilize the information that",
			"was already stored-- some way of remembering information for later use.",
			"In later versions of JavaScript and more modern browsers",
			"now allow us to do something just like that called localStorage.",
			"And what localStorage is is it's a way for us",
			"to be able to store information inside of the user's web browser--",
			"that a page can ask to store particular values inside the web browser and later",
			"on, on subsequent visits to that page, we",
			"can go back and say let's extract those values that were previously",
			"stored inside of localStorage.",
			"localStorage is going to give us access to two key functions",
			"that we're going to use to manipulate this localStorage.",
			"The first is localStorage.getItem, where we",
			"would like to get something out of localStorage based",
			"on its key-- some name that we have given to that value.",
			"And we also have access to localStorage.setItem,",
			"which goes ahead and adds a new value to localStorage",
			"or replaces an existing value in localStorage,",
			"setting this key equal to a particular value.",
			"So we can use localStorage then to allow our web pages, using JavaScript,",
			"to be able to store information and retrieve information from the browser.",
			"And let's now try to use that in order to solve",
			"this problem of the counter that seems to always reset back to 0.",
			"So now in counter.js, instead of setting counter equal to 0,",
			"the first thing I want to know is is there already",
			"a value for the counter in localStorage?",
			"So I can ask a question like if localStorage.getItem counter, meaning",
			"go to local storage, try and get the counter, and anything in this",
			"if expression will happen if there is something inside of localStorage",
			"for counter.",
			"But it turns out that if I want to do the inverse of that, say not,",
			"I can just use the exclamation point.",
			"Much like in C, in JavaScript, the exclamation point just means not.",
			"So meaning if there is not something in localStorage",
			"called counter, well, then let's go ahead",
			"and just set the value in localStorage. localStorage.setItem counter,",
			"and we'll set it equal to 0.",
			"So what this is doing here is before anything else happens,",
			"we are checking localStorage to say is there already a value for counter.",
			"And if there is not already a value for counter,",
			"we need to make sure there is something there inside of localStorage",
			"for the counter.",
			"So we are going to set the value of counter equal to 0, for example.",
			"And so now, what needs to change, I'll go ahead and get rid of the interval,",
			"so that it only happens when I click on it.",
			"But what should this count function actually do?",
			"Well, first, let me get the value of the counter.",
			"Counter is going to be whatever localStorage.getItem is.",
			"I'm going to get the counter out of localStorage.",
			"I'm going to increment it, counter++.",
			"We'll go ahead and set the value of this h1 element's innerHTML equal to that",
			"counter.",
			"But the last step is I'll also do localStorage.setItem counter is",
			"equal to the new value of counter.",
			"So what I've done here is to say that when I click the button,",
			"count function is going to run.",
			"We're first going to go into localStorage,",
			"get the value for the key counter.",
			"Whatever the value of counter happens to be,",
			"save it inside of this variable called counter.",
			"We'll go ahead and increment that variable,",
			"setting it equal to itself plus 1, update the h1's innerHTML same",
			"as before, just to update what we actually see on the page,",
			"but then go ahead and localStorage.setItem counter",
			"gets set to counter, for example.",
			"So now, let's go ahead and see what's going to happen.",
			"If I go ahead and open counter.html, we see 0.",
			"We count 1, 2, 3, 4, 5.",
			"Everything so far, so good.",
			"Now, watch what happens if I refresh this page.",
			"I refresh the page.",
			"And all right, that seems a little bit strange.",
			"It's 0.",
			"Let me try counting and see what happens.",
			"I press count.",
			"And all right, the count change to 6.",
			"So it seems like it did remember that I counted up to 5--",
			"0, 1, 2, 3, 4, 5.",
			"But when I refreshed the page, it still showed",
			"me 0, but then let me count up to the number 6.",
			"And now, I can keep counting 7, 8, 9, 10.",
			"What happens if I refresh the page now?",
			"I can try it.",
			"I refresh the page.",
			"I've gone back to 0, but I count--",
			"and OK, now, I'm at 11.",
			"So somehow, I am still remembering, but the first time, it's",
			"still giving me 0 every time.",
			"Why might that be?",
			"Well, if you look back at counter.html, you'll",
			"notice that the reason is just inside the body of the page.",
			"The initial value of h1 is just always 0.",
			"So if I want to fix that, then what I need to say",
			"is when the DOM content is loaded, go ahead",
			"and get document.querySelector h1.",
			"Go ahead and update the innerHTML equal to whatever localStorage.getItem",
			"counter happens to be.",
			"So every time I open the page, even before I click the button,",
			"even before the event listener is triggered,",
			"I'd like to say, go ahead and replace this heading,",
			"update its innerHTML to be the result of getting the counter out",
			"of localStorage, for example.",
			"So now if I refresh the page, it's at 11.",
			"I can update, update, update.",
			"Click again some number of times.",
			"Bring it up to 18, for example.",
			"Refresh the page, and it stays at the number 18.",
			"And no matter what value I get it to, it's",
			"going to store that number inside of local storage, such",
			"that when I refresh the page, that number is going to stay there.",
			"And we can actually see the value inside of localStorage",
			"by, again, going into Chrome's inspector.",
			"I go into Chrome.",
			"If I go to the Application tab and I go to Local Storage here on the left,",
			"I can see that I have a value for key counter, whose value in this case",
			"happens to be 28.",
			"And you could go into local storage.",
			"You could manipulate this value.",
			"You could delete it if you want.",
			"But this just goes to show you that we have now",
			"stored this value inside of my browser, such that on subsequent visits",
			"if this page gets loaded again, we can access that value from inside",
			"of the application as well.",
			"And so now, we've been able to see how our pages are able to store data",
			"in order to just make the user experience a little bit better if we",
			"want the user to be able to have information remembered",
			"from the last time they visited a particular page, which can sometimes",
			"actually be quite helpful.",
			"All right, so now, we've seen a lot of features of JavaScript.",
			"We've seen a bunch of different ways of representing data.",
			"We stored data in variables, and those variables have had types like integers.",
			"Those variables have sometimes been strings.",
			"Sometimes, they've been HTML elements.",
			"Sometimes, they've been arrays or lists of items.",
			"Sometimes, they've even been functions.",
			"We can set a variable equal to a function.",
			"But perhaps one of the most useful data types inside of JavaScript",
			"is the JavaScript object.",
			"So I'll go into the JavaScript console just to demonstrate this.",
			"What the JavaScript object is is it's really",
			"the equivalent of, like, a Python dictionary--",
			"some association of keys to values, where",
			"you can look up something by a key or by a property",
			"and see what its value happens to be.",
			"So if I had a variable like person, I could",
			"set person equal to a JavaScript object, whose first name is",
			"Harry and whose last name is Potter, again,",
			"using syntax very similar to what the dictionary syntax looks",
			"like inside of Python as well.",
			"And now that I have this variable person, which is first",
			"Harry, last Potter, I can access a particular property",
			"of the person in a number of ways.",
			"I can say something like person.first to say get me the first named",
			"property of this particular object.",
			"And I see that it's equal to Harry.",
			"I could equivalently use square bracket notation the way Python does.",
			"Square bracket first, and that will also give me Harry.",
			"But this turns out to be quite powerful to be",
			"able to represent data in this structured way",
			"like this, where I have an association of keys",
			"or otherwise known as properties with particular values.",
			"And then I have the ability given a JavaScript object,",
			"to be able to access a particular value.",
			"And it turns out that one of the ways this is most useful",
			"is in the exchange of data-- moving data around from one service to another.",
			"And so here, we're going to introduce what are known as APIs, otherwise known",
			"as Application Programming Interfaces, which in the context of the web,",
			"you can think of as some well-defined structured way for services",
			"on the internet to communicate with each other.",
			"If you want your application to be able to talk to some other service--",
			"maybe you want your application to interact with Google Maps,",
			"or to be able to interact with Amazon, or some other weather service to get",
			"the day's weather--",
			"then you might be able to access some API, some mechanism whereby",
			"you can communicate with another service by sending a request",
			"and receiving back data in some sort of very well-structured format.",
			"And very often, that well-structured format happens to be a particular type",
			"of data known as JSON, which stands for JavaScript Object Notation,",
			"which is a way of transferring data in the form of JavaScript objects--",
			"these sort of objects that happen to have properties and values",
			"associated with them.",
			"And so what does JavaScript Object Notation look like?",
			"Well, if we think back to the applications that we've been creating--",
			"these applications that are able to represent things like an airline",
			"and movements of planes between particular destinations--",
			"a JavaScript object representing a flight might look something like this--",
			"a JavaScript object that has properties for origin is something,",
			"destination is something, duration is something-- things we've seen before.",
			"But you might imagine that if we wanted our airline",
			"to be able to make its data available to other services,",
			"so that other web applications or other programs",
			"could programmatically access information about flights,",
			"we could pass data in this format to those other applications",
			"so that they could then treat this as a JavaScript object",
			"and get access to the information about it.",
			"And the nice thing about this particular representation",
			"is that it is both human-readable and machine-readable--",
			"that we as people can look at this and get an intuitive understanding for what",
			"all of this means, but also a computer knows",
			"how to access particular properties that appear before the colon",
			"and get access to what those values are, which appear after the colon as well.",
			"So JavaScript Object Notation, otherwise known as JSON,",
			"offers a very convenient representation.",
			"And this isn't exactly what the JavaScript object syntax is.",
			"In JavaScript objects, you don't strictly need the quotation marks",
			"around the keys.",
			"You could just say origin colon and not origin in quotation marks.",
			"So JavaScript Object Notation uses slightly different syntax,",
			"but ultimately very reminiscent of what we've seen in JavaScript objects.",
			"And JavaScript knows how to take data in this form",
			"and turn it into something like a JavaScript object.",
			"And it turns out there are ways of doing this in Python as well.",
			"Other programming languages have the ability",
			"to interpret JSON data in order to use it in some meaningful way.",
			"And another advantage of the JSON representation",
			"is it is very conducive to representing structures of things.",
			"So these values don't just need to be strings or numbers.",
			"They could be lists, or arrays that happen",
			"to have a sequence of possible values, or they could even",
			"be other JavaScript objects that if we wanted to represent not just the city",
			"name, but represent the city name and the airport code,",
			"for example, as we saw that we wanted to do before,",
			"I could, instead of having origin be equal to a string like New York,",
			"have origin be equal to yet another JavaScript object that contains a city",
			"property and a code property, where the city is the name of the city",
			"and the code is the name in the airport code.",
			"And the important thing is as long as I and the person",
			"I'm communicating with agree upon this representation,",
			"agree upon what the names of these keys are and what the structure of this JSON",
			"payload, this JSON object happens to be, then the person on the receiving end",
			"can take this data and write a program that's able to interpret it and use",
			"that data in some meaningful way.",
			"And so we'll see an example of this now of using JavaScript",
			"to be able to communicate with yet another online service,",
			"in particular for accessing information about currency exchange rates.",
			"Currency exchange rates are always changing.",
			"We want access to the latest currency exchange rate data.",
			"And if there is an online service, an API,",
			"that provides access to that data in JSON form--",
			"in a format like this that is machine-readable-- then",
			"we can use that data to write a currency exchange",
			"application that uses real-time data in order to make those conversions.",
			"What might that data look like?",
			"Well, the data could look something like this,",
			"that we make a request for accessing what",
			"are the exchange rates for converting from US dollars,",
			"otherwise known as USD.",
			"And we get back a JSON object that looks like this that has a base key of USD,",
			"and then it has a rates key that has a whole bunch of rates within it,",
			"so conversion to euros and Japanese yen, Great Britain pounds, as well as",
			"Australian dollars, and all of the various different currency exchange",
			"rates for all of these different currencies, for example.",
			"And this doesn't have to be the way that this data is structured,",
			"but it happens to be a convenient way.",
			"And so long as the person providing this data to me",
			"and I both know what this structure is, we",
			"can begin to write programs that are able to use that data.",
			"And so we'll now see our example of an API, which is exchangeratesapi.io.",
			"And if we go to api.exchangeratesapi.io/latest",
			"and provide a get parameter of base=USD, then what we get back is data that",
			"looks like this.",
			"Now, it's a little bit messy looking, not nearly as clean as we saw before,",
			"but it's the same exact thing, just without the whitespace.",
			"We have a JavaScript object that has a rates key that tells me, all right,",
			"here is the exchange rate between US dollars",
			"and Canadian dollars, and the pound, and the euro,",
			"and other currencies that exist as well.",
			"And down below, we have the base of what base currency we're converting from.",
			"So all of this data can come back to me if I just make an HTTP request.",
			"If I make a web request to this particular URL,",
			"I then get access to all of this currency exchange rate information",
			"that I can then use inside of my application.",
			"So how can I do this?",
			"How can I now begin to use this information inside of an application?",
			"Let's now create a new page.",
			"I'm going to call this currency.html.",
			"Inside of currency.html, I'll add our usual HTML, a title",
			"of currency exchange, and a body.",
			"And inside the body, I'm just going to include nothing for now.",
			"What I really care about is the JavaScript",
			"that is going to make a web request in order to get access to additional data.",
			"Now so far in JavaScript, our JavaScript code",
			"has exclusively been running code that exists only on our computer.",
			"It's running inside the web browser and all happening inside the web browser.",
			"We're not communicating with some external server.",
			"What we'll take a look at now is something",
			"known as Ajax, which is about asynchronous JavaScript, where",
			"the idea is that even after a page has loaded, using JavaScript,",
			"we can make additional web requests to ask for additional information,",
			"either from our own web servers or from some third-party web servers",
			"if we want additional information on our page.",
			"And what we want in this case is for our page",
			"to make an asynchronous request-- a request for additional data",
			"about the current currency exchange rates, for example.",
			"So how am I going to do that?",
			"Well, I want to do this after the DOM content is loaded,",
			"so we'll add that usually there.",
			"And what we're going to take advantage of",
			"is a function built into more recent versions of JavaScript",
			"and supported by most major browsers now, and it's a function called fetch.",
			"And what fetch is going to do is it is going to make a web request.",
			"It is going to query some website.",
			"It could be our own.",
			"It could be someone else's.",
			"And it's going to get back some HTTP response from that page.",
			"And I'm going to fetch.",
			"And the page I'm going to fetch is this URL--",
			"api.exchangeratesapi.io/latest?base=USD.",
			"And the only reason I happen to know how this API works",
			"is because I've read the API's documentation",
			"that describes how the URL parameters work",
			"and what the structure of the data that I get back is.",
			"And so I'm here going to say go ahead and fetch from this URL.",
			"Make a HTTP request asking for additional information from this URL",
			"and get back what the results are going to be.",
			"And what fetch gives back to us is something",
			"in JavaScript known as a promise.",
			"And a promise is going to be a way of representing the idea that something",
			"is going to come back, but it may not come back immediately.",
			"We're not going to go into the details of exactly how those promises work,",
			"but it turns out there's a particular syntax for dealing with them,",
			"which is that I can say after I fetch, I can add a line called .then that says",
			"what should I do when the promise comes back,",
			"once I get back something like a response.",
			"And so when I get back the response, what I want to do",
			"is convert the response into JSON--",
			"treat it as JSON data-- a JavaScript object, as something",
			"that I can then manipulate.",
			"And so what I can do is just use this as a function to say go ahead",
			"and return response.json.",
			"And so what this is saying is go ahead and get me the latest exchange rates.",
			"And then after that's done--",
			"this is an asynchronous process.",
			"It might take some time.",
			"But once I get back those results, then run this function.",
			"Take the response and return the JSON version of the response.",
			"Convert that response into just the raw JSON",
			"data, such that I can use that data to then access the currency exchange",
			"rates.",
			"And it turns out that with arrow functions,",
			"if you ever have a very simple function that all it's doing",
			"is taking something and returning something else,",
			"I can simplify this function even further",
			"and I can omit the curly braces, I can omit the return.",
			"I can just say response arrow response.json.",
			"And this is a shorthand way of saying a function that",
			"takes as input the response and returns as output response.json.",
			"So here, I'm saying go ahead and fetch me the latest exchange",
			"rates from this particular API, then convert the response to JSON data,",
			"and then once you have the data, here's what I want you to do with that data.",
			"And for now, let's just go ahead and console.log that data just",
			"to print it out to the terminal.",
			"So we're not doing anything else just yet.",
			"All I'm doing is saying get me the exchange rates,",
			"convert the exchange rates data into JSON, and then let's go ahead",
			"and print out that data.",
			"So I'll open up currency.html.",
			"It's a blank page, but if I look in the JavaScript inspector,",
			"I see what got logged is a JavaScript object, here indicated",
			"by the word object.",
			"And if I click the triangle at left, I can open up and see, all right,",
			"inside of this object is all of this data about exchange",
			"rates for a whole bunch of different exchange rates for converting",
			"from the US dollar, where here, USD 1 means one US dollar is one US dollar,",
			"for example.",
			"So now that I've got this data, let's actually",
			"try and use this inside of the program.",
			"Maybe let's say I want to convert between US dollars and the euro",
			"to figure out what the conversion rate is between dollars and euros.",
			"Well, if we recall what the data looks like,",
			"the data is a JavaScript object where we have a key called rates,",
			"and inside of rates is this object, and inside of that object,",
			"I can access the EUR property to get the exchange rate of one US dollar",
			"is equal to some number of euros, for example.",
			"So it's inside of the rates key, and then inside of the EUR key.",
			"And that's how I know what to get access to inside of my data.",
			"So what I really want to do is access data.rates.EUR.",
			"",
			"That says get me all the data that came back, access the rates key,",
			"and then access the euro key.",
			"And we'll go ahead and save that in a variable called rate.",
			"And now, I'll just document.querySelector body .innerHTML",
			"= rate.",
			"Just like take that rate, put it inside of the body.",
			"So now if I refresh currency.html, what I see is just this value, 0.908443,",
			"which means that right now, 1 US dollar happens",
			"to be equal to about 0.91 euros, for instance.",
			"So that's useful.",
			"I can make this a little more human friendly by putting",
			"this inside of a template string.",
			"I could say 1 USD is equal to, and then rate EUR for example.",
			"And so now if I refresh the page, I see 1 USD is equal to this many EUR.",
			"And even this is a little bit annoying.",
			"I probably don't care about it to this many decimal places",
			"unless I'm really in the mood to be very precise about these exchange rates.",
			"If I only care about it to like three decimal places, for example,",
			"it turns out JavaScript has functions I can",
			"use on numbers like rate.toFixed, passing in three as an argument",
			"there to mean I'd like to take this exchange rate",
			"and just round it to three decimal places, for example.",
			"So now, I refresh the page, and I see 1 USD is equal to 0.909 EUR.",
			"And the interesting thing about what's happening here",
			"is this is happening as a result of an asynchronous request.",
			"I am asking for the latest exchange rates.",
			"And when I get back the exchange rates data,",
			"JavaScript is plugging that information into the body of the page.",
			"I'm now communicating with an API, getting back that API's data in JSON",
			"form, and then using that data to update the contents of my HTML page.",
			"Of course in practice, if I really want a currency exchange web page,",
			"I probably don't just want to display the exchange rate between US dollars",
			"and euros.",
			"I probably want to let the user pick what currencies",
			"they would like to exchange between.",
			"And so here is how I might go about doing that.",
			"Inside of the body of the page now, rather than just have an empty body,",
			"let's go ahead and add a form.",
			"That form is going to have an input, whose ID is currency,",
			"just so I have a way of referencing it later.",
			"The placeholder will just be currency, and the type of it is text.",
			"And then I'll have an input whose type is submit,",
			"and we'll give it a value of convert.",
			"That'll be what the button says.",
			"It says convert, and then I can convert to a particular currency.",
			"And then I need some place to put my results,",
			"so I'll go ahead and add a div whose ID is result.",
			"And this is where after I've done all the currency conversion,",
			"this is where I'm going to put the results of doing that currency",
			"conversion.",
			"So now rather than fetch right away, here's what I need to do.",
			"I need to do something only when the form is submitted.",
			"So I can get the form by saying document.querySelector form .onsubmit",
			"equals this function.",
			"And I'm going to go ahead and just in advance,",
			"return false at the end of the function so we don't actually try",
			"and submit the form to another page.",
			"I just want to run everything locally on this same page.",
			"But now inside of this form, once you submit it,",
			"that is when I want to run this code that is going to fetch new data.",
			"So I'm going to fetch data from the exchange rates API,",
			"convert that data to JSON same as before,",
			"then go ahead and get access to that data.",
			"But now, what I want to do is I want to figure out what the user actually",
			"typed in to the input field.",
			"And that is going to be the currency that I care about getting access to.",
			"So I'll create a variable called currency,",
			"which will be equal to document.querySelector.",
			"And the input field, if I scroll down, it has an ID of currency.",
			"So if I want to get that input field, I'm",
			"going to say get the element whose ID is currency and get its value.",
			"So this now is the currency that the user wanted me to get access to.",
			"And I can then say data.rates currency instead of data.rates.EUR.",
			"And importantly, I can't do data.rates.currency.",
			"That would literally try to access a property",
			"of rates that is called currency.",
			"If I use square brackets instead, that allows",
			"me to use a variable-- something like the currency variable, which",
			"I defined up here on line 13 as the currency that the user typed in.",
			"I would like to access that particular currency inside of the rates.",
			"And so now, I can ask a question.",
			"There are two possibilities here.",
			"Either the currency the user typed in is a valid currency or it's not.",
			"And it turns out that if you try and access",
			"a property of an object that doesn't exist, what you get back",
			"is a particular JavaScript variable called undefined,",
			"meaning there is no value there.",
			"So for example, if I have something like let person = first name is Harry",
			"and last name is Potter like we did before,",
			"I can access something like person.first and get Harry.",
			"I can access person.last and get Potter.",
			"But if access person.middle, that is going",
			"to be a special variable in JavaScript or a special value in JavaScript",
			"called undefined, meaning there is no value there.",
			"It's slightly different from null, which also has a similar meaning.",
			"They're used in slightly different contexts.",
			"So here, what I can say is if the rate is not undefined, well",
			"then, let's go ahead and update not the body, but the result to say 1 USD",
			"is equal to this rate--",
			"not necessarily euros, but whatever the currency happens to be.",
			"And otherwise, let's go ahead and document.querySelector result",
			".innerHTML = invalid currency, just to let the user know that the currency",
			"they tried to provide is not actually a valid currency,",
			"and so we're going to need to try a different currency in order to get",
			"the result to work.",
			"So now, here's what we can do.",
			"If I open up currency.html again, I now see",
			"a form where I can type in a currency.",
			"I can type in something like the euro, for example.",
			"Press Convert, and I see, all right, 1 USD equal to 0.090 EUR.",
			"I type in something like the pound.",
			"Press Convert.",
			"1 US dollar equal to 0.771 pounds.",
			"I type in the Japanese yen.",
			"1 USD is equal to 109.852 Japanese yen.",
			"And all of this is happening where every time I submit the form,",
			"it's making yet another request.",
			"So if the exchange rates happen to change in",
			"between when I submit the form, the next time I submit the form,",
			"I will be getting the latest exchange rates according to that exchange rates",
			"API and the results are going to come back here.",
			"And of course, if I type in a currency that doesn't exist,",
			"I type in something like foo for example and press Convert, invalid currency.",
			"So it's going to report back to me that it wasn't able to find that currency,",
			"and so it tells me that I need to type in something valid.",
			"And so I can type in something valid.",
			"Maybe I tried just US dollars itself.",
			"It tells me 1 USD is equal to 1 USD--",
			"exactly what I would expect it to be.",
			"Now, there are a couple of optimizations and improvements that we can make here.",
			"One is that I can search for euros right now with EUR.",
			"Press Convert.",
			"But if I search for euros in lowercase, for example,",
			"it turns out it thinks that's an invalid currency.",
			"And the reason why is because if you look at the data that comes back to me",
			"from the API, this is the data that I get back from the exchange rates API,",
			"what you'll notice is that all of the currencies are all in capital letters--",
			"they're all capital letters, all capital letters--",
			"which means the only keys that I'm allowed to access",
			"are, in fact, those that have capital letters in them",
			"because these are the only keys that this API makes available to me.",
			"So if I want to convert between usd and euros lowercase,",
			"what I might want to do is first take the currency--",
			"the thing the user typed in--",
			"and first just call toUpperCase on it, which",
			"is a JavaScript function that takes a string and converts it to uppercase.",
			"I'd like to take whatever the user typed in,",
			"and now just first convert it to uppercase.",
			"That way, if I go back here, I can type in eur lowercase, press Convert,",
			"and I'm still able to get the correct conversion rate.",
			"The other thing that we won't noticeably notice the difference with here is that",
			"right now, I'm assuming that all of this is going to go successfully--",
			"that we're going to successfully be able to make a web request,",
			"we'll successfully convert the response back to JSON--",
			"but you never know.",
			"An API could go down.",
			"The API could change and do something unexpected.",
			"And so anytime you're dealing with these types of promises",
			"where you fetch something and say then do this,",
			"then do that, it can often be a good idea",
			"to add one last case, which is a catch case that basically says what should",
			"you do if something goes wrong.",
			"So I can say catch the error.",
			"And what I can just do is say like console.log error,",
			"and then log the error there.",
			"And all that's really saying is that if anything above",
			"goes wrong with the fetching and trying to process the response,",
			"it's going to catch the error, and then it will just, like, print out",
			"to the console that something went wrong-- some error message happened.",
			"And so that can be helpful and nice to have just to make sure",
			"that when things crash, they crash in a predictable way--",
			"that you're able to see exactly what the error is just by looking",
			"inside the JavaScript console.",
			"And so now, we have a fully working web page",
			"that is able to communicate with an external API-- that",
			"is able to ask for information from another service on the internet,",
			"use those results, and put them back into the page-- really just going",
			"to show the power now that we get by taking advantage of the JavaScript",
			"language.",
			"We have the ability now to not only use JavaScript to be able to run code",
			"on the client, where we weren't able to before-- where right before,",
			"we only had Python code that was running on a web server--",
			"but using JavaScript, the really powerful thing is now the ability",
			"to manipulate the DOM-- the ability to use JavaScript to take the page",
			"and change the contents of the page by updating things,",
			"by reading what happens to be on the page,",
			"whether it's inside of a particular element or what a user happened to type",
			"in, and using that in conjunction with event handlers--",
			"ways that we can listen for when the user clicks on something,",
			"or when the user scrolls through something,",
			"or when the user types a key--",
			"to be able to respond and therefore make our web pages all the more interactive.",
			"Next time, we'll continue our discussion of JavaScript,",
			"looking at how we can leverage the features of JavaScript",
			"to continue to build even more interesting",
			"and engaging user interfaces, so we'll see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_008": {
		"section": "CS50W 2020",
		"subsection": "User Interfaces",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/fbfcfbac-7439-4f16-b1f6-8c0aef0c38bf-mp4_720p.mp4",
			"https://edx-video.net/fbfcfbac-7439-4f16-b1f6-8c0aef0c38bf.m3u8"
		],
		"video_duration": 6014,
		"speech_period": [
			2.435, 15.402, 3.333, 2.21, 3.57, 3.75, 2.64, 3.0, 3.43, 2.33, 3.39, 2.49,
			2.43, 2.16, 3.09, 3.63, 2.97, 4.38, 3.73, 3.71, 3.06, 2.49, 2.52, 3.09,
			3.27, 3.19, 2.45, 3.69, 3.72, 3.18, 3.15, 3.76, 2.31, 2.0, 2.4, 2.28,
			2.23, 2.3, 1.84, 2.79, 3.0, 3.86, 4.84, 4.91, 3.09, 3.86, 2.49, 2.58, 4.0,
			3.86, 1.65, 2.75, 2.44, 2.85, 3.6, 3.6, 4.59, 2.43, 2.11, 2.66, 3.55,
			3.98, 2.22, 3.93, 4.14, 2.77, 3.41, 1.5, 1.9, 2.63, 1.68, 3.84, 3.07,
			1.94, 3.76, 1.97, 3.72, 2.55, 4.56, 3.24, 3.72, 2.849, 3.001, 3.84, 3.42,
			3.22, 3.56, 2.43, 3.57, 2.68, 3.0, 2.51, 3.34, 2.19, 3.86, 4.59, 1.08,
			3.97, 2.39, 2.34, 5.56, 1.97, 1.11, 2.01, 2.64, 3.27, 3.0, 3.03, 2.1,
			1.33, 3.56, 2.41, 3.17, 4.74, 1.44, 2.16, 4.443, 1.917, 3.06, 2.94, 1.56,
			3.66, 1.68, 2.11, 3.14, 1.41, 1.23, 4.77, 4.11, 3.75, 2.04, 4.53, 3.13,
			2.27, 3.12, 3.212, 1.708, 4.198, 2.792, 1.98, 2.1, 2.01, 4.26, 3.61, 3.08,
			1.2, 5.94, 1.49, 6.06, 4.26, 1.33, 3.6, 2.75, 2.97, 2.98, 3.32, 3.3, 1.27,
			5.39, 3.64, 3.95, 3.99, 4.298, 1.042, 3.66, 1.72, 3.169, 3.911, 3.17,
			5.37, 3.12, 2.22, 1.96, 3.38, 2.69, 4.69, 3.15, 2.34, 1.95, 1.38, 1.5,
			3.36, 3.93, 3.75, 5.5, 3.17, 1.18, 3.2, 3.48, 2.55, 2.25, 4.23, 3.36, 3.7,
			2.78, 1.32, 2.47, 3.17, 2.52, 3.57, 2.22, 2.833, 2.777, 3.75, 2.07, 2.55,
			3.39, 1.68, 2.43, 2.37, 2.25, 3.09, 3.6, 2.79, 4.05, 4.177, 1.833, 3.47,
			2.73, 1.96, 2.25, 2.99, 3.21, 2.32, 2.96, 1.56, 3.93, 3.63, 0.7, 3.24,
			3.26, 3.84, 2.16, 2.34, 5.69, 1.45, 6.84, 4.44, 3.04, 3.59, 2.8, 4.97,
			2.26, 3.29, 3.21, 4.89, 2.34, 3.81, 2.22, 2.85, 2.01, 6.87, 2.34, 2.28,
			1.41, 3.48, 2.79, 1.77, 3.39, 3.33, 1.83, 2.07, 2.31, 3.12, 4.17, 3.09,
			2.7, 3.75, 1.92, 2.79, 1.87, 5.46, 3.47, 2.16, 1.99, 3.38, 3.75, 3.81,
			3.48, 2.92, 3.41, 4.08, 1.38, 1.922, 2.458, 1.38, 1.86, 2.43, 2.92, 1.74,
			2.27, 2.64, 3.84, 1.3, 2.03, 2.31, 2.07, 2.49, 2.7, 3.81, 4.65, 1.602,
			2.958, 1.125, 1.305, 1.83, 1.78, 3.74, 3.69, 3.84, 3.72, 2.28, 5.64, 3.66,
			2.68, 2.66, 3.06, 3.9, 2.34, 4.62, 2.65, 2.66, 3.87, 3.03, 1.8, 2.97,
			2.07, 2.79, 5.23, 4.982, 2.208, 2.16, 2.01, 3.15, 2.37, 3.06, 4.42, 3.38,
			2.04, 4.772, 1.917, 4.5, 3.131, 2.09, 8.52, 1.68, 3.27, 3.72, 2.43, 2.04,
			1.26, 1.35, 2.07, 2.52, 4.2, 4.35, 5.52, 2.22, 2.79, 2.07, 3.94, 2.78,
			2.88, 1.92, 3.6, 1.95, 2.67, 3.167, 1.093, 2.22, 3.24, 3.78, 1.78, 3.32,
			3.21, 2.55, 3.78, 4.53, 2.73, 1.87, 3.17, 2.392, 1.958, 3.382, 1.958,
			4.29, 2.26, 2.417, 3.093, 2.89, 3.23, 1.89, 2.13, 4.8, 1.18, 3.05, 3.09,
			1.93, 2.84, 3.64, 2.84, 2.1, 2.88, 4.36, 3.29, 1.32, 1.792, 4.318, 4.51,
			4.74, 2.71, 1.77, 3.53, 3.09, 3.45, 2.79, 2.97, 3.09, 3.66, 3.0, 3.82,
			2.52, 2.6, 3.742, 1.958, 3.07, 2.57, 3.03, 3.54, 4.14, 3.36, 2.438, 2.542,
			4.08, 3.21, 4.35, 2.7, 2.28, 2.49, 2.64, 4.08, 2.375, 5.995, 4.08, 4.68,
			1.11, 4.84, 2.66, 5.67, 4.56, 2.22, 3.06, 4.15, 1.53, 1.667, 3.513, 2.19,
			5.2, 1.76, 1.542, 2.451, 1.167, 3.66, 4.44, 2.88, 5.665, 2.375, 2.13,
			1.93, 3.96, 5.068, 2.542, 4.74, 2.34, 7.42, 2.0, 2.61, 4.2, 2.16, 1.44,
			3.33, 2.4, 2.62, 4.97, 2.19, 3.6, 1.95, 2.31, 2.74, 3.14, 1.98, 2.64,
			3.282, 2.958, 3.76, 2.985, 2.375, 2.75, 1.49, 1.79, 3.03, 1.89, 1.56,
			3.12, 2.44, 3.25, 3.4, 2.28, 1.235, 2.125, 1.25, 3.25, 3.3, 4.47, 3.03,
			3.15, 0.82, 2.93, 3.06, 2.03, 4.57, 2.91, 2.64, 2.58, 2.46, 2.37, 4.14,
			4.14, 2.82, 2.22, 2.16, 2.83, 5.18, 3.09, 2.37, 2.19, 3.04, 3.77, 3.04,
			9.56, 7.5, 3.42, 2.76, 3.16, 2.6, 2.23, 3.14, 3.46, 2.39, 4.2, 3.21, 2.71,
			3.59, 3.96, 3.39, 3.57, 1.65, 3.42, 2.55, 3.15, 2.94, 2.13, 3.12, 3.27,
			3.93, 5.31, 3.36, 4.29, 2.91, 3.12, 2.55, 2.73, 3.49, 1.82, 2.91, 2.942,
			1.708, 2.2, 1.625, 5.455, 3.44, 2.82, 2.46, 5.01, 4.03, 2.54, 3.36, 3.99,
			2.34, 2.82, 3.0, 2.52, 4.15, 3.35, 4.5, 5.76, 1.41, 3.96, 3.55, 4.19,
			3.63, 1.71, 2.4, 1.3, 1.61, 1.89, 4.02, 3.12, 3.21, 3.84, 1.8, 5.22, 3.75,
			3.18, 3.785, 1.375, 1.41, 1.75, 1.88, 3.83, 6.433, 1.917, 4.26, 1.893,
			1.917, 3.81, 4.08, 2.73, 2.31, 3.84, 2.5, 3.98, 2.88, 3.84, 1.91, 3.3,
			3.7, 3.95, 1.95, 3.33, 3.12, 3.21, 3.42, 3.82, 2.96, 3.36, 2.32, 2.93,
			0.96, 5.22, 2.91, 5.55, 3.78, 4.32, 1.445, 2.875, 2.7, 2.04, 6.99, 2.67,
			2.61, 2.4, 5.13, 4.5, 1.89, 3.67, 3.71, 2.185, 1.625, 0.81, 0.968, 2.042,
			3.23, 1.63, 2.6, 2.52, 2.58, 5.64, 2.16, 3.359, 3.33, 3.241, 3.12, 3.04,
			1.26, 3.38, 2.22, 3.84, 5.95, 2.12, 4.15, 2.45, 2.062, 1.958, 3.75, 4.23,
			4.26, 2.67, 3.9, 3.94, 0.5, 3.78, 3.21, 3.182, 2.458, 3.37, 4.86, 3.38,
			5.79, 5.61, 1.375, 3.125, 1.51, 1.685, 1.875, 2.01, 5.67, 2.86, 3.888,
			2.042, 5.19, 3.67, 3.35, 1.23, 3.69, 2.19, 2.042, 3.118, 3.0, 2.38, 2.99,
			4.59, 3.78, 2.94, 2.46, 2.55, 3.03, 4.02, 2.79, 3.42, 3.637, 0.833, 3.6,
			1.95, 1.81, 3.23, 4.17, 2.83, 2.66, 1.857, 1.833, 4.08, 3.12, 3.51, 2.25,
			2.77, 2.36, 3.36, 2.22, 2.64, 4.84, 2.99, 1.17, 2.43, 3.24, 3.82, 4.07,
			2.59, 5.03, 3.63, 4.56, 3.36, 2.88, 1.995, 3.165, 5.25, 3.45, 2.97, 2.82,
			1.8, 2.22, 4.47, 4.53, 2.38, 4.55, 2.29, 3.08, 3.97, 8.19, 6.09, 2.43,
			6.01, 2.33, 2.76, 2.88, 3.48, 2.52, 4.21, 3.32, 1.03, 1.5, 1.52, 2.76,
			3.9, 2.55, 5.08, 1.91, 2.292, 1.428, 3.39, 2.22, 2.13, 2.13, 1.72, 2.03,
			2.38, 4.76, 3.69, 1.42, 3.32, 3.25, 3.62, 2.458, 2.042, 2.14, 2.6, 3.15,
			3.96, 3.843, 1.917, 2.97, 3.18, 3.45, 2.19, 4.288, 2.792, 4.29, 3.15,
			3.39, 3.188, 1.792, 3.69, 2.22, 2.31, 2.4, 3.3, 3.48, 3.31, 2.51, 3.12,
			1.89, 5.88, 3.08, 2.38, 3.78, 2.22, 2.46, 3.39, 4.02, 2.22, 2.83, 2.03,
			4.93, 2.93, 4.68, 3.66, 1.05, 1.95, 4.14, 1.5, 3.158, 1.792, 2.01, 2.34,
			3.33, 4.23, 4.44, 7.46, 3.0, 2.76, 4.11, 3.31, 1.55, 1.66, 0.68, 0.72,
			2.273, 1.417, 1.875, 2.0, 1.975, 4.23, 2.25, 3.1, 2.45, 2.01, 3.33, 3.57,
			3.78, 2.01, 3.09, 2.64, 5.79, 3.74, 2.54, 1.28, 1.02, 4.59, 2.55, 1.12,
			2.9, 4.56, 3.06, 2.79, 2.73, 1.47, 3.18, 2.82, 1.51, 3.65, 5.55, 2.83,
			3.2, 1.41, 2.07, 1.8, 5.897, 2.833, 1.71, 1.5, 2.19, 3.33, 4.26, 3.22,
			2.0, 3.18, 3.34, 2.96, 2.25, 2.28, 2.7, 4.71, 3.72, 3.03, 5.16, 5.76,
			5.31, 2.097, 2.583, 4.41, 3.78, 2.49, 2.7, 4.95, 3.3, 3.84, 3.24, 2.55,
			4.05, 3.81, 4.2, 2.4, 3.03, 1.83, 3.15, 2.91, 4.05, 2.13, 1.42, 4.13,
			1.352, 1.708, 3.39, 2.85, 2.64, 1.83, 3.39, 1.8, 2.4, 2.04, 1.95, 3.54,
			3.16, 3.71, 4.56, 2.582, 2.458, 4.86, 0.76, 4.82, 3.57, 3.27, 0.84, 6.06,
			4.44, 3.28, 2.54, 2.43, 2.67, 1.84, 3.65, 3.81, 2.94, 2.22, 2.52, 5.76,
			2.915, 2.875, 1.8, 1.35, 2.58, 4.56, 4.89, 2.64, 1.81, 3.86, 2.52, 3.46,
			3.62, 2.31, 2.4, 3.58, 0.95, 3.45, 4.11, 3.42, 3.09, 2.4, 4.12, 2.33,
			1.482, 2.208, 3.58, 1.957, 2.083, 3.07, 2.51, 2.55, 3.28, 3.103, 2.917,
			2.88, 2.62, 2.87, 3.24, 2.55, 4.05, 3.48, 2.28, 3.54, 3.06, 2.64, 3.06,
			3.18, 3.48, 2.22, 3.9, 2.048, 1.792, 3.6, 1.14, 3.36, 1.53, 3.16, 2.93,
			2.97, 2.13, 1.98, 2.58, 1.84, 3.98, 1.2, 1.74, 3.1, 3.533, 1.917, 4.2,
			0.96, 3.24, 2.25, 4.8, 2.49, 3.16, 3.26, 1.575, 1.875, 3.51, 3.46, 4.04,
			2.58, 3.27, 2.13, 3.62, 1.75, 4.23, 2.22, 2.64, 3.51, 3.09, 1.53, 3.48,
			2.25, 2.49, 3.75, 2.023, 2.417, 3.21, 2.69, 1.75, 2.667, 3.333, 3.57,
			1.71, 3.27, 2.52, 4.42, 2.87, 3.57, 3.42, 1.875, 2.792, 1.783, 2.58, 2.64,
			2.46, 3.34, 2.39, 2.52, 1.68, 2.46, 2.58, 4.2, 2.73, 2.91, 3.06, 3.477,
			1.833, 2.25, 3.52, 2.06, 3.42, 3.42, 3.25, 2.887, 2.083, 3.25, 3.23, 3.27,
			1.83, 3.075, 1.875, 2.43, 2.07, 2.31, 3.85, 2.93, 2.25, 2.427, 2.083,
			4.82, 1.21, 3.47, 3.09, 2.76, 4.89, 3.45, 3.75, 4.14, 2.52, 3.167, 1.843,
			3.97, 2.36, 4.73, 1.86, 3.73, 2.57, 2.67, 2.55, 2.79, 4.86, 3.63, 2.76,
			2.58, 3.93, 5.17, 2.24, 2.76, 5.25, 3.18, 3.54, 5.07, 4.14, 3.4, 4.16,
			2.73, 2.01, 4.14, 2.46, 3.81, 6.75, 5.73, 3.66, 3.93, 1.89, 2.61, 3.97,
			3.41, 0.9, 1.78, 3.23, 3.12, 2.2, 3.86, 4.72, 4.13, 2.64, 3.27, 2.55, 3.0,
			3.0, 4.11, 0.99, 4.09, 3.14, 2.76, 3.88, 2.06, 4.0, 1.82, 3.33, 2.76,
			1.92, 1.71, 3.09, 2.61, 3.03, 3.39, 5.61, 2.0, 2.92, 3.28, 2.78, 1.5,
			1.965, 1.375, 2.87, 3.91, 2.39, 2.55, 2.38, 1.26, 3.05, 1.92, 2.31, 2.67,
			2.22, 3.33, 7.08, 5.67, 4.05, 3.22, 3.89, 2.1, 4.26, 2.25, 3.09, 3.36,
			5.13, 2.1, 3.48, 3.78, 3.88, 1.19, 2.85, 3.72, 3.72, 2.44, 7.07, 6.96,
			3.57, 4.44, 2.52, 3.81, 3.15, 2.73, 3.27, 4.05, 4.11, 4.47, 1.89, 2.95,
			4.73, 4.11, 4.66, 2.67, 3.26, 2.16, 2.34, 3.51, 4.05, 3.0, 2.73, 4.23,
			3.33, 2.17, 2.45, 3.19, 3.35, 3.39, 2.28, 4.11, 1.77, 3.75, 4.53, 2.025,
			1.875, 4.02, 3.0, 5.71, 2.182, 1.708, 3.24, 2.65, 1.95, 2.96, 2.88, 4.89,
			3.56, 1.36, 4.35, 1.92, 2.73, 4.51, 4.91, 3.6, 1.68, 2.97, 1.96, 2.96,
			3.88, 2.96, 5.64, 2.61, 4.05, 2.64, 2.46, 3.359, 5.5, 1.791, 5.32, 3.769,
			1.231, 3.059, 4.111, 3.9, 4.69, 2.04, 2.61, 3.85, 2.75, 4.92, 2.73, 3.359,
			4.811, 2.99, 3.54, 3.96, 3.21, 3.18, 2.16, 2.7, 3.28, 2.0, 3.0, 2.88,
			2.94, 2.61, 3.84, 2.46, 3.39, 2.52, 2.97, 2.25, 3.97, 4.82, 3.93, 1.5,
			2.46, 2.68, 3.53, 2.92, 2.315, 1.875, 3.21, 2.31, 3.06, 4.02, 2.76, 2.5,
			4.92, 4.16, 4.2, 4.23, 2.97, 3.73, 1.71, 1.7, 3.76, 3.98, 4.02, 1.05,
			4.38, 4.08, 3.54, 4.605, 1.875, 4.99, 2.78, 3.09, 3.09, 3.87, 2.76, 4.9,
			2.42, 3.84, 3.42, 2.67, 2.19, 2.13, 3.04, 3.93, 1.7, 4.53, 2.82, 3.84,
			4.05, 4.68, 2.08, 3.38, 2.34, 2.16, 2.97, 2.28, 3.51, 4.08, 1.96, 3.38,
			4.39, 2.36, 4.86, 3.09, 2.91, 2.04, 4.81, 4.46, 1.44, 4.26, 2.17, 3.89,
			2.37, 4.26, 1.61, 1.75, 2.52, 3.7, 1.59, 5.54, 6.36, 1.24, 4.73, 4.14,
			3.3, 2.25, 1.59, 2.58, 2.91, 1.32, 2.125, 2.225, 2.76, 4.65, 5.74, 3.47,
			4.2, 2.79, 5.28, 3.27, 2.46, 4.05, 1.93, 2.42, 2.88, 2.08, 3.74, 3.9,
			3.33, 2.7, 3.18, 3.75, 2.49, 4.92, 3.7, 2.42, 2.49, 4.2, 4.09, 1.02, 3.87,
			2.49, 3.84, 3.09, 1.47, 2.7, 3.03, 3.42, 3.7, 1.47, 3.65, 3.87, 1.53,
			1.71, 3.57, 3.69, 2.01, 2.16, 4.133, 2.917, 2.67, 2.61, 2.567, 1.333,
			1.77, 3.36, 2.76, 2.64, 3.4, 0.71, 2.28, 3.48, 4.23, 2.58, 4.38, 2.46,
			4.2, 3.33, 4.2, 2.73, 1.75, 3.51, 2.99, 2.91, 3.04, 1.34, 4.17, 2.118,
			3.042, 4.47, 2.97, 3.12, 3.52, 3.56, 2.37, 3.6, 3.84, 3.57, 3.39, 2.43,
			4.05, 1.11, 4.47, 1.08, 2.73, 1.21, 3.05, 2.25, 3.39, 2.49, 2.85, 1.08,
			2.73, 4.75, 2.66, 2.64, 3.94, 2.54, 3.3, 5.11, 2.3, 1.83, 3.54, 3.25,
			4.76, 1.99, 2.87, 3.415, 3.125, 4.17, 1.44, 2.61, 1.86, 4.39, 1.62, 3.95,
			3.06, 1.86, 2.31, 2.43, 3.09, 3.08, 1.64, 3.42, 2.46, 4.14, 3.91, 4.55,
			3.12, 3.33, 3.3, 3.57, 1.89, 2.74, 1.25, 3.6, 4.2, 2.02, 1.958, 4.962,
			5.43, 5.61, 1.51, 4.4, 6.39, 4.932, 2.208, 2.91, 3.07, 4.73, 2.01, 3.75,
			5.08, 4.61, 1.47, 4.53, 4.65, 2.91, 4.18, 3.2, 3.78, 2.357, 1.333, 2.61,
			2.88, 1.89, 3.36, 2.76, 1.41, 2.1, 3.78, 2.07, 2.73, 4.58, 1.55, 4.55,
			2.4, 3.33, 1.83, 5.64, 2.62, 3.59, 5.01, 6.062, 2.458, 3.88, 3.2, 2.25,
			4.81, 3.3, 2.82, 2.49, 3.18, 2.23, 1.94, 1.31, 2.74, 2.49, 2.55, 2.73,
			4.04, 4.42, 3.24, 3.51, 4.68, 3.24, 2.758, 2.042, 3.0, 1.59, 0.99, 5.67,
			3.93, 2.31, 1.11, 2.94, 2.7, 2.358, 3.042, 2.56, 2.06, 1.57, 2.88, 2.34,
			2.15, 3.69, 1.42, 2.24, 4.35, 5.13, 3.12, 2.76, 3.24, 4.83, 2.13, 4.2,
			2.1, 2.13, 3.21, 1.52, 1.66, 2.85, 3.0, 3.94, 2.64, 3.86, 4.17, 1.622,
			1.708, 4.65, 2.43, 5.88, 1.93, 2.55, 1.16, 3.99, 0.78, 1.35, 0.84, 2.94,
			1.77, 1.77, 1.35, 2.07, 1.39, 3.14, 4.778, 1.792, 3.54, 3.09, 3.55, 0.5,
			2.07, 1.56, 1.44, 2.58, 2.88, 3.85, 3.86, 3.39, 1.8, 3.37, 3.83, 5.78,
			1.75, 2.97, 5.05, 3.44, 3.15, 4.42, 5.0, 3.25, 1.73, 3.54, 4.36, 6.63,
			1.71, 2.16, 4.35, 2.61, 3.27, 4.92, 3.72, 3.81, 3.4, 1.28, 3.12, 2.47,
			3.23, 4.17, 4.08, 2.55, 2.98, 3.17, 4.65, 3.34, 2.33, 3.09, 2.53, 3.23,
			2.13, 4.09, 1.56, 2.472, 1.958, 6.03, 5.32, 6.382, 0.958, 2.94, 4.42,
			2.42, 2.55, 1.41, 3.21, 3.48, 1.5, 2.79, 2.47, 2.0, 2.56, 1.92, 3.56, 3.7,
			6.17, 4.38, 4.93, 4.88, 4.02, 4.26, 2.83, 2.66, 1.75, 1.76, 4.08, 3.78,
			4.41, 2.32, 1.94, 2.61, 4.47, 4.74, 1.27, 1.94, 1.71, 1.69, 3.29, 4.44,
			5.83, 1.01, 5.13, 3.87, 2.28, 1.86, 5.22, 1.86, 4.68, 2.68, 5.03, 3.48,
			4.83, 1.84, 5.25, 4.98, 2.48, 3.09, 2.28, 4.45, 3.35, 2.67, 3.33, 3.21,
			2.67, 4.23, 2.76, 2.7, 5.16, 4.26, 1.23, 2.16, 4.54, 1.91, 1.65, 4.38,
			3.09, 2.85, 6.42, 6.15, 6.21, 2.85, 2.91, 6.88, 2.84, 3.96, 4.5, 2.43,
			2.4, 4.21, 1.94, 1.02, 2.85, 1.65, 2.34, 4.92, 4.5, 1.51, 2.63, 4.05,
			4.59, 3.46, 1.82, 2.46, 2.44, 2.21, 4.08, 3.45, 3.09, 2.31, 3.3, 2.335,
			2.375, 2.85, 2.248, 2.792, 2.73, 2.98, 3.44, 3.03, 3.03, 2.29, 2.3, 2.73,
			2.58, 3.06, 1.628, 2.542, 3.93, 2.52, 2.4, 3.09, 2.61, 2.74, 2.0, 2.58,
			4.44, 3.72, 2.4, 3.75, 3.487, 2.583, 2.02, 1.22
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRIAN YU: Welcome back, everyone, to Web Programming with Python and JavaScript.",
			"And last time, we took a look at JavaScript--",
			"that language that ran inside of a user's web browser, client side,",
			"and allowed us to do a number of things to make our web pages more interactive.",
			"JavaScript enabled us to display alerts, to be",
			"able to manipulate the DOM, the structure of the web page,",
			"in order to add content or see what content was already there.",
			"And it also let us respond to user events.",
			"When a user clicked on a button or submitted a form or typed something",
			"into an input field, we could have JavaScript functions",
			"run that responded to those events in order",
			"to make our web pages more interactive.",
			"Today, we're going to continue that conversation, in particular taking",
			"a look at user interface design, looking at some common paradigms in terms",
			"of user interfaces and how we can leverage JavaScript",
			"to be able to achieve those goals to create interactive user interfaces that",
			"will be valuable when users are interacting with our applications.",
			"So one of the more common paradigms, especially nowadays, in web programming",
			"is the idea of single-page applications.",
			"Thus far, if we've wanted to create a web application that",
			"has multiple different pages, we've generally",
			"done that via multiple different routes in our Django web application,",
			"for example, where you go to slash something to get one page",
			"and slash something else in order to get another page.",
			"But commonly, using JavaScript, we have the ability",
			"to create single-page applications where the entire web page is really",
			"just a single page, and then we use JavaScript to manipulate the DOM,",
			"to replace portions of the page with things we want to replace.",
			"And this has a number of advantages, one of them being that we only",
			"need to make modifications to the part of the page that is actually changing.",
			"If, for example, you have five different pages,",
			"but the general layout and structure of the page",
			"is pretty similar, when you switch between pages",
			"rather than load an entirely new page, you",
			"can just load the part of the page that is changing.",
			"And this is especially helpful for applications",
			"that are changing quite frequently.",
			"So let's take a look now at how we could implement, for example,",
			"a very simple single-page application.",
			"So let's imagine, for example, that we want a single-page application that",
			"just displays three different pages, but all included in the same page.",
			"I'll go ahead and create a new file that I'll call singlepage.html,",
			"inside of which we'll include our usual HTML tags.",
			"",
			"And inside the body of this page now, I'm",
			"going to include three different sections of the page",
			"to represent the three different pages I might want to display to the user.",
			"So I'll have a div whose ID is page1 that maybe just has",
			"a heading that says \"This is page 1.\"",
			"And you could imagine there's more content on these pages as well.",
			"A div whose ID is page2.",
			"We'll say, \"This is page 2.\"",
			"And then one final div whose ID is page3.",
			"It has a heading that says \"This is page 3,\" for example.",
			"Now, right now if I were to open up singlepage.html, what we'd see",
			"is we see all three pages at the same time.",
			"I know that's probably not what we want.",
			"What we really want is by default to hide these pages",
			"until we want to view the pages one at a time, for example.",
			"So one thing I could do is use CSS to be able to toggle whether or not",
			"something is visible, adding some style tags",
			"to my page to say that by default, all of my divs",
			"should have a display property set to none, meaning they're not visible,",
			"they're not displayed on the screen.",
			"Now, if I refresh the page, I don't actually see any of the three headings",
			"that I had there before.",
			"But what I'd really like is for some buttons",
			"now to allow me to toggle between these three pages.",
			"So I'll give myself three buttons--",
			"one button that says Page 1, one button that says Page 2,",
			"and one button that says Page 3 for example.",
			"And I need some mechanism for these buttons",
			"to know when you click on this button, what page should be displayed.",
			"So I'll go ahead and use data attributes, which",
			"we saw last time with JavaScript, to add some additional information",
			"to these particular HTML elements, where I'll",
			"give the first button a data-page value of page1,",
			"the second one a data-page value of page2,",
			"and the third one a data-page value of page3.",
			"Here, again, just providing information so that later,",
			"when I write some JavaScript, I can have the JavaScript code look",
			"at the data-page attribute to say that when you click on this button,",
			"you should let me see the div whose ID is page1.",
			"That's what this is going to allow us to signal.",
			"So now let's go ahead and write that JavaScript.",
			"What I want to be able to do is to be able to say,",
			"I would like to show page 1 and hide the other two, or show page 2",
			"and hide the other two, or show page 3, for example.",
			"And so to do that, I'll first write a function that will let me do that.",
			"I'll write a function called showPage that",
			"takes as its argument what page I want to show.",
			"And so what should this function do?",
			"Well, what we're going to do is we're going to say document.querySelector.",
			"And I want to get the thing that has a particular ID the ID of whatever",
			"this input happens to be.",
			"This page is going to represent the ID of the div that I want to show.",
			"So I'll say, get me the thing that has this ID.",
			"And then using a template literal, I'll say, all right,",
			"get me the ID of page, whatever element has that particular ID.",
			"And then I'd like to change its style property.",
			"Which part of the style?",
			"Well, I want to change its display property.",
			"And instead of none, which was the default here,",
			"where I said don't show it at all, the other option for a div",
			"is block, meaning it shows up as just a block that is",
			"on the page that is actually visible.",
			"And so now I have this showPage function.",
			"And I can test it, in fact.",
			"If I go into my browser, refresh the page, I now see three buttons.",
			"The buttons don't do anything just yet.",
			"But what I can do is in the console, if I actually just try running this,",
			"I can run the showPage function and say, like, showPage(\"page1\"), for example,",
			"press Return, and all right.",
			"Page 1 now appears on my page.",
			"And if I [INAUDIBLE] showPage(\"page2\"), then page 2 will become visible.",
			"And all right, that did half of what I wanted.",
			"Page 2 is now visible, but so is page 1.",
			"So I probably want it such that if I ever show a page,",
			"I hide the other pages first.",
			"Like, hide all the pages and then show page 2, or hide all the pages",
			"and then show page 3.",
			"So how could I go about doing that?",
			"Well, first, I might want to just, when I show a page, first",
			"hide all of the other pages.",
			"Hide all the pages.",
			"So to get all the pages, I'll do document.querySelectorAll.",
			"Get all of the divs, which is what I'm using to enclose the pages.",
			"And now for each one of those-- again, effectively creating a loop where",
			"I'm looping over each of the divs--",
			"for each div, let's go ahead and set the div.style.display display",
			"property equal to none.",
			"And so what this showPage function is now doing",
			"is it is first querying for all of the divs, which",
			"are simulating my pages inside of this single-page application.",
			"And for each one of the divs, we're going",
			"to pass it as input into this function, which is the argument to forEach,",
			"again using this arrow function notation, which is just a shorthand",
			"way of expressing a function.",
			"Where I'm here saying that for each of the div,",
			"we'll go ahead and modify its style property,",
			"setting display equal to none, meaning don't show any of the divs,",
			"and then show only the div that was requested.",
			"So now this should solve the problem of multiple pages appearing",
			"simultaneously.",
			"But if I go back to this page and I click or write showPage(\"page1\"),",
			"then page 1 appears.",
			"But if I run showPage of page 2, then page 2 appears but page 1 disappears.",
			"And likewise, when I ShowPage(\"page3\"), that shows page 3,",
			"but not the other two.",
			"So I can manipulate which page is visible all via the console,",
			"but now what I'd like to do is get these buttons to actually work,",
			"where if I click on one of the buttons, that has the effect of actually",
			"displaying the requested page.",
			"So in order to do that, well, I want to attach some event listeners",
			"to these buttons, which means I need to wait until those buttons have loaded",
			"onto the page.",
			"So we'll use document.addEventLis tener('DOMContentLoaded'), again,",
			"waiting until all of the content on the page has been loaded.",
			"And then and only then will I say, let's go ahead",
			"and querySelectorAll for all of the buttons.",
			"And for each one of those buttons, let's go ahead and attach an event listener",
			"to each of those buttons.",
			"So I'm querying for all of the buttons and saying, for each of the buttons,",
			"I would like to do this with each button.",
			"And what I'd like to do is say button.onClick.",
			"When the button is clicked on, go ahead and run this function.",
			"I'd like to showPage, and which page do I want to show?",
			"Well, I want to show whatever page is in the page part of the buttons data set.",
			"And to get it the current button, the button that has been clicked on,",
			"recall that when we're inside of an event handler,",
			"we can take advantage of the JavaScript keyword",
			"this, which refers to whatever element has received the event,",
			"so whatever button, in this case, that was clicked on.",
			"So I can say this.dataset.page to mean that all right,",
			"for each of the buttons, when the button is clicked on-- we're saying",
			"button.onClick for each of the buttons--",
			"run this function when the button is clicked.",
			"We'd like to show a page.",
			"Which page do we want to show?",
			"We'll take this button, the button that received the event,",
			"access its data properties, access its data page attribute,",
			"which are down here-- either page1 or page2 or page3--",
			"and go ahead and just call the showPage function that we wrote a moment ago.",
			"So now that we've done that, we've attached these event handlers",
			"to the buttons.",
			"So now if I refresh the page, I can click on these buttons",
			"and toggle between any of the three pages.",
			"And now the interesting thing here is that we now",
			"have the ability to just, in a single page,",
			"allow myself to simulate the idea of having multiple pages, all enclosed",
			"in a single HTML file but not needing to consistently make",
			"additional requests to a server in order to get access to that information.",
			"Now, sometimes, though, it might be reasonable to want",
			"to reach out to a server--",
			"when you need new information for a page, for example.",
			"You might imagine that each of these pages contains a lot of text.",
			"It's going to be inefficient if immediately, we're",
			"loading all of that data into HTML and just showing and hiding them",
			"when we need to, because maybe we're loading",
			"more information than the user is ever going to actually care about,",
			"if they're never going to look at page 2 or page 3.",
			"So one thing we might imagine doing is loading this data dynamically.",
			"Last time when we were talking about JavaScript,",
			"we saw how we could use fetch to say go ahead",
			"and request some additional information from a web server-- last time,",
			"it was currency exchange rates.",
			"But then we used that data that came back in order",
			"to fill in something onto our page.",
			"And likewise, we could do a similar thing here--",
			"that if we have the general structure of a single page",
			"and we want to load new content, rather than load entirely",
			"new HTML content and reload the entire page,",
			"we can just ask our own web server for what part of the page",
			"needs to change and then just replace that part of the page.",
			"And so that's what we'll take a look at now,",
			"now combining Django for our server and JavaScript",
			"for writing the client-side code to be able to generate",
			"a single-page application.",
			"And so for this, we'll go ahead and go into an example",
			"I had in advance called singlepage1.",
			"And inside of singlepage1, this is just a Django application",
			"with a single app called singlepage.",
			"And what we'll notice is we'll go to the URLs first.",
			"There are two URLs--",
			"one default URL that just loads the index function, and then a URL",
			"for loading different sections of a page that I might want to dynamically load,",
			"for example.",
			"So I have sections/ some particular number.",
			"And if we look at the views for what it is these URLs are actually doing,",
			"the index function just returns index.html.",
			"And then what the section function does is",
			"it first makes sure the number is between 1 and 3,",
			"and if so, responds with one of these just strings of text, for example.",
			"So how does this actually work?",
			"If I go into singlepage1 and run the server,",
			"if I go to this URL /sections/1, for example,",
			"what I get is this block of text.",
			"And if I go to /sections/2, I get that block of text.",
			"/sections/3, a different block of text altogether.",
			"So just different text, and I'd like to incorporate this text into an existing",
			"HTML page, for instance.",
			"So here, I'll go into index.html, this template that gets",
			"loaded when I go to the default route.",
			"And inside of index.html, what we'll see is",
			"I have a showSection function that behaves",
			"very similar to the showPage function we saw from a moment ago,",
			"but instead, what showSection is going to do",
			"is it's going to fetch what text I should display",
			"on the page from my own web server.",
			"I'm fetching from /sections/ fill in a number here, number 1 or 2 or 3.",
			"When I get the response, in the past we've",
			"seen how we can convert that response into JSON data,",
			"if it's unstructured data.",
			"We can also just convert the response into plain text.",
			"Then I'll take that text, console.log it just",
			"so we can see it in the log output.",
			"But then go ahead and query select for the content of the page, something",
			"that has an ID of content, update its inner HTML,",
			"and set it equal to that text.",
			"So what this entire function is now doing",
			"is it is going to reach out to my server,",
			"figure out what text content belongs in the new section,",
			"and fill in the part of my page accordingly with the text that",
			"comes back from that HTTP request.",
			"And then down further below, inside of the page,",
			"we'll see that I have a Hello heading, three buttons that",
			"toggle between the different sections.",
			"Each of them has a data-section attribute this time",
			"for which section should be loaded.",
			"And then a div that is initially blank just for the content of the page.",
			"So putting this all together now, if I go to the default route,",
			"I see \"Hello!\" plus three buttons to give me",
			"a choice between three different sections.",
			"And if I click Section 1, what's going to happen is JavaScript is going",
			"to query /sections/1, ask for the text.",
			"It gets that text back, and it's going to fill it in into the page--",
			"Section 1, Section 2, and Section 3.",
			"So very similar to before, but unlike what we had before,",
			"where all of the text was being loaded into the HTML page all at once,",
			"now we're using asynchronous JavaScript to only dynamically load",
			"information when we need it.",
			"When we click on a section, then it's going",
			"to make the request for what content needs to be filled in,",
			"and it's going to fill it in.",
			"And everything else-- these buttons, this",
			"heading, and you might imagine in a more complex website,",
			"you've got a lot more going on around the edges of this web page--",
			"and all of that stays the same.",
			"We don't need to reload any of that information.",
			"We're only reloading the portion of the page that",
			"actually changes as we toggle between these various different section",
			"headings.",
			"Now, this seems to be an advantage in some ways,",
			"that maybe we can be more efficient about how we run",
			"our single-page applications like this.",
			"One thing we seem to lose, though, is the notion",
			"of maintaining state inside of the URL.",
			"That generally, the URL gives you an indication for what page you're on.",
			"You're on something like /1 if you're on section 1 or /2 if you're on section 2,",
			"/3 for section 3.",
			"But of course, we're staying on the same page in all of these examples.",
			"Whenever I click a button--",
			"Section 1 or 2 or 3--",
			"the URL is never changing.",
			"The URL stays the same.",
			"It turns out there's a way in JavaScript to manipulate that URL,",
			"taking advantage of what's known as the JavaScript history API, where",
			"I can push something to the history, meaning update the URL",
			"and actually save that inside the user's browser history so later on,",
			"they could potentially go back to that.",
			"And to do that, I'll show you yet another example inside of singlepage2,",
			"which is very similar, except inside of index.html,",
			"I've added a couple of additional things.",
			"One is that when I click on a button, meaning",
			"when I click on Section 1 or Section 2 or Section 3,",
			"I've added this line here, history.pushState.",
			"What history.pushState is going to do is it",
			"is going to basically add a new element to my browsing history, where I first",
			"specify any data associated with the state.",
			"So in particular, I'm storing a JavaScript object",
			"representing what section number is being represented here.",
			"Next is a title parameter that most web browsers actually ignore,",
			"so that can generally be the empty string.",
			"But the third argument here is what should go in the URL.",
			"And what I want to go in the URL, in this case,",
			"is something like section followed by the section number.",
			"So I can go to /section1 or /section2 or /section3, for instance,",
			"and those will appear in the URL bar when I click on a different page.",
			"Then what I want to be able to support is the ability",
			"to say when I go back through my history,",
			"if I click the Back button in my web browser,",
			"I'd like to go back from section 3 to section 2,",
			"if that was the page I visited previously.",
			"And there turns out to be an event handler for that as well--",
			"window.onpopstate, meaning when I pop something off of the history,",
			"like go back in my history, we have the ability",
			"to take some event as an argument.",
			"And if you look at event.state.section, which I've run console.log on,",
			"so we can take a look at it in a moment, we'll",
			"see what state was stored associated with that part of the user's history,",
			"and I can go ahead and show that section.",
			"So all in all, when I run this web application,",
			"going into singlepage2 this time, when I run the server, I see \"Hello!\",",
			"three sections for buttons.",
			"When I click on one of those buttons, not only do I see text,",
			"but I also see in the URL bar that I'm now on /section1.",
			"That has been pushed onto my history, and I've",
			"updated the URL to reflect that, too.",
			"I click Section 2.",
			"That updates the URL as well.",
			"Section 3 updates the URL, too.",
			"And when I've pushed things onto my history,",
			"I've associated some state with them so that I can go back if I ever need to.",
			"And in fact, if I open up the JavaScript console now and I go back, for example,",
			"back to section 2, what you'll see is that what gets logged is the number 2.",
			"When I print out what is the current section that's",
			"associated with this URL, it's saving that state,",
			"that I should be loading section number 2.",
			"And so it does load section number 2 here.",
			"So there's certainly nothing wrong with the original paradigm",
			"of just loading different pages dynamically using Django,",
			"like make a request and get a response.",
			"But oftentimes, as you begin to imagine applications where a lot of things are",
			"changing on the same page simultaneously--",
			"you might imagine social networking websites where a lot of things stay",
			"the same, but new posts might be added and you might be looking at different",
			"parts of the same page--",
			"being able to dynamically load information,",
			"request additional information, and then display it on the page",
			"can actually be quite powerful and a way to make your web pages a little bit",
			"more interactive.",
			"So that then is how we might build single-page applications-- taking",
			"advantage of JavaScript to asynchronously load new data,",
			"and then taking advantage of this history API",
			"that let us add things to the URL, add things to the user's browsing history,",
			"such that we could go back to them later by listening for window.onpopstate.",
			"And it turns out that window object that we get access",
			"to in JavaScript is quite powerful.",
			"It represents the physical window on the computer screen",
			"that displays all of their web content.",
			"And there are certain properties of that window",
			"we can look at that allow us to enable some interesting features.",
			"So for example, your window is really described",
			"by what the user actually sees inside of their window in Google Chrome or Safari",
			"or whatever web browser they happen to be using.",
			"And there are a couple of properties that might be of use.",
			"Something like window.innerWidth will represent",
			"how wide is the window, which might be useful to know",
			"to know the size of the user's screen, for example, to know how many pixels",
			"wide the window happens to be.",
			"And just as there's a window.innerWidth, there's",
			"also a window.innerHeight that represents the height of the window",
			"as well.",
			"Now, window represents the physical part that they're actually seeing.",
			"We've also seen another variable that JavaScript gives us access to,",
			"and that is this document object.",
			"So what is the difference between the window and the document?",
			"Well, the document generally represents the entire web page.",
			"But if web pages are long, oftentimes the web page",
			"doesn't fit entirely inside of the window--",
			"that you generally have to scroll through an entire web page",
			"and the window is only showing you one portion of that page at any given time.",
			"So you can represent the document as, like, this big vertical section",
			"that goes beyond the window.",
			"There might be part of the document that is",
			"above the window, part of the document that is below the window as well.",
			"So window.scrollY is another variable you have access to on the window,",
			"and window.scrollY represents how many pixels far down have you scrolled.",
			"So if you're at the top of the page, window.scrollY",
			"is 0-- you haven't scrolled at all.",
			"But as you begin to scroll, if you want to know how far the user has scrolled",
			"on a page, you can look at window.scrollY",
			"to figure out the number of pixels the user has scrolled in the Y",
			"direction, the up and down direction.",
			"And the entire height of the page is represented",
			"in document.body.offsetHeight.",
			"That represents how tall the entire height of the document is.",
			"And we talk about all this in addition to things like window.innerHeight",
			"and window.innerWidth because using all of these values together,",
			"you can begin to do some interesting calculations.",
			"So one thing you might want to detect, for example,",
			"is has the user scrolled down to the bottom of the page or not?",
			"That might be something you care about knowing.",
			"And it turns out, there isn't an event listener that does this automatically.",
			"But we can calculate it in order to try and figure this out.",
			"If innerHeight is the height of the window,",
			"scrollY is how far vertically the user has scrolled,",
			"and document.body.offsetHeight is the entire height of the document, you",
			"can ask yourself, what needs to be true if the user has",
			"scrolled to the bottom of the page?",
			"And well, if the user has scrolled to the bottom of the page,",
			"well, then scrollY plus the innerHeight, meaning",
			"the amount that they've scrolled, plus the height of the window, that",
			"must be at least or equal to document.body.offsetHeight, meaning",
			"the amount that they've scrolled plus the window takes you down",
			"to the bottom of the page, to the end of a page, to",
			"however tall the document happens to be.",
			"And using that mathematical comparison, we",
			"can actually detect when the user has reached the bottom of the page",
			"and we can actually try and now put that into practice.",
			"So I'll go ahead and open up an example that I have here called scroll.html,",
			"and all scroll.html has right now is 100 paragraphs.",
			"Inside of the body tag I have a p for paragraph, paragraph 1, paragraph 2,",
			"so on and so forth.",
			"I have 100 paragraphs inside of the body of this HTML page.",
			"And that's all that really is there right now, such",
			"that now if I go ahead and open scroll.html,",
			"I see that I have 100 paragraphs that I can scroll through.",
			"And what I might like to do is detect when",
			"I've reached the bottom of the page and maybe do something when I do so,",
			"something like change the color of the page, for instance.",
			"So how might I go about doing that?",
			"Well, I'm going to need some JavaScript.",
			"So I'm going to add some JavaScript, and I'll add an event listener",
			"for window.onscroll.",
			"Onscroll is an event that listens for when I'm scrolling through the window.",
			"And when I scroll through the window--",
			"we'll go ahead and run this function.",
			"We'll just use an arrow function as a shorthand here--",
			"what do I want to calculate?",
			"Well, I want to calculate if window.innerHeight,",
			"meaning the height of the window itself, plus window.scrollY,",
			"meaning the amount that I've scrolled, if that",
			"is at least document.body.offsetHeight, well,",
			"that means I must have scrolled to the bottom of the page",
			"or maybe even a little bit further, if there's a little wiggle room",
			"to scroll past the end of the page.",
			"So if this is true, well, then I've reached the end of the page.",
			"And then we'll go ahead and say document.querySelector('body').",
			"And let's go ahead and change its style, in particular change",
			"its background color, and change the background color to green.",
			"Otherwise, if we haven't reached the end of the page,",
			"then we'll take the body of the page and change its background color to white.",
			"So what we're now doing here is taking advantage",
			"of the properties we know of this window object,",
			"saying when we scroll the window, let's check to see if we add this up",
			"and at least the height of the entire document,",
			"we've reached the end of the page.",
			"Go ahead and change the style of the background of the body accordingly.",
			"Otherwise, change the background to white",
			"or leave it at white if it already is.",
			"So now if I take a look at this actual HTML page and reload scroll.html,",
			"we'll see that the background is initially white.",
			"But as I scroll down, once I reach the bottom,",
			"we'll see that the page changes to green.",
			"It's white before I reach the bottom, but as soon",
			"as I get to the bottom of the page, it turns to green.",
			"And the reason why is because the height of the window, height",
			"of the window here, plus however much I've",
			"already scrolled from the top of the page up until now,",
			"that together is equal to the entire height of the document, which",
			"means we're able to detect the fact that I reached the end of the page.",
			"And as a result, we can change the color of the background to green.",
			"Now, this in itself is not a particularly practical use",
			"of detecting when we've scrolled to the end of something.",
			"We probably don't usually care about changing the background color",
			"when you reach the end of the page.",
			"But there actually are real applications,",
			"and you might imagine this in the context of websites that",
			"allow for things like infinite scroll--",
			"that if you're on a social networking website that",
			"has a whole bunch of posts, you scroll to the bottom of the list of posts,",
			"and then it generates the new set of posts as well.",
			"Or you're looking at news articles and you're scrolling through news articles,",
			"and once you reach the bottom, it'll load a whole new set of news articles",
			"without you having to go to another page.",
			"How is it doing that?",
			"Well, it's a combination of the same types of ideas",
			"that we've been talking about.",
			"Number 1, the ability to detect when you've reached the end of the page",
			"using JavaScript to detect that you're at the bottom of the page,",
			"and number 2, to be able to asynchronously load, using JavaScript,",
			"additional content-- fetch some additional page that has some",
			"additional content, some additional news articles, some additional posts,",
			"and whatnot--",
			"and then take that information and manipulate the DOM",
			"to add that information to the existing web page.",
			"And that, ultimately, is what's going to give us",
			"this power to be able to support something like infinite scroll.",
			"So let's now go ahead and try and see what it would",
			"look like to implement infinite scroll.",
			"I've already started to create a sample application",
			"inside of this application called scroll,",
			"and I've got an app called posts inside of it.",
			"And what the posts app does is it's got a couple of URLs.",
			"It's got a default URL that just loads an index route, and then a posts route",
			"that loads this posts view.",
			"And so lets look at what these do.",
			"Index, all it does is it's going to load a file",
			"called index.html, this template.",
			"And if I make a request to /posts, I need to provide two arguments.",
			"I need to provide a start for what post I want to start with,",
			"an end for what post I want to end with, and then",
			"it's just going to generate some sample posts that",
			"just say, like, Post number 1, Post number 2, so on and so forth.",
			"In practice, you can actually use social network posts in place of this,",
			"but this is good just for demonstration purposes.",
			"So what this is going to do, if I go into scroll and runserver,",
			"is that if I go to /posts and say start=1 and end=10, for example,",
			"then I get a JavaScript object that looks like this.",
			"Recall that a JavaScript object is just a convenient format",
			"for passing information back and forth in JSON format.",
			"And what we have here is a JSON object with a key",
			"called posts that gives me all of the posts--",
			"Post number 1, Post number 2, all the way up to number 10.",
			"And it's giving me those posts because I said start at 1, end at 10.",
			"But I could have specified other numbers as well.",
			"If I had said something like start at 20 and go to 28,",
			"then it's going to give me post number 20 through post number 28.",
			"I can specify the range of posts that I want.",
			"So this now is an API that I have implemented, effectively,",
			"that allows someone to get access to a variety of different posts",
			"by hitting this particular URL, this endpoint, so to speak,",
			"and passing in parameters-- passing in what post they want to start with",
			"and what post they want to end with.",
			"And then they get all of this data back presented to them",
			"in JSON format that can then be used.",
			"And what's nice about this is that now when we're loading posts,",
			"rather than have to just guess at how many posts we need to load",
			"and then require someone to go to another page,",
			"we can just do something like load the first 20 posts,",
			"and now what we'd like to do is if they reach the end of the page,",
			"go ahead and load the next 20 posts by hitting this API endpoint,",
			"getting the next 20 posts, and then filling that in into the HTML page.",
			"So let's see now how that actually works in practice by taking",
			"a look at that template in index.html.",
			"So go into templates, index.html.",
			"And there's a fair bit of JavaScript here, but look at the body first.",
			"The body just has a div for all the posts",
			"that initially is going to be empty.",
			"Now, here's what the JavaScript is going to do, and we'll walk through it.",
			"We start with the first post, so counter is",
			"going to keep track of what post we need to load next.",
			"By default, we're just going to start by loading post number 1.",
			"We have a variable called quantity that's",
			"going to tell us how many posts are we going to load at a time.",
			"Let's just say load 20 posts at a time.",
			"So start with 1 to 20, then 21 to 40, 41 to 60, so on and so forth.",
			"And when DOM content has loaded, go ahead and just",
			"call this function that's called load.",
			"And what the load function does is it figures out",
			"what the start and end should be, it fetches all the new posts, and then",
			"for each of the posts that comes back, is it figures out what [AUDIO OUT]..",
			"So we're asynchronously asking for new posts.",
			"And what the add_post function does is it creates a new div,",
			"populates the post inside of it, and adds it to the DOM.",
			"So now that we have these parts, the ability",
			"to load new posts as by fetching from some URL",
			"all of the posts that we care about, and then for each of those posts",
			"that comes back, add something new to the DOM",
			"as by creating a new HTML element and inserting it into the page,",
			"we have the ability to dynamically load all of these posts.",
			"So if I go not to /posts, but just to this default route,",
			"I'll see that we have something like 20 posts that all show up.",
			"But just 20 posts.",
			"Because every time I call the load function,",
			"that is going to load the next set of posts, for example.",
			"And so what I can do is in the console, if I try running the load function just",
			"by calling it myself, press Return, after a second",
			"or so, the next set of posts show up--",
			"21 all the way through 40.",
			"I call load again.",
			"The next set of posts show up--",
			"41 through 60.",
			"20 posts at a time, all using that asynchronous JavaScript.",
			"But now what I'd like to happen is for all of this to happen on its own,",
			"without me having to intervene and manually write JavaScript calls.",
			"I would just like to say, well, the same type of logic as before--",
			"window.onscroll.",
			"Lets go ahead and say if window.innerHeight plus window.scrollY",
			"is at least document.body.offsetHeight, meaning",
			"if I have scrolled to the end of the page, well,",
			"then just go ahead and call the load function.",
			"That's all these lines are doing.",
			"Every time I scroll, we check.",
			"Did we scroll to the end of the page?",
			"And if we did scroll to the end of the page,",
			"then go ahead and load the next set of posts.",
			"So now I refresh the page, I see Post #1 all the way up through Post #20.",
			"Now watch what happens when I get to Post #20.",
			"If I scroll to the bottom, after a second, the next set of posts appears.",
			"I scroll to the bottom again, I'm at 40.",
			"And then after a second, the next set appears.",
			"Every time I scroll to the bottom, more posts are going to load after that,",
			"allowing me to effectively implement this idea of infinite scrolling",
			"by taking advantage of some JavaScript techniques, where",
			"I can check for when I've got to the end of the page",
			"and then dynamically do something as a result of that, something like load",
			"some additional pages onto the screen.",
			"And so here, too, a lot of power to be had inside of JavaScript.",
			"And a lot of where the power of user interface comes from",
			"is from how it is that the user interface interacts with the user,",
			"thinking about what the user is going to do",
			"and how the page should interact as a result-- something like user scrolls",
			"to the end of the page and they see some new pages show up as well.",
			"And one technique we can use for just making HTML elements a little more",
			"responsive, a little bit more interesting,",
			"is by adding some animation to them as well-- the ability for things",
			"to move around and change their properties in some way.",
			"And it turns out that CSS has support for animation.",
			"CSS has already given us support for things like styling elements,",
			"saying we want this element to be of this color and this size, for example.",
			"But it also gives us the ability to animate those properties as well,",
			"to change the size of something or change the position of something",
			"over some amount of time.",
			"And so let's now take a look at an example of what that might actually",
			"look like.",
			"I'll go ahead and create a new file and I'll call it animate.html.",
			"And inside of animate.html, I'll go ahead",
			"and start by including our usual HTML.",
			"Title is Animate.",
			"And what I'd like to do is just add a little bit of animation using CSS",
			"into this particular page.",
			"I'm going to start with just a heading, a heading that says something",
			"like \"Welcome!\", for example.",
			"It's just going to display a welcome message.",
			"Such that now if I open animate.html, here's what I see--",
			"just a message that says \"Welcome!\"",
			"But now let's add some CSS to it.",
			"Let's go into the style tag.",
			"And for h1, for this heading, I'd like to apply a particular animation to it.",
			"And I first need to specify what the animation's name is going to be.",
			"And I can pick a name for the animation.",
			"I'll say something like \"grow,\" for example.",
			"I'll set the animation's duration to be 2 seconds.",
			"And then the animation fill-mode is like what",
			"direction should the animation move in.",
			"Should it go forwards?",
			"Should it go backwards?",
			"We'll generally want our animation to go forward,",
			"so they're making some sort of forward progress according to some rules",
			"that we're going to specify.",
			"So here I'm saying we're going to animate all of our headings",
			"using an animation called grow, and now I",
			"need to define what that animation actually does.",
			"And to do that, up above in style I'm going to say @keyframes grow.",
			"And what this is going to allow me to do is",
			"specify some keyframes for this particular element,",
			"meaning where should the element start, what should its style properties",
			"be, and then at the end, what should its style properties be?",
			"And CSS is going to take care of the process of figuring out",
			"what needs to happen in all those intermediary fractions of seconds,",
			"for example.",
			"So what I can say is something like, go ahead and grow from--",
			"meaning what should its initial properties be,",
			"and maybe initially I want it to have a font size of 20 pixels--",
			"and then we'll say to font size of 100 pixels, for example.",
			"So all in all, what this is saying is I would",
			"like to apply an animation called grow to all of my headings.",
			"This animation should last 2 seconds and go forwards.",
			"And what is the grow animation going to do?",
			"Well, it's going to mean at the start, anything",
			"that obeys the grow animation will start with a font size of 20 pixels,",
			"and at the end, it will grow to a font size of 100 pixels.",
			"And I have now defined what it is that that animation means.",
			"So now if I go ahead and refresh this page,",
			"animate.html, you'll see that \"Welcome!\" changes size.",
			"Over the course of 2 seconds, it goes from smaller to larger by obeying those",
			"keyframes.",
			"I told it to obey this particular set of instructions",
			"where it goes from a particular font size to another font size,",
			"and as a result, we see the effect here on the page.",
			"And it turns out you can do more than just manipulate size.",
			"You can manipulate just about any CSS property you want.",
			"So if I tell the heading that it should have a relative position,",
			"meaning its position should be relative to other elements or other things",
			"than its parent, I can say you should change your position from being 0%",
			"away from the left side of the screen to being 50% of the way",
			"from the left side of the screen.",
			"And at this point, \"grow\" is probably not the best name for this animation.",
			"I'll call it \"move\" instead.",
			"So animation name is move.",
			"And so now what this animation is going to do",
			"is it's going to say when you run the animation,",
			"go from being right next to the left side of the screen to being about 50",
			"away from the left side of the screen.",
			"So I can go ahead and rerun this.",
			"And we see that's the animation that takes place.",
			"It goes from the left all the way back up to about halfway across the screen.",
			"Refresh the page and it goes ahead and does the exact same thing.",
			"And it turns out, we don't just need to specify a beginning point and an end",
			"point for an animation.",
			"We can specify various different keyframes for different points",
			"within the animation that we would like to capture,",
			"something like at the beginning of the animation,",
			"have this set of CSS properties, maybe halfway through the animation,",
			"have a different set of CSS properties, and then at the very end,",
			"have yet another set of CSS properties.",
			"So I could say something like, if I want the heading not just to move",
			"from left to right but also to move back again, I can say at the beginning,",
			"at the 0% point when you're 0% of the way through the animation,",
			"you should be 0% away from the left-hand side.",
			"When you're 50% of the way through the animation,",
			"you should be 50% away from the left-hand side.",
			"And then when you're done with the animation, 100% of the way through,",
			"let's go back to 0% away from the left-hand side.",
			"I now have three keyframes-- beginning of the animation,",
			"middle of the animation, back to the beginning of the animation again--",
			"and the effect of this is if I refresh the page, we go to the right",
			"and then we go back.",
			"We're able to move one direction and then move back.",
			"And there are other properties we can use",
			"to manipulate these animations as well.",
			"I can set the animation-iteration-count, for example,",
			"to 2, to mean rather than just do the animation once and then stop,",
			"do the animation twice and then stop.",
			"So I refresh, it goes to the right and then it goes left,",
			"and then it repeats that a second time.",
			"And it turns out if you really want, you can",
			"set this to infinite, to mean never stop performing that animation.",
			"It's consistently going to have this heading, move to the right,",
			"and then move left, according to those keyframes that I have specified.",
			"And so if you ever see things moving around on a page,",
			"interactive in some way, there are a number of ways to do it.",
			"You can animate things using JavaScript, for example.",
			"But there are many cases where CSS alone is pretty good at just",
			"creating these types of animations.",
			"And while this animation right now is just running forever,",
			"we could use JavaScript in order to control that animation as well.",
			"So let's see an example of what that would look like.",
			"I'll go back here.",
			"In the body of the page, in addition to a heading",
			"that says \"Welcome!\", I'll go ahead and add a button that",
			"just says \"Click Here!\", for example.",
			"And now what I'll do is add a little bit of JavaScript.",
			"I'm going to add some JavaScript so that the button can now",
			"control the animation, decide when the animation is going to start and stop.",
			"And so what we'll do inside of the script is to first say",
			"document.addEventLis tener('DOMContentLoaded'), meaning wait",
			"until the DOM is done loading, as we've done before.",
			"And let me now get that h1 element--",
			"document.querySelector('h1').",
			"",
			"And initially, I'm going to set its style.animationPlayState",
			"equal to paused.",
			"So animationPlayState is a property of the style that",
			"lets me decide if the animation is playing or paused,",
			"and I can control that using JavaScript.",
			"Rather than just say run infinitely forever,",
			"I can say the animationPlayState should start out as paused, by first getting",
			"the h1 element and then modifying the animationPlayState property",
			"of that particular element.",
			"But now what I'd like to happen is any time someone clicks on the button,",
			"I want to change the animation play state.",
			"So I'm going to say document.querySelector('button'),",
			"meaning get that button, and when someone clicks on the button,",
			"let's run this function where if the current animationPlayState is paused,",
			"well, then, go ahead and set animationPlayState equal to running.",
			"And otherwise, if it's already running, then",
			"let's go ahead and set the animationPlayState equal to paused.",
			"So all in all, what this function is going to do",
			"is it's going to get me the heading, pause this initially,",
			"and every time the button is clicked, run this function where",
			"the function says if we're paused, go ahead and start running the animation.",
			"Otherwise, go ahead and pause the animation",
			"by modifying that animationPlayState property of the heading.",
			"So now if I refresh this page, right now we have \"Welcome!\" plus a button",
			"that says \"Click Here!\"",
			"And initially, everything is paused.",
			"There's no animation happening.",
			"But I click here and that begins the animation, which",
			"would go on indefinitely until I decide that I want to stop it, at which point",
			"I click it again and the animation pauses.",
			"And I can control when to start and when to pause that animation as well.",
			"And so this can be helpful and nice when you",
			"want to create something a little bit more interactive,",
			"something animated on the page.",
			"But this is especially helpful because it means that you can gradually",
			"change CSS properties over time.",
			"Rather than just immediately change something,",
			"you have the ability to animate something",
			"to make it work a little bit better.",
			"So let's take a look at an example of how",
			"you might put that idea into practice.",
			"Let's go back to our posts example, where we had this infinite scrolling",
			"list of posts, but imagine now that we want the ability to hide posts",
			"when we're done with them.",
			"So I've prepared an example called hide, which",
			"is very similar to what we had before.",
			"But this time, I've just added one extra button and the button",
			"says \"Hide\" on every single div.",
			"Right now, clicking the Hide button does nothing.",
			"We'll go ahead and implement that in just a moment.",
			"But first to see how this worked, if you go into hide,",
			"go into the index.html template.",
			"The only change that's been made here is what happens when I add a new post.",
			"Recall again that what this application does is it loads posts from a server.",
			"And then when it gets to those posts, it loops",
			"over each of the individual posts, which is just a string of text,",
			"and it adds that string of text inside of an element",
			"onto the page via this add_post function.",
			"And what the add_post function is going to do here",
			"is first create a new element, create a div in which to store that post,",
			"give it a class name, because that's how we're going to animate it,",
			"and then set its inner HTML equal to the contents of the post--",
			"something like post number 1, post number 2, post number 3--",
			"and then add a button that just says \"Hide.\"",
			"And then we're going to go ahead and add that to the DOM as well.",
			"So that's what add_post is now going to do.",
			"We're sort of generating some HTML using this JavaScript code",
			"and then adding that HTML to the page.",
			"And now we're adding is a div that has not only",
			"the contents in the post as text, but is also",
			"going to give us access to a button that ultimately we",
			"hope is going to let us hide that post as well.",
			"So how do we actually get the hiding of the post to work?",
			"Well, what we want to do is somehow detect",
			"when the user clicks on one of those Hide buttons.",
			"So there's a number of ways we could do this,",
			"but one way is just to listen for any time anyone clicks",
			"on the document as a whole.",
			"Any time anyone clicks on the document, I",
			"might like to ask something like, what did they actually click on?",
			"And it turns out that with most event listeners,",
			"the function the event listener takes in can",
			"take as an optional argument the event itself, which",
			"is a JavaScript object that contains information about the event that",
			"happened, like the click event or the scroll event",
			"or the keydown event or the keyup event, for example.",
			"And one of the properties you get access to",
			"is event.target, which is like what was the target of the event?",
			"In this case, what was the thing that was actually clicked on?",
			"And I'll go ahead and save event.target inside of a variable called",
			"element, where the idea now is that whatever gets clicked on, that is",
			"the event's target.",
			"We're going to save that inside of element.",
			"And what I want to know is is element, is that one of the Hide buttons?",
			"I want to know, is it a Hide button.",
			"I could have also attached an event listener to each of the Hide buttons.",
			"This is just an alternative way of doing it",
			"that I'm showing you for sake of demonstration",
			"where we say when we click anywhere in the document,",
			"figure out what was clicked on and save it inside of this variable.",
			"And if it's a Hide button, then it's going to have a class of hide,",
			"because I gave every Hide button a class of hide.",
			"And so what I can say is if element.className equals hide, well,",
			"that means that what was clicked on is something with the class of hide,",
			"we can assume that it is in fact a Hide button.",
			"And then what I want to do is I can do something like element.remove",
			"to say go ahead and get rid of that element.",
			"So now what does this do?",
			"If I refresh the page--",
			"let's try it.",
			"Post #1.",
			"If I hide it, I want to hide Post #1.",
			"All right, that didn't quite work.",
			"It was close-- it got rid of the Hide button.",
			"But I didn't want to get rid of the Hide button,",
			"I wanted to get rid of the whole post.",
			"So what's going on here is it seems to be that if the element's class name is",
			"hide, meaning I clicked on a Hide button,",
			"element.remove just removes that element.",
			"It removes the Hide button, but it doesn't",
			"remove the post that contains it.",
			"And if you think about this in terms of the DOM, the post is a div",
			"and its child element is the button, this Hide button.",
			"And so you remove the button, but it doesn't also remove the post as well.",
			"If you want to remove the post as well, you",
			"need to remove not the element, but the element's parent.",
			"And in JavaScript, it turns out there's a way to do that, too.",
			"Rather than element.remove, I can say element.parentElement.remove to say",
			"take the element, get its parent, and remove that.",
			"So now I refresh the page.",
			"Now I see a Post #1.",
			"I want to hide it.",
			"I hide Post #1 and all right, now I see Post #2 and Post #1 has gone away.",
			"If I want to hide Post #3, I hide Post #3.",
			"Now Post #3 is gone.",
			"Now I go straight from Post #2 Post #4.",
			"So this works, but it's also not immediately obvious what's going on.",
			"Because all of the posts are the exact same height, when I get rid",
			"of Posts 1 and 3, it's not immediately obvious to the eye",
			"that they've gone away because Posts 2 and 4,",
			"they look almost exactly the same.",
			"You really have to be paying attention to know that the hiding worked.",
			"And so this can be a time where animation can actually",
			"be quite helpful.",
			"So what I can do is say something like, let's go ahead",
			"and give this post an animation associated with every post.",
			"We'll give it an animation-name called hide,",
			"an animation-duration of 2 seconds-- we'll say it'll take you 2 seconds",
			"in order to hide--",
			"and an animation-fill-mode of forwards, I",
			"want to go forwards with the animation.",
			"And initially, I'll give the post an animation-play-state of paused, meaning",
			"initially, I don't want the animation to be running, because I don't",
			"want to hide all the posts immediately.",
			"Pause this animation.",
			"Later, we'll go ahead and run the animation",
			"in order to actually hide the post.",
			"Then I need to define, what does it actually mean to hide the post?",
			"And I'll say, well, all right, at the 0% mark, what does it mean?",
			"Let's give yourselves an opacity of 1.",
			"Opacity is a CSS property that just controls how opaque",
			"or how transparent an HTML element happens to be.",
			"And at the end, 100% of the way done with the animation,",
			"we'll set opacity to 0.",
			"So initially, we can fully see the element.",
			"At the end, the element is totally transparent.",
			"And now what I need to do is actually trigger this to happen somehow.",
			"So this is probably going to happen inside of my event listener.",
			"We're-- instead of removing the element right away,",
			"let me just take the parentElement and set its animationPlayState equal",
			"to running, for example, meaning when I click the Hide button,",
			"go ahead and run the animation that will change the opacity from 1 to 0 over",
			"the course of a couple of seconds.",
			"And then if I really want to, I can add another event listener",
			"to say take the parentElement, addEventListener.",
			"There's an event called animationend, which",
			"happens when the animation is over.",
			"And then I can say, all right, when the animation is over,",
			"we'll then go ahead and remove the element.",
			"So all in all, rather than just immediately remove the element when I",
			"click on the button that says Hide, what I'd like to do is say if you click",
			"on a button and the button is Hide, go ahead and get the parent element--",
			"not the Hide button, but the post itself--",
			"set its animationPlayState to running, meaning run the hide animation,",
			"and then add an event listener to the parent, to that post as a whole,",
			"to say when the animation is over, go ahead and remove that entire post",
			"from the DOM altogether.",
			"So what is the effect of all of this now, of having this animation",
			"and running it?",
			"Well, now if I refresh the page, I see all these posts.",
			"If I try and hide, like, Post #2, for example, you'll",
			"see that the opacity changes and then it slowly disappears.",
			"And then only after it's totally transparent,",
			"the post disappears entirely.",
			"So I can say hide Post #4, it disappears, and then Post #5",
			"jumps up to fill its place.",
			"And I can do that for any of these posts,",
			"triggering the animation when I click on the Hide button.",
			"And so this is part of the value of what animation can do,",
			"is to be able to make our user interfaces a little more",
			"pleasant from the perspective of the user",
			"by not immediately getting rid of a post, but by having a nice fadeout",
			"so it disappears nicely.",
			"Now, even this is not perfect animation wise.",
			"Like, one thing you might notice is that it",
			"jumps up as soon as the post is gone.",
			"If I hide Post #3, I hide it, it disappears, and Post #5",
			"sort of jumps up very abruptly in order to fill its place.",
			"What I might like is to be a little bit cleverer, to somehow shrink",
			"the size of the post after it's gone so that the post doesn't jump into place",
			"but it slides a little bit more naturally into place.",
			"And so there's some additional things I can play with here.",
			"Maybe I want to say that, all right, let me make this animation a multiple part",
			"animation.",
			"So here, instead of just from 0% to 100% setting the opacity from 1 to 0,",
			"maybe in the first 75% of the animation, that",
			"will take care of reducing the opacity, going down from 1 all the way down",
			"to 0.",
			"But in the last 25% of the animation, we'll still end with an opacity of 0,",
			"but anything that creates vertical space, I want to reduce down to 0.",
			"So the height should be 0 pixels, the line-height,",
			"which is how high the text is, should also be 0 pixels.",
			"And any padding I want to go away.",
			"It turns out I've added some margin to the bottom of the post--",
			"I want to make that go away as well.",
			"So I want to set all of those to 0 from whatever their initial values happen",
			"to be, that initially the height is like 100% of what the height could be.",
			"Likewise for line-height, 100% of the parent.",
			"Initially I have, like, 20 pixels of padding",
			"and a margin at the bottom of 10 pixels.",
			"And I want all of that to still be true 75% of the way through the animation.",
			"But it's only in the last 25% of the animation",
			"that I want to set all of these vertical height properties down to 0.",
			"I want to remove all the height, remove the line-height,",
			"remove all the padding.",
			"And the effect of this is I'll have an animation now where",
			"for the first 75% of the animation, the only thing that changes is the opacity.",
			"The opacity goes from 1, fully visible, to 0, fully transparent.",
			"And then in the last 25% of the animation,",
			"the post is already transparent.",
			"You can't see it, but it's still taking up physical space on the page.",
			"But we're going to now reduce the height of that post",
			"so that now you won't be able to see it at all.",
			"So now if I refresh this page, here again are all the posts.",
			"But now if I click Hide on a particular post,",
			"we'll see that it first fades out, and then its height",
			"shrinks so that the next post slides very nicely into place.",
			"I can do that again.",
			"Hide the post, it's transparent, and then it slides into place.",
			"And this, again, is just an application of this idea of CSS animations,",
			"using properties of animation to make our interfaces a little bit",
			"nicer to use, a little bit clearer visually to the user",
			"that one post has gone away and the rest of the posts",
			"have now scrolled up in order to take their place.",
			"So now we've been able to use JavaScript to create",
			"a lot of nice user interfaces.",
			"We've been able to create a single-page applications,",
			"to create infinite scrolling, to be able to create some animations as well",
			"and use JavaScript to be able to control them.",
			"But one thing you might be realizing at this point",
			"is that our applications are starting to get fairly complicated.",
			"There's a lot of JavaScript code needed to manipulate",
			"a lot of different parts of our application at the same time.",
			"And you can imagine that as web pages start to get more complex",
			"and as you want to start making them more interactive and more dynamic,",
			"there's going to be a lot of JavaScript code required in order to keep",
			"everything in sync, in order to make sure that all of the elements",
			"are updated when they should, so on and so forth.",
			"And it's for that reason that in recent years, a lot of JavaScript",
			"has now turned to some JavaScript libraries or frameworks that",
			"allow to more efficiently and more effectively",
			"create user interfaces that are more interactive and more reactive.",
			"And one of the most popular of these is a framework known as React.",
			"React is a JavaScript library that is going",
			"to enable us to be able to design user interfaces that",
			"are very interactive, where the content of the web page updates",
			"automatically based on some underlying state.",
			"And what we'll do now is take a look at a brief taste of React",
			"to get a sense for how frameworks like it can actually work",
			"and can help us in designing some interactive and useful interfaces",
			"for users to be able to interact with.",
			"React is ultimately based on this idea of declarative programming,",
			"a particular style of programming which is",
			"different from the types of programming you",
			"might be familiar with-- more classical programming styles like imperative",
			"programming.",
			"In imperative programming, you generally give the computer commands,",
			"tell the computer what to do.",
			"For example, if we had that counter program from before",
			"and we wanted to update the counter from one number to another number,",
			"in the view, like the HTML that the user sees,",
			"we would include something like a heading that",
			"just has the number 0 inside of it.",
			"And then the logic in imperative programming",
			"would take something like this form.",
			"It would be like, all right, first document.querySelector(\"h1\") to get",
			"that h1 tag.",
			"Get it, it's in our HTML.",
			"parseInt-- we'll take the string and convert it into an integer,",
			"and we can save that inside of a variable called num, for example.",
			"And then after that, if I want to increase it,",
			"I would take this variable num and just add 1 to it-- num plus equals 1,",
			"add 1 to it.",
			"And then if I want to update this heading in order to replace the 0 with",
			"a 1, for example, well, then I would need to say",
			"document.querySelector(\"h1\"), set the inner HTML equal to that number,",
			"for instance, in order to say, all right, num is now 1.",
			"Go ahead and replace that in the view.",
			"But this is a fair amount of code to do something fairly simple,",
			"just like increase a number by 1.",
			"And the reason why is because we've had to be",
			"very explicit about what instructions we're giving to the web browser.",
			"We're saying first, grab the h1, figure out what number is inside of it,",
			"add 1 to that number, and then replace it inside of this tag.",
			"What declarative programming is going to allow us to do",
			"is it's going to allow us to just describe what state should",
			"be displayed on the page in what form.",
			"In declarative programming, in our view, like the HTML-like code",
			"that we're going to be writing, we're just",
			"going to say something like, h1, and then in curly braces num,",
			"to mean fill in the number here.",
			"And this is what the React syntax is going to look like.",
			"And then the logic code, if we want to increment that number by 1,",
			"is we just need to say num plus equals 1.",
			"Add 1 to the number.",
			"And the effect of that is that since we have declared that inside of this",
			"heading, it should be whatever the value of the number",
			"is, when we increment the value of number,",
			"React is effectively just going to update the view so",
			"that the number updates as well.",
			"And so this will be some of the power that React gives us.",
			"React lets us divide our application into a whole bunch",
			"of different components, where a component is something",
			"like this thing here that is keeping track",
			"of some sort of count, along with a button that might manipulate",
			"it, and then make that component based on some underlying state,",
			"some underlying variables that represent the state of the application--",
			"something like the current number.",
			"And then we can manipulate that state, and when we manipulate the state,",
			"that will have an impact on what the user actually sees,",
			"and React will handle the process of updating that user interface for us.",
			"There are a number of ways to get React working on our web page,",
			"but the simplest is probably just to include these three JavaScript",
			"packages inside of our web page.",
			"So we're first going to include React itself,",
			"which is going to be the library that's going to allow us to define",
			"these components and how they behave.",
			"Then it's ReactDOM, a special package that's",
			"going to allow us to take React components",
			"and insert them into the DOM, the document",
			"object model that represents the structure of the entire page.",
			"And then finally, Babel is going to be a package",
			"that we're going to use in order to translate code",
			"from one language to another.",
			"It turns out that when we're writing React code,",
			"we're not actually going to be writing JavaScript.",
			"We're going to be writing in an extension to JavaScript known as JSX.",
			"And JSX is going to be an extension to JavaScript that",
			"looks a lot like JavaScript, but has some additional features.",
			"In particular, it has the ability to effectively allow",
			"us to represent HTML inside of our JavaScript code",
			"in a way that's much easier to read and it's",
			"going to be convenient for us to deal with.",
			"Browsers, on the other hand, don't understand JSX automatically,",
			"so what we're going to use is a tool like Babel",
			"to convert that code into plain JavaScript",
			"that our web browsers are ultimately going to be able to understand.",
			"The best way to get a feel for this kind of thing is just to see it in action.",
			"So I'll go ahead and create a couple of React applications,",
			"just to get a sense for how it is that you can use",
			"React in your own applications as well.",
			"So let's start by taking a look at react.html.",
			"And what I have here is the beginning of an HTML page.",
			"Inside the head section, what you'll notice",
			"is I've already included these three script tags.",
			"And what these script tags are doing are just",
			"including those three JavaScript libraries",
			"we were talking about a moment ago.",
			"I have a title for the page just called React.",
			"And now let's start to fill in the body of this web page.",
			"I'll begin by adding a div, which I'll give an ID to.",
			"I'll call it app, but I could call it anything.",
			"And this is where our application is going to go.",
			"But right now I'm just going to leave it as empty.",
			"It's going to be React's job to fill in this div with the content of our user",
			"interface.",
			"And now beneath that div, I'll start to write some JavaScript.",
			"But remember, I'm not going to be writing JavaScript, per se, but rather",
			"JSX, that extension to JavaScript.",
			"So in this case, I'll need to add an extra attribute. type=\"text/babel\",",
			"and all this is doing is telling my browser that it's going to need",
			"to translate this JSX code into JavaScript code that the browser is",
			"actually going to be able to understand before it tries to run this code.",
			"In practice, if you were developing a real application, what",
			"you would want to do is you would want to do this translation ahead of time,",
			"prior to deploying the application.",
			"But here we're just going to translate it on the fly.",
			"And so all of our React applications are going",
			"to be composed of components, where a component is just some part of my web",
			"application's user interface.",
			"And to describe a component, I can write a JavaScript function.",
			"So I'll create a function called App, which is",
			"going to represent this app component.",
			"And what's going to go inside of this app component?",
			"Well, it's a function, so it's going to return something.",
			"And what it's going to return is what should appear inside of that component.",
			"And this app component could really just be, for example, a div",
			"that says \"Hello!\", let's say.",
			"And this is where the power of JSX really",
			"starts to come in, that here I can write HTML-like syntax",
			"inside of my JavaScript code, and JSX is going to be able to understand it.",
			"So this function right here is a function called",
			"App that is representing a React component,",
			"and when this component is rendered onto my web page, it's going to say \"Hello!\"",
			"So there's one last line I need inside of my JavaScript now,",
			"and that is to actually render this component into the page.",
			"To do that, I'll say ReactDOM.render, and the first argument",
			"to this function, ReactDOM.render, is what component would I like to render?",
			"The component is this app component that I just created.",
			"And so I'll say App, again using this HTML-like syntax.",
			"And then the second argument is, where on the page",
			"would I like to render this component?",
			"And I want to render this component right here on line 10, where",
			"I have a div whose ID is app.",
			"So I'll need to add some JavaScript code to find that particular div.",
			"And to do that, I can just say document.querySelector and then",
			"#app to say find the element with an ID of app,",
			"and that is where I would like to render this app component.",
			"So I first created this empty div, then I defined this function",
			"representing a React component.",
			"And then after that, we're going to render that component",
			"inside of the HTML page itself.",
			"So now if we were to open a browser and see what this page actually",
			"looks like--",
			"I'll make the text a little bit bigger--",
			"you see that we actually do see the word \"Hello!\"",
			"And if I make a change to the component and refresh the page,",
			"it will change the page as well.",
			"So if the component instead displayed \"Hello, world!\",",
			"well, then I refresh the page and the page now also says \"Hello, world!\"",
			"And because this is JavaScript, I can add JavaScript code to the function",
			"just as I could with any function in JavaScript.",
			"Imagine, for example, that I had some variables like--",
			"let's create a variable x, which is equal to 1,",
			"and a variable y, which is equal to 2.",
			"Inside of this div, rather than just render some text,",
			"I can use curly braces to say plug in the value of some JavaScript",
			"expression.",
			"I could plug in the value of x plus y, for example,",
			"and now by including x plus y in these curly braces,",
			"JavaScript is going to evaluate what is x plus y",
			"and display that inside of the div instead.",
			"And so now when I refresh the page, you see",
			"that the page just says 3, for example.",
			"And so that's the basics of React.",
			"We create these components and then render those components,",
			"all using the power of JavaScript.",
			"But where React starts to get more powerful",
			"is when we can reuse components.",
			"The whole idea of a component is it represents some part of the user",
			"interface, and I could reuse that same component",
			"across multiple parts of the interface as well.",
			"Imagine, for example, that inside of my app component,",
			"I was going to render a div that had three headings, each of which",
			"said \"Hello!\"",
			"So there's one heading, there's another one,",
			"and we'll add a third one there as well.",
			"So I have a div with three headings inside of it,",
			"and we can see what that looks like.",
			"Each one of them says \"Hello!\"",
			"But there's some repetition here.",
			"I'm having to use this h1 tag three times,",
			"all to create exactly the same UI element on the page.",
			"This is a case where I can create a separate component",
			"and then just reuse that component, rather than have",
			"to repeat myself multiple times.",
			"So how could I do that?",
			"Well, remember that in JavaScript, we can write a function",
			"to represent a React component.",
			"So I'll add another function here and I'll",
			"call that function Hello, because it's going",
			"to represent this hello component.",
			"And this Hello function is also going to return something,",
			"and what it's going to return is a heading, an h1, that just says \"Hello!\"",
			"And so now inside of my app component, rather than render three separate h1s,",
			"I can simplify this a little bit to just say \"Hello.\"",
			"Here, I'm saying, go ahead and render a hello component here,",
			"render a second one and a third one after that.",
			"Each time I render a hello component, it's",
			"going to display as this heading that just says \"Hello.\"",
			"So I refresh the page and nothing changes.",
			"I still see three headings, each of which says \"Hello!\"",
			"because inside of my app component, I'm rendering this hello component",
			"three times and each time, it's going to display this h1.",
			"But where components start to get more powerful",
			"is when they're not always displaying the same information every time,",
			"but when we can parameterize those components with properties.",
			"Or as React simplifies them, props, short for properties.",
			"So what would that mean?",
			"We see that HTML elements can take attributes.",
			"Likewise, React components can take properties, where maybe I don't just",
			"want to say hello, but I want to say hello to someone-- hello to Harry",
			"or to Ron or Hermione, for example.",
			"So I could say Hello name=\"Harry\", using syntax much like an HTML attribute,",
			"then here I say Hello name=\"Ron\", and then finally Hello name=\"Hermione\".",
			"And so now my hello component is accepting this prop,",
			"this property called name, which is different for all three",
			"of these components.",
			"And so inside this Hello function now, I would like the Hello function",
			"to take advantage of these properties, of these props.",
			"And so I'm going to add an argument to the Hello function.",
			"That argument is conventionally just called props.",
			"And now, instead of just saying Hello, I'm going to say Hello comma.",
			"And then remember, to plug in a JavaScript value, I use curly braces.",
			"And inside of those curly braces, I can say props dot and then",
			"whatever the name of the property is.",
			"In this case, the name of the property is just name.",
			"So I can say props.name to say whatever the name prop is,",
			"go ahead and plug that in right here inside of the hello component.",
			"So the hello component is going to say Hello comma, and then someone's name.",
			"So I can save that, refresh the page.",
			"And now I see \"Hello, Harry!\", \"Hello, Ron!\", and \"Hello, Hermione!\"--",
			"three different components, each of which",
			"is still just this hello component, but we're",
			"rendering it with different props, one time with the name of Harry,",
			"one time with the name of Ron, and one time with the name Hermione.",
			"And so this is where components can start to get a little bit different.",
			"By passing in different props into those components,",
			"we can decide how that component is ultimately going to render.",
			"But let's add to this a little bit and start to add state",
			"into our React components as well.",
			"And state is going to mean any kind of data",
			"that we want to store inside of the component itself.",
			"And for this, let's try to recreate the counter application",
			"that we created when we first introduced JavaScript, where we were really",
			"just creating a button that allowed you to count,",
			"and it counted up from 0, 1, 2, 3, 4, et cetera.",
			"So to do this, let's create a new file.",
			"I'll create a new file and just call it counter.html.",
			"And we can start just by copying the contents of react.html",
			"into our counter.html file.",
			"We're still going to use the same script tags",
			"and we can still have an app component, but what's",
			"going to be inside this app component is going to be a little different.",
			"I'll change the title of the page to be Counter instead of React.",
			"So what goes inside of the app component?",
			"Well, if we're going to do this counting,",
			"we need a div that's going to display the number that we've currently counted",
			"to, something like 0 to start with.",
			"And we're going to need a button.",
			"This button is just going to be Count, which",
			"will be the label for that button.",
			"So a div that just says 0 and a button that says Count.",
			"And now if I open up counter.html--",
			"I'll make it a little bigger--",
			"you can see that I have this number 0 here and a button that says Count.",
			"Of course, right now, clicking on the button",
			"doesn't do anything because I haven't written any JavaScript",
			"code to say what should happen when this button is actually clicked on.",
			"But before we get there, let's modify this program a little bit.",
			"Right now, I've written the number 0 directly into the div itself,",
			"but it's not always going to be 0.",
			"Eventually, as I start counting by pressing that Count button,",
			"that number is going to change.",
			"So what I'm going to do now is factor this 0 out",
			"into what's known as state inside of my React component.",
			"And here, one way to create state in my React component",
			"is to use a special function inside of React called useState.",
			"This is one example of a React hook that allows",
			"me to add some additional functionality into my React component.",
			"And the argument to React.useState is going",
			"to be the initial value of that state.",
			"I'm going to start counting and I want to start counting from the number 0,",
			"so I'm going to include the number 0 as the argument to this useState function.",
			"So we're going to start counting at 0.",
			"And what this useState function returns is really an array of two things.",
			"It's going to be a variable that I can give a name to--",
			"I'll call it count--",
			"and also a function that I'm going to call setCount.",
			"And that function is going to allow me to set the value for the state,",
			"if ever I need to change the state at some point in the future.",
			"So this useState function accepts 0, the initial state, as its argument.",
			"And then I get two things back.",
			"I get the state variable itself, called count,",
			"and I get a function for changing that state when I need to.",
			"So now instead of rendering a 0 inside of the div",
			"just by writing the number 0, I'm going to instead in curly braces",
			"go ahead and render whatever the value of count is.",
			"Initially, it's going to be 0, but eventually, that number might change,",
			"and I want my UI to reflect the changes in the underlying state.",
			"So right now if I refresh the page, it still says 0,",
			"because the initial state was set to 0, but I could change that.",
			"If initially that initial state was some other value, I could refresh the page",
			"and see a different value appear for the count instead.",
			"Whatever the value of this count variable is in the state,",
			"that's going to be what the user is going",
			"to see when they're looking at my user interface",
			"and when they see my component.",
			"So now let's make this button actually do",
			"something, because right now, the number is never changing.",
			"To do that, I can add an onClick handler.",
			"And notice one difference between onClick in React",
			"and onclick as we traditionally used it in JavaScript--",
			"I'm using this capital C, and that's just a common React convention",
			"when we're defining event handlers.",
			"And here, I'm going to say onClick, and then in curly braces",
			"the name of a function-- a function that I would like",
			"to run when this button is clicked.",
			"And I can call that function whatever I'd like.",
			"I'll call it updateCount, for example.",
			"And now what I need to do is define a function called updateCount.",
			"And I'm going to define that function inside of this React component,",
			"inside of my app function.",
			"It turns out in JavaScript, you can have functions that",
			"are defined inside of other functions.",
			"So I'll define this function, called updateCount,",
			"and what do I want the updateCount function to do?",
			"Well, what I'd like to do is just increase count by 1.",
			"And you might think that I could do that just",
			"by saying count equals count plus 1, but it turns out",
			"you can't quite do that in React.",
			"In React, whenever I'm using this useState,",
			"if I want to change the state, I have to use this function",
			"that useState provides to me for whenever I",
			"want to set the new value of the state.",
			"So rather than count equals count plus 1, I have to use the setCount function,",
			"and the argument to setCount is going to be count plus 1.",
			"So setCount is this function that is going to change the underlying state",
			"inside of my component, and the argument is what should the new state be.",
			"And in this case, it's just going to be count plus 1,",
			"one more than whatever the count was before.",
			"So I can save that.",
			"And I'll go ahead and refresh the page.",
			"It starts at a 0, but every time I click on this Count button,",
			"you'll notice the count increases by one.",
			"And again, I have no code that's saying go into the div and change whatever",
			"is inside of the div.",
			"All I have inside of this div is this reference to this state variable count.",
			"And whenever the state changes, JavaScript and in turn React",
			"knows that what React needs to do is to recreate this component,",
			"rerender the component by displaying the new value of this state variable.",
			"And then when the button is clicked on, we're",
			"able to run this function to change the value of that underlying state.",
			"So by taking advantage of these React components with state,",
			"we can start to represent information inside of our components",
			"and then define what our component is going to display as,",
			"just by representing HTML in terms of that underlying state,",
			"deciding how we should use that state in order",
			"to render an interface that the user is ultimately going to see.",
			"So let's now try and put these pieces together",
			"and create a web application that uses these abilities of React",
			"to define state and to manipulate that state and in turn,",
			"update a user interface based on changes that",
			"are happening to that underlying state.",
			"And we'll create an application that will just",
			"display some simple mathematical questions to the user",
			"and quiz the user on some basic addition facts, for example.",
			"So let's create that application.",
			"I'll create a new file and call it addition.html.",
			"And inside of addition.html, I'll start again",
			"just by copying the contents of this counter.html file,",
			"because the framework, the structure of this page will be similar.",
			"But I'll go ahead and clear out what's inside of my app component,",
			"at least for now.",
			"And so what would I like for my app component to render?",
			"Well, let's go ahead and render a div.",
			"And if I want to create an application that's",
			"going to ask the user some mathematical questions",
			"and then prompt the user to type in an answer,",
			"there are at least two parts of this user interface that I'm going to need.",
			"I'm going to need a place to display the addition fact answer, like what",
			"is 1 plus 2, for example.",
			"And then I'll need an input field where the user can type in their response",
			"to that question and then see if they got the question right or wrong.",
			"So inside the div, I'll start by creating",
			"a div that displays the question itself, something like 1 plus 2.",
			"And then beneath that, I'll just add an input field.",
			"Eventually, we'll add more to this user interface, but for now,",
			"all we really need is a div that displays",
			"the mathematical question and an input for the user to type in their response.",
			"So now if I go ahead and go to addition.html, here's what I see.",
			"I'll make it a little bit bigger.",
			"I see 1 plus 2, and then an input field where the user",
			"could start to type in their response.",
			"But just as we did before, I don't want to literally write the numbers",
			"1 and 2 into what I'm returning.",
			"Instead, I want these 1 and 2 to be based on some underlying state",
			"inside of my application.",
			"The application is going to maintain state",
			"about what two numbers to add together, and then it's",
			"going to display a user interface based on that state.",
			"So what could I do here?",
			"Well, one thing I could do is again use React.useState, start this number off",
			"as 1, and maybe call this num1 and then a function to set number 1.",
			"And then I could do it again.",
			"Let's create num2 and set num2 to be React.useState(2).",
			"And I could have two different pieces of state, num1 and num2, each of which",
			"has a different function, setNum1 and setNum2, that",
			"are each representing the two different numbers that I",
			"would like to add together.",
			"But already this is starting to get messy and over time,",
			"as I add more different pieces of state to the application--",
			"as we'll see in just a moment--",
			"the state might start to get more and more complex,",
			"with more and more different functions and variables.",
			"So it's often helpful, and a common practice in React,",
			"to combine multiple pieces of state just into one JavaScript object that's",
			"maintaining all of the different pieces of state for this particular component.",
			"And to do that, I'll again use React.useState.",
			"But instead of setting the state initially to be a number like 1 or 2,",
			"it's instead going to be a JavaScript object that",
			"has keys and values, where I could say let num1 be the number 1",
			"and let num2 be the number 2.",
			"Much like a dictionary in Python, for example,",
			"where I have multiple different values, num1 and num2, all together",
			"inside of the same object.",
			"And I can call that state and have a variable--",
			"and have a function called setState that is going",
			"to update the value of that state.",
			"And so rather than have to have all of these different variables,",
			"I can simplify a little bit to just state and a function to set the state,",
			"and the state now has these two different pieces, number 1",
			"and number 2.",
			"And so now instead of rendering literally the number 1,",
			"using curly braces I can say state.num1.",
			"And instead of rendering literally the number 2,",
			"I can say state.num2, drawing upon that state",
			"to decide what it is going to appear inside of the user interface.",
			"And so right now, the page appears no different.",
			"But if I were to change those initial values of the state,",
			"maybe make it 2 and 4, for example, and then refresh the page,",
			"well, now it displays as 2 plus 4.",
			"And so that's helpful.",
			"We now have a user interface where the numbers are based on the state.",
			"But now what I'd like to do is add the ability",
			"to keep track of what the user typed in so we can tell if the user correctly",
			"typed in the answer to this mathematical problem.",
			"And how would I do that?",
			"Well, the state represents any information",
			"that we need to keep track of inside of this component.",
			"And so in addition to storing the two numbers inside of the state,",
			"I likely also need to keep track of a third piece of information,",
			"which is the response--",
			"what did the user type in into this text field?",
			"And so we'll add a third part of the state called response that initially",
			"will just be the empty string.",
			"It will just be nothing.",
			"And then this input field, I'm going to give it a value,",
			"and the value is going to be state.response.",
			"Whatever the user typed in as the response,",
			"that's stored inside of the state, and that",
			"is going to be the value of what shows up in the input field.",
			"And so that way, whatever is in the input field will have access to it",
			"inside of this state.response variable.",
			"But there is a problem, and here's the problem.",
			"I'll try refreshing the page, I'll go into this text field.",
			"And let's say I know the answer.",
			"I know 2 plus 4 is equal to 6.",
			"I'm now going to press 6 on my keyboard.",
			"But as I press 6 on the keyboard, nothing's happening.",
			"No 6 is appearing inside of the text field,",
			"even though I am pressing the key on the keyboard.",
			"So why is that?",
			"Why is the text field not updating?",
			"Well, the reason is the value of the input field, whatever",
			"appears in the input field, is this value, state.response,",
			"and state.response is always this empty string",
			"and never changing what state.response is equal to.",
			"And so I need to change this a little bit.",
			"I need to add as an attribute to this input field onChange,",
			"meaning when the input field changes, I need to do something.",
			"And I'll call a function that I can call updateResponse.",
			"But again, I could call that update function whatever I'd like.",
			"It's just the name for the function that's",
			"going to run whenever something changes in the input field.",
			"So let me now define that updateResponse function.",
			"I'll define a function called updateResponse.",
			"And because it's an event handler, it can accept an argument,",
			"which is the event itself--",
			"the fact that something has changed inside of the input field.",
			"And when I have access to this event, it turns out",
			"that if I want to figure out what it is the user has typed into the input",
			"field, I can get at that with event.target.value.",
			"And I'd only know that by looking at it in the documentation.",
			"But what I'd like is for event.target.value",
			"to be the new value for this response.",
			"And so what I'd like to do is do something like this-- setState.",
			"And what should the new value of the state be?",
			"Well, I would like for a response to no longer be the empty string,",
			"but to now be event.target.value.",
			"And that is going to be the new value for response.",
			"But I'm not quite done yet, because state doesn't just",
			"have response as one of the parts of the state.",
			"The state also has num1 and num2, and those two pieces",
			"aren't really changing.",
			"So I could say, all right, num1 is just going to be whatever state.num1 was.",
			"That's not changing.",
			"And num2 is going to be whatever state.num2 was.",
			"That's not changing.",
			"The only thing that's changing is the response.",
			"But this is starting to get a little bit verbose,",
			"and especially if I start adding more and more different pieces to the state,",
			"it's going to become difficult to manage if I constantly",
			"have to repeat myself for all of the parts of the state that",
			"aren't changing.",
			"Ideally, what I'd like to do is just specify",
			"the parts of the state that will change and ignore everything else.",
			"And so one shorthand way to do that in JavaScript",
			"is to use what's known as the spread operator.",
			"And it looks like this-- dot dot dot and then state.",
			"And what this is saying is just use the existing",
			"values of the state for everything else, like num1 and num2.",
			"The only thing to override is the new value for the response.",
			"And so this syntax here is my way of saying,",
			"I would like to update the state.",
			"Everything should stay the same except for response,",
			"which is now going to be event.target.value--",
			"in other words, whatever it is the user typed in into that input field.",
			"And so I'll go ahead and refresh the page,",
			"and now if I type a number, like 6, you actually",
			"see that number appear in the input field.",
			"So that's great we've now displayed a question where the numbers are stored",
			"in the state, and the user can type in a response where that response is also",
			"stored in the state.",
			"Now what I'd like is when the user presses the Enter key",
			"on their keyboard, we check--",
			"did they get the answer right or did they get the answer wrong?",
			"And so how would I do that?",
			"Well, the first thing I need to do is in this input field,",
			"somehow detect when a key is pressed.",
			"When a key is pressed, what I'd like to do",
			"is check to see if it was the Enter key.",
			"And if it was the Enter key, then let's go ahead",
			"and check to see what the actual sum of the two numbers is",
			"and see if the user got that right or wrong.",
			"So let's add an event handler.",
			"onKeyPress is going to be equal to something.",
			"Again, I can name this function whatever I'd like.",
			"I'll call it inputKeyPress, but again, I could name that anything.",
			"And now let's define that inputKeyPress function.",
			"So up above, I'm going to define this function called inputKeyPress.",
			"Again, it takes that event as its argument.",
			"And this event is going to happen any time a key is pressed,",
			"regardless of whether it's a letter or a number or the Enter key.",
			"And so I want to check to make sure that the key is actually the Enter key.",
			"That's the only time that I want to now check",
			"to see if they got the question right or wrong.",
			"So we'll add here a condition.",
			"It's just JavaScript, so I can say if event.key",
			"is equal to Enter, well, then, let's go ahead and check.",
			"And otherwise, we don't have to do anything.",
			"I don't need an else case here, because nothing",
			"should happen unless it's the Enter key that was actually pressed.",
			"And so now how do I check to see if the user got the answer right or wrong?",
			"Well, inside of state.num1 is the first number, and inside of state.num2",
			"is the second number.",
			"So I could have a condition that checked if state.num1 plus state.num2 is",
			"equal to state.response, which is what the user typed in into the input field.",
			"But that doesn't quite work, because state.response, that's a string.",
			"The user doesn't necessarily have to type in numbers.",
			"It's possible the user is going to type in some letters",
			"instead, for example, or other characters instead.",
			"And so what I'm going to do first is convert the response into an integer,",
			"if we're able to do so.",
			"So I'm going to define a variable called answer using the JavaScript function",
			"parseInt that takes a string and tries to convert it into an integer.",
			"So we're going to parse the int state.response.",
			"And now we can check.",
			"If number 1 plus number 2 is equal to the answer,",
			"well, then this means the user got the question right.",
			"And else if the sum is not equal to the answer,",
			"that means the user got the question wrong.",
			"And so now what I could do is handle those two different scenarios.",
			"In one case, the user got the question right and we should do something,",
			"and in another case, the user got the question wrong",
			"and we should do something else.",
			"And we're making that decision by looking",
			"at the state of the application, by looking at what two numbers we're",
			"supposed to be adding and looking at what",
			"the user typed in as their response.",
			"So what should we do when the user gets a question right",
			"or gets a question wrong?",
			"Well, maybe this game is going to keep score",
			"by maintaining a number for how many questions the user has gotten right.",
			"And every time the user gets a question right,",
			"we could increase that score by 1, and any time",
			"the user gets a question wrong, we could decrease that score by 1, for example.",
			"So how would we do that?",
			"Well, the score is some piece of state inside of the application,",
			"and so we're going to need to add to the state.",
			"Right now in the state, we're storing the number 1, a number 2,",
			"and a response.",
			"I'll add to that a score where the score is going to start out as just 0.",
			"And we can render that score on the page.",
			"If I scroll down to where we're returning the div to render,",
			"let's add another div that says the score is,",
			"and then using curly braces, plug in whatever the value of state.score is.",
			"Whatever the score is, let's figure that out from the state",
			"and let's display that in the user interface.",
			"So now this user interface shows not only a question",
			"and an input field, but also a score.",
			"And the score starts out as just the number 0.",
			"So let's now go back to this function.",
			"When a key is pressed, if it's the Enter key,",
			"let's check to see if they got the answer right or wrong.",
			"We check-- did the user actually get the question right?",
			"If so, what should we do?",
			"Well, we should increase the score.",
			"And how do we do that?",
			"We do that by calling the setState function.",
			"All of the state is going to be the same, so using",
			"that dot dot dot state spread operator.",
			"The only thing that's different is the score",
			"is going to be state.score plus 1.",
			"So we're updating the state to increase the score by 1.",
			"And if the user gets the question wrong, let's set the state",
			"to be dot dot dot state, and then the score",
			"is going to be state.score minus 1.",
			"So if the user gets the question right, we increase the score by 1.",
			"Otherwise, we decrease the score by 1.",
			"And let's test that to see what it actually looks",
			"like when we try this in the user interface.",
			"I'll refresh the page--",
			"2 plus 4.",
			"If I type in the correct answer, 6, press Return, the score increases by 1.",
			"If I typed in the wrong answer, let's say 8, press Return,",
			"the score decreases by 1.",
			"So this appears to work.",
			"Depending on whether I get the question right or wrong,",
			"the score is able to update, increasing or decreasing",
			"based on the result of that condition.",
			"Now, this game is pretty easy to get a high score on right now, because I",
			"can just keep pressing return over and over and over,",
			"and the question's never changing.",
			"My response is already there.",
			"And so the score keeps going up and up and up.",
			"So let's make the game a little bit more interesting.",
			"Every time the user gets a question right,",
			"let's display a new question for them to answer.",
			"And how would we do that?",
			"Well, the question that's displayed to the user",
			"is based on two underlying pieces of the state of the component.",
			"It's based on state.num1 and it's based on state.num2.",
			"So if I want to change the question, all I have to do",
			"is when the user gets the question right and I'm",
			"updating the state, instead of only updating the score,",
			"let's also update num1 and num2.",
			"And I could set these to be specific values,",
			"maybe like 5 and 10 for example, but let's make it more interesting",
			"and display a random number every time.",
			"We'll generate a random number, and so the user",
			"will be adding two random numbers together every time they",
			"get a new question right.",
			"How do we generate a random number?",
			"Well, Math.random is a JavaScript function",
			"that generates a random number between 0 and 1.",
			"We can multiply it by 10, so now we're getting a number between 0 and 10.",
			"But we don't want any decimals to appear in the number.",
			"So we'll go ahead and take the ceiling of the number, Math.ceil,",
			"to say if the number was, like, 5.8, we'll just go ahead and round that up",
			"to 6, for example.",
			"And we'll do the same thing for number 2.",
			"We'll take the ceiling of math.random times 10.",
			"So every time the user gets a question right,",
			"we'll update num1 and num2 to be new random numbers generated just",
			"like this.",
			"And so let's go back and try it again.",
			"We see 2 plus 4.",
			"I type in the correct answer, 6, and the question changes.",
			"8 plus 5.",
			"I type in the correct answer.",
			"Press Return.",
			"My score increases, and the question changes again.",
			"This time if I get the answer wrong--",
			"I type in 10, for example--",
			"watch my score decrease.",
			"It went from 2 down to 1.",
			"But the question didn't change.",
			"Now I get another opportunity to try to answer this question.",
			"And when I answer it correctly, the score increases again from 1 to 2.",
			"So this game is starting to come along now.",
			"It's keeping track of my score, it's displaying different questions.",
			"There is at least one user interface quirk right now,",
			"and that is the fact that at the moment, when I get a question right and press",
			"Return--",
			"I type in 6 and press Return--",
			"the 6 still stays there.",
			"Ideally, I get a new question.",
			"I'd like to clear out the response so the user can just",
			"type in whatever the new answer is, rather than have",
			"to delete whatever they typed in before and then type in a new number.",
			"So how could we do that-- reset whatever is inside of the input field?",
			"Well, what's typed into the input field is stored inside",
			"of the state of my component.",
			"It's stored inside of state.response.",
			"And so if I wanted to change that, all I would have to do",
			"is say, let's change the response to be the empty string.",
			"When the user gets a question right, we're",
			"going to update these two numbers, increase the score,",
			"and also clear out the response so that it's just the empty string.",
			"And I can do the same thing if the user gets a question wrong--",
			"decrease the score by 1, but also clear out",
			"that response back to the empty string so that there's nothing there.",
			"And so now we get a question, I type in an answer, press Return,",
			"and the input field clears out, I get a new question,",
			"and the score increases by 1.",
			"Four separate pieces of state all changing at the same time,",
			"and that gets reflected in the user interface that I'm now able to see.",
			"So I type in another value and the score increases and everything updates again.",
			"All right, so that's definitely progress.",
			"One other user interface quirk that I noticed",
			"here is that the input field by default isn't automatically selected",
			"where I would have to go in and click on the input field",
			"in order to highlight it so that I can start typing in my response.",
			"I can fix that pretty easily if I scroll down to where the input field is.",
			"We'll add an autoFocus attribute and just set",
			"that to be true so that the input field automatically focuses when",
			"I load the page for the first time.",
			"So now I refresh the page.",
			"The input field is already highlighted, and immediately I",
			"can start to try to play this game.",
			"So now that we have the basic functionality of this app working,",
			"let's try and improve the CSS so that the game looks a little bit nicer.",
			"I'll scroll up to the top of the page and add a style tag",
			"to the head section of my HTML page.",
			"And I'd like for this entire app to be centered,",
			"so I'll say text-align is going to be center.",
			"And I'm going to set the font-family to be sans-serif, because I prefer",
			"that font for this particular game.",
			"So I refresh the page and now everything is centered,",
			"and the font is different than what the default was.",
			"And what else would I like to have changed?",
			"Well, this problem, 2 plus 4, maybe I'd like for that to be bigger.",
			"I'd like the problem to be big, and the score",
			"beneath that, that can stay the same size that it is right now.",
			"So how would I do that?",
			"Well, if I go back to the HTML here, I'll",
			"go ahead and give this div where I'm displaying",
			"the problem, number 1 plus number 2, I'll give it an ID of problem.",
			"And then if I scroll back up, I'll say for the element with an ID of problem,",
			"let's go ahead and set the font size to be 72 pixels, for example,",
			"just to make it bigger.",
			"And so now I see a big math equation, 2 plus 4,",
			"for example, the input field, and then the smaller score beneath it.",
			"So that's a nice UI enhancement a little bit,",
			"and now I can play the game, get a question right,",
			"and the score increases.",
			"I get a question wrong and I get to try again.",
			"But maybe I'd like to offer more of a visual indication",
			"that the user got a question wrong.",
			"Maybe any time the user gets a question wrong,",
			"I'd like to change the color of this text.",
			"Instead of being black, instead it should be red",
			"when the user gets a question wrong.",
			"And how could I go about doing that?",
			"Well, we can change the color of something just by using CSS.",
			"If we had, like, a class called incorrect, for example.",
			"If I scroll down here and give this div a class name, which",
			"is how you add a class in React, of incorrect,",
			"then I could use this class name to style it as red or not red.",
			"So I could say anything that has a class of incorrect, let's go ahead",
			"and give that a color of red.",
			"And so now, because I gave this problem a class of incorrect",
			"and I said turn all incorrect text to be red,",
			"we now see this text appear as red.",
			"But this, again, is not quite what I want.",
			"I don't want it to be red all of the time.",
			"I only want it to be red when the user has just gotten the question wrong,",
			"when they were just incorrect in answering a mathematical question.",
			"And so how could I represent that information inside of my application?",
			"Well, I'm going to need some additional state.",
			"State, again, is any information that I need",
			"to keep track of inside of my component.",
			"And now it seems that in addition to the response and the score and the numbers,",
			"I also want to keep track of did the user just answer a question incorrectly",
			"or not?",
			"So I'll add another piece to the state.",
			"I'll call it incorrect.",
			"And initially, it will be false.",
			"They didn't just get something incorrect.",
			"And now here, if I scroll down to this className,",
			"rather than have it be incorrect all the time, let me add in curly braces",
			"an expression.",
			"I'll say if state.incorrect is true, using the ternary operator",
			"with a question mark, then the class should be incorrect.",
			"But otherwise, it shouldn't have a class of incorrect.",
			"It'll just be the empty string.",
			"And so this expression here allows me to change the class of an HTML element",
			"based on the underlying state.",
			"If state.incorrect is true, then this div will have a class of incorrect,",
			"and otherwise, it won't.",
			"And so now when I load the page for the first time, the text appears as black.",
			"And what I need to do is when the user gets a question wrong,",
			"I need to change the state to indicate that they just got a question wrong.",
			"How do I do that?",
			"Well, here is the setState call when the user gets a question wrong.",
			"And in that case, I'll go ahead and set incorrect equal to true.",
			"And when the user gets a question right, we'll",
			"go ahead and set incorrect equal to false.",
			"We're modifying this one additional piece of state",
			"based on whether the user got the question right or wrong.",
			"So now if I load the page, answer a question correctly,",
			"the score increases and I get a new question.",
			"But if I answer a question incorrectly and press Return,",
			"you'll notice the score decreases, the input field clears out,",
			"and the text changes color because I changed",
			"the value of that incorrect part of the underlying state and based on that,",
			"we were able to see the text color change as well.",
			"If I now get a question correct, press Return,",
			"the text color changes back to black and the score increases.",
			"And let's now add one final piece of state or one final change to the UI",
			"for this application.",
			"Let's give me a way to win this game.",
			"Maybe once I get to a score of 10 by answering 10 questions correctly,",
			"then we're going to win the game.",
			"And how could I do that?",
			"Well, remember that each React component can just be a JavaScript function.",
			"And this function is just immediately returning this div,",
			"but it's a function, so I can add additional logic to it.",
			"I can say if state.score is equal to 10, for example, then",
			"rather than render the old div, let's return a new div.",
			"This div is just going to display something like \"You won!\"",
			"And so that I can style it, I'll give it an ID.",
			"The ID will be winner.",
			"And if the ID is winner, let's go ahead and make the font size 72 pixels",
			"and let's make the color green if I win.",
			"So I added some CSS just to style it, but really, the only new logic",
			"is further down below, where I'm here saying check the state.",
			"If the score is 10, well, that means we win,",
			"so instead of returning the new problem, just",
			"return a div that says you won the game.",
			"So let's try that now",
			"I get these questions.",
			"Every time I answer a question, you're noticing that the score",
			"is going to increase by 1.",
			"And every time we're generating new random numbers",
			"to display as what's going to appear in the user interface.",
			"And once I get to question number 10, if I answer it correctly, press Return,",
			"the entire UI changes.",
			"Instead of the problem and an input field and a score,",
			"I just see in green large text that I won.",
			"And again, I was able to do that by looking here at this condition, where",
			"we're looking at the value of the state, and if the state is 10,",
			"we're deciding what to render.",
			"And this, again, is one of the great powers of React,",
			"this ability to use this underlying state",
			"and based on the value of the underlying state,",
			"decide what it is the user should see in their user interface.",
			"And React is just one of many libraries that do this type of thing.",
			"Other popular ones include Angular and Vue, where all of these",
			"are just these web frameworks that make it easier",
			"to be able to create applications that are able to respond",
			"to some underlying state so that you, the programmer,",
			"don't have to worry about constantly having to manipulate",
			"various different parts of the page, especially",
			"as you imagine websites like Facebook or Twitter,",
			"where there are many things happening on the page at the same time.",
			"Every time a new tweet comes in, you might get a notification",
			"and see a new post in your main area of your news feed.",
			"So these are the types of things that you might want the application",
			"to be able to more easily handle for you, where you describe what",
			"the state is, you describe what the page should look like based",
			"on that underlying state, and let the library,",
			"whether it's React or something else, begin to handle",
			"the process of doing that for you.",
			"And the world of user interfaces is changing pretty quickly--",
			"that a lot changes in user interfaces in terms of the technologies",
			"and the tools that are quite popular.",
			"But they're really based on the same set of underlying ideas,",
			"the idea that we can use JavaScript in order to manipulate what it is the user",
			"sees on their page, in order to detect what's",
			"happening based on particular events, like scrolling",
			"to the bottom of the page or typing something into an input field,",
			"and then responding to those particular events",
			"by providing some sort of function that gets called",
			"any time a particular event happens.",
			"By mixing that in with other features, like the ability",
			"to asynchronously request information from an external server or the ability",
			"to do computations based on the values of the state, like we saw within React,",
			"we have the ability to create very interesting,",
			"engaging, dynamic user interfaces very, very quickly, all just",
			"using the power of combining Python and JavaScript.",
			"That was Web Programming with Python and JavaScript for today.",
			"We'll see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_009": {
		"section": "CS50W 2020",
		"subsection": "Testing, CI/CD",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001500_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V001500/HarvardXCS50W-V001500.m3u8"
		],
		"video_duration": 5638,
		"speech_period": [
			3.5, 14.408, 0.542, 3.058, 2.792, 3.21, 4.83, 2.28, 4.188, 3.042, 2.91,
			3.57, 2.58, 2.16, 3.17, 3.31, 3.18, 2.339, 4.441, 3.27, 2.442, 2.208,
			3.82, 1.88, 3.75, 2.89, 2.085, 3.125, 0.88, 3.26, 3.6, 2.76, 1.988, 2.542,
			3.78, 3.79, 4.22, 3.36, 1.98, 2.85, 2.46, 2.64, 1.92, 3.78, 3.3, 1.67,
			3.61, 2.88, 1.81, 1.642, 0.958, 4.05, 3.0, 2.56, 3.98, 1.05, 3.565, 1.625,
			2.4, 1.41, 2.25, 5.34, 1.74, 4.09, 2.18, 2.792, 2.698, 2.94, 2.73, 5.28,
			2.28, 3.45, 1.74, 1.77, 2.37, 2.5, 3.14, 2.902, 1.208, 2.09, 2.93, 1.89,
			6.6, 3.15, 3.54, 1.55, 2.31, 4.07, 2.5, 2.458, 2.042, 3.872, 1.708, 2.0,
			2.602, 2.208, 4.06, 2.3, 3.69, 2.49, 2.19, 2.67, 4.77, 1.08, 3.32, 1.0,
			1.172, 2.458, 3.42, 5.11, 2.118, 2.792, 2.4, 2.05, 3.35, 1.89, 2.34, 2.49,
			3.33, 2.7, 2.62, 3.71, 2.06, 2.06, 2.21, 2.832, 2.208, 3.86, 1.93, 4.5,
			1.03, 2.0, 1.41, 1.95, 3.63, 2.73, 2.88, 2.49, 3.24, 1.95, 2.91, 3.0,
			2.07, 1.71, 2.22, 2.53, 2.0, 3.06, 2.37, 3.052, 1.458, 4.58, 3.21, 2.73,
			2.79, 2.91, 1.96, 4.23, 4.49, 3.75, 4.26, 0.57, 2.77, 2.92, 2.54, 7.73,
			2.13, 2.58, 2.08, 4.315, 1.125, 2.29, 2.88, 2.64, 2.76, 2.79, 4.41, 8.58,
			7.588, 1.042, 2.01, 2.01, 3.28, 3.14, 4.62, 4.02, 2.46, 3.12, 5.43, 0.81,
			3.24, 3.12, 2.67, 2.25, 2.25, 3.09, 3.45, 1.907, 2.083, 1.922, 1.708,
			1.86, 3.39, 2.49, 3.84, 0.88, 4.55, 2.37, 3.63, 3.39, 1.89, 3.06, 1.333,
			2.417, 2.85, 3.09, 5.16, 3.98, 1.75, 4.09, 1.16, 1.708, 3.182, 2.16, 1.8,
			2.94, 1.09, 2.6, 2.07, 5.25, 1.26, 3.18, 2.813, 0.917, 2.12, 1.32, 2.28,
			1.42, 0.5, 1.98, 0.5, 1.4, 3.5, 3.095, 1.375, 1.17, 2.31, 2.94, 3.33, 6.7,
			2.84, 2.91, 2.58, 3.09, 3.45, 3.6, 3.42, 3.39, 1.59, 1.34, 2.7, 4.09,
			2.74, 4.69, 3.85, 2.58, 2.773, 3.167, 1.92, 3.6, 2.22, 3.24, 2.28, 1.375,
			1.525, 5.2, 2.84, 2.5, 3.15, 2.58, 1.92, 4.02, 1.23, 2.52, 0.83, 1.06,
			2.25, 4.15, 0.5, 1.14, 5.07, 3.42, 0.72, 1.53, 2.44, 4.65, 2.75, 2.7,
			3.35, 1.75, 3.51, 2.49, 3.16, 5.63, 2.73, 4.312, 2.408, 1.96, 1.43, 2.07,
			2.88, 2.46, 3.28, 2.13, 3.14, 2.52, 2.22, 3.18, 2.97, 3.93, 2.835, 0.625,
			1.29, 3.93, 2.55, 3.24, 2.31, 2.678, 2.542, 2.91, 3.45, 1.89, 1.93, 3.89,
			2.21, 2.837, 3.083, 2.37, 3.9, 3.51, 2.46, 2.05, 3.293, 2.667, 4.05,
			2.113, 2.167, 5.14, 3.33, 3.21, 4.29, 5.04, 1.98, 4.11, 1.68, 2.82, 4.4,
			4.09, 4.71, 1.745, 1.375, 2.1, 1.437, 2.042, 3.621, 4.139, 3.72, 3.451,
			4.069, 2.681, 4.387, 2.333, 5.53, 5.72, 1.89, 2.55, 1.92, 1.77, 2.77,
			2.54, 2.7, 2.02, 1.042, 0.748, 1.53, 4.5, 2.94, 4.05, 2.04, 2.67, 1.422,
			2.958, 0.63, 2.97, 3.09, 3.87, 2.74, 2.87, 4.41, 3.87, 4.05, 0.9, 1.8,
			2.125, 1.335, 1.875, 2.465, 2.58, 2.73, 3.57, 3.33, 1.41, 4.32, 2.88,
			3.41, 3.09, 2.87, 2.3, 2.67, 1.53, 4.73, 2.49, 2.33, 1.86, 4.05, 4.53,
			3.03, 2.19, 4.39, 2.572, 2.458, 1.5, 4.23, 3.42, 3.03, 1.15, 3.38, 2.4,
			2.64, 2.98, 2.118, 2.042, 3.063, 1.167, 2.453, 2.417, 3.47, 2.37, 3.69,
			2.673, 2.667, 2.37, 3.31, 4.64, 2.97, 2.91, 2.49, 2.22, 2.79, 3.27, 2.02,
			3.333, 2.417, 3.0, 2.94, 3.43, 2.0, 2.85, 4.18, 3.99, 2.72, 1.65, 3.39,
			3.42, 3.05, 2.56, 4.62, 2.648, 2.542, 2.46, 2.08, 2.09, 3.81, 2.283,
			1.167, 2.833, 1.307, 2.97, 2.04, 2.73, 3.6, 1.747, 1.583, 3.33, 3.54, 1.8,
			2.55, 4.5, 3.008, 1.042, 3.87, 2.58, 1.25, 2.458, 1.312, 3.62, 2.58, 3.24,
			1.08, 2.85, 1.69, 2.052, 1.958, 2.86, 2.42, 2.64, 2.4, 2.29, 3.86, 4.98,
			3.27, 2.37, 5.01, 2.79, 3.32, 1.95, 3.9, 3.39, 2.61, 2.49, 3.58, 2.55,
			2.4, 3.943, 2.417, 4.14, 3.06, 4.14, 2.37, 3.18, 3.51, 2.07, 2.1, 3.42,
			1.71, 3.63, 5.13, 1.283, 2.167, 4.35, 1.45, 2.09, 3.36, 2.94, 1.2, 2.768,
			2.542, 3.06, 2.37, 3.36, 4.56, 3.16, 4.91, 3.12, 3.69, 2.85, 4.41, 4.182,
			2.958, 5.41, 3.07, 1.65, 3.6, 2.85, 3.137, 1.333, 2.7, 1.71, 4.89, 5.04,
			1.97, 2.5, 3.82, 3.89, 2.28, 3.38, 1.87, 2.1, 3.33, 2.157, 1.833, 2.5,
			2.73, 3.09, 3.48, 4.11, 1.86, 3.86, 3.04, 2.16, 2.13, 3.99, 1.86, 2.94,
			3.87, 2.1, 2.43, 1.958, 4.402, 2.73, 3.9, 3.75, 2.58, 3.27, 3.625, 1.875,
			2.54, 4.98, 3.87, 2.16, 1.635, 1.875, 2.67, 2.28, 4.98, 2.023, 3.167,
			3.84, 1.22, 4.21, 2.85, 3.09, 3.21, 7.783, 0.667, 2.64, 1.787, 2.333,
			4.04, 3.0, 0.93, 2.675, 2.125, 1.95, 2.91, 3.12, 1.08, 3.21, 2.12, 4.365,
			2.125, 0.875, 4.175, 1.78, 1.75, 1.65, 0.5, 2.65, 3.54, 1.5, 3.58, 2.18,
			2.125, 4.115, 2.07, 2.31, 2.4, 4.3, 1.93, 1.0, 0.5, 2.17, 4.23, 1.705,
			1.125, 2.03, 1.43, 5.21, 2.94, 1.82, 1.77, 2.64, 0.96, 1.8, 2.37, 2.22,
			3.72, 4.32, 2.297, 0.583, 2.46, 3.36, 0.63, 3.09, 1.68, 2.88, 2.46, 3.06,
			3.81, 3.15, 3.51, 1.82, 3.04, 4.37, 3.16, 2.98, 2.42, 4.06, 2.87, 3.48,
			3.03, 4.97, 2.8, 3.24, 3.72, 3.75, 0.81, 1.75, 2.69, 2.56, 5.38, 1.65,
			2.25, 1.552, 2.958, 3.09, 1.35, 5.11, 4.98, 1.44, 3.18, 3.029, 1.861,
			3.21, 4.29, 3.78, 2.37, 1.679, 2.071, 3.63, 3.81, 3.509, 3.091, 2.64,
			3.54, 3.33, 2.55, 3.47, 1.69, 3.95, 3.228, 1.292, 3.2, 5.21, 2.16, 4.56,
			3.6, 4.17, 5.16, 2.99, 4.2, 3.63, 5.01, 2.44, 6.02, 2.7, 3.09, 2.94, 3.21,
			2.91, 4.31, 2.64, 1.81, 3.17, 2.61, 2.58, 3.48, 3.502, 1.958, 4.39, 2.96,
			3.21, 3.27, 2.91, 4.23, 2.31, 3.24, 3.66, 2.74, 2.71, 2.91, 3.62, 2.85,
			4.9, 2.018, 3.042, 2.1, 2.775, 1.875, 1.7, 2.29, 3.667, 3.083, 4.2, 4.2,
			3.54, 3.51, 2.82, 2.28, 2.685, 2.625, 4.05, 3.51, 2.64, 2.21, 2.98, 3.31,
			2.45, 2.91, 2.43, 3.87, 4.68, 3.12, 2.67, 2.49, 1.89, 2.88, 1.57, 3.083,
			2.517, 2.8, 5.9, 3.0, 3.06, 4.86, 2.53, 4.07, 3.25, 1.19, 1.36, 5.1, 5.05,
			3.6, 2.31, 3.42, 4.35, 3.48, 2.22, 3.72, 1.71, 5.71, 4.54, 4.007, 1.083,
			4.86, 5.37, 2.35, 1.92, 4.07, 3.15, 2.403, 1.167, 1.625, 2.875, 4.56,
			2.97, 2.79, 3.03, 5.03, 2.39, 2.79, 3.64, 3.72, 2.62, 6.19, 4.02, 1.07,
			3.3, 1.5, 1.45, 1.3, 0.5, 2.49, 3.99, 1.89, 3.69, 1.59, 1.59, 2.37, 2.19,
			2.97, 2.28, 2.507, 2.083, 1.887, 2.583, 2.76, 2.13, 4.29, 2.79, 3.39, 3.3,
			3.21, 4.41, 2.2, 1.5, 2.06, 2.91, 4.34, 3.188, 2.042, 4.827, 1.083, 1.492,
			1.958, 4.89, 2.04, 5.78, 2.74, 2.82, 2.16, 5.01, 1.77, 3.39, 2.94, 3.09,
			2.43, 5.67, 3.21, 3.45, 4.68, 2.4, 2.25, 1.817, 2.083, 2.52, 5.19, 4.62,
			3.87, 3.54, 3.78, 1.06, 2.0, 2.94, 5.73, 0.63, 1.83, 2.52, 3.572, 2.458,
			2.46, 4.35, 1.96, 1.25, 3.87, 2.16, 1.65, 1.74, 3.33, 3.78, 1.18, 1.7,
			2.7, 3.15, 3.54, 3.87, 2.915, 1.125, 4.23, 1.59, 3.91, 2.0, 2.4, 4.95,
			3.12, 3.09, 3.09, 3.15, 3.2, 7.395, 0.625, 7.44, 4.57, 2.09, 4.57, 3.2,
			2.502, 2.208, 2.25, 1.808, 1.792, 2.88, 2.52, 4.02, 3.72, 0.78, 3.57,
			4.29, 3.9, 1.32, 2.61, 3.36, 0.88, 3.29, 4.62, 2.34, 1.65, 2.76, 3.21,
			3.95, 6.265, 1.875, 3.35, 2.8, 6.09, 2.52, 3.78, 2.83, 5.035, 2.375,
			1.792, 4.928, 3.92, 3.31, 2.76, 1.05, 3.82, 2.28, 1.542, 3.87, 2.958,
			2.792, 2.458, 3.24, 4.5, 4.35, 2.97, 2.08, 2.03, 3.69, 1.57, 3.26, 2.34,
			3.18, 3.42, 5.85, 3.72, 3.96, 3.18, 2.23, 3.44, 1.868, 1.792, 1.41, 1.708,
			1.442, 3.0, 3.36, 2.538, 3.042, 1.958, 2.302, 3.45, 4.2, 3.66, 4.2, 1.74,
			1.59, 4.02, 0.99, 1.57, 3.89, 3.18, 2.55, 2.82, 2.28, 2.28, 3.36, 4.2,
			2.088, 1.542, 2.46, 3.12, 3.03, 3.75, 2.72, 3.07, 2.94, 4.47, 3.15, 2.22,
			2.7, 3.79, 2.0, 3.75, 5.05, 5.8, 4.5, 4.157, 2.833, 1.32, 1.68, 1.68,
			2.55, 1.89, 1.86, 2.97, 1.68, 1.65, 3.317, 1.333, 4.39, 3.5, 1.32, 3.21,
			4.41, 1.987, 2.333, 0.917, 2.783, 2.42, 2.41, 3.29, 3.12, 3.51, 1.83,
			6.03, 1.833, 2.167, 2.43, 2.43, 3.78, 3.63, 4.185, 3.145, 2.33, 2.97, 2.7,
			3.34, 0.5, 3.84, 1.54, 2.81, 2.37, 3.06, 2.49, 3.56, 3.058, 2.292, 1.5,
			3.84, 6.56, 1.65, 1.98, 3.42, 3.91, 3.02, 3.6, 2.94, 2.34, 2.43, 1.097,
			2.833, 1.81, 3.23, 1.77, 2.07, 3.6, 3.39, 3.51, 2.79, 4.23, 2.4, 2.41,
			1.25, 3.81, 3.21, 3.06, 4.14, 0.97, 2.0, 3.0, 2.7, 2.96, 3.29, 3.11, 3.81,
			2.97, 4.93, 1.73, 2.82, 2.97, 3.45, 2.37, 3.39, 2.88, 2.65, 3.17, 3.84,
			2.7, 3.45, 1.44, 3.21, 3.0, 3.06, 2.25, 3.15, 2.73, 2.94, 2.43, 4.2, 1.87,
			3.08, 1.127, 2.083, 2.583, 0.847, 2.69, 2.64, 2.25, 2.52, 2.96, 2.26,
			2.495, 3.125, 1.28, 2.46, 3.13, 3.48, 3.47, 2.01, 3.42, 2.7, 2.49, 3.64,
			2.3, 4.23, 3.42, 3.99, 3.365, 2.875, 2.97, 3.69, 2.05, 2.51, 3.15, 2.88,
			3.0, 2.28, 1.898, 1.792, 2.19, 2.19, 2.52, 2.79, 2.57, 1.918, 3.042, 3.23,
			2.49, 3.18, 2.727, 1.833, 3.36, 1.98, 2.31, 2.32, 3.17, 2.13, 2.46, 1.98,
			2.95, 2.6, 3.0, 2.79, 4.26, 3.0, 3.83, 1.75, 3.72, 1.648, 2.542, 2.86,
			1.59, 2.07, 3.0, 1.89, 2.04, 3.66, 2.67, 2.13, 2.46, 3.36, 2.49, 3.6,
			3.31, 3.65, 1.93, 2.48, 2.52, 1.92, 2.16, 3.4, 2.42, 3.64, 3.17, 2.94,
			2.55, 3.9, 3.33, 4.44, 3.56, 2.17, 3.437, 1.708, 2.625, 1.32, 1.8, 3.27,
			2.76, 3.3, 2.43, 3.25, 2.33, 2.947, 0.833, 2.28, 3.2, 4.45, 3.99, 4.86,
			2.79, 3.51, 3.51, 2.31, 5.19, 1.89, 2.64, 3.66, 2.91, 4.17, 2.61, 3.06,
			4.35, 0.865, 2.375, 3.868, 2.792, 3.125, 4.345, 2.46, 3.18, 0.87, 1.98,
			3.96, 3.69, 1.79, 1.58, 3.018, 2.042, 2.46, 3.32, 1.69, 1.92, 4.15, 2.54,
			2.77, 2.21, 2.31, 2.49, 3.79, 3.058, 2.542, 3.18, 2.01, 2.13, 2.25, 1.89,
			2.67, 2.67, 2.43, 3.0, 2.61, 3.24, 3.06, 3.037, 2.333, 3.96, 2.88, 1.3,
			4.55, 5.79, 1.59, 5.97, 3.63, 5.46, 1.213, 2.417, 2.58, 5.73, 3.12, 4.68,
			2.288, 1.042, 5.7, 2.028, 1.792, 2.42, 4.2, 4.02, 3.69, 3.492, 2.958,
			4.29, 4.62, 3.18, 2.4, 4.2, 1.08, 2.98, 3.939, 1.96, 2.821, 3.62, 2.5,
			3.84, 3.0, 2.17, 2.0, 2.429, 2.051, 2.788, 1.792, 1.869, 2.0, 2.491, 1.78,
			2.87, 2.189, 4.651, 1.139, 1.201, 3.27, 2.31, 2.83, 2.45, 3.09, 2.976,
			2.333, 2.13, 4.111, 2.13, 1.62, 1.86, 4.899, 1.401, 2.91, 1.93, 4.85, 3.0,
			2.22, 2.46, 2.1, 3.435, 1.875, 1.25, 1.84, 1.49, 3.057, 1.833, 3.57, 2.31,
			0.69, 2.55, 1.1, 7.92, 1.64, 2.92, 0.7, 0.72, 1.44, 3.75, 1.2, 5.19, 3.3,
			1.83, 2.01, 2.31, 1.71, 2.745, 2.625, 1.75, 2.15, 2.82, 3.78, 3.06, 2.27,
			3.24, 2.13, 1.95, 3.09, 2.82, 2.52, 3.87, 0.85, 1.82, 2.7, 3.3, 3.0, 2.53,
			2.18, 4.17, 3.36, 3.09, 1.83, 2.97, 2.1, 1.71, 1.93, 2.18, 3.54, 2.49,
			3.27, 6.29, 2.163, 1.917, 2.31, 2.95, 0.5, 2.4, 1.65, 3.2, 1.27, 2.31,
			2.39, 4.66, 1.77, 1.47, 2.61, 2.7, 1.77, 5.16, 2.64, 1.98, 3.33, 2.13,
			2.51, 3.65, 1.89, 5.31, 2.25, 3.51, 2.64, 2.28, 3.017, 1.333, 1.47, 2.43,
			3.23, 2.74, 2.19, 2.13, 3.0, 4.13, 4.02, 5.16, 1.98, 2.67, 1.02, 2.01,
			1.71, 2.167, 3.053, 2.8, 2.06, 0.84, 3.74, 1.03, 2.25, 2.094, 1.206, 6.03,
			3.09, 1.89, 1.9, 3.71, 1.92, 3.917, 1.333, 2.4, 2.58, 3.863, 2.167, 3.48,
			2.7, 2.03, 1.49, 2.72, 3.21, 1.8, 1.86, 3.0, 3.15, 2.49, 2.91, 1.23, 2.91,
			2.81, 3.77, 4.52, 3.66, 2.19, 3.78, 4.41, 1.95, 2.07, 1.86, 3.63, 2.94,
			4.06, 2.57, 3.15, 2.06, 2.35, 1.83, 3.15, 3.16, 2.0, 2.935, 1.875, 4.02,
			0.87, 2.25, 1.38, 2.01, 3.88, 1.85, 2.34, 2.7, 4.77, 3.18, 2.07, 2.25,
			2.56, 2.99, 3.3, 2.61, 2.25, 3.06, 1.84, 3.53, 2.76, 3.36, 3.33, 2.83,
			3.35, 3.63, 2.91, 2.73, 1.99, 2.33, 2.28, 2.805, 1.875, 3.84, 2.58, 3.78,
			4.2, 3.43, 2.9, 2.77, 2.79, 2.12, 3.78, 2.79, 3.33, 2.46, 3.45, 3.54,
			3.36, 3.42, 3.45, 3.09, 3.87, 1.932, 2.958, 3.06, 2.75, 3.79, 1.56, 3.12,
			1.51, 3.56, 3.09, 3.64, 2.93, 1.11, 2.958, 1.792, 3.56, 2.43, 2.88, 2.19,
			2.77, 4.13, 2.028, 2.292, 1.86, 3.72, 3.48, 3.21, 1.968, 3.042, 1.86, 4.3,
			3.91, 3.91, 2.64, 3.21, 4.23, 2.46, 2.26, 2.84, 2.04, 4.08, 2.55, 2.43,
			6.21, 3.51, 3.12, 2.62, 2.67, 3.45, 0.99, 2.01, 3.37, 3.38, 3.48, 5.07,
			1.307, 2.833, 2.4, 5.4, 3.4, 2.882, 2.458, 3.48, 2.8, 4.7, 4.29, 2.46,
			1.83, 3.78, 3.69, 2.79, 4.41, 3.89, 3.33, 3.48, 4.83, 4.15, 3.34, 2.5,
			1.325, 2.125, 3.12, 2.52, 3.09, 3.6, 3.3, 2.942, 0.958, 2.4, 4.03, 4.58,
			2.85, 2.34, 1.792, 2.078, 1.86, 2.49, 3.48, 3.36, 3.9, 3.31, 2.66, 3.42,
			4.02, 3.0, 2.16, 4.41, 3.93, 1.38, 3.39, 2.22, 2.05, 2.84, 1.53, 2.04,
			3.66, 3.36, 2.13, 4.86, 3.0, 2.91, 4.11, 2.67, 3.3, 3.93, 4.69, 3.445,
			2.125, 1.25, 3.37, 2.16, 3.9, 3.87, 1.17, 3.45, 2.61, 2.16, 3.03, 2.43,
			2.97, 2.34, 3.04, 3.71, 3.09, 3.21, 3.6, 3.84, 3.54, 3.84, 3.33, 2.67,
			2.7, 4.2, 3.9, 3.78, 3.32, 4.41, 2.43, 3.39, 2.31, 2.25, 2.28, 2.188,
			2.792, 2.2, 2.75, 2.19, 3.51, 3.42, 2.58, 4.53, 2.94, 3.42, 3.06, 4.08,
			2.85, 2.94, 3.42, 1.76, 0.753, 2.917, 2.16, 2.5, 3.75, 1.93, 6.73, 2.46,
			2.88, 1.77, 2.25, 3.66, 2.01, 0.88, 3.74, 2.01, 3.78, 3.27, 3.63, 4.65,
			4.44, 2.85, 1.192, 2.708, 4.985, 2.125, 3.93, 3.33, 1.74, 2.04, 4.23,
			2.84, 4.63, 3.75, 1.74, 2.94, 3.78, 4.11, 2.25, 3.69, 1.53, 2.61, 3.78,
			4.74, 1.17, 3.78, 5.02, 2.0, 3.92, 1.875, 3.565, 1.91, 1.5, 1.86, 1.68,
			2.542, 1.028, 2.85, 3.19, 3.5, 1.89, 2.04, 2.76, 2.67, 3.113, 2.167, 3.55,
			1.72, 5.168, 2.042, 3.15, 3.125, 2.605, 4.06, 2.54, 2.267, 1.333, 3.18,
			2.08, 2.78, 3.06, 3.58, 4.25, 2.91, 3.9, 4.77, 3.42, 2.85, 2.31, 2.67,
			2.91, 1.99, 3.26, 2.94, 1.08, 1.95, 3.03, 2.53, 2.84, 3.03, 2.73, 3.3,
			1.26, 1.97, 0.73
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRIAN YU: OK.",
			"Welcome back, everyone, to web programming with Python and JavaScript.",
			"And now, at this point, we've seen a number of different techniques",
			"and tools that we can use in order to design web applications--",
			"HTML and CSS, to describe how it is that our pages look; a programming language,",
			"like Python, using a framework like Django,",
			"in order to listen for requests, process them and provide some sort of response.",
			"And then more recently, we took a look at JavaScript, another programming",
			"language that we can use in particular on the client side,",
			"running inside of the user's web browser, in order to make our web pages",
			"even more interactive and user-friendly.",
			"Now what we'll transition to today is taking a look",
			"at some of software's best practices, some tools and techniques",
			"that developers actually use when they're working on web applications,",
			"especially as those web applications start to grow larger.",
			"In particular, we'll start by discussing testing,",
			"this idea of verifying that our code is correct, and then transition to CI/CD,",
			"short for Continuous Integration and Continuous Delivery,",
			"some other best practices that are used in making sure",
			"that the work that software developers are working on",
			"can be tested and deployed readily and very quickly.",
			"So we'll begin the conversation with testing.",
			"And testing is really about this idea of verifying and making sure",
			"that the code that software developers are writing are, in fact,",
			"correct, to make sure that the functions work",
			"the way they're supposed to, that the web pages behave the way that they're",
			"supposed to.",
			"And ideally, we'd like some way to be able to efficiently and effectively",
			"test our code over time, and as our programs grow more complicated,",
			"to allow our tests is to make sure that our program is",
			"behaving the way that we want it to.",
			"So we'll go ahead and start simple and consider the basic way",
			"that we might take a function, for example, written in Python and test",
			"and verify to make sure that it works the way we would expect it to.",
			"And to do so, we can start with a command in Python known as assert.",
			"And what assert does in Python is it asserts or just states",
			"that something should be true.",
			"And if that something is not true, then the assert",
			"is going to throw an exception, some sort of error,",
			"so that whoever is running the program or running the command",
			"knows that something went wrong.",
			"And this can be a very basic way that we can leverage Python's abilities",
			"to test a function and verify that that function behaves",
			"the way we would want it to.",
			"So let's go ahead and try a simple example of writing a Python function",
			"and then trying to test to make sure that that function works",
			"the way we would want it to.",
			"So I'll go ahead and create a new file.",
			"I'll call it assert.py.",
			"And let me define a new Python function, for example, that is",
			"going to take an integer and square it.",
			"Just want to take a number and return it square.",
			"So I'm going to define a function called square that takes as an input a number,",
			"like x.",
			"And I want to return x times x.",
			"It's a fairly straightforward function.",
			"But I would like to now verify that the function works",
			"the way I would expect it to.",
			"Now there are a number of ways that you could do this.",
			"One would be just like let's print out what the square of 10 is, for example,",
			"and just see what that's equal to.",
			"And then you could run a program, something like python assert.py",
			"and just say, all right, the answer is 100.",
			"And I could say to myself, OK, that's what I would expect it to be.",
			"But I now have to do the mental math of squaring the number 10,",
			"making sure that the answer comes out to be the value that I expect.",
			"It would be nice if I could automate this process.",
			"Well, one thing I could do is print out, does the square of 10 equal 100?",
			"I know that I want the square of 10 to equal 100,",
			"so I could just print out that value, print out, does square of 10",
			"equal the number 100?",
			"I go ahead and run the program again.",
			"And this time, what I get is, true, for example,",
			"because those two things are equal to each other.",
			"And if, on the other hand, I had tried to check for something that wasn't",
			"true, like does square of 10 equal 101?",
			"You run the program, and, OK.",
			"Now it's going to be false.",
			"So this is nothing new, nothing we haven't seen before.",
			"But now what I can do is, instead of this,",
			"I can just say, let me assert that the square of 10 is equal to 100.",
			"Here I am just asserting that this expression, that the square root of 10",
			"is equal to 100 is going to be true.",
			"And now I can run the program.",
			"And what you'll notice is nothing happens.",
			"No output, nothing at all because when an assert statement runs",
			"and the expression that it's checking turns out to be true--",
			"that the square of 10 does equal 100--",
			"it effectively ignores that statement altogether,",
			"just continues on to the next thing, no output, no side effect of any sort.",
			"And this is helpful because it just means",
			"that if I want to assert that something is true,",
			"I can assert it and then just continue writing my code.",
			"And it's as if I hadn't written that assert statement",
			"at all so long as the thing that I am asserting is actually true.",
			"But if there were a bug in my code, for example,",
			"some sort of mistake, where instead of returning x times x,",
			"imagine that I accidentally said, return x",
			"plus x to calculate the square instead, something",
			"that would be a bug in this case.",
			"Well, then when I try to run python assert.py, what I'm going to get",
			"is an exception.",
			"And the type of exception that I get is something known as an assertion error.",
			"And I can see that here.",
			"There is an assertion error.",
			"And then I see the reason why the assertion error happened.",
			"And the assertion error happened on line 4, which is this line here,",
			"where I said, I would like to assert that the square of 10 is equal to 100.",
			"So one way we can imagine testing our code",
			"is just by including a number of these different assert statements.",
			"If I want to verify that my code is correct,",
			"I can write various different assert statements.",
			"And for a function that's fairly simple, like the square function, probably not",
			"too many tests that I would need to write.",
			"But you can imagine for more complex functions that",
			"have multiple different conditional branches, being",
			"able to assert that no matter which conditional branch the program",
			"chooses to follow that the code will actually be correct",
			"can be a valuable thing to be able to say.",
			"And this can be helpful too when in working on a larger project,",
			"you want to deal with the problem of bugs",
			"that might appear inside of a project.",
			"And this gets at the idea of test-driven development,",
			"developing while keeping this notion of testing in mind.",
			"And one of the best practices would be if ever you're",
			"working on a program of your own and you encounter some bug in the program,",
			"you'll first want to fix the bug.",
			"But then you'll want to write a test that verifies that the new behavior is",
			"working as expected.",
			"And once you've written these tests, these tests",
			"can start to grow over time.",
			"And as you continue working on your project,",
			"you can always run those existing set of tests to make sure that nothing--",
			"no new changes that you make to the program down the line,",
			"no future features that you add or changes you might make--",
			"are going to break anything that was there before.",
			"And this is especially valuable, as programs start to get more complex",
			"and testing everything by hand would start",
			"to become a very tedious process, to be able to just automate",
			"the process of just run a whole bunch of tests on all of the things",
			"that I know that I would like the program to do",
			"and making sure they work as expected.",
			"That can be quite helpful.",
			"So assert then is one basic way of just saying",
			"that I would like for this statement to be true.",
			"And if it's not true, go ahead and throw an exception.",
			"And using Python, we know we also have the ability",
			"to catch those exceptions in order to make sure that we're",
			"able to handle those appropriately.",
			"So we can display a nice error message for example, if we wanted to do so.",
			"But now let's go ahead and try and write a more complex function,",
			"something more complex than just taking a number and squaring it,",
			"somewhere where there's more room for various different cases",
			"that I might want to test and more room where I, the programmer,",
			"might make a mistake, for example.",
			"So let's imagine writing a new file-- and then I'm going to call prime.py--",
			"where here, I'll go ahead and say that I would like prime.py",
			"to implement a function called is_prime.",
			"And what the is_prime function should do is check to see if a number is prime",
			"or not.",
			"The prime number only has factors of 1 and itself.",
			"And I would like to write a function that verifies that fact.",
			"And so how might I go about doing that?",
			"Well, if n is less than 2, then it is definitely not prime",
			"because we say 0 and 1 are not going to be prime.",
			"And we'll only deal with numbers that are 0 or greater.",
			"And we'll deal with that for now.",
			"But let's start then with other numbers, numbers that are 2 or greater.",
			"Well, what do I want to do?",
			"I really want to check each of the possible factors.",
			"Like if I want to check whether or not 100 is prime or not,",
			"then I want to loop over all of the possible numbers that could",
			"be factors of 100, like 2, 3, 4, 5, 6.",
			"And when I get to a number like 2 or a number like 5 that",
			"do go into 100 cleanly, well, then I'll know that the number is not prime.",
			"So I could say for i in range from 2 all the way up through n, for example,",
			"let me go ahead and say, if n mod i equals 0, then return false.",
			"So what am I saying here?",
			"I'm saying go ahead and start at 2.",
			"Go up through but not including n.",
			"So if I'm checking to see if 10 is prime, for example,",
			"I'm going to check for i is 2, 3, 4, 5, 6, 7, 8, 9.",
			"And for each of those numbers, check if n, my input to this function,",
			"mod i, the factor that I would like to check, is equal to 0.",
			"This mod operator, this percent, if you don't recall,",
			"gives us the remainder when you divide one number by another.",
			"And so if n mod i equals 0, that means the remainder when you divide n by i",
			"equals 0--",
			"meaning i goes into n cleanly with no remainder.",
			"And that means that it's not prime because it does have a factor.",
			"Whatever i is is going to be that factor.",
			"And if I get to the end of this for loop,",
			"then I can go ahead and just say, return true.",
			"If we weren't able to find a factor for the number other than 1",
			"and the number itself, well, then, we can go ahead and say that true,",
			"this number is going to be prime.",
			"And so this, for example, could be a function that",
			"checks to see if a number is prime.",
			"But if I'm trying to optimize, I'm trying",
			"to make my function more efficient, I might",
			"realize that you really don't need to check every number from 2 all",
			"the way up to the number and itself.",
			"I could really just check up to the square root of that number,",
			"for example.",
			"That for a number like 25, I want to check 2, 3, 4, 5",
			"because 5 squared is going to be 25.",
			"But after 5, I don't need to check any more numbers beyond that.",
			"That after you get to a number, after a number-- the square root of that number",
			"is multiplied by itself, there's never going",
			"to be a case where a number bigger than that could be a factor that I",
			"won't have already known about.",
			"So just thinking about things a little bit mathematically,",
			"we might be able to make some sort of optimizations",
			"where instead of going from 2 all the way up through n,",
			"I might go up to the square root of n.",
			"And I'll go ahead and import math to be able to use math dot square root.",
			"And I'll convert that number to an integer",
			"just in case the square root doesn't already happen to be an integer.",
			"So I think this works.",
			"I've at least talked myself into thinking",
			"that this is a function that might be able to check if a number is prime.",
			"So what could I do if I wanted to verify this?",
			"Well, I could write some assert statements.",
			"Another thing I could do is just use the Python interpreter.",
			"I could say, all right.",
			"Let me go ahead and type python.",
			"And I'm in the Python interpreter.",
			"And I can say, from prime, go ahead and import is_prime. prime is",
			"the name of that file.",
			"is_prime is the function in that file that I would like to test.",
			"And let's just try, all right, is_prime(5)?",
			"That's a prime number.",
			"Hopefully, it'll say true, that it's prime.",
			"All right, it does.",
			"Let's try is_prime(10)?",
			"See if that works.",
			"All right.",
			"is_prime(10) is false because 10 is not prime.",
			"That's good.",
			"That seems to be working as well.",
			"Let's try is_prime(99)?",
			"That's not prime because 3 is a multiple of that, for example.",
			"All right, false, so that's good.",
			"This seems to be working.",
			"And I could, in the interpreter, test this function",
			"to make sure that it works the way that I would want it to work.",
			"But let's now see some other ways that I might go about testing it.",
			"Well, one way is that I could write a file like tests0.py.",
			"And what tests0.py is going to do-- instead of using assert,",
			"I'm just going to do our Boolean checks like we were doing before.",
			"I'm going to import the is_prime function.",
			"And I've defined a new function called test_prime,",
			"which is going to serve the role of testing to make sure that when",
			"you square some number or when you check to see if some number n is prime,",
			"that you get some expected value, where that expected value is either true",
			"for it is prime or false for it's not prime.",
			"What, then, is this function doing?",
			"Well, the function is checking.",
			"We're calling the is_prime function on this number n",
			"and seeing whether or not it is equal to the expected value that we get,",
			"where we expect it to be either true or false.",
			"And if we run is_prime on n and it is not equal to what we expect,",
			"well, then, we print out, OK, there is an error.",
			"We expected some value true or false.",
			"But it turned out not to be the case.",
			"And so now that I have this test_prime function, well, I can say, all right.",
			"Let me go back into the Python interpreter.",
			"From tests0 import test_prime.",
			"And now I can say, all right, let me test_prime.",
			"Make sure that 5 is prime.",
			"So I'm passing in with my first input the number n,",
			"the number I would like to check.",
			"I want to check if 5 is prime.",
			"And the second input I provide is what I expect it to be-- either true or false.",
			"And here, nothing happens, which is a good thing.",
			"If there were an error, it would have printed something out.",
			"And the fact that I see nothing printed out means that everything was OK.",
			"If I test_prime now and say something like, all right,",
			"make sure 10 is not prime--",
			"make sure that 10 when you pass it into is_prime is going to give us false.",
			"Again, nothing happens.",
			"Seems to be working just fine.",
			"Let me now try--",
			"I can try more examples.",
			"Maybe I try test_prime 25.",
			"I want to make sure that 25 is not prime because 25 is not a prime number.",
			"All right.",
			"We get some sort of error.",
			"There's an error on is_prime(25) where I expected the output to be false.",
			"But for some reason, it looks like is_prime returns something",
			"other than false.",
			"It probably returned true.",
			"And so might indicate some sort of bug in my program,",
			"that somehow I don't think that 25 should be a prime number.",
			"But my program thinks that 25 is a prime number.",
			"And that error can be a clue to me as to how to do this.",
			"But ultimately, especially as programs start to grow longer, especially",
			"as I start to add more and more functions,",
			"testing each of those functions by hand is going to start to get tedious.",
			"So one thing I could do is write a script",
			"to be able to run all these tests for me automatically.",
			"And so here what I have a tests0.sh, .sh being like a shell script,",
			"some script that I can just run inside my terminal.",
			"And what this is doing is it's running Python 3, for Python version 3, dash",
			"c, which means I'm just going to give it a command.",
			"And it is going to run that command.",
			"And so I can just run these.",
			"And each of these lines does what?",
			"From tests0, it imports my test_prime function,",
			"that function that is going to test to make sure",
			"that the prime function produces the output that I would expect it to.",
			"And each time I'm testing a different number,",
			"making sure that 1 is not prime, making sure that 2 is prime,",
			"8 is not prime, so on and so forth.",
			"And I can just write a whole bunch of these tests.",
			"And then rather than have to run each test one at a time, what I can do",
			"is I can just run tests0.sh.",
			"I can just say that I would like to run ./tests0.sh.",
			"",
			"And, all right.",
			"I see that I get two errors.",
			"I get an error on is_prime(8), where I expected it to not be prime.",
			"But for some reason, it seems to be prime.",
			"And then again, here, exception on is_prime(25),",
			"where I expected it to not be prime.",
			"But for some reason, my program thinks that it is prime.",
			"So a very helpful way for me to know immediately that there's",
			"some sort of error that is going on here.",
			"But ultimately, rather than have me have to write all this framework for how",
			"to go about testing my code on my own, there",
			"exists libraries that can help us with this.",
			"And one of the most popular in Python is a library known as unittest.",
			"And what unittest as a library designed to do",
			"is it is going to allow us to very quickly write",
			"tests that are able to check whether something is equal to something else.",
			"And then unittest is built in with an automated test",
			"runner that will run all of the tests for me and verify the output.",
			"And unittest gets built in to a lot of other libraries within Python.",
			"We'll see how we'll soon be able to apply this sort of idea",
			"to our Django applications as well.",
			"But let's now translate these tests that we have written ourselves just",
			"by writing a function like test whether the prime number is what",
			"we expect it to be and now translate it to using this Python unittest",
			"library instead.",
			"And so just to get a sense for what this looks like,",
			"I'll now go ahead and open up tests1.py, where here first thing I'm doing",
			"is I'm importing unittest, which we get for free with Python.",
			"I'm also importing the function that I would like to test.",
			"And now I'm defining a class which will contain all of my tests.",
			"This is a class that inherits from or derives from unittest.TestCase, which",
			"means that this is going to be a class that",
			"is going to define a whole bunch of functions, each of which is something",
			"that I would like to test.",
			"And so, for example, in this very first test,",
			"this is a test that checks to make sure that 1 is not prime.",
			"And so the way I do that is by calling self-- this testing object itself.",
			"It happens to have a method or function built into it called .assertFalse.",
			"There's an equivalent .assertTrue.",
			"But I would like to .assertFalse.",
			"And what would I like to assert that is false?",
			"is_prime(1).",
			"So whatever is_prime(1) is, that should be false.",
			"And I would like to just assert that it is false.",
			"Likewise, for the number 2 now, I want to check that the number 2 is prime.",
			"And the way I do that is by calling self.assertTrue.",
			"I would like to assert that when I run the is_prime function on the number 2,",
			"the output that I get is going to be a true value-- self.assertTrue.",
			"And I can translate each of the rest of my tests",
			"into one of these self.assertTrues or self.assertFalse.",
			"And then I say that if you go ahead and run the program,",
			"go ahead and call unittest.main, which will run all of these unit tests.",
			"So now, when I run python tests1.py, here's what I get.",
			"I get some nice output, where up at the top,",
			"I see dots every time a test succeeded and a letter",
			"F for a test that happened to fail.",
			"It says that it ran six tests.",
			"And down in the bottom, I see that there were two failures.",
			"So it's immediately going to tell me exactly what failed.",
			"And it'll give me some rationale, some reason for why",
			"it is that those tests failed as well.",
			"So we can see, all right.",
			"Here is one test.",
			"Here is another test.",
			"This test that failed is the test that checked that 25 is not prime.",
			"And this sentence here is what I supplied inside",
			"of what was known as a Python docstring inside of those triple quotation marks,",
			"underneath the declaration of the function.",
			"Those triple quotation marks, otherwise known as a docstring,",
			"serve a number of purposes.",
			"They can serve as just a comment for describing what it is the function",
			"does.",
			"But they're a special comment insofar as someone",
			"who's looking at the function can access that docstring that's",
			"usually used for documentation for what it is that the function is doing.",
			"And they can use it inside of other places as well.",
			"And so what unittest is doing is for every function,",
			"it uses that docstring as a description of what the test is testing for,",
			"so that if a test fails, then I can see exactly what the name is",
			"of the test that failed and what it was tested, where the description describes",
			"what was happening.",
			"Now in this case, where it's just one function",
			"and I'm testing a whole bunch of different numbers,",
			"it doesn't seem all that useful.",
			"But again, if you imagine projects that start",
			"to get more complex, being able to know immediately",
			"when you run your tests which parts of the program",
			"or which parts of your web application are working the way",
			"they are expected to can actually be quite helpful.",
			"So test 25, that was the function that triggered an assertion",
			"failure in this case.",
			"And the line that caused it was self.assertFalse(is_prime(25)).",
			"And the reason that it failed is because True,",
			"which apparently was the output of this function, is not false.",
			"And I expected it to be false instead.",
			"And so multiple, different ways of trying to run our tests.",
			"This happens to be one quite popular one.",
			"But this now tells me that I should go back and try and fix",
			"my is_prime function.",
			"I can go back into prime.py and say, all right.",
			"I would like to figure out why this went wrong.",
			"And if you look at this enough and maybe give it a little bit of testing,",
			"you might see that I have a slight off by 1",
			"error, that I probably need to check one additional number than I actually",
			"am because in checking whether or not 25 is prime or not, for example,",
			"I might need to go up to and including the number 5",
			"to know that 5 is a factor of 25.",
			"But before, I was going up to the number 5, but I wasn't including the number 5.",
			"So I also need to just check one more number.",
			"And now to verify that this is right, I could just manually",
			"test the function myself.",
			"Or I could just run these tests again, run python tests1.py.",
			"And this time, all these dots mean all these tests succeeded.",
			"We ran six tests, and everything was OK.",
			"No failures.",
			"And so this can be a helpful way for me to know immediately",
			"that things seem to be working OK.",
			"So the takeaways from here are that these tests can definitely",
			"help as you begin to write new changes to your program,",
			"especially as you begin to optimize functions.",
			"You might make a function more efficient but then",
			"run your tests to make sure that in making these improvements,",
			"you haven't broken anything.",
			"You haven't changed any behavior, that the way the program",
			"was supposed to behave and now it doesn't behave that way,",
			"you are able to verify with much more confidence that that is true.",
			"But of course, that only works if your tests",
			"have good coverage of all the things that you would want the function to do,",
			"and you've covered appropriately all the various different cases",
			"for how the function should behave because only if the tests are",
			"comprehensive, will they actually be useful to you",
			"in indicating that the change that you made isn't going to break anything.",
			"And only then can you actually feel confident in those changes themselves.",
			"So now let's take this idea of using unittest to be",
			"able to write these tests that verify that a function works",
			"and apply it to something like a web application--",
			"like a web application written in Django that we",
			"would like to now use in order to be able to test to make sure",
			"that various, different functions inside of our Django web application",
			"work as well.",
			"So what I'm going to do is actually take a look at the airline program",
			"that we wrote back when we were first talking about Django",
			"and first talking about storing data inside of databases.",
			"And I'm going to open up models.py where you",
			"see that I've made one addition to our definition of a flight.",
			"And recall from before, when we first introduced",
			"this idea of defining a model inside of our application",
			"for a flight inside of an airline, we gave that model three properties.",
			"It had an origin and a destination, where both origin and destination",
			"referenced an airport object, where an airport object was",
			"an object we defined separately.",
			"But a flight has an origin airport and a destination airport.",
			"And in addition to that, every flight has a duration, some number of minutes",
			"long that that flight is going to last.",
			"And I might like to have some way to validate,",
			"to verify that a flight is a valid flight, that there isn't some error",
			"somewhere in how the data was entered into the database.",
			"I would like to just generally make sure that given a flight,",
			"I can check to make sure it's a valid flight.",
			"And what does it mean for a flight to be valid?",
			"Well, in general, given these particular fields,",
			"I'll say there are two things that need to be true for a flight to be valid.",
			"The origin and the destination need to be different.",
			"That's condition number one.",
			"It wouldn't make sense to have a flight whose origin and destination",
			"are the same airport.",
			"And condition number two, the duration of the flight",
			"needs to be greater than 0 minutes.",
			"If ever the duration is 0 or the duration is negative,",
			"that probably indicates to me that there was some sort of mistake in data entry",
			"or some problem that happened with how it",
			"is that these flights were configured.",
			"So I want to make sure that the duration is greater than 0.",
			"And those then are my two conditions for what makes a valid flight.",
			"And I've, in fact, written a function here",
			"called is_valid_flight that just works on this flight",
			"class that simply checks given a flight, make sure that it is, in fact, valid.",
			"And the way it's doing that is by checking for these two conditions",
			"that I've just described.",
			"It's checking to make sure that the origin is not equal to the destination.",
			"It's checking to make sure that the duration of the flight",
			"is greater than or equal to 0.",
			"And maybe I should change that to greater than to make sure",
			"it's entirely positive.",
			"But this then is my definition for what it means",
			"for something to be a valid flight.",
			"And what I'd like to do now is test these various, different parts",
			"of my application.",
			"I have this is_valid_flight function inside a flight",
			"that I might like to test as well.",
			"But we also have all of these other properties",
			"that I would like to test, these relationships,",
			"that a flight has an origin and a destination.",
			"We have passengers that can be associated with flights.",
			"So there's lots of relationships between my data",
			"that I would like to test and verify to make sure they",
			"work the way we would expect it to.",
			"So to do that, whenever we create an application in Django,",
			"like this flight's application here, we were also given this tests.py file.",
			"And we haven't yet used the tests.py file for anything.",
			"But what it's supposed to be used for is for writing",
			"these sorts of tests, testing that verifies that our application behaves",
			"the way that we want it to behave.",
			"So let's go ahead now and open up tests.py",
			"and see what happens to be in here.",
			"What we can do is we can define a subclass of TestCase,",
			"which behaves very similar to unittest and is based on that same idea.",
			"I'll define a new class called FlightTestCase",
			"that will just define all of the tests that I would",
			"like to run on my flight's application.",
			"And so things to know about this is that first, I",
			"might need to do some initial setup in order",
			"to make sure that there's some data that I can actually work with and test with.",
			"And what Django will do when I go ahead and run these unit",
			"tests is that it will create an entirely separate database for me",
			"just for testing purposes, that we have one database that",
			"contains all the information that actually pertains to the flights that",
			"are actually there on my web server.",
			"But we might also like to just test things with some dummy flights",
			"and some dummy airports just to make sure that things are working.",
			"And then once we're confident things are working,",
			"then we can deploy our web application to let",
			"actual users begin to use whatever new features we've added to the web",
			"application, for example.",
			"So inside of this database, I might need to do some initial setup.",
			"And I can do so by defining a setup function inside of my test case class.",
			"This is a special function.",
			"And Django knows that when it's running these tests,",
			"it should first do any of the setup steps that we need to do.",
			"And so how are we doing this?",
			"Well, what we're doing is inside of the setup,",
			"we're going to just add some sample data into the test database.",
			"Again, this won't touch the database that users actually see",
			"and actually interact with.",
			"This is just our test one for testing purposes.",
			"And we'll start by going ahead and creating some airports, so",
			"Airport.objects.create, and then specifying what",
			"the values for these fields should be.",
			"We'll just have an airport whose code is AAA for city A",
			"and an airport whose code is BBB for city B. Just a dummy airport names.",
			"They're not real airports but just used for testing purposes.",
			"And I'll save those airport objects inside of these values, a1 and a2.",
			"And beneath that, what I'm going to do next is go ahead and create",
			"some flights where I create using Flight.objects.create",
			"three different flights, one that goes from a1 to a2",
			"with the duration of 100 minutes; one from a1 to a1 with a duration of 200",
			"minutes; one from a1 to a2 with a duration of negative 100 minutes.",
			"So I have a whole bunch of these flights now that I would like to test,",
			"that I would like to make sure work in some predetermined or expected way.",
			"And so now if I scroll down, we can see that I have a whole bunch",
			"of these various different tests.",
			"Here is one test that just tests the departures count.",
			"So every airport has access to a field called",
			"departures, which ideally should be how many flights",
			"are departing from that airport.",
			"And I'd like to make sure that departures_count",
			"works the way I expect it to.",
			"So here, I go ahead and get the airport whose code is AAA.",
			"And now, using unittest-like syntax, I would like to say self.assertEqual.",
			"So assertTrue verifies if something is true.",
			"assertFalse verifies if something is false.",
			"assertEqual verifies that two numbers are equal to each other.",
			"And here, I'd like to verify that a.departures.count--",
			"if I take airport a and count how many flights",
			"are departing from that airport, that that should be 3,",
			"so just verifying that works.",
			"And then after that, if this test passes, then",
			"I can be confident that elsewhere in my program, if I take an airport",
			"and call that airport.departures.count, I",
			"can feel pretty confident that that is going",
			"to work the way I would expect it to.",
			"I can do the same thing for arrivals, get the airport,",
			"and assert that a.arrivals.count, that that",
			"is going to be equal to the number 1 if there's only one flight that",
			"arrives at airport a1, for example.",
			"So that tests these relationships.",
			"And I can also now test the is_valid_flight function as well,",
			"that here I get my two airports, a1 and a2.",
			"This is the one whose code is AAA.",
			"This is the one who's code is BBB.",
			"I'll go ahead and get the flight whose origin is a1, whose destination is",
			"a2, whose duration is 100.",
			"And let me just assertTrue that this flight",
			"is going to be a valid flight because this fight is valid.",
			"The origin is different from the destination.",
			"Its duration is some positive number of minutes.",
			"And so I should feel pretty confident that this",
			"is going to be a valid flight that I can verify by calling self.assertTrue.",
			"I can do the same thing for testing for an invalid flight,",
			"testing for an invalid flight because the destination is bad.",
			"I can get the flight, airport a1, and get the flight whose",
			"origin and destination are both a1.",
			"And now let me self.assertFalse, say that this should not",
			"be a valid flight because the origin and the destination are the same.",
			"What's the other way a flight can be invalid?",
			"Well, a flight can be invalid because of its duration.",
			"So I could say something like, go ahead and get airports a1 and a2.",
			"And get me the flight whose origin is a1, destination is a2,",
			"but the duration is negative 100 minutes.",
			"That was one of the flights as well.",
			"And, well, that should not be a valid flight.",
			"So I'll say self.assertFalse is_valid_flight",
			"because when I call is_valid_flight on that flight,",
			"it shouldn't be valid because the duration makes it an invalid flight.",
			"So here now I've defined a whole bunch of tests.",
			"And there are more done below that we'll take a look at in a moment as well.",
			"But I've defined a whole bunch of these flights now or a bunch of these tests.",
			"And now I'd like to run them.",
			"And the way that I can run tests in Django is via a manage.py command.",
			"manage.py has a whole bunch of different commands that we can run.",
			"We've seen makemigrations and migrate and runserver.",
			"But one of them as well is if I go into airline0,",
			"I can say python manage.py test that's just going to run all of my tests.",
			"And we're right.",
			"It seems that we ran 10 tests.",
			"But two of them failed.",
			"So let's go ahead and see, why did those two tests fail?",
			"Well, the way to read this is that we get this heading anytime a test failed.",
			"And so we failed the test_invalid_flight_destination",
			"function.",
			"And we failed the test_invalid_flight_duration function.",
			"And docstrings could have helped me to know what it",
			"is that these tests are exactly doing.",
			"But it seems that true is not false.",
			"I wanted to assert that this should not be a valid flight, that it",
			"should be false.",
			"But for some reason, these appear to be valid flights.",
			"So something seems wrong with is_valid_flight",
			"where it's returning true when it should be returning false.",
			"And so this then gives me a place to start looking.",
			"I can say, all right.",
			"Let me go to is_valid_flight and make sure that function is correct.",
			"So I'll go back into models.py.",
			"I'll take another look at is_valid_flight.",
			"Maybe I'll think through the logic again.",
			"All right.",
			"I wanted to check that self.origin is not self.destination.",
			"I wanted to check that the duration is greater than or equal to 0.",
			"I could change this to greater than.",
			"But I don't think that's the issue because my duration was negative.",
			"And so that already should have been invalid.",
			"But the other thing I might realize looking at this",
			"now is that, OK, the logical connectives that I have used was not the right one.",
			"I want to check that for it to be a valid flight,",
			"it needs to satisfy both of the conditions.",
			"The origin and the destination need to be different.",
			"And the duration of the flight needs to be greater than 0, for example.",
			"And here, I've used \"or\" instead of \"and.\"",
			"So I can just change it.",
			"All right.",
			"And hopefully, that will fix things.",
			"And to verify as much, I can rerun python manage.py test.",
			"Go ahead, and press Return.",
			"It's going to check things.",
			"I ran 10 tests.",
			"Everything is OK.",
			"And all right, it seems that now I have passed all of these tests.",
			"I notice here at the top, it created a test database.",
			"So it just created a test database for me",
			"in order to do all this testing work.",
			"And then it destroyed that test database at the end as well.",
			"So none of my tests--",
			"I'm adding data, removing data.",
			"It's not going to touch any of the actual data.",
			"Inside of my database for the web application,",
			"Django will take care of the process of keeping all of that separate for me",
			"by first calling that setup function to make sure that my new test database has",
			"everything that it needs to.",
			"So, all right.",
			"We now have the ability, by using unittest,",
			"to be able to test various, different functions inside of our web",
			"application.",
			"We first saw that we could test a function like the is_prime function,",
			"just a Python function that we wrote.",
			"But we can also test things like functions on our model,",
			"like checking to make sure that a flight is valid,",
			"checking to make sure that we can take a flight and access all of the--",
			"or take an airport, and access all of its arrivals and all of its departures.",
			"But I'd like to do more than that, especially for a web application.",
			"I'd like to check that particular web pages work",
			"the way that I want them to work.",
			"And so to do that, Django lets us simulate",
			"trying to make requests and get responses to a web application.",
			"And so let's go ahead and look at some of these other tests as well.",
			"Here what we have is a function called test_index.",
			"And what test_index is going to do is it's just",
			"going to test my default flights page to make sure that it works correctly.",
			"So we start by creating a client, some client that's",
			"going to be interacting request and response style.",
			"Then I'm going to call client dot get slash flights.",
			"That is the route that gets me the index page for all the flights.",
			"And I'm saving that inside of a variable called response.",
			"Whatever response I get back from trying to get that page,",
			"I would like to save inside of this variable called response.",
			"And now, I can have multiple assert statements inside of the same test",
			"if I would like to.",
			"Sometimes you might want to separate them.",
			"But here, I want to check that the index page works.",
			"And what that means is a couple of things.",
			"It means that response.status_code, well, that should be equal to 200.",
			"200, again, meaning, OK.",
			"I want to make sure that whatever response I get back,",
			"that that is going to be a 200.",
			"And if there was some sort of error, like a 404 because the page wasn't",
			"found or a 500 because of some internal server error,",
			"I would like to know about that.",
			"So let me first just assert that the status code should be equal to 200.",
			"But then Django also lets me access the context for a response.",
			"And what is the context?",
			"Well, recall, again, in Django, when we rendered a template, for example,",
			"we called return render then provided the request",
			"and what page we were going to render.",
			"But we could also provide some context, some Python dictionary,",
			"describing all of the values that we wanted to pass in to that template.",
			"And Django's testing framework gives us access to that context",
			"so that we can test to make sure that it contains",
			"what we would expect it to contain.",
			"And on the index page for all my flights,",
			"I would expect that to contain a listing of all of the flights.",
			"And we created three sample flights inside of this test database.",
			"So I should be able to assert that these two things are equal.",
			"response.context flights, that gets me whatever",
			"was passed in as flights in the context.",
			"Dot count, well, that better be 3 because I",
			"want to make sure that there are exactly 3 results that come back",
			"when I look at the context and access whatever it happens",
			"to be inside of that flight's key.",
			"There are other tests I can run as well.",
			"So in this case, I've gone ahead and gotten a particular flight,",
			"the flight who, in this case, had an origin of a1 and a destination of a1,",
			"that it was not a valid flight.",
			"But we'll go ahead and get it anyway because it exists in the database.",
			"And now I can get slash flights slash that flight's ID",
			"because on my flight's page, I would like",
			"to be able to go to slash flights slash 1 to get at flight number 1,",
			"and go to slash flights slash 2 get at flight number 2.",
			"So if I take some valid ID, some ID of an actual flight f",
			"and go to slash flights slash dot id, well, that should work.",
			"It should have a status code of 200.",
			"Meanwhile, though, if I test an invalid flight page,",
			"this is a Django command that will get me the maximum value for the ID.",
			"This id__max gets me the biggest possible ID out of all of the flights",
			"that happen to exist inside of my database.",
			"If I go ahead and try and get slash flights slash max_id plus 1--",
			"so a number that is 1 greater than any of the flights that",
			"were already inside of my database-- well, that shouldn't work.",
			"There shouldn't be a page for a flight that doesn't exist.",
			"So here then, I can assertEqual that the status code of what",
			"comes back, that that is equal to 404 because I",
			"would expect that page to return a 404.",
			"And finally, I can also check various different contexts",
			"for things about the passenger page.",
			"So in this case, I've added some sample passengers to the database.",
			"So inside of my test, I can manipulate the database as well,",
			"adding data into the database and checking",
			"to make sure that when you count up the number of passengers on a flight page,",
			"that that is going to be like the number 1, for example.",
			"So a number of different tests that we can then",
			"write in order to verify various different parts of our web application.",
			"I would like to verify not only that our database works",
			"the way we would expect the database to work in terms of how functions",
			"on our models work, in terms of relationships between those models",
			"like the relationship between a flight and an airport,",
			"but we can also simulate a GET request, simulating the request to a page",
			"and verify that the status code that comes back",
			"is what we would expect it to be; verify that the contents of the page",
			"contain the right contents; verify that the context that was passed",
			"into that template is correct as well.",
			"And then all of that can then be verified",
			"by saying something like python manage.py",
			"test then go ahead and running that.",
			"And we see that in this case, all of the tests happened to pass,",
			"which means that everything seems to be OK, at least for now.",
			"So this then, again, very helpful as our web",
			"programs start to get more complex, as we have multiple different models,",
			"multiple different routes, the ability to test,",
			"to make sure that if we change things in one part of the program,",
			"that it doesn't break things in another part.",
			"That can be quite helpful too.",
			"What we haven't yet been able to test though",
			"is any interaction that's happening exclusively in the browser.",
			"But I've been able to test a lot of things that are happening server-side.",
			"And recall that Django is all about working on writing this web server--",
			"a Python application that acts as a web server that listens for requests that",
			"come in from users, processes those using these various different views",
			"and models, and then provides some sort of response back.",
			"And we can test the contents of that response, things like,",
			"does the status code match what we would expect it to?",
			"Does the context match what we would expect it to?",
			"But there are some times where we would like to really simulate",
			"like a user clicking on buttons and trying things on a page and making sure",
			"that page behaves we would like it-- how we would like it to as well",
			"even if we're not using Django, or even if we're just",
			"dealing with the front end.",
			"So let's create a sample JavaScript web page",
			"that we might like to test now by using these sorts of ideas--",
			"the ability to automate the process of testing",
			"various, different parts of our application to verify",
			"that they do, in fact, work correctly.",
			"What I'm going to do now is we'll get out of the airline directory.",
			"And I'm going to create a new file that I'll call counter.html.",
			"And recall before, we created a counter application using just",
			"JavaScript where what the counter application did",
			"is it let me click a button, like an increase or a count",
			"button that just incremented a number.",
			"It went from 0 to 1 to 2 to 3 to 4 and so forth.",
			"I'm going to do the same thing here.",
			"We'll add a little more complexity though and give myself both an increase",
			"button to add a number and a decrease button",
			"to decrease the number by 1 as well.",
			"So I go ahead and start with our usual DOCTYPE html and our html tag.",
			"I'll give this page a title of Counter.",
			"And now, inside of the body of this page,",
			"I will go ahead and start with a big heading that just says 0.",
			"And then beneath that, I'll create two buttons.",
			"I'll have one button which will be the plus symbol and one",
			"button which will be the minus symbol.",
			"So now no JavaScript yet.",
			"This won't actually work.",
			"But I can go ahead and go into open counter.html.",
			"And I can see that I now have 0, and I have a plus and a minus button,",
			"although those Plus and Minus buttons don't actually do anything right now.",
			"So let's go ahead and make them do something.",
			"Let's give this button an ID called increase",
			"so that I can reference it later, and give this button an ID called decrease,",
			"again, so that I can reference it inside of my JavaScript.",
			"And now, in the head section of my web page,",
			"I add a script tag where I want to start running some JavaScript",
			"once the page is done loading.",
			"And to do that, you'll recall, I can say document.addEventListener c",
			"to say, go ahead and run this function once the DOM is loaded,",
			"once all the contents of this page have loaded the way I would expect it to.",
			"And what am I going to do?",
			"Well, I first need a variable, something like let counter equal 0.",
			"And then I can say, all right document.querySelector increase.",
			"Get me the element whose ID is increase.",
			"That's that plus button.",
			"And when you are clicked, let's go ahead and add an event handler",
			"in the form of this callback function, this function that will be called",
			"when the increase button is clicked.",
			"And what would I like to do?",
			"Well, I'd like to increase the counter.",
			"Go ahead and say counter++.",
			"And then I'm going to update this h1 that currently contains 0.",
			"document.querySelector h1.",
			"That gets me the H1 element.",
			"I'll go ahead and update its inner.HTML, and go ahead",
			"and set that to whatever the value of counter happens to be.",
			"And then I'll do the same thing for the decrease button.",
			"document.querySelector, get me the element",
			"whose ID is decrease-- that's the button that will be the minus button.",
			"And when you are clicked, go ahead and run this callback function,",
			"which will do the same thing, except we'll first do counter--",
			"decrease the value of the counter by 1, and then get me the H1 element,",
			"set its innerHTML equal to the counter.",
			"I think this should work.",
			"And I could verify that by opening up counter.html.",
			"I'll refresh the page.",
			"And I can test these buttons.",
			"Test the plus button.",
			"All right.",
			"That seems to work, increases the value by 1.",
			"I can test the minus button, make sure that that decreases the value by 1.",
			"That all seems to work just fine.",
			"But, of course, this requires me having to interact with this page.",
			"I have to open up the page.",
			"I have to click on these buttons.",
			"And it's not the type of thing where I'm simulating",
			"like a GET request or a POST request.",
			"There is no server that I'm sending a request to and getting back",
			"a response of 1, 2, 3, 4 from.",
			"This is all happening in the browser.",
			"And so what I might like to have the ability to do",
			"is some sort of browser testing.",
			"And there are a number of different frameworks for doing this.",
			"One of the most popular is Selenium.",
			"And what this is going to allow me to do is",
			"I can define a test file that using unittest or a similar library",
			"can effectively simulate a web browser--",
			"can simulate a web browser and simulate a user interacting",
			"with that web browser using something that we call a WebDriver that's",
			"going to allow me to, using code, control",
			"what it is that the browser is doing and how it is that the user is interacting",
			"with this program.",
			"So how is this going to work?",
			"Well, I'm going to go ahead, and just as a test,",
			"let me open up the Python interpreter.",
			"And let me import from tests import star.",
			"And that's going to give me access to a couple of different things.",
			"But the first thing you'll notice that it's doing",
			"is because I'm using this WebDriver, it's going to give me a web browser.",
			"And here I'm using Chrome.",
			"But you could use another browser.",
			"But notice it here, Chrome is telling me Chrome",
			"is being controlled by automated test software, that Chrome has the ability",
			"to allow me, using automated test software,",
			"using Python code, control what it is the web browser is doing.",
			"And so what I can do here is the first thing I need to do",
			"is tell Chrome to open up my web page.",
			"And it turns out that in order to do so, I",
			"need to get that page's URI or Uniform Resource Identifier, just some string",
			"that will identify that page.",
			"And I've defined a function called file_uri",
			"that gets me the URI of a particular file in this directory.",
			"So I'm going to say I want open up counter.html.",
			"And I need to get it's URI.",
			"But now what I can say is driver.get(uri),",
			"meaning tell this web driver, this Python--",
			"part of the Python program that is controlling the web browser that I",
			"would like to get this web page as if the user had gone to the web page",
			"and pressed Return after typing in the URL.",
			"So I say driver.get(uri).",
			"I go ahead and press that.",
			"And what you'll notice on the right-hand side here",
			"is that Chrome has loaded this page.",
			"I am effectively controlling this web browser window using my Python program.",
			"I said driver.get(uri), meaning go ahead and open up the counter.html page.",
			"And then, inside of this test window, Chrome has opened that up.",
			"And inside my Python program now, using this web driver,",
			"I have the ability to see the same things that the user sees",
			"when they open the page.",
			"So what does a user see when they open the page?",
			"Well, they see, for example, the title of the page.",
			"So I could say driver.title and see that, all right, the title of this page",
			"is Counter.",
			"That was, in fact, the title of the page.",
			"But I could verify that inside my Python program",
			"that by checking that driver.title, by taking my WebDriver,",
			"getting the title of the current page that it's looking at,",
			"making sure that that is Counter.",
			"And likewise, if I looked at driver.page_source, press Return,",
			"what I see there in string format--",
			"so it's a little bit messy--",
			"is the content, the HTML content of this page.",
			"And you'll notice things like DomContentLoaded,",
			"here are my onclick handlers.",
			"Here's my h1 that says 0.",
			"It's very messy because it's being represented as a Python string.",
			"And these backslash n's refer to new lines where there's a line break.",
			"But this is the content.",
			"And this is really all the browser gets.",
			"The browser takes this information and just knows",
			"how to render it in some nice, more graphical representation",
			"that's easier for a user to look at and, therefore, be able to understand.",
			"But this is fundamentally all that my web browser is actually getting back",
			"when it tries to load a web page.",
			"So what can I do from here?",
			"Well, I would like to simulate a user's behavior on this page that assures",
			"I can get a page and see the title.",
			"But I want to simulate like clicking on the plus button, for example.",
			"So in order to do that, first thing I need to do",
			"is actually get the Plus button.",
			"And to do that, I could say something like driver.find_element_by_id.",
			"",
			"There are a number of ways that I could try and find an HTML element.",
			"But I would like to find an HTML element by its ID.",
			"And I know that the Plus button-- the Increase button--",
			"has an ID of increase, for example.",
			"And so if I find element by ID, let me find the element whose ID is increase.",
			"And, all right.",
			"It seems here, that I've gotten some web element object back from my web driver.",
			"And I'll go ahead and save that inside of a variable called increase.",
			"So what I now have is a variable called increase",
			"that represents the Increase button that my WebDriver has found on the web page.",
			"It's effectively the same thing as you, the human,",
			"going through the page looking for the Increase button.",
			"The WebDriver is doing the same thing, except instead",
			"of looking for the button based on what it looks like,",
			"it looks for the button based on its ID.",
			"And so this, again, another reason why it's",
			"helpful to give your HTML elements IDs.",
			"In case you ever need to be able to find that element,",
			"it's very useful to be able to reference that element by its name.",
			"But now that I have a button, I can simulate user interaction",
			"with that button.",
			"I can say something like increase.click to say",
			"I would like to take the Increase button and simulate a user clicking",
			"on that button in order to see whatever it is that the user would get back",
			"when they click on that button.",
			"So increase.click, I press Return.",
			"And what you'll notice happens is that the number increases-- increases",
			"from 0 to 1.",
			"It's as if I, the user, had actually clicked on the Plus button,",
			"except all I did was say increase.click to say, go ahead and press",
			"the Increase button and let the browser do",
			"what it would normally do in response.",
			"And what it would do in response is get that JavaScript event",
			"handler, that onclick handler, and run that callback",
			"function that increases the value of counter and updates the h1.",
			"So I can say increase.click to simulate increasing the value of that variable.",
			"But this is just a function call, which means",
			"I can include it in any other Python constructs that I want,",
			"that if I want to repeat something like 25 times, for example,",
			"and press the button 25 times, I can say for i in range 25,",
			"go ahead and click the Increase button.",
			"And now, very quickly, 25 times, it's going to click the Increase button.",
			"And I'm going to see the result of all of that interaction.",
			"So I can simulate user interaction just by using the Python interpreter.",
			"Likewise, if instead of increasing, I wanted to decrease,",
			"well, then, I'm going to do the same thing.",
			"I'm going to say decrease equals driver.find_element_by_id.",
			"Let me get the decrease element, the element whose ID is decrease.",
			"And now say, decrease.click.",
			"And that will simulate me pressing the Decrease button.",
			"Press it again.",
			"And the more I press it, every time, it's just going to decrease by 1.",
			"And if I want to decrease it all the way back to 0,",
			"well, then, I'll just do it 20 times.",
			"For i in range 20, go ahead and decrease.click.",
			"And that's going to go ahead and reduce the count all the way back to 0",
			"by simulating the user pressing a button 20 times.",
			"And what you'll notice is that it happened remarkably fast.",
			"Like I can simulate 100 presses of the Increase button",
			"by saying for i in range 100, increase.click.",
			"And very quickly, you'll see that number 100 times go ahead",
			"and go up to 100 faster than a human could ever have clicked",
			"that Plus button over and over again.",
			"And so these tests cannot only be automated,",
			"but they can be much faster than any human could ever be in order to test",
			"this behavior.",
			"So how then can we incorporate this idea into actual tests",
			"that we write, into like a unit testing framework that",
			"allows me to define all of these various different functions",
			"that test different parts of my web application's behavior?",
			"Well, to do that, let's go ahead and take another look at tests.py.",
			"Inside of tests.py, here, again, is that file_uri function,",
			"where that function has the sole purpose of taking a file and getting its URI,",
			"and we need the URI to be able to open it up.",
			"Then we go ahead and get the Chrome WebDriver,",
			"which is going to be what's going to allow us to run",
			"and simulate interaction with Chrome.",
			"And in order to get Chrome's WebDriver, you",
			"do have to get ChromeDriver separately.",
			"It is separate from Google Chrome itself.",
			"But Google does make it available.",
			"And other web browsers make equivalent web drivers available",
			"as well if you'd like to test how things would work in other browsers",
			"because different browsers might behave differently.",
			"And it might be useful to be able to test to make sure that not only does",
			"everything work in Google Chrome, but it's also",
			"going to work in other browsers that you might expect",
			"users to be working with as well.",
			"Here, then, I've defined a class that, again, inherits from unittest.TestCase",
			"that is going to define all of the tests that I would like to run on this web",
			"page, that here I have a function called test_title that's going to go ahead",
			"and first get counter.html.",
			"It's going to open up that page.",
			"And then just assertEqual, let's make sure the title of the page",
			"is actually Counter.",
			"That's what I would expect it to be.",
			"So I can write a test in order to test for that case as well.",
			"Here, I test the Increase button by finding the element whose",
			"ID is increase and clicking on that button",
			"to simulate a user pressing the Plus button in order",
			"to increase the value of the counter.",
			"And then, what do I want to check?",
			"Well, I want to check that when you find element by tag name,",
			"h1, and so find_element_by_tag_name, similar to find_element_by_id,",
			"except instead of finding something by its ID,",
			"it's going to look at what's the tag.",
			"And there is only one element that is in h1.",
			"And so here I'm saying, go ahead and get me the H1 element",
			"and access its text property, meaning whatever",
			"it is that is contained inside of those two H1 tags,",
			"I would expect that to be the number 1.",
			"And I would assert that this is equal to 1.",
			"And likewise, I can do the same thing for the Decrease button--",
			"finding the element whose ID is decrease, clicking on that button,",
			"and then asserting equal, find me the H1 element",
			"and make sure that the contents of it are",
			"equal to the number negative 1, for instance.",
			"And this final test, just test things multiple times, that three times I'm",
			"going to press the Increase button and make sure",
			"that after I press the Increase button three times, when I check the h1,",
			"check what's inside of its text, that the answer should, in fact, be 3.",
			"So now I should be able to go ahead and test",
			"this code by running python tests.py.",
			"And what that is going to do is it's going to open up a web browser.",
			"And what you're going to see, very quickly flashed across my screen,",
			"were all of those tests.",
			"We tested the increase by 1.",
			"We tested decreased by 1.",
			"And then we tested like increase 3 times after we had checked",
			"to make sure the title was correct.",
			"And then we can see here is the output.",
			"We ran four tests in this amount of time,",
			"and everything turned out to be OK.",
			"None of the tests failed.",
			"But if one of the tests had failed, well, then,",
			"we would see a different output.",
			"So let's imagine, for example, that I had had a bug in my decrease function,",
			"for example, where the decrease function wasn't actually working.",
			"What would that bug look like?",
			"Maybe I forgot to say counter minus minus.",
			"Or maybe, perhaps more likely, what might have happened is I wanted to--",
			"I already had written the increase function,",
			"and I decided to very quickly add the decrease function,",
			"and I thought I just--",
			"like Copy/Paste, like copy the increase event handler.",
			"The decrease event handler is basically the same thing",
			"except I need to query for decrease instead.",
			"And maybe I just did that and forgot to change plus",
			"plus to minus minus, a bug that might happen",
			"if you're not too careful about how you copy and paste code from one place",
			"to another.",
			"Now when I run these tests, python tests.py, we'll see the simulation.",
			"A whole bunch get simulated.",
			"And when I go back and check the output of my tests,",
			"see what actually happened, I see that we do",
			"seem to have an assertion error here.",
			"The assertion fail was on the test decrease function.",
			"And it happened when I tried to assert that what was inside of the H1 element",
			"was negative 1 because 1 is not equal to negative 1.",
			"So this is the value of this assertion error as well.",
			"And this is helpful, an advantage over just assert.",
			"Assert just tells you there is an assertion error.",
			"But here, in unittest, we actually get to see",
			"if I asserted that two things are equal, it tells me what both of those things",
			"are.",
			"It tells me the actual output of h1's text.",
			"It was 1.",
			"But what I expected it to be was negative 1.",
			"So it tells me exactly what the discrepancy is.",
			"I know that for some reason, it was 1 instead of negative 1.",
			"And that can be a clue to me, a hint to me,",
			"as to how I can go about trying to solve this problem.",
			"And I can solve the problem by going into my decrease event handler,",
			"seeing that, all right, this was increasing the counter",
			"instead of decreasing it.",
			"Change plus plus to minus minus, and now rerun my tests",
			"and see all of the test simulated inside of my Chrome Driver.",
			"And we ran four tests.",
			"And this time, everything was OK.",
			"So all of my tests appear to have passed this time.",
			"So those, then, are some possibilities for being able to test our code,",
			"especially taking advantage of unittest, this library that we",
			"can use in Python in order to make various types of assertions",
			"about what we would like to be true or false about our code.",
			"And unittest contains a number of helpful methods",
			"for being able to perform these sorts of assertions.",
			"Some of them are here.",
			"So we can say things like I would like to assert that two things are",
			"equal to each other, which we've seen.",
			"There's a counterpart to that, assertNotEqual for making sure the two",
			"things are not equal to one another.",
			"assertTrue and False, we've seen as well.",
			"There are others as well though, things like assertIn or assertNotIn,",
			"if I would like to assert, for example, that some element is in some list,",
			"for example, or that some element is not in some list.",
			"There are other assert methods as well that we can use in order",
			"to verify that a part of our program or a part of our web application",
			"does, in fact, behave the way we would want to behave.",
			"And we can integrate this type of idea into a number",
			"of different types of testing.",
			"We saw integrating it into Django itself, using Django as unit testing",
			"in order to verify that our database works the way we expected it to,",
			"and that our views works the way that we expected them to and provided",
			"the right context back to the user after the user makes a request to our web",
			"application.",
			"And there are also applications of unit testing,",
			"whether using the framework or not, to browser-based testing,",
			"when I want to test inside of the user's web browser.",
			"Does it actually work when a user clicks on this button,",
			"that the JavaScript behaves the way that I would expect it to.",
			"And I don't need to especially use JavaScript in order to do those tests.",
			"I didn't write those tests using Python, using unittest,",
			"to be able to say, click on the button that has this ID",
			"and verify that the result that we get back is what we would expect it to be.",
			"So that then was testing.",
			"And now we'll go ahead and take a look at CI/CD--",
			"Continuous Integration and Continuous Delivery",
			"which refer to two best practices in the software development world",
			"that has to do with how it is that code is written,",
			"especially by groups or teams of people; how it all works together,",
			"and how that code is eventually delivered and deployed",
			"to users who are using those applications.",
			"So CI, which refers to Continuous Integration,",
			"involves frequent merges to a main branch of some repository,",
			"like a Git repository, and then automatically running",
			"unit tests when that code is pushed.",
			"So what does that generally mean?",
			"Well, in the past, you might imagine that if multiple people are working",
			"on some project at the same time and multiple people are each",
			"working on different features or different parts of that project,",
			"then after everyone's done working on those features",
			"and we're ready to ship some new version of a web application",
			"or ship some new version of a software product, well, then,",
			"everyone's going to have to take all these various different features",
			"and combined them all together at the end",
			"and figure out how to then try and deliver that program to users.",
			"And this has a tendency to cause problems,",
			"especially if people have been working on different big changes",
			"all simultaneously.",
			"They might not all be compatible with one another.",
			"There might be conflicts between the various different changes",
			"that have been made.",
			"So waiting until everyone is done working on a feature",
			"to merge them all back together and then deliver it",
			"is not necessarily the best practice, which",
			"is why increasingly, many more teams are beginning",
			"to adopt a system of continuous integration,",
			"that there is one repository somewhere online",
			"that's keeping the official version of the code.",
			"Everyone works on their own version of the code, maybe on their own branch,",
			"for example.",
			"But very frequently, all of these changes",
			"are merged back together into the same branch",
			"to make sure that these incremental changes can be happening such",
			"that it's less likely that there's two really divergent paths that the program",
			"has gone under, and as a result, it's much more",
			"difficult to merge those two paths back together.",
			"In addition to frequently merging to its own main branch,",
			"another key idea of continuous integration",
			"is this idea of automated unit testing, where unit testing, again,",
			"refers to this idea of on our program, we",
			"run a big series of tests that verify each little part of our program",
			"to make sure that the web application behaves the way it is supposed to.",
			"And unit tests generally refer to testing particular small components",
			"of our program, making sure that each component works as expected.",
			"There are also bigger scale tests-- tests like integration tests that",
			"make sure that the entire pathway from user request",
			"and response, that everything along a certain pipeline works as well.",
			"But there are various different types of testing.",
			"And the important thing is making sure that anytime",
			"some new change is merged into the main branch or someone",
			"wants to merge their changes into the main branch,",
			"that these tests are run to make sure that nobody ever",
			"makes a change to one part of a program that",
			"breaks some other part of the program.",
			"And in a large enough code base, it's going",
			"to be impossible for any one person to know",
			"exactly what the effect of one particular change",
			"is going to be on every other part of the program.",
			"There are going to be unforeseen consequences that the one",
			"programmer may or may not know about.",
			"And so the advantage of unit testing, assuming",
			"they're comprehensive and cover all of these various different components",
			"of the program, is that any time someone makes a change",
			"and attempts to merge that change into the main branch",
			"according to the practice of continuous integration, the fact",
			"that it doesn't pass a test, we'll know about that immediately.",
			"And as a result, that programmer can go back",
			"and try to fix it as opposed to waiting until everything is done,",
			"merging everything together, and then running",
			"the tests, realizing something doesn't work,",
			"and then being unsure of where to begin.",
			"We don't know where the bug is, which change happened to cause the bug.",
			"If everything is merged more incrementally,",
			"it's easier to spot those bugs, assuming there's",
			"good coverage of tests to make sure that we're",
			"accounting for these various different possibilities.",
			"So continuous integration refers to that idea--",
			"frequently and more incrementally updating the main branch",
			"and making sure that the tests are, in fact, passing.",
			"And it's closely tied to a related idea of continuous delivery, which",
			"is about the process of how it is that the software is actually",
			"released to users, how the web application actually gets deployed.",
			"And there are a couple of models you might",
			"go about thinking with regards to how it is that some program or web",
			"application gets deployed.",
			"You might imagine that the release cycle might be quite long,",
			"and the people spend months working on various different features",
			"on some software development team.",
			"And after they're happy with all the new changes,",
			"they've released some new version of the web application.",
			"But especially, with web applications that",
			"are undergoing constant change, that have",
			"lots of users, that are moving very quickly, one thing that's quite popular",
			"is this notion of continuous delivery, which refers",
			"to having shorter release schedules.",
			"Instead of immediately releasing something",
			"at the end of some long cycle, you can in shorter cycles",
			"make releases every day, every week, or so",
			"in order to say that let's just go ahead and incrementally make those changes.",
			"Whatever new changes happen to have merged to the main branch,",
			"let's go ahead and release those as opposed to waiting much longer in order",
			"to perform those releases.",
			"And that, again, lends itself to certain benefits,",
			"the benefit of being able to just incrementally make",
			"changes, such as something goes wrong, you",
			"know more immediately what went wrong as opposed",
			"to making a lot of changes at once, where if something goes wrong,",
			"it's not necessarily clear what went wrong.",
			"And it also allows new features to get out to users much more quickly.",
			"So especially in a competitive market where many different web applications",
			"are competing with one another, being able to take a new feature",
			"and release it very quickly can be quite helpful.",
			"So continuous delivery is all about that idea of short release cycles.",
			"Rather than wait a long time for a new version to be released,",
			"release versions incrementally as new features begin to come in.",
			"It's closely related to the idea of Continuous Deployment, which",
			"CD will sometimes also represent.",
			"Continuous deployment is similar in spirit to continuous delivery.",
			"But the deployments happen automatically.",
			"So rather than a human having to say, all right,",
			"we've made a couple of changes.",
			"Let's go ahead and deploy those changes.",
			"In continuous deployment, any time these changes are made,",
			"the pipeline of deploying the application to users",
			"will automatically take place as well, just removing one thing for humans",
			"to have to think about and allowing for these deployments",
			"to happen even more quickly as well.",
			"So the question then is, what tools can allow",
			"us to make continuous integration and continuous delivery",
			"a little bit easier?",
			"What techniques can we use in order to do so?",
			"And there are a number of different continuous integration tools.",
			"But one of them produced by GitHub more recently is known as GitHub Actions.",
			"And what GitHub Actions allows us to do is to create these workflows where",
			"we can say that anytime, for example, someone pushes to a Git repository,",
			"I would like for certain steps to take place,",
			"certain steps that might be checking to make sure that the code is styled well.",
			"That if a company has some style guide that it expects all of its programmers",
			"to adhere to when working on a particular product,",
			"you could have a GitHub Action such that anytime someone pushes to a repository,",
			"you have an action that automatically checks",
			"that code against the style guide to make sure",
			"that it is well-styled, well-commented, documented, and so forth.",
			"You might also, for instance, have a GitHub action that",
			"tests our code to make sure that anytime anyone pushes code to a GitHub",
			"repository, we automatically run whatever",
			"tests we would like to run on that particular code base.",
			"And GitHub Actions can allow us to do that as well by defining some workflow",
			"to be able to do so.",
			"And so that's what we'll take a look at in just a moment,",
			"using GitHub Actions to automate the process of running tests so that",
			"the human-- though it would be a good thing for the programmer when",
			"they're done writing their code to test their code and make sure it works--",
			"we can enforce that by making sure that every time anyone pushes to a GitHub",
			"repository, we'll automatically run some GitHub",
			"action that is going to take care of the process of running tests",
			"on that program.",
			"And we'll know immediately as via an email",
			"that GitHub might send to you to say that this particular test failed.",
			"And you'll know every time you push to that repository.",
			"So how do these workflows get structured?",
			"What is the syntax of them?",
			"Well they use a particular type of syntax known as YAML,",
			"which is some language, a configuration language,",
			"that can be used in order to describe--",
			"often described for configuration of various different tools and software.",
			"GitHub Actions happens to use it.",
			"Other technologies use it as well.",
			"And YAML is a file format that structures its data sort of like this,",
			"in terms of key value pairs, much in the same way",
			"that a JSON object or a Python dictionary might,",
			"where we'll have the name of a key followed",
			"by a colon followed by its value--",
			"name of a key, followed by a colon, followed by a value.",
			"And the value doesn't necessarily need to be just a single value.",
			"It could be a sequence of values, like a list of values, for example.",
			"And those are generated this way, by like a hyphen indicating",
			"a list-- item 1, item 2, item 3.",
			"And in addition to just having single values",
			"and lists of items, these ideas--",
			"these lists, these sequences, these values--",
			"can be nested within one another, that you",
			"might have one key that leads to another set of keys",
			"that are associated with values that leads to other sets",
			"of keys associated with values as well.",
			"Much in the same way, that a JSON object,",
			"like a representation of keys and values,",
			"can also have nested JSON objects within a JSON object.",
			"Likewise, too, we can have nested key value pairs",
			"as the value for a particular key too.",
			"So we'll take a look at an example of what that actually",
			"looks like in the context of creating some GitHub workflow that",
			"will run some get GitHub Actions.",
			"So what will that look like?",
			"Let's go back into airline0, where here, I've defined inside of a .github",
			"directory a directory called workflows, inside of which I have a ci.yml file.",
			"It can be any name .yml.",
			".yml or .yaml are the conventional file extensions for a YAML file.",
			"And here, I'll open up ci.yml.",
			"And this now is the configuration for how this workflow ought to behave.",
			"I give the workflow a name.",
			"It's called Testing because what I want the workflow to do",
			"is test my airline application.",
			"Then I specify an on key to mean when should this workflow run.",
			"And here, I have said on push, meaning anytime",
			"someone pushes their code to GitHub, we would like to run this workflow.",
			"Every workflow consists of some jobs.",
			"And so what are the jobs?",
			"What tasks should happen anytime that I try and push to this repository?",
			"Well, I've defined a job called test_project.",
			"And this is a name that I chose for myself.",
			"You can choose any name for a job that you would like.",
			"And now I need to specify two things for what happens on a job.",
			"One thing I need to specify is what sort of machine is it going to run on?",
			"That GitHub has its own virtual machines, otherwise known as VMs,",
			"and I would like to run this job on one of those virtual machines.",
			"And there are virtual machines for various different operating systems.",
			"Here I'm just saying, go ahead, and run on the latest version of Ubuntu,",
			"which is a later version of Linux that I would like for this test to run on.",
			"And then for the job, I specify what steps",
			"should happen where I can now specify what",
			"actions should happen when someone tries test a project when I try and run",
			"this job.",
			"And here I'm using a particular GitHub action.",
			"And this is a GitHub action written by GitHub called actions/checkout.",
			"And what this is going to do is it's going",
			"to check out my code in the Git repository",
			"and allow me to run programs that operate on that code.",
			"And you can write your own GitHub actions if you would like.",
			"But here, all we really need to do is go ahead and check out the code,",
			"as by looking at what's on the branch that I just pushed to.",
			"And then I'm going to run Django unit tests.",
			"This is just a description for me to know what's",
			"going on in this particular step.",
			"And here is what I would like to run.",
			"I'm going to first go ahead and install Django",
			"because I'm going to need to install Django",
			"to be able to run all of these tests.",
			"But after-- and if there are other requirements,",
			"I might need to install those requirements as well.",
			"But the airline program is fairly simple.",
			"All we really need in order to run the tests is just Django.",
			"So I'll go ahead and install Django.",
			"And then I'll run python3 manage.py test.",
			"I would like to test--",
			"run all of the tests.",
			"And the way I can do that is just by providing this manage.py command",
			"to say that I would like to run all of the tests",
			"on this particular application.",
			"So this configuration file altogether now",
			"is going to specify a particular workflow, the workflow that",
			"says that every time I push to the GitHub repository,",
			"what I would like to happen is I would like to check out",
			"my code inside of the Git repository.",
			"So on some Ubuntu VM, GitHub is going to check out my code,",
			"and it's going to run these commands.",
			"It's going to install Django.",
			"And then it's going to test my code.",
			"And it will then give back to me what the response is after I do that.",
			"So let's go ahead and test this.",
			"And in particular, let's run it on a program where",
			"the tests are going to fail.",
			"So I might say, for example, let's go into flights and models.py.",
			"And let's go to my is_valid_flight function from before",
			"and change it back to that version that didn't work.",
			"That before it was something and something.",
			"I'll change it to something or something.",
			"That as long as the origin is not the destination or the duration",
			"is greater than 0, we'll count that as valid.",
			"But we know that that's wrong.",
			"That should not work.",
			"So here's what I'll do.",
			"I'll go ahead and first say git status, see, all right, what's changed?",
			"And it seems that, all right, I've changed--",
			"I've modified models.py, which makes sense.",
			"I'll go ahead and git add.",
			"I'll add dot.",
			"We'll just add all of the files that I might have modified.",
			"I'll commit my changes.",
			"Say go ahead and use wrong valid flight function.",
			"That's what I'm going to do.",
			"And now I'm going to push my code to GitHub.",
			"I added it.",
			"I committed it.",
			"I pushed it.",
			"That now then pushes my code to GitHub into a repository called airline",
			"that I already have.",
			"And now, if I go ahead and go to GitHub, and I go to my airline",
			"repository, what you'll notice is that we've mostly",
			"been dealing with this Code tab.",
			"But GitHub gives us other tabs as well that",
			"are quite useful as you begin to think about working",
			"on a project in larger team.",
			"So in addition to looking at the code, we have issues.",
			"Issues are ways for people to just report that something is not",
			"quite right, or there is a feature request",
			"that we have for this particular code base.",
			"So the issues might maintain a list of all of the pending action",
			"items for a particular repository, things that we still need to deal with.",
			"And once those issues are dealt with, the issues can be closed.",
			"So I have no issues here as well.",
			"Pull requests are people that are trying to merge some part of the code",
			"from one branch into another branch.",
			"So you might imagine on a larger project,",
			"you don't want everyone merging things into master all at the same time.",
			"You might have people working on their own separate branches.",
			"And then when they feel confident and happy with their code,",
			"then they can propose a pull request to merge their code into the master",
			"branch.",
			"And that allows for various other features,",
			"like the ability for someone to offer a code review--",
			"to be able to review the code, write comments, and propose suggestions",
			"for what changes should be made to a particular part of the code",
			"before it gets merged into the master branch.",
			"And that's another common practice with regards",
			"to working on a GitHub repository or any other larger project",
			"that you're controlling using source control is this idea of code reviews,",
			"that oftentimes, you don't want just one person making the changes",
			"without anyone's eyes on that code.",
			"But you want a second pair of eyes to be able to look things over, make",
			"sure the code is correct, make sure it's efficient,",
			"make sure it's in line with the practices",
			"that the application is using.",
			"And so pull requests can be quite helpful for that.",
			"And then this fourth tab over here represents GitHub Actions.",
			"These are the various different actions or workflows",
			"that I might want to run on this particular repository.",
			"And what we'll see here is that if I go to the Actions tab now, what I'll see",
			"is here is my most recent testing actions.",
			"So anytime I push, I get a new testing action.",
			"This one was from 29 seconds ago.",
			"I'll go ahead and click on it and see what's within it.",
			"All right.",
			"Here was the job that I ran, test_project.",
			"I see that on the left-hand side.",
			"You'll notice this big red X in the left-hand side of this workflow.",
			"Means something went wrong.",
			"So I'd like to know what it is that went wrong.",
			"I'll go ahead and click on test_project.",
			"And here within it, these are all of the steps, the things that happened when",
			"we actually ran this particular job.",
			"First the job sets up.",
			"Then the checkout action goes ahead and checks out my code",
			"because we need access to my code to be able to run it.",
			"Here was the step I defined--",
			"run Django unit tests, which was going to install Django and run those tests.",
			"It has an X next to it, indicating something went wrong.",
			"And I see down below, annotations, 1 failure.",
			"So all over the place, GitHub's trying to tell me that something went wrong.",
			"It failed two minutes ago here.",
			"I'll go ahead and open this up.",
			"And what I'll see is the first thing that happened is we installed Django.",
			"And that seems to have worked OK.",
			"But down below, what you'll see is the output of running these unit tests,",
			"that we see FAILED (failures-2).",
			"And now I can see, here are the unit tests that failed.",
			"We failed the invalid flight destination test.",
			"We failed the invalid flight duration test.",
			"And as before, I can see in GitHub's user interface",
			"what those assertion errors are.",
			"I can see a true is not false.",
			"True is not false, those were the problems",
			"that happened when I tried to run this particular test suite.",
			"And now others who are also working on this repository",
			"can see as well what the results of these tests",
			"are and can offer suggestions, can offer ways",
			"that I might be able to fix the code in order to deal with that problem.",
			"But now I know that this particular test failed.",
			"And if I go back to the main code page for this GitHub repository,",
			"I'll see that next to this commit, there is a little x symbol.",
			"And that little x symbol next to the commit",
			"just tells me that the most recent time I tried to commit,",
			"something went wrong.",
			"They ran the workflow, and there was an error.",
			"And so I'll immediately see for this commit--",
			"and I can go back and look at the history of commits",
			"and see which ones were OK and which ones had a tendency",
			"to cause some sort of problem.",
			"So this one, it appears caused a problem.",
			"And we know why.",
			"It caused a problem because of this condition, something or something else.",
			"So I can fix it.",
			"I'll change the or to an and.",
			"I'll go ahead and git add dot.",
			"git commit.",
			"Say I will fix valid flight check.",
			"If I do git status just to check out what's going on right now,",
			"I'm ahead of the master branch by 1 commit.",
			"That's exactly what I would expect.",
			"And now I'll go ahead and push my code to GitHub by running git push,",
			"saying, all right, let's push this update.",
			"And now, hopefully, we're going to pass the workflow now.",
			"Now I go back to the repository.",
			"I refresh the page.",
			"Here's my latest commit-- fix valid flight check.",
			"You notice here, there's an orange dot instead of the red x as before.",
			"This dot just means the tests are currently pending.",
			"The workflow is in progress because it takes some time for GitHub",
			"to be able to start up the VM, to be able to initialize the job,",
			"to check out my code, to run all those tests.",
			"It does take some time.",
			"But if I go back to the Actions tab, I'll see that, all right.",
			"This time, for testing, we get a green check mark.",
			"Everything seems to be OK.",
			"I go to test_project just to see it.",
			"And now I notice the green check mark next to Run Django unit tests",
			"means that the unit tests have passed as well.",
			"If I open those up, now I see at the bottom",
			"the same output that I saw before when I was running those unit",
			"tests on my own machine.",
			"We ran 10 tests, and everything was OK.",
			"And that tells me that these tests have passed.",
			"So GitHub Actions have the ability to allow for certain jobs to happen,",
			"certain work to happen anytime you push code, anytime you submit a pull request",
			"or on various different actions that might happen on a GitHub repository.",
			"And they're very helpful for being able to implement",
			"this idea of continuous integration because it means you can make sure",
			"that when you're merging code from some developer's branch into the main branch",
			"that everyone's merging their code into, you",
			"can verify that those tests can pass.",
			"And you can add rules to say that you don't",
			"want to allow anyone to merge code into the branch if the tests don't pass,",
			"to guarantee that any code that does get merged",
			"is going to pass all of those tests as well.",
			"And so that can definitely help the development cycle,",
			"make it easier to ensure that changes can be made quickly.",
			"But as we make those changes quickly, we're",
			"not going to lose accuracy and validity within our code,",
			"that we can make sure that our code still",
			"passes those tests by automating the process of running",
			"those tests altogether.",
			"So other than continuous integration then,",
			"we now talk about this idea of continuous delivery,",
			"these short application cycles where we would",
			"like to very quickly be able to deploy our application onto some sort of web",
			"server.",
			"And when we're deploying applications to a web server,",
			"there are things that we need to think about.",
			"We need to think about getting our program that",
			"was running fine on our computer working on a web server as well.",
			"And this can just be fraught with headaches",
			"and all sorts of configuration problems because you",
			"might imagine that the computer that you are using",
			"is not necessarily going to be the same as the computer that on the cloud,",
			"the computer in the server where your web application is actually running.",
			"It might be running a different operating system.",
			"It might have a different version of Python installed.",
			"If you have certain packages working on your own computer,",
			"those same packages might not be installed on the server.",
			"So we run into all sorts of various different configuration problems",
			"where you can be developing, deploy your code,",
			"and realize that it doesn't work on the server because",
			"of some sort of difference between what's happening on your computer",
			"and what's happening on the server.",
			"And this becomes even more problematic if you're working on a larger team, you",
			"and multiple other people working on a software project,",
			"but you each have different versions of various different packages or libraries",
			"installed, and those different versions have different features",
			"and might not all work and cooperate with one another.",
			"And so we need some way in order to be able to deploy applications",
			"efficiently and effectively to be able to standardize on just one",
			"version of the environment, one version of all these packages,",
			"to make sure that every developer is working",
			"on the project in the same environment.",
			"And once we deploy the application, it's going",
			"to be working in the same environment as well.",
			"And the solution to this comes in a number of possible options.",
			"But one option is to take advantage of a tool",
			"like Docker, which is some sort of containerization software.",
			"And by containerization software, what we're talking about",
			"is the idea that when we're running an application, instead of just running it",
			"on your computer, we're going to run it inside of a container on your computer.",
			"And each container is going to contain its own configuration.",
			"It's going to have certain packages installed.",
			"It's going to have certain versions of certain pieces of software.",
			"It's going to be configured in exactly the same way.",
			"And by leveraging a tool like Docker, you",
			"can make sure that so long as you provide the right instructions for how",
			"to start up and set up these containers, then",
			"if you are working on the application and someone you're working with,",
			"some colleague that's also working on the same project,",
			"so long as you're using the same instructions for how to set up a Docker",
			"container, you're going to be working in the identical environments,",
			"that if a package is installed on your computer, in your container,",
			"it's going to be installed in your colleague's container as well.",
			"And the advantage of this too works with this idea of continuous delivery.",
			"When you want to deliver and deploy your application to the internet,",
			"you can run your application inside of that exact same container, set up",
			"using the exact same set of instructions,",
			"so that you don't have to worry about the nightmare headaches of trying",
			"to make sure that all the right packages and all the right versions",
			"are, in fact, installed on the server.",
			"Docker might remind you of the idea of a virtual machine or a VM",
			"if you're familiar with that concept.",
			"GitHub uses VMs, for instance, when running its GitHub Actions.",
			"They are, in fact, different.",
			"A VM is effectively running an entire virtual computer",
			"with its own virtual operating system and libraries and application",
			"running on top of that all inside of your own computer.",
			"So a virtual machine ends up taking up a lot of memory, taking up",
			"a lot of space.",
			"Docker containers, meanwhile, are a bit lighter-weight.",
			"They don't have their own operating system.",
			"They're all running still on top of the host operating system.",
			"But there is this Docker layer in-between",
			"that keeps track of all of these various different containers",
			"and keeps track of for each container such",
			"that every container can have its own separate set of libraries,",
			"separate set of binaries, and an application running on top of that.",
			"So the advantage then of containerization",
			"is that these containers are lighter-weight than having",
			"an entire virtual machine.",
			"But they can still keep their own environment consistent such",
			"that you can feel confident that if the application is working in a Docker",
			"container, you can have that Docker container running on your computer,",
			"on someone else's computer, on the server",
			"to guarantee that the application is going to work the way that you would",
			"actually expect it to.",
			"And so how exactly do we configure these various different Docker containers?",
			"Well, in order to do so, we're going to write what's called a Docker file.",
			"So to do this, I'll go ahead and go into airline1.",
			"And I'll open up this Docker file.",
			"And the Docker file describes the instructions",
			"for creating a Docker image where the Docker image represents",
			"all of the libraries and other installed items",
			"that we might want to have inside of the container.",
			"And based on that image, we're able to create",
			"a whole bunch of different containers that",
			"are all based on that same image, where each container has its own files",
			"and can run the web application inside of it.",
			"So this Docker file, for example, describes",
			"how I might create a container that is going to run my Django web application.",
			"So first, I say FROM python:3.",
			"This happens to be another Docker image on which I'm",
			"going to base these instructions, that this",
			"is going to be a Docker image that already contains instructions",
			"for installing Python 3, installing other related packages that",
			"might be helpful.",
			"Oftentimes, when you're writing a Docker file,",
			"you'll base it on some existing Docker file that already exists.",
			"So here I'm saying go ahead and use Python 3.",
			"And now what do I want to do in order to set up this container?",
			"Well, I want to copy anything in dot, in my current directory,",
			"into the container.",
			"And I have to decide, where in the container am I going to store it?",
			"Well, there-- I could choose to store it anywhere.",
			"But I'll just store it in /usr/src/app, just some particular path that will",
			"take me to a directory where I am going to store the application.",
			"But you could choose something else entirely.",
			"So I copy all of the current files in my current directory.",
			"So that will include things like my requirements file, my manage.py file,",
			"my applications files, all my settings files.",
			"Everything inside of the directory, I would like to copy into the container.",
			"Then I'm saying WORKDIR, meaning change my working directory, effectively",
			"the same thing as something like CD on your terminal",
			"to move into some directory.",
			"I would like to set my working directory equal to that same application",
			"directory, the application directory inside of the container that",
			"now contains all of the files from my application",
			"because I copied all of those files into the container.",
			"Now once I'm inside of this directory, I need to install all of my requirements.",
			"So assuming I've put all my requirements like Django and any other packages",
			"that I need inside of a file called requirements.txt,",
			"I can just run the command, pip install requirements.txt.",
			"And then, finally, inside the Docker file, I specify a command.",
			"And this is the command that should run when I start up the container.",
			"Everything else is going to happen initially when we're just",
			"setting up this Docker image.",
			"But when I start up the container and actually want",
			"to run my web application, here is the command that should run.",
			"And I provide it-- effectively it's like a Python list where",
			"each word in the command is separated by a comma, where here I'm",
			"saying the command that I would like to run, when you start up this container",
			"is python, manage.py, runserver.",
			"And here I'm just specifying on what address and what port",
			"I would like it to run.",
			"And I'm running it on port 8000, for example.",
			"But I could choose another port that I would like to run instead.",
			"So what's going to happen then is that when I start up this Docker container,",
			"it's going to, if it needs to, go through these instructions",
			"and make sure that it sets up the container according",
			"to these instructions, make sure that we've",
			"installed all of the necessary requirements,",
			"make sure that we're using Python 3.",
			"And anyone using the same Docker file can",
			"generate a container that has all the same configuration on it.",
			"So we don't have to worry about configuration differences between me",
			"and someone else who might not have the exact same computer setup that I do.",
			"And the nice thing about this is that it can run on Mac and Windows and Linux.",
			"So even people running on different operating systems",
			"can still have containers that all have the same configuration,",
			"that all work in the same way just to speed up that process.",
			"Now so far, when we've been building Django applications,",
			"we've been using a SQLite database.",
			"SQLite database just being a file that is stored inside of our application.",
			"And this file-based database allows us to create tables, insert rows into it,",
			"delete rows from it.",
			"In most production environments, in most real web applications",
			"that are working with many, many users, SQLite",
			"is not actually the database that is used.",
			"It doesn't scale nearly as well when there are many users all trying",
			"to access it concurrently.",
			"Oftentimes, in those sorts of situations,",
			"you want your database hosted elsewhere on some separate server",
			"to be able to handle its own incoming requests and connections.",
			"And we talked about a couple of possible databases",
			"we could use instead of SQLite, things like MySQL, things like Postgres,",
			"or various different SQL-based databases.",
			"So imagine now I want to deploy my application.",
			"But instead of using SQLite, I would like to use Postgres, for example,",
			"as the database server that I would like to run.",
			"Well, that would seem to be pretty complicated for me to test on my own",
			"because now in addition to running my web application in one server,",
			"effectively, I also need another server that's running Postgres, for example,",
			"such that I can communicate with that Postgres database instead.",
			"And that's going to be even harder for other people",
			"to be able to work on as well.",
			"Potentially, it might be difficult to get the server to work in that way too.",
			"But the nice thing about Docker is that I",
			"can run each of these processes in a different container effectively.",
			"I can have one container that's running my web application using this Docker",
			"file right here.",
			"And I can have another container that's just going to run Postgres.",
			"And as long as other people also have access",
			"to that same container for running Postgres,",
			"they can be working in an identical environment to the one",
			"that I am working in as well.",
			"And so there's also a feature of Docker known as Docker Compose.",
			"And what Docker Compose lets us do is allow",
			"us to compose multiple different services together,",
			"that I would like to run my web application in one container,",
			"and I would like to run a Postgres database in another container.",
			"But I would like for those containers to be able to talk to each other,",
			"to be able to work together whenever I start up the application.",
			"So if I'd like to do that, in order to run this application on my computer",
			"and have both the web application and Postgres installed,",
			"I can create a Docker Compose file which looks like this.",
			"Here I'm specifying using version 3 of Docker Compose.",
			"Here I specify, again, using a YAML file.",
			"Much as in my GitHub workflows were formatted in YAML just",
			"as a configuration file, docker-compose.yml is a YAML file that",
			"describes all of the various different services that I want to be part",
			"of my application, where each service is going to be its own container that",
			"could be based on a different Docker image.",
			"Here I'm saying that I have two services, one called db for database,",
			"one called web for my web application.",
			"The database is going to be based on the Postgres Docker image, image",
			"that Postgres wrote that I don't have to worry about.",
			"Someone else has written the Docker file for how",
			"to start up a Postgres container.",
			"Here, though, for the web application, that's",
			"going to be built based on the Docker file in my current directory,",
			"the Docker file that I have written.",
			"And then down below, I've just specified that my current directory",
			"should correspond to the app directory.",
			"And then I've specified when I'm running this on my own computer,",
			"I would like port 8000 on the container to correspond",
			"to port 8000 on my own computer just so that I",
			"can access port 8000 in my browser and access port 8000 inside the container.",
			"It just lets my computer actually talk to the container",
			"so I can open up the web application in my web browser, for example,",
			"and actually see the results of all of this.",
			"So here, then, I've created two services, a database and web.",
			"So now let's actually try starting up these containers.",
			"I'm going to first go into my airline1 directory.",
			"And I'm going to say docker-compose up to mean go ahead",
			"and start up these services.",
			"I'll press Return.",
			"And what you'll see is we're going ahead and starting up two services.",
			"I'm starting up the database service.",
			"And I'm starting up the web service.",
			"And now as a result of all of this, I've started up the application.",
			"And I started it on port 8000.",
			"So if I go to 0.0.0.0 slash 8000 or colon 8000 slash flights,",
			"that's going to take me to the Flights page.",
			"And now this is running, not just on my own computer,",
			"but inside of a Docker container.",
			"Now, of course, right now, there are no flights inside",
			"of this page because I haven't actually added anything to the database yet.",
			"So I could do that if I wanted to.",
			"But how do I do that?",
			"Well, I needed to go into slash admin to say, like, let me log in",
			"and go ahead and create some sample flights.",
			"But I don't have a log in yet because I need to create a superuser account.",
			"And I can't just like inside of my airline1 directory",
			"say, python manage.py createsuperuser the way",
			"that I used to because this is running in my terminal on my computer.",
			"Whereas, what I really want to do is go into the Docker container",
			"and run this command there, inside of the container.",
			"So how can I do that?",
			"Well, there are various different Docker commands that I can use.",
			"docker ps will show me all of the Docker containers that are currently running.",
			"So I'll go ahead and shrink this down a little bit.",
			"I see two rows, one for each container, one for my Postgres container",
			"that's running the database, one for just my web application",
			"that's running as well.",
			"Each one has a container ID.",
			"So I want to go into my web application container",
			"in order to run some commands inside of that container.",
			"So I'm going to copy its container ID and say, docker exec--",
			"meaning go ahead and execute a command on the container-- dash",
			"it will make this interactive.",
			"Here's the container ID that I would like to execute a command on.",
			"And the command I want to execute is bash, passing the dash l flag,",
			"but bash to say, I want to run a bash prompt.",
			"I want to be able to interact with a shell",
			"so that I can run commands inside of this container.",
			"So I press Return.",
			"And now what you'll notice is that I am inside",
			"of my container in the user source app directory,",
			"that directory that contained all of the information about this web application.",
			"I type ls.",
			"And what I'll see is here, all the files inside of this container now.",
			"And now I can say something like python manage.py createsuperuser.",
			"And now it's going to let me create a superuser.",
			"So I'll create a user inside of my web application called Brian.",
			"I'll give it my email address.",
			"I'll type in a password.",
			"And now we've created a superuser.",
			"And you can run other commands here.",
			"If you wanted to migrate all of your migrations,",
			"I could say python manage.py migrate.",
			"And it turns out I've already done that, so I didn't actually",
			"have to do it again.",
			"But you can run any commands that you can run them on your computer.",
			"But now you can run them inside of the Docker container instead.",
			"I'm going to press Control D just to log out, get out of the container",
			"and get back to my computer.",
			"But now I've created a superuser, so I could",
			"go ahead and sign in to Django's admin.",
			"And now I can begin to manipulate this database, which",
			"is a Postgres database running in a separate container.",
			"But the nice thing about it is that I can start them",
			"both up together just by running something like docker-compose",
			"up, for example.",
			"So Docker can be quite a powerful tool for allowing us to very quickly ensure",
			"that an application is running in the environment",
			"that we expect it to be running, to make sure that all of the right libraries",
			"are installed, make sure that all the right packages are installed as well,",
			"that the configuration between my development environment",
			"and the environment that's running on the server are the same as well.",
			"So those then were just some of the best practices",
			"for how you can go about developing a program now",
			"that we have the tools to do so.",
			"We have a lot of tools for being able to develop these web applications.",
			"But as our programs start to get more complex,",
			"it will be increasingly important to test them, make sure",
			"that each various different component of our web application",
			"behaves the way that it is expected to behave, and then taking advantage,",
			"especially in bigger teams, of CI/CD, Continuous Integration, Continuous",
			"Delivery to make incremental changes, and make",
			"sure each of those incremental changes, in fact, works on the web application.",
			"And then CD, Continuous Delivery, to say that rather than wait and then deploy",
			"everything all at once, let's deploy things incrementally as well.",
			"Let users more quickly get access to the latest features",
			"and more quickly find out if something went wrong.",
			"We can better identify what it is that went wrong",
			"if we've deployed things incrementally rather than waiting",
			"a long time in order to do so as well.",
			"So these are some of the best practices in modern software application",
			"development, not only for web applications but for software",
			"more generally.",
			"Next time, we'll consider other challenges",
			"that might arise as we go about trying to make web applications that",
			"are used by more and more users, in particular,",
			"taking a look at challenges that will arise in terms of scalability",
			"as the programs get bigger and also security of what security",
			"vulnerabilities open themselves up as we begin",
			"to design our web applications using Python and JavaScript.",
			"So more on that next time.",
			"And we'll see you then.",
			""
		],
		"is_youtube": false
	},
	"video_010": {
		"section": "CS50W 2020",
		"subsection": "Scalability and Security",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50W-V001800_DTH.mp4",
			"https://edx-video.net/HarvardXCS50W-V001800/HarvardXCS50W-V001800.m3u8"
		],
		"video_duration": 5265,
		"speech_period": [
			3.5, 13.957, 1.833, 2.28, 4.18, 2.72, 3.165, 1.875, 2.49, 1.958, 3.022,
			3.212, 2.458, 2.01, 2.37, 3.308, 1.792, 3.84, 2.68, 1.76, 2.31, 2.25,
			3.87, 1.78, 4.13, 2.91, 2.22, 1.65, 2.55, 3.48, 3.23, 2.77, 3.48, 1.233,
			1.917, 3.45, 2.28, 2.4, 3.69, 4.2, 2.19, 2.76, 3.18, 2.37, 2.13, 2.13,
			2.97, 1.89, 3.45, 2.55, 2.34, 3.0, 4.02, 2.1, 3.66, 1.77, 4.14, 3.27, 1.2,
			3.62, 1.75, 2.49, 2.43, 3.45, 3.21, 2.49, 3.435, 2.625, 3.66, 3.63, 2.1,
			3.06, 2.63, 3.55, 2.43, 2.458, 1.892, 5.088, 1.042, 2.93, 1.17, 3.78,
			1.86, 2.31, 3.45, 2.01, 2.97, 3.78, 2.1, 2.22, 1.829, 3.691, 1.78, 4.04,
			1.26, 1.74, 1.41, 2.46, 2.67, 2.85, 1.35, 3.33, 1.66, 1.83, 4.28, 4.89,
			1.42, 2.3, 2.76, 3.27, 2.76, 2.25, 3.12, 2.99, 2.37, 2.67, 2.55, 1.25,
			1.75, 3.63, 1.497, 2.583, 2.22, 1.42, 3.5, 3.06, 3.48, 2.44, 2.66, 3.75,
			2.25, 4.59, 3.51, 2.94, 4.83, 3.58, 3.56, 1.62, 3.09, 3.51, 4.47, 2.79,
			3.76, 3.41, 2.82, 3.69, 3.84, 2.71, 3.32, 1.23, 3.83, 2.44, 3.4, 2.75,
			3.51, 4.08, 2.55, 3.36, 4.17, 2.97, 1.03, 3.11, 1.87, 2.36, 2.958, 3.042,
			1.59, 2.4, 2.37, 3.54, 3.27, 0.778, 2.792, 1.632, 2.208, 3.24, 2.73, 3.69,
			3.21, 1.32, 2.79, 4.25, 2.14, 3.877, 1.583, 4.26, 3.69, 1.99, 1.28, 3.03,
			1.98, 4.41, 3.9, 3.57, 2.7, 2.34, 2.07, 3.48, 3.48, 2.577, 1.833, 3.9,
			4.08, 2.19, 1.92, 3.39, 3.27, 1.65, 2.187, 2.583, 1.92, 3.6, 2.16, 3.21,
			2.82, 2.16, 2.51, 3.82, 1.1, 2.61, 3.48, 3.48, 2.4, 2.4, 3.465, 1.875,
			3.31, 3.15, 2.57, 4.55, 2.62, 4.32, 3.69, 3.06, 3.21, 2.01, 2.88, 3.0,
			3.48, 2.61, 3.57, 4.86, 2.85, 3.82, 1.62, 2.12, 3.96, 1.11, 1.56, 3.52,
			3.44, 2.73, 3.33, 1.92, 2.73, 3.755, 0.625, 4.23, 2.61, 3.12, 3.09, 2.43,
			2.13, 5.19, 3.36, 2.7, 1.71, 1.762, 1.958, 2.19, 2.88, 2.82, 3.272, 2.458,
			1.92, 3.05, 2.92, 2.95, 4.01, 2.7, 4.02, 3.99, 3.42, 1.755, 1.375, 1.97,
			2.19, 1.785, 1.875, 2.64, 3.3, 3.54, 3.79, 2.27, 2.46, 2.82, 2.64, 3.39,
			4.08, 2.1, 2.61, 1.93, 1.97, 2.34, 3.45, 3.0, 3.18, 2.39, 2.71, 2.083,
			3.047, 1.32, 4.47, 3.75, 2.67, 1.77, 2.55, 3.07, 3.38, 2.49, 3.7, 4.4,
			3.6, 3.15, 1.98, 3.6, 3.58, 3.32, 1.89, 3.3, 2.97, 2.94, 1.925, 2.125,
			3.03, 3.27, 2.01, 3.032, 1.708, 3.69, 3.36, 2.56, 3.41, 1.57, 2.69, 2.65,
			2.16, 1.58, 2.67, 1.63, 1.85, 2.79, 3.812, 1.708, 2.59, 3.41, 1.71, 2.79,
			4.05, 2.49, 2.46, 1.23, 2.58, 2.67, 3.75, 0.599, 3.061, 3.99, 3.24, 3.3,
			3.3, 3.12, 1.01, 5.35, 2.61, 3.34, 2.24, 3.99, 2.91, 2.67, 1.65, 3.03,
			1.86, 3.12, 3.48, 2.55, 2.03, 1.75, 3.91, 2.93, 2.34, 2.97, 3.21, 2.13,
			3.84, 2.76, 3.69, 3.375, 2.625, 2.52, 2.97, 1.38, 2.85, 3.69, 4.8, 2.01,
			2.208, 2.682, 1.47, 4.05, 2.22, 2.61, 3.57, 2.88, 1.5, 2.85, 2.97, 2.94,
			2.88, 4.11, 3.0, 2.46, 2.555, 2.625, 2.53, 1.5, 2.17, 4.01, 3.09, 2.28,
			3.07, 3.63, 2.05, 2.13, 2.367, 1.833, 3.78, 0.9, 2.85, 4.17, 2.31, 3.81,
			2.61, 3.64, 3.59, 5.1, 2.17, 3.56, 1.25, 1.75, 2.563, 1.917, 3.41, 3.15,
			2.46, 2.58, 2.97, 2.76, 2.91, 3.0, 2.52, 2.01, 2.707, 2.333, 3.15, 2.93,
			3.16, 3.84, 2.88, 3.09, 2.307, 2.583, 3.54, 2.49, 2.208, 2.142, 1.38, 3.6,
			3.58, 1.17, 2.93, 3.84, 3.69, 1.65, 3.9, 3.15, 1.145, 3.125, 2.52, 2.15,
			3.06, 2.14, 0.865, 2.875, 3.72, 3.03, 2.49, 2.25, 3.27, 2.01, 3.568,
			2.792, 2.19, 3.3, 1.82, 3.25, 2.26, 2.81, 2.46, 3.75, 1.2, 3.66, 2.58,
			2.43, 3.42, 3.12, 1.77, 2.22, 2.25, 2.94, 3.24, 3.9, 0.97, 1.88, 3.99,
			3.21, 2.25, 2.58, 4.11, 1.2, 3.09, 3.33, 3.24, 4.71, 2.28, 2.73, 2.97,
			1.77, 2.58, 3.21, 2.85, 4.21, 2.2, 3.63, 2.55, 3.84, 4.14, 2.88, 3.18,
			2.67, 4.41, 2.91, 3.96, 2.61, 2.4, 1.677, 1.833, 2.13, 3.63, 2.25, 4.05,
			1.99, 3.14, 2.58, 3.39, 1.89, 2.49, 1.685, 1.375, 2.32, 2.96, 4.83, 3.9,
			2.43, 3.39, 2.02, 2.9, 4.14, 3.45, 3.03, 3.24, 2.34, 2.31, 2.64, 2.49,
			3.03, 3.9, 2.73, 2.31, 1.5, 2.22, 2.7, 4.04, 2.53, 3.69, 1.89, 1.77, 2.4,
			2.375, 3.685, 3.54, 2.85, 3.0, 3.36, 5.01, 2.04, 2.463, 1.917, 2.67, 3.24,
			1.8, 2.25, 3.3, 2.88, 3.45, 2.01, 3.54, 4.887, 1.833, 1.89, 3.78, 2.39,
			2.57, 2.28, 3.89, 2.58, 1.8, 2.25, 2.79, 3.85, 2.87, 2.19, 2.42, 1.42,
			1.8, 2.32, 4.34, 3.93, 1.26, 3.87, 2.04, 2.73, 1.86, 2.49, 1.44, 3.99,
			4.37, 2.38, 2.31, 2.73, 1.95, 4.53, 2.55, 3.96, 1.8, 3.8, 1.81, 2.01,
			2.73, 2.76, 2.28, 3.0, 3.63, 2.98, 3.59, 3.33, 2.37, 1.71, 2.4, 2.76,
			4.763, 3.167, 3.305, 2.805, 2.66, 3.55, 1.65, 2.42, 4.55, 3.27, 2.0, 1.8,
			4.02, 3.0, 4.825, 2.375, 3.09, 3.39, 3.0, 2.28, 2.25, 3.48, 2.61, 3.87,
			2.19, 2.37, 3.6, 2.68, 2.027, 1.833, 3.24, 4.05, 2.07, 3.57, 1.68, 4.26,
			3.63, 3.3, 3.75, 1.44, 3.387, 1.833, 3.39, 3.09, 2.28, 1.568, 1.042, 1.29,
			3.84, 3.7, 3.45, 2.69, 2.04, 3.64, 2.84, 4.23, 5.099, 0.991, 2.562, 1.208,
			3.16, 3.9, 1.63, 3.77, 1.915, 2.375, 2.58, 3.63, 3.123, 1.917, 1.77, 2.37,
			2.25, 3.21, 4.96, 1.47, 2.51, 4.23, 3.72, 4.65, 3.09, 2.31, 3.27, 4.44,
			3.3, 3.6, 0.75, 2.91, 3.33, 4.26, 3.36, 2.73, 4.29, 3.66, 2.38, 2.21,
			4.08, 1.84, 2.18, 2.67, 3.37, 1.98, 2.63, 1.53, 2.64, 2.91, 1.26, 3.48,
			2.46, 4.32, 2.58, 2.55, 3.24, 3.12, 4.08, 2.49, 4.68, 3.42, 3.09, 4.3,
			3.14, 3.39, 2.12, 2.5, 3.09, 2.07, 3.6, 1.42, 2.24, 4.89, 2.67, 3.81,
			4.44, 3.12, 2.52, 3.66, 2.4, 3.69, 2.79, 2.36, 2.5, 3.39, 3.93, 1.47,
			4.14, 3.06, 2.88, 2.28, 3.0, 2.07, 2.85, 2.25, 2.04, 4.02, 1.13, 4.1,
			3.26, 3.75, 2.78, 3.73, 2.31, 1.665, 1.875, 3.18, 1.86, 4.63, 2.81, 3.03,
			2.29, 2.78, 3.42, 2.52, 3.75, 3.09, 1.08, 4.28, 3.34, 1.3, 2.6, 3.42,
			3.69, 1.63, 1.91, 1.17, 2.22, 3.18, 0.96, 3.39, 2.55, 2.73, 4.68, 6.1,
			1.83, 3.08, 3.34, 3.44, 2.46, 3.69, 2.43, 3.27, 2.49, 2.49, 2.73, 2.04,
			4.09, 4.91, 2.34, 4.2, 3.0, 1.27, 3.36, 2.85, 2.3, 2.73, 3.06, 1.8, 3.66,
			3.03, 2.19, 2.49, 3.7, 2.66, 2.14, 3.38, 2.73, 2.07, 2.22, 2.22, 2.82,
			4.23, 1.38, 2.22, 1.56, 2.58, 3.06, 4.98, 2.94, 2.25, 3.33, 1.61, 2.68,
			3.57, 2.82, 3.87, 4.74, 2.79, 2.97, 1.755, 1.875, 2.117, 2.083, 3.45,
			2.61, 2.25, 2.46, 3.06, 2.25, 3.09, 2.25, 3.39, 3.78, 3.456, 3.814, 3.48,
			3.06, 2.04, 3.18, 2.4, 2.79, 2.38, 3.5, 3.48, 3.42, 3.42, 2.31, 3.87,
			1.42, 3.65, 2.58, 3.03, 2.76, 1.92, 2.28, 2.6, 1.48, 1.875, 2.875, 3.32,
			1.86, 3.84, 1.95, 2.49, 1.92, 2.7, 3.45, 3.0, 4.26, 2.678, 1.792, 3.93,
			2.22, 2.523, 2.667, 2.25, 2.67, 2.91, 2.22, 3.06, 1.8, 3.69, 3.39, 3.01,
			3.2, 3.72, 3.69, 2.55, 1.98, 2.4, 2.61, 1.96, 2.54, 3.12, 4.27, 3.23,
			3.57, 2.85, 3.69, 2.88, 2.43, 4.05, 3.27, 2.29, 3.725, 1.875, 3.21, 3.93,
			4.11, 1.92, 2.64, 2.25, 4.68, 2.19, 3.27, 4.59, 4.17, 2.07, 1.45, 3.9,
			2.49, 2.18, 2.08, 3.132, 0.958, 0.833, 1.717, 3.62, 5.07, 2.79, 3.75,
			3.46, 0.62, 3.06, 3.03, 2.31, 3.63, 3.21, 3.27, 3.45, 0.64, 2.72, 2.1,
			2.61, 5.92, 3.087, 3.083, 2.61, 3.06, 1.65, 2.73, 2.43, 2.37, 3.36, 3.96,
			2.88, 5.61, 1.14, 1.95, 3.75, 2.22, 1.92, 3.21, 2.47, 2.52, 4.05, 3.42,
			6.03, 3.91, 3.35, 2.49, 2.73, 2.4, 1.41, 3.27, 1.68, 2.49, 4.96, 4.22,
			2.7, 3.411, 5.709, 2.01, 3.99, 2.73, 2.28, 2.07, 2.01, 3.23, 2.65, 3.48,
			3.24, 3.93, 4.32, 1.98, 3.15, 3.67, 4.16, 1.89, 2.73, 4.56, 2.4, 1.74,
			3.54, 2.49, 3.39, 4.808, 2.542, 3.04, 1.91, 3.57, 2.76, 2.58, 2.25, 2.34,
			3.93, 2.85, 2.01, 3.99, 2.76, 2.04, 2.61, 3.33, 3.9, 1.23, 2.91, 3.78,
			2.67, 3.385, 2.375, 2.07, 2.4, 5.01, 2.695, 2.375, 3.63, 2.1, 3.77, 1.99,
			3.48, 3.33, 3.178, 2.042, 2.58, 5.13, 4.44, 1.95, 4.05, 4.11, 1.98, 3.39,
			2.46, 3.33, 3.18, 1.65, 1.86, 2.71, 3.565, 2.125, 3.0, 2.84, 4.54, 0.5,
			2.98, 3.78, 3.45, 4.71, 2.85, 4.55, 3.21, 5.13, 3.82, 3.658, 2.542, 2.61,
			2.61, 3.93, 2.59, 3.83, 3.3, 2.1, 3.87, 2.61, 2.187, 1.833, 2.22, 2.67,
			4.89, 2.34, 3.88, 3.47, 4.84, 2.51, 5.16, 1.92, 3.39, 2.76, 3.69, 3.06,
			2.19, 4.05, 4.042, 1.958, 3.81, 4.5, 3.81, 2.49, 3.45, 1.78, 2.75, 2.667,
			3.873, 2.94, 2.79, 4.11, 2.61, 3.0, 4.74, 2.58, 3.03, 1.68, 5.44, 2.72,
			2.91, 2.89, 3.2, 3.03, 4.24, 1.29, 2.27, 1.8, 2.4, 2.73, 2.13, 3.0, 2.28,
			3.66, 2.43, 3.24, 4.84, 3.17, 3.42, 4.05, 0.69, 1.792, 3.198, 3.49, 4.24,
			3.5, 3.61, 2.47, 2.32, 4.63, 2.13, 4.3, 3.77, 3.09, 3.12, 2.05, 3.38,
			2.16, 2.52, 1.71, 3.03, 1.92, 4.04, 2.51, 1.65, 3.97, 1.34, 1.8, 3.28,
			3.26, 2.34, 3.03, 1.92, 3.87, 1.18, 3.59, 3.46, 2.87, 1.842, 1.458, 3.15,
			2.92, 4.66, 1.968, 2.292, 2.76, 4.68, 2.94, 4.95, 2.91, 2.31, 1.8, 2.22,
			2.25, 3.63, 2.73, 5.01, 0.75, 2.7, 5.61, 3.21, 3.33, 2.49, 3.45, 2.1, 2.7,
			2.44, 2.06, 2.34, 2.07, 2.07, 3.12, 2.312, 1.708, 3.81, 2.7, 4.51, 2.9,
			2.73, 3.4, 1.94, 3.33, 3.09, 3.86, 3.67, 2.52, 1.92, 3.24, 2.13, 3.473,
			2.917, 3.18, 1.26, 3.54, 3.33, 2.85, 2.07, 4.02, 4.38, 3.42, 3.96, 4.21,
			0.5, 1.875, 1.485, 3.99, 2.49, 2.7, 2.28, 2.94, 3.0, 2.55, 2.58, 4.08,
			2.67, 2.73, 2.97, 3.06, 1.99, 3.65, 3.93, 2.94, 3.03, 3.952, 1.958, 3.92,
			3.16, 1.967, 2.083, 3.3, 3.3, 3.0, 1.62, 2.61, 2.58, 3.99, 2.61, 4.4,
			2.77, 2.41, 2.51, 3.63, 3.12, 4.12, 4.25, 3.09, 3.54, 1.92, 1.83, 3.18,
			1.95, 2.34, 3.78, 2.07, 2.16, 4.11, 3.6, 3.75, 2.44, 2.57, 2.73, 2.01,
			2.16, 3.83, 1.85, 3.015, 1.875, 1.89, 2.68, 2.39, 3.63, 2.902, 1.958,
			3.78, 2.25, 2.49, 2.16, 3.54, 2.52, 2.13, 2.31, 3.12, 3.36, 3.623, 2.167,
			3.34, 3.26, 4.86, 2.67, 3.12, 2.67, 3.45, 3.149, 3.571, 3.727, 1.792,
			3.481, 1.08, 4.41, 3.54, 2.88, 2.43, 3.25, 3.62, 1.08, 4.2, 2.609, 3.391,
			4.41, 2.369, 1.951, 2.94, 3.479, 4.17, 4.321, 4.26, 4.03, 3.95, 0.87,
			3.39, 3.57, 5.4, 4.17, 1.77, 3.03, 4.35, 4.87, 1.88, 3.6, 2.1, 3.14, 3.25,
			2.58, 3.03, 3.27, 3.03, 2.13, 3.24, 2.89, 5.48, 2.01, 3.9, 2.25, 4.38,
			4.0, 2.63, 4.38, 2.07, 5.22, 3.84, 2.82, 3.57, 1.55, 2.47, 2.96, 4.6,
			2.91, 5.13, 1.69, 3.08, 4.62, 3.04, 4.58, 3.3, 2.7, 3.33, 3.93, 4.44,
			3.54, 4.49, 1.68, 7.1, 3.15, 1.66, 2.73, 1.31, 2.49, 2.67, 2.76, 2.58,
			3.75, 10.08, 1.05, 4.34, 0.86, 1.94, 1.89, 3.57, 3.69, 3.21, 3.63, 2.34,
			2.88, 3.84, 4.79, 2.35, 2.46, 2.55, 2.31, 2.64, 3.78, 3.24, 2.91, 4.71,
			3.0, 4.14, 2.91, 3.15, 4.245, 1.125, 3.09, 1.5, 2.542, 2.978, 3.12, 1.83,
			2.24, 2.38, 2.6, 2.71, 2.34, 2.64, 2.16, 4.26, 1.23, 3.87, 5.21, 2.032,
			2.708, 2.88, 3.06, 4.74, 1.75, 3.81, 2.152, 1.708, 1.74, 4.05, 4.26, 1.32,
			1.89, 4.17, 3.15, 2.19, 3.93, 3.33, 1.92, 3.0, 2.43, 2.28, 2.01, 2.97,
			3.9, 2.46, 2.76, 4.8, 1.243, 1.667, 1.68, 1.5, 5.25, 3.937, 3.083, 2.04,
			2.73, 4.47, 4.65, 1.08, 2.58, 5.4, 2.94, 1.71, 3.24, 4.065, 1.875, 3.96,
			4.44, 3.215, 2.125, 2.79, 2.94, 4.47, 2.88, 3.45, 3.66, 4.8, 1.08, 4.17,
			2.67, 1.38, 2.67, 4.03, 2.43, 2.29, 2.63, 3.683, 3.167, 2.42, 3.21, 2.575,
			3.125, 1.2, 1.917, 2.223, 4.29, 2.73, 1.81, 3.14, 1.05, 2.16, 3.54, 2.85,
			3.69, 2.43, 2.91, 1.73, 3.13, 2.88, 3.09, 3.63, 2.07, 2.64, 5.46, 3.65,
			2.16, 4.75, 2.61, 3.93, 2.42, 2.87, 5.75, 3.15, 2.14, 2.57, 2.49, 2.13,
			4.89, 1.78, 3.08, 0.75, 5.37, 2.28, 1.47, 2.25, 1.913, 2.917, 3.25, 3.17,
			3.3, 3.66, 1.77, 2.76, 2.565, 2.925, 2.19, 2.29, 3.32, 4.0, 3.652, 2.458,
			1.62, 2.07, 2.31, 2.37, 1.36, 1.85, 2.13, 3.42, 1.5, 4.91, 1.63, 1.71,
			3.81, 3.21, 0.87, 3.87, 1.853, 2.167, 3.09, 2.76, 1.285, 2.375, 3.93,
			3.78, 1.8, 2.79, 3.78, 3.24, 3.96, 4.645, 3.125, 2.325, 2.625, 1.92, 4.93,
			3.68, 2.14, 4.07, 4.17, 3.15, 2.13, 3.36, 2.7, 2.82, 3.15, 2.37, 2.76,
			3.87, 1.307, 2.833, 3.317, 2.083, 2.43, 2.49, 2.25, 3.99, 1.44, 3.12,
			2.01, 3.99, 2.1, 3.472, 1.958, 2.23, 2.6, 3.9, 4.56, 3.7, 4.31, 2.735,
			2.125, 2.25, 4.51, 1.97, 3.54, 2.22, 2.25, 1.92, 3.03, 2.67, 2.04, 4.95,
			3.93, 2.423, 2.167, 3.29, 2.17, 2.28, 3.06, 2.28, 3.6, 2.31, 2.58, 2.83,
			2.06, 3.3, 3.06, 2.682, 2.208, 1.95, 3.33, 4.32, 3.36, 3.69, 4.91, 1.75,
			2.667, 1.833, 2.55, 3.18, 2.82, 0.75, 2.792, 1.583, 1.875, 1.49, 4.49
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"BRIAN YU: All right, welcome back, everyone,",
			"to Web Programming with Python and JavaScript.",
			"And for our final topic, we're going to explore scalability and security.",
			"So far in the class, we've been building web applications.",
			"And we've been building web applications that work on our own computer.",
			"But if we want to take those web applications",
			"and deploy them to the world so people all across the internet",
			"can begin to use them, then we're going to need",
			"to host our web application on some sort of web server--",
			"some dedicated piece of hardware that is listening for web requests",
			"and responding to them with the response that we would like",
			"for our web application to deliver.",
			"And when we do so, this introduces a whole bunch",
			"of interesting issues surrounding scalability and security.",
			"So we'll take a look at these issues today,",
			"beginning with problems concerning scalability-- what those problems are",
			"and how we might go about addressing them.",
			"So when we deploy our web applications, we",
			"deploy them by putting them onto a web server",
			"that I'm, here, just representing with this rectangle.",
			"But all the server is is some dedicated computer, some piece of hardware that",
			"is listening for incoming requests.",
			"So we'll draw this line to represent an incoming web request from a user.",
			"The server takes that request and responds to it.",
			"But ultimately, our web application isn't just",
			"going to be servicing one user.",
			"If it becomes popular, it might have many users",
			"that are all trying to connect to that server at the same time.",
			"And as multiple people start to connect to that server at the same time,",
			"here is where we start to deal with issues of scalability.",
			"A single computer or a single server can only service so many users",
			"at any given time.",
			"And so, therefore, we need to think in advance",
			"about how we're going to deal with those issues of scale.",
			"But the first question, before we even get there,",
			"is where these servers actually exist.",
			"And nowadays, there are two main options for where these servers can exist.",
			"These servers can be on the cloud or they can be on premise.",
			"And on-premise servers, you might imagine",
			"is if a company is running their own web application.",
			"On-premise servers are servers that are inside of the company's walls.",
			"The company owns the physical servers, maybe",
			"on some server racks inside of a room.",
			"And therefore, they have very direct control",
			"over all of the servers-- exactly what kind of servers they are,",
			"exactly what software is running on them.",
			"They can go and physically look at the servers and debug them, if need be,",
			"in order to make sure that any issues are dealt with.",
			"But increasingly, we're starting to move into a world",
			"where cloud computing is becoming increasingly popular.",
			"In cloud computing, rather than have dedicated servers that are on premise,",
			"we have servers that are somewhere in the cloud",
			"where cloud computing companies like Amazon, or Google, or Microsoft",
			"are able to run their own servers.",
			"And we simply use those servers that are provided by those third parties,",
			"whether it's Amazon, or Google, or Microsoft, or someone else.",
			"And there are trade offs.",
			"With cloud computing, we no longer have as direct control over the machines",
			"themselves because they're not on premise.",
			"We can't physically manipulate those computers.",
			"But we have the advantage of not having to worry",
			"about dealing with physical objects that are inside",
			"of the premise of the company whose servers we'd like to run code for.",
			"When it's on the cloud, everything is managed externally",
			"by some other company, and we can simply use the servers that we need to.",
			"And we'll see that this lends itself to other benefits as well.",
			"As we might need more servers, as we start to get more sophisticated web",
			"applications that need more users, these cloud-computing companies",
			"can allow us to create web applications that",
			"are able to scale across multiple different servers",
			"as we start to get more and more users.",
			"But we'll discuss those issues of scale as we get to them.",
			"The question we need to ask after we have these servers--",
			"whether they're servers that are on premise or servers that",
			"are operating somewhere in the cloud--",
			"is, how many users can the server actually service at any given time?",
			"And that's going to vary.",
			"It's going to vary based on the size of the server, the computing",
			"power of the server.",
			"And it's going to be dependent upon how long it takes to process",
			"any particular user's request.",
			"If user requests are quite expensive, it might",
			"mean that there are fewer users that can be serviced at any given time.",
			"And it's for that reason that a helpful tool",
			"is to do some kind of benchmarking, some process of trying",
			"to do some analysis on how many users a server can actually",
			"be handling at any particular time.",
			"And there are numerous different tools that allow",
			"us to do this kind of benchmarking.",
			"Apache Bench, or otherwise known as AB, is a popular tool",
			"for doing this kind of thing.",
			"But benchmarking is going to be useful so that we know how many users one",
			"particular server can handle.",
			"Maybe it can handle 50 users.",
			"Maybe it can handle 100 users.",
			"Maybe it can handle more at any given time.",
			"But ultimately, it's going to be some finite limit.",
			"Every computer just has some finite amount of resources,",
			"and servers are no exception.",
			"There's going to be some number of users after which the server is not",
			"going to be able to handle it.",
			"So what do we do in that situation?",
			"What do we do if our server can only handle 100 users at any given time,",
			"but 101 users are trying to use our web application at the same time?",
			"Something needs to change.",
			"We need to deal with some sort of scaling",
			"to make sure that our web application can scale.",
			"And there are a couple of different types of scaling that we can try.",
			"One approach is to do what's called vertical scaling, which",
			"might be the simplest way you could imagine scaling.",
			"If this server is not good enough for handling the number of users",
			"that we need it to handle, well, just get a bigger serve.",
			"In vertical scaling, we just take the server",
			"and get a bigger server, a more powerful server,",
			"a server that can handle more users at any given time.",
			"It's going to cost more.",
			"But if we need it to handle more users, we",
			"can just get a bigger server to be able to deal with that problem.",
			"This approach is fairly simple.",
			"It just involves swapping out one server for another, one that",
			"can handle more users concurrently.",
			"But it also has drawbacks.",
			"There is some limit to how big the server can be, to how many users",
			"any physical one server is going to be able to handle because there's",
			"a physical limitation on what is the biggest, fastest, most powerful",
			"server we could possibly get.",
			"So when vertical scaling ends up not being enough,",
			"an alternative-- as you might imagine-- is what's known as horizontal scaling.",
			"And the idea behind horizontal scaling is",
			"that, when one server isn't enough to be able to service all of the users that",
			"might be trying to use a web application at the same time, well,",
			"then we can take the approach of saying, well, rather than just using",
			"one server, let's go ahead and split it up into two different servers.",
			"We now have two servers that are both running the web application.",
			"And now, effectively, we've been able to double the number of users",
			"that this web application can handle.",
			"Rather than just a single server that can service 100 users,",
			"if we have two of them, now we can service 200 users at any given time",
			"if you imagine 100 of them using server A over here and 100 of them",
			"using server B over there.",
			"But this then lends itself to some other questions that we have to answer,",
			"which is, how do these servers get their users in the first place?",
			"When a user requests a web page, how does that user",
			"get directed either to server A or to server B?",
			"It seems that they need some way to make that decision in order to decide",
			"whether to go one direction or another.",
			"And it's for that reason that we might introduce another piece of hardware",
			"into this picture.",
			"And that additional piece of hardware is what we might call a load balancer.",
			"And a load balancer is just another piece of hardware",
			"that is going to sit in front of these servers, so to speak.",
			"In other words, when a user makes a request to a web page,",
			"rather than immediately getting that request to one of these web servers,",
			"the request is first going to go through this load balancer",
			"where the request first comes into the load balancer.",
			"And the load balancer then decides whether to send that request to server",
			"A or to send that request to server B. And this process",
			"is likely less expensive than actually dealing with and processing",
			"that request.",
			"So the load balancer is effectively just acting as a dispatcher.",
			"It waits for those requests to come in.",
			"And when the requests do come in, the load balancer",
			"directs those requests either to go to one server or to another.",
			"And you might imagine the story where we have more than just two servers.",
			"Maybe we have many servers.",
			"And the load balancer is just going to balance",
			"between all of those different servers.",
			"And this process of deciding which server to send a request to",
			"is known as load balancing, which is what the load balancer is ultimately",
			"doing.",
			"And there are various different methods that you might use in order",
			"to perform this load balancing.",
			"So you might imagine thinking about this intuitively.",
			"How would the load balancer decide, given some request,",
			"should we send the request to this router, to this server,",
			"or should we send the request to some other server instead?",
			"And there are many different approaches that our load balancer might take.",
			"And here are just a couple.",
			"Random choice might be the simplest of options.",
			"Given a user that shows up and tries to make a request to our web server,",
			"the load balancer first takes a look at the user",
			"and just randomly assigns them to one of the various different servers",
			"that might be processing that request.",
			"If there are 10 different servers, it randomly chooses among those 10 servers",
			"to decide which of them is going to be servicing that request.",
			"This has the advantage of being very simple.",
			"It's just a quick calculation.",
			"The computers can pretty readily generate random numbers.",
			"And based on that random number, the computer",
			"can dispatch the user to one server or to another server.",
			"But it might not be the best option because, if we happen to get unlucky,",
			"we might end up with many more users on one server than another.",
			"Or we might end up with servers that are entirely",
			"unused if it just so happens that we don't end up",
			"randomly selecting that server.",
			"Now, in practice with many users that are all using this load balancer, all",
			"being dispatched, odds are high that eventually all of them will be used.",
			"But it might not be a totally even distribution.",
			"And so for that reason, another approach you",
			"might take is round-robin approach where the approach is, instead,",
			"for the very first user, go ahead and assign that user to server number one.",
			"For the next user, assign them to server number two.",
			"And maybe, if there are five servers, you say,",
			"the third user goes to server three, user four goes to server four,",
			"user five goes to server five, and then user six",
			"goes back to server number one.",
			"You basically rotate going one through five.",
			"And then, once you've assigned someone to each of the servers,",
			"you go back to the beginning.",
			"This is also a relatively easy thing to implement because you can simply just",
			"keep count somewhere in the load balancer",
			"saying, what was the most recent server that I assigned a user to?",
			"And the next time a request comes in, go ahead and assign it",
			"to the next server, and the next server after that,",
			"effectively doing a round-robin style approach",
			"where you go through all the servers once before going through the servers",
			"again.",
			"Now, this might seem better than random choice in the sense",
			"that it's going to more equitably decide whether to assign",
			"any particular request to any particular server.",
			"But it also suffers from certain problems.",
			"Round robin might be great, but if some requests",
			"take longer than other requests, we might also get unlucky,",
			"and the requests that are taking longer might",
			"end up all going to one of the servers as opposed to another server.",
			"So there are other approaches that we might want to go to as well--",
			"for example, something like fewest connections",
			"where the approach there is to say, go ahead, and when a user makes a request,",
			"the load balancer should pick which of the servers",
			"currently has the fewest active connections from other users",
			"and other requests that are currently connected to those servers instead.",
			"And by choosing the server that happens to have the fewest connections,",
			"you're probably going to do a better job of trying to balance out",
			"between all of the various different requests",
			"that might be happening inside of your web application.",
			"And while this might do a better job, there are trade offs here as well.",
			"It might be more expensive, for example, to compute which of the servers",
			"happens to have the fewest number of connections,",
			"whereas it's much easier just to say, choose a server at random",
			"or to do the round-robin style approach of just 1, 2, 3, 4, 5, 1, 2, 3, 4, 5,",
			"again, and again, and again.",
			"But all of these approaches naively have yet another problem,",
			"which has to do with sessions.",
			"And you'll recall that sessions we used whenever",
			"we wanted to store information about the user's current interaction",
			"with the web application.",
			"When you log into a website--",
			"you log into your email, or you log into Amazon, for example--",
			"and then you come back to that website or visit another page on that website--",
			"make another request, for example--",
			"it's not the case that you have to sign in yet again, that the web browser has",
			"totally forgotten who you are.",
			"When I go back to my mail account, or when I go back to Amazon",
			"for a second time, my mail account or Amazon remembers me from the last time",
			"that I visited.",
			"I have some sort of session where it's keeping track of who is logged in,",
			"maybe information about what I've been doing on the page,",
			"and allows me to continue interacting with the web application,",
			"even if I'm making multiple requests.",
			"And this, you might imagine, could be a problem",
			"for this type of load balancing.",
			"If I have multiple different servers, imagine if I try to log into a website.",
			"And the first time I make a request, I'm directed to server number one.",
			"And I'm now logged in on server number one.",
			"But then I make another request.",
			"I'm directed back to the load balancer.",
			"And maybe the load balancer, this time, decides",
			"to send me to server number two.",
			"But if the session is stored in server number one somewhere--",
			"server number one remembers who I am and what I'm doing--",
			"then server number two is not going to know who I am.",
			"And therefore, it's not going to remember that I've already",
			"logged into this web application.",
			"And as a result, I might be prompted to log in again.",
			"And if I go make another request, and I end up on yet another server,",
			"I might be logged out again and have to log in for a third time.",
			"So the problem comes about when our load balancing happens,",
			"but we're not doing so in a session-aware way--",
			"that our load balancer isn't caring about when a user visits the page",
			"and then visits another page on the same web application again--",
			"because we want to remember information from the previous time",
			"that the user was here.",
			"So how can we solve this problem?",
			"How can we make sure that, when we do this load",
			"balancing across multiple different servers,",
			"that we do so in a session-aware way?",
			"Well, there are multiple different approaches",
			"to session-aware load balancing.",
			"One approach is this general idea known as sticky sessions",
			"where the idea is that, when I come back to the load balancer,",
			"the load balancer will remember what server I was sent to last time",
			"and send me there yet again.",
			"So for example, if I log into a website once,",
			"and I'm directed to server number two, for example, then",
			"the next time I visit this web application,",
			"even if I should be directed to server three or four according",
			"to random choice or according to fewest connections or any of these other load",
			"balancing methods, the load balancer should",
			"remember that, last time I came to this site,",
			"I got directed to server number two.",
			"And so this time, the load balancer is going",
			"to direct me to server number two yet again.",
			"That way, server number two, which contains information about my session,",
			"is going to see me again and remember who it is that I am.",
			"And it's not going to make me log in again into the exact same website",
			"for a second time, for example.",
			"And so sticky sessions are one way of dealing with this problem.",
			"But again, with all of these approaches-- and this",
			"will be a recurring theme as we talk about scalability and security--",
			"there are trade offs here.",
			"A trade to the sticky sessions is that it's possible that one of these servers",
			"is going to end up getting far more load than another if one server happens",
			"to have a lot of users that keep coming back to the website",
			"and keep requesting additional pages.",
			"But other pages, other servers might have",
			"had users that decided not to come back, for example.",
			"And so there's a difference in utilization where some of our servers",
			"might be more heavily utilized than other servers,",
			"and we're not doing a very good job of balancing between them.",
			"And so one approach is to store sessions inside of the database",
			"rather than store information about sessions inside of the server",
			"themselves so that, if I get directed to another server,",
			"that other server doesn't remember who I am,",
			"doesn't remember information about my interaction with this website.",
			"If we instead choose to store sessions inside of a database--",
			"and, in particular, inside of a database that all of the servers",
			"have the ability to access--",
			"well, then it doesn't matter which of the servers I get directed to",
			"and which server the load balancer decides to send me to",
			"because, regardless of which server I end up getting sent to,",
			"the session information is in the database.",
			"And each of the servers can connect to the database",
			"to find out who I am, to find out whether I've logged into the site",
			"already, and therefore is able to recognize me.",
			"And so that might be one approach as well.",
			"Another approach is to store sessions on the client side.",
			"We've talked a little bit about this idea",
			"of cookies, which can be stored where the web browser can set a cookie so",
			"that your web browser is able to present that cookie the next time",
			"it makes a request to the same web application.",
			"And inside this cookie, you can store a whole bunch of information, including",
			"information about the session.",
			"You might, inside of a cookie, store information",
			"about what user is currently logged in, for example,",
			"or other session-related information.",
			"But here, too, there are drawbacks.",
			"If you're not careful, someone could manipulate that cookie",
			"and maybe pretend to be something else.",
			"And so for that reason, you might want to do",
			"some encryption or some kind of sign in to make sure",
			"that you can't fake a cookie and pretend to be someone that you're not.",
			"But another concern is that, as you start",
			"to store more and more information inside of these cookies,",
			"these cookies keep getting sent back and forth between the server and the client",
			"every time a request is made.",
			"That can start to get expensive, too-- more and more information",
			"passing back and forth between the client and between the server.",
			"So lots of possible approaches-- no one approach",
			"that is necessarily the right approach or the best approach",
			"to use in any cases.",
			"But things to be aware of-- things to think about",
			"as we begin to deal with these issues of scale, of making",
			"sure we have multiple servers that are available for usage in case we do",
			"need it.",
			"But also making sure that, when we do so, we don't break the user",
			"experience-- we don't result in a situation where a user is logged in",
			"but then, suddenly, isn't logged in at all.",
			"And so horizontal scaling gives us this kind of capacity--",
			"the ability to have multiple different servers, all of which",
			"can be dealing with user requests and responding to those user requests",
			"as well.",
			"But a reasonable question asked is, how many of those servers do we need?",
			"Now, we can use benchmarking to try to estimate this.",
			"If we have an estimate of how many users are going to be on our website",
			"at any given time, we can benchmark and see",
			"how many users can be handled by a single server and extrapolate,",
			"based on that information, to infer how many servers we",
			"might need in our web application to be able to service",
			"all of these different users.",
			"But it might be the case that our web application doesn't always",
			"have the same number of users.",
			"Maybe, sometimes, there are going to be far more users than another time.",
			"You might imagine, for example, that in a news organization's website--",
			"like the web application for a newspaper--",
			"when there's breaking news, some big story,",
			"there's going to be a lot more people that",
			"are all trying to access the website at the same time than at other times.",
			"So one approach might be, consider the maximum.",
			"What is the most number of users that ever",
			"might be trying to use our web application at any given time?",
			"And choose a number of servers based on that maximum so that,",
			"no matter how high the number of users get,",
			"we will have enough servers to be able to service all of those users.",
			"But that's probably not a great economical choice",
			"if, in the vast majority of cases, there will be far fewer users.",
			"In that case, you're going to have a lot of servers that are underutilized--",
			"where you don't need that many servers, but you're still paying",
			"for the electricity, for keeping all of them running--",
			"which might not be an ideal choice either.",
			"So one solution to this--",
			"quite popular, especially in this world of cloud computing--",
			"is the idea of autoscaling where you can have an autoscaler",
			"to say that, you know what, let's start with, for example, two servers.",
			"But if there's enough traffic to the website,",
			"if enough people are making requests to the website--",
			"maybe it's a peak time where people are using the website--",
			"go ahead and scale up.",
			"Go ahead and add a third server where now our load balancer can balance",
			"between all three of those servers.",
			"And if even more traffic ends up coming to the website--",
			"more users are trying to use this application all at the same time--",
			"well, then we can go ahead and add a fourth server as well.",
			"And we can continue to do that.",
			"Most autoscalers will let you configure, for example,",
			"a minimum number of servers and a maximum number of servers.",
			"And dependent on how many users happen to be using your web",
			"application at any given time, the autoscaler",
			"can scale up or scale down, adding new servers as more users come",
			"to the website, removing servers as fewer users are",
			"using the website as well.",
			"And so this can be a nice solution to this problem of scale",
			"where you don't have to worry about how many servers there are.",
			"It just autoscales entirely on its own.",
			"Now, there are trade offs here, too.",
			"This auto scaling process might take time.",
			"And if a lot of users all come into your website all at the exact same time,",
			"well, it's going to take some time to be able to add",
			"all of these additional servers to start them up.",
			"And so there might be some trade offs there, too,",
			"where you might not be able to service all of the users immediately.",
			"And another problem worth thinking about is,",
			"as you add more and more of these servers,",
			"you introduce opportunities for failure.",
			"Now, it's better than having a single server",
			"where, if that single server fails, now suddenly the entire web application",
			"doesn't work at all.",
			"That's what we generally call a single point of failure--",
			"a single place where, if it fails, the entire system is going to be broken.",
			"One advantage of having multiple servers is",
			"that we no longer have a single server that acts as a point of failure.",
			"If one of the servers goes down then, ideally,",
			"our load balancer should be able to know, based on that information,",
			"to no longer send a request to that particular server-- to,",
			"instead, balance the load across the remaining three servers instead.",
			"Now, there's an interesting question there as well,",
			"which is, how does the load balancer know that this server is",
			"no longer responding?",
			"For some reason, it has some sort of error",
			"that it's not able to process requests appropriately.",
			"Well, there are multiple ways you can do this.",
			"But one of the most common is what's simply known as a heartbeat where,",
			"effectively, every so often, every some number of seconds,",
			"the load balancer pings all of the servers--",
			"just sends a quick request to all the servers.",
			"And all of the servers are supposed to respond back.",
			"And using that information, the load balancer",
			"knows a little bit about the latency of each of the servers--",
			"how long it took for the server to respond to the request.",
			"But also, it can get information about whether or not",
			"the server is functioning properly.",
			"If one of the servers doesn't respond to the ping,",
			"well, then the load balancer knows that there's probably",
			"something wrong with the server, that we probably shouldn't be directing",
			"more users to that server at all.",
			"And so this can solve for the problem of a single point of failure",
			"by allowing ourselves multiple servers where, if any one of the servers fails,",
			"the load balancer learns about that via heartbeat",
			"and then, based on that information, can begin to redirect traffic",
			"to the other servers instead.",
			"Now, one thing you might notice is that, even in this picture,",
			"now the load balancer appears to be like a single point of failure",
			"where, if the low balance happens to fail, well, now",
			"nothing is going to work because the load balancer is",
			"the one responsible for directing traffic to all",
			"of the various different servers.",
			"And so even though there is no single server that is a point to failure,",
			"this load balancer also appears to be a single point of failure.",
			"And that's definitely true.",
			"And you might imagine instead having multiple load balancers",
			"where one load balancer goes down, another load balancer can swoop in,",
			"acting as a hot spare where it picks up all of the traffic that was originally",
			"going to the first load balancer.",
			"And if it ever goes down, a second one is ready to take its place.",
			"And it might also be doing this kind of heartbeat process-- checking up",
			"on the first load balancer.",
			"And if all goes well, the second load balancer doesn't have to do anything.",
			"But if the first load balancer ever were to fail,",
			"well, then the second load balancer can step in",
			"and begin servicing those requests, directing them to all",
			"of these individual servers as well.",
			"And so there, too--",
			"another opportunity to think about where the single points of failure",
			"are and thinking about how we might address the single points of failure",
			"in order to make sure that our web applications are scalable.",
			"So that then deals with issues about how we might",
			"go about scaling up these servers.",
			"But ultimately, the servers are not the entirety of the story.",
			"Inside of our applications, we mostly have",
			"writing web applications that interact and deal with data in some way.",
			"And there are multiple different databases that we've talked about.",
			"SQLite Light has been the default one that Django",
			"provides to us, which just stores data inside of a file.",
			"But as we begin to grow our applications,",
			"if we want to begin to scale them, it's quite popular and quite common",
			"to put databases entirely somewhere separate--",
			"to have a separate database server running somewhere else where",
			"the servers are all communicating with that database,",
			"whether it's we're running MySQL, or Postgres, or some other database system",
			"instead.",
			"And all of the servers then have access to that database.",
			"And so there, too, are considerations that we",
			"need to take into account-- issues of how it is that we",
			"go about scaling up these databases.",
			"In this picture, for example, you might imagine a load balancer",
			"that is communicating with two servers.",
			"But both of those servers, for example, need",
			"to be communicating with this database.",
			"And much like any server can only handle some number of requests,",
			"some number of users at any given time, databases, too,",
			"can only handle some number of requests, some concurrent number of connections",
			"at any given time.",
			"And so we need to begin to think about issues",
			"of how it is that we scale these databases as well in order to be",
			"able to handle more and more users.",
			"Now, one approach, the first thing we might try to do,",
			"is something called database partitioning-- effectively,",
			"splitting up what is a big data set into multiple different parts",
			"to that data set.",
			"And we've already seen some examples of database partitioning.",
			"We've seen one example where-- for example, when we talked about SQL,",
			"we looked at a table of flights where each flight had an origin",
			"city, the origin city's airport code, the destination city, the destination",
			"city's airport code, and some number of minutes,",
			"the duration for that particular flight.",
			"And we decided that storing all of this data in a single table",
			"probably wasn't the best idea.",
			"And instead, we wanted to split that data up",
			"in a type of partitioning where, instead, we said, all right, let's just",
			"have one table that will have all of the airports.",
			"And so each airport gets its own row inside of this airports table.",
			"And we also had another table which was just",
			"the flights table which, rather than storing all of those columns,",
			"just mapped two airports to each other.",
			"With any given flight, it has an origin idea, meaning which object,",
			"which row in the origin airports table is represented by the flight,",
			"and then which row in the airports table is",
			"going to represent the destination for that flight.",
			"So we took one table and effectively split it up",
			"into multiple tables, each of which ultimately had fewer columns.",
			"And this might be something we call the vertical partitioning",
			"of a database where, instead of just having single big long tables,",
			"we split them up into multiple tables, each",
			"of which have fewer columns that are able to represent",
			"data in a more relational way.",
			"And that's something we've seen before, too.",
			"But in addition to vertical partitioning,",
			"we can also do horizontal partitioning where the idea there",
			"is that we take a table and just split it up",
			"into multiple tables that are all storing effectively the same data,",
			"but split up into different data sets.",
			"So the same type of data, but just in different tables--",
			"where we might have originally had a flights table,",
			"and instead we split it up into a domestic flights table",
			"and an international flights table.",
			"Each of these tables still has the exact same column.",
			"They still have a destination column.",
			"They still have an origin column.",
			"They still have a duration column, for example.",
			"But we've just now taken the data that used to be in one table",
			"and split up that data into two or more multiple different tables instead--",
			"one for all the domestic flights, one for all the international flights.",
			"And the advantage there is that we no longer",
			"need to search through the entirety of the data set if we're just looking",
			"for one domestic flight, for example.",
			"If you know the flight you're looking for is a domestic flight,",
			"well, then it can be more efficient to just search the flight's domestic table",
			"and not bother searching through the flight international table.",
			"And so if we're intelligent about how we choose to take a table",
			"and split it up into multiple different tables, the effect of that",
			"is that we can often improve the efficiency",
			"of our searches, the efficiency of our operations,",
			"because we're dealing with multiple smaller tables",
			"where these operations can come faster.",
			"One drawback though is that, as we begin to split data",
			"across multiple different tables, it becomes more expensive if ever we",
			"need to join this data back together and connect",
			"all the domestic and international flights running",
			"separate queries on each.",
			"And so in that case, we'll want to think about trying",
			"to separate our data in such a way that, generally, we're",
			"only going to need to deal with one table or the other at any given time.",
			"And so domestic and international might be a reasonable way",
			"to split up our flights table because maybe, most of the time, our airport",
			"just cares about searching domestic flights",
			"if we know we're looking for one kind of flight,",
			"or just cares about searching for international flights",
			"if there are different people or different computers that",
			"are going to handle each of those different types of systems.",
			"And so partitioning our database can sometimes help with issues of scale",
			"by making it faster to search through large amounts of data",
			"and being able to represent data a little bit more cleanly.",
			"But it still seems to represent a single point of failure--",
			"that we have multiple servers now that are all connected to the same database.",
			"And there, again, is a single point of failure.",
			"If the database fails for some reason, well now,",
			"suddenly, none of our web application is going",
			"to work because all of those servers are all",
			"connected to that exact same database.",
			"And so it's for that reason that we might--",
			"just as we tried to add more servers in order",
			"to solve the problem of a single point of failure with our servers,",
			"we might also try database replication.",
			"Rather than just have a single database in our web application,",
			"in order to guard against potential failure,",
			"we might replicate our database-- have multiple different databases",
			"and, therefore, reduce the likelihood that our application entirely fails.",
			"And there are a couple of approaches that we",
			"can use for database replication.",
			"Two of the most common are what are known as single-primary replication",
			"and multi-primary replication.",
			"And in single-primary database replication,",
			"we have multiple different databases.",
			"But one of those databases is considered to be the primary database.",
			"And what we mean by a primary database is a database",
			"to which we can both read data--",
			"meaning select rows from the table--",
			"but also write data, meaning insert rows,",
			"or update rows, or delete rows to any of those tables.",
			"So in single-primary replication, we have a single database",
			"where we can both read and write.",
			"And we have some number of other databases-- in this case,",
			"two other databases--",
			"from which we can only read data.",
			"So we can get data from those databases.",
			"But we can't update, or insert, or delete from those databases.",
			"And now we need some mechanism to make sure that all of these databases",
			"are kept in sync.",
			"And ultimately, what that means is that, any time the database changes,",
			"all of the databases are informed.",
			"Now, the only database that can change is our primary one.",
			"This is the only one that can be written to,",
			"the only one that allows for the data to change.",
			"The others are read only.",
			"So anytime this primary database updates or changes in some way,",
			"it needs to inform the other databases of that update.",
			"And so it informs the other databases of that update.",
			"And now all of the databases are kept in sync",
			"where, if you try and run a query on any of these databases",
			"to select and get some information, you'll",
			"get the same results from all of these various different databases.",
			"Now, the single-primary approach has some drawbacks.",
			"It has the drawback of only one of these databases can be written to.",
			"So if you have a lot of users that are all",
			"trying to write data to the database at the exact same time,",
			"well, there might be some issues here where",
			"this one database is going to be carrying",
			"all of that load for all of the people that might be trying",
			"to update and change that database.",
			"And it also has a slightly smaller version",
			"of the same problem of a single point of failure.",
			"There is no longer a single point of failure for reading from that data.",
			"If you want to read from the data, and one of the databases goes out,",
			"you can read data from any of the other databases, and they'll work just fine.",
			"But it does have the drawback that, if this database fails,",
			"if our primary database fails, well, then",
			"we're no longer able to write data.",
			"If we want to update data inside of our database,",
			"this one database is no longer going to be operational.",
			"And none of the other databases are going to allow us to write new changes.",
			"So there are a couple of approaches we can use to try to solve this problem.",
			"One approach though is, instead of having a single-primary database--",
			"a single database to which we can read and write--",
			"to use a multi-primary approach.",
			"And in the multi-primary approach, we have multiple databases, all of which",
			"we can read and write to.",
			"We can select rows from all the databases.",
			"And we can insert an update and delete rows to all of these databases as well.",
			"But now the synchronization process becomes a little bit trickier.",
			"And here, now, is the trade off-- that now we've",
			"replicated the number of reads and writes",
			"we can do by having many databases to which we can read data and write data.",
			"But anytime any of these databases changes,",
			"every database needs to inform all of the other databases of those updates.",
			"And that's, certainly, going to take some amount of time.",
			"It introduces some complexity into our system as well.",
			"And it also introduces the possibility for conflicts.",
			"You might imagine situations where, if two people are editing",
			"similar data at the same time, you might run",
			"into a number of different types of conflicts.",
			"So one type of conflict, for example, would be an update conflict.",
			"If I tried to edit one row in one database,",
			"and someone else tries to edit the same row in another database, when they sync",
			"up with each other via this update process,",
			"our database system needs some way to decide",
			"how it's going to resolve those various different updates.",
			"Another conflict might be a uniqueness conflict.",
			"We've seen, in the case of databases in SQL",
			"that, when we're designing our tables, I can",
			"specify that this particular field should be a unique field--",
			"common one being the ID field, for example, where every single row is",
			"going to have its own unique ideas.",
			"Well, what happens if two people try to insert data at the same time",
			"into two different databases?",
			"They're each given a unique ID, but it's the same idea on both of the databases,",
			"because neither database knows that the other database has added a new row yet.",
			"So when they sync back up, we might run into a uniqueness conflict",
			"where two different databases have assigned the same exact ID",
			"to multiple different entries.",
			"So we need some way to be able to resolve those conflicts as well.",
			"And there are many other conflicts you might",
			"imagine trying to deal with-- one example being, for instance, delete",
			"conflicts, where one person tries to delete a row",
			"and another person tries to update that row.",
			"Well, which should take precedence?",
			"Should we update the row?",
			"Should we delete the row?",
			"We need some way to be able to make those decisions because there",
			"is some latency between when a change is made to a database",
			"and when that database is able to communicate with another database.",
			"So these issues of scale, these issues of synchronization",
			"are always going to come up as we start to deal",
			"with programs that are interacting with more and more of this kind of data.",
			"And as a result, we need to design more and more sophisticated",
			"systems that are able to deal with those issues of scale.",
			"Now, ultimately, we'd ideally like to reduce the number of different database",
			"servers that we have.",
			"Every additional database server is going to cost time.",
			"It's going to cost resources.",
			"It costs money in terms of keeping all of these servers running.",
			"And so, ideally, we'd like not to have to talk to this database",
			"if we don't need to.",
			"So you might imagine, for example, a news organization's website, something",
			"like the front page of the New York Times.",
			"If you go to the home page of the New York Times website,",
			"it displays all of the day's headlines with images",
			"and with information about what each of the stories are about, for example.",
			"And you might imagine that the way they're doing something like this",
			"is that they have some kind of database that's",
			"storing all of these news articles.",
			"And when you visit the front page of the New York Times,",
			"it's going to do some kind of database query--",
			"selecting all of the recent top headlines, for example--",
			"and rendering all of that information in an HTML page that you can see.",
			"And that would certainly work.",
			"But if a lot of people are all requesting the front page",
			"at the same time, well, it probably doesn't make all that much sense",
			"if the web application, every time, is making a database query, getting",
			"the latest articles, and then displaying that information to all of the users",
			"because the articles might not be changing all that frequently.",
			"If one person makes a request one second,",
			"and another person makes the same request half a second later,",
			"it probably is not going to be useful to re-request all of the information",
			"from the database, regenerate that template yet again, because it's",
			"an expensive process of requesting data from the database, of generating",
			"that template.",
			"We'd, ideally, like some way of dealing with that problem.",
			"And the way we can deal with that problem is some form of caching.",
			"And caching refers to a whole bunch of different types of ideas and tools",
			"that we can use at various different places inside of our system.",
			"But in general, when we're talking about caching,",
			"we're talking about storing a saved version of some information in a way",
			"that we can access it more quickly so that we don't need to continue making",
			"requests to a database, for example.",
			"And so there are a number of ways we can do caching.",
			"One way we can do caching is on the client side via client-side caching",
			"where the idea is that your browser--",
			"whether it's Safari, or Chrome, or something else--",
			"is able to cache data, store information,",
			"so that the browser doesn't need to re-request the same information",
			"the next time it visits the page.",
			"For example, if you request a page and it loads an image--",
			"on the page, for example--",
			"and you reload the page, well, your web browser",
			"might try and make a request again for the exact same image",
			"and then display it to you.",
			"But an alternative might be that your web browser could just",
			"save a copy of the image inside of a cache",
			"to locally store a version of the image so that, the next time",
			"that the user makes a request to the website, the user",
			"doesn't need to reload that entire image.",
			"And that might be true of entire web pages and web resources--",
			"that if there is some page that doesn't change very often then,",
			"if the web browser just stores a cached, a saved version of that page,",
			"then the next time the user goes to their web browser,",
			"tries to access that page, rather than re-request to the server and make a new",
			"request that the server needs to respond to, if the browser has that page",
			"cached, the browser can just display the cached--",
			"saved-- version of the page, saving the need to talk to the server at all.",
			"So this can certainly help to reduce the load on any given server.",
			"If users are caching information inside of the web browser,",
			"it makes the experience faster for the user",
			"because they can see the information immediately rather than",
			"need to make a request and wait for a response to come back.",
			"And it's good for the server because the server",
			"doesn't need to be dealing with as many requests if some of those requests",
			"are getting cached.",
			"And so one approach to trying to do this is",
			"by adding this inside of the headers of an HTTP response.",
			"When your web server responds to some requests,",
			"the web server can include a line like this inside of the response--",
			"something like cache-control max-age-86400--",
			"in effect, specifying the number of seconds",
			"that you should cache this resource for.",
			"But if I try to access this page 10 seconds later,",
			"well, that's less than 86,400.",
			"So rather than reload and re-request the entire page,",
			"we're just going to use the version of the page that happens",
			"to be cached inside of the web browser.",
			"And so this has several advantages, that we've talked about,",
			"in terms of reducing the amount of time it takes to see the content of the page",
			"because it's already saved and reducing the load on any particular server.",
			"But it also has drawbacks.",
			"If, for example, the resource changes within this amount of time--",
			"maybe in 60 seconds, the page has changed--",
			"if I try and load the page again, well, then",
			"if it's loading the cache version of the page,",
			"I might be seeing an outdated version of a web page.",
			"I'm seeing an older version of the web page",
			"because my web browser just so happens to have",
			"that particular resource cached.",
			"And this might be true of a web page.",
			"It's especially true of other static resources, things like CSS files",
			"or JavaScript files.",
			"The CSS of a web page probably doesn't change all that often.",
			"And so, as a result, it's pretty natural that your web browser--",
			"rather than request the exact same CSS files again, and again, and again--",
			"might just save a copy of those CSS files,",
			"cache them, such that it's able to just reuse the cached version.",
			"But if the website were to update their CSS,",
			"you might not see the latest changes.",
			"And you might have experienced this yourself.",
			"If you're working on your own web applications, when you change your CSS",
			"and refresh the page, you might not always",
			"see those changes reflected if your web browser is caching those results.",
			"And so, in most web browsers, you can do a hard refresh",
			"to say, ignore whatever is in the cache, and actually go out",
			"and make a new request and get some new data.",
			"But ultimately, if you don't do that, you're",
			"subject to this cache control where the web browser is going to say,",
			"unless this number of seconds has elapsed,",
			"we're going to reuse the existing version of the page.",
			"And so an alternative to this approach-- and this approach certainly works",
			"and is quite popular--",
			"we can add to this approach by adding what's known as ETag.",
			"An ETag for a resource-- like a CSS file, or an image,",
			"or a JavaScript file--",
			"is just some unique sequence of characters",
			"that identifies a particular version of a resource,",
			"that identifies a particular version of a CSS file or a JavaScript file,",
			"for example.",
			"And what this allows a program to do--",
			"like a web browser--",
			"is that, when a web browser requests a resource--",
			"makes a request for a CSS file or a JavaScript file--",
			"they get it back.",
			"And they get its associated ETag value, so I",
			"know that this is the value that is associated",
			"with this version of the CSS file.",
			"And if the web server were ever to change that CSS file, replace it",
			"with a new updated CSS file, the corresponding ETag will also change.",
			"So why is this helpful?",
			"Well, it means that if I am trying to decide, should I",
			"load a new version of the resource or not,",
			"should I try and make another request to get the latest version of the CSS,",
			"what I can do first is just ask for, what",
			"is the ETag value, the short sequence that can be answered very quickly?",
			"Very quickly, we can just respond and say,",
			"you know what, if the ETag value is the same as what I remembered",
			"from last time, well, then I don't need to get",
			"a whole new version of that resource.",
			"And so this is quite common, too, that a web browser will say,",
			"hey, let me request this resource.",
			"But I already have a version of the resource with this particular ETag.",
			"So if that ETag is still the ETag for the most recent version of a particular",
			"resource-- like a CSS or JavaScript file--",
			"then no need for the web server to send a new version of that file.",
			"Just go ahead and respond and say, the version you have-- that one",
			"works-- totally fine.",
			"But if there is a new version, well, then the web server can respond with",
			"the new asset-- the new CSS file, for example--",
			"but also the new ETag value.",
			"So these two approaches can work in concert with each other.",
			"You can say, go ahead and cache this for some number of seconds",
			"so that, for some number of seconds, you're",
			"not going to ever request a new version of that resource.",
			"But even if you do ask for a new version of the resource",
			"after this number of seconds has elapsed,",
			"if the ETag value hasn't updated, then no",
			"need to redownload a whole new version of a particular file.",
			"You can just reuse the version that happens",
			"to be cached already in the browser.",
			"So caching in the browser can be an incredibly powerful tool",
			"for trying to speed up these requests, for trying to reduce",
			"the load on any particular server.",
			"But the client side is not the only place",
			"where we can begin to do this kind of caching.",
			"We also have the ability to do server-side caching.",
			"And in server-side caching, we're going to introduce to our picture the notion",
			"of a cache--",
			"that we have these multiple servers that are all",
			"communicating with the database.",
			"But these servers can also communicate with a cache--",
			"someplace where we've stored information that we",
			"might want to reuse later rather than have to do all of that recalculation.",
			"And Django, in turns out, has an entire cache framework,",
			"a whole host of features that Django offers",
			"that allow us to leverage this ability to use the cache",
			"to be able to speed up requests.",
			"So there are per-view caches where you can",
			"specify a cache on a particular view to say that, rather than run",
			"through all this Python code every time someone makes",
			"a request to this particular view, instead,",
			"just cache the view so that, for the next 30 seconds or 30 minutes,",
			"the next time someone tries to visit the same view,",
			"go ahead and just reuse the results of the last time",
			"that that view was loaded.",
			"And this can work not just for a single view.",
			"It can work for fragments inside of a template.",
			"Your template might have multiple different parts.",
			"On your web page, you might render the navigation bar, and the sidebar,",
			"and the footer, maybe based on information about today",
			"that might change the next day.",
			"But if you expect that the side bar of your page",
			"is not going to change very often within the same minute",
			"or within the same hour, well, then you might imagine",
			"caching that part of the template so that, the next time",
			"that Django tries to load that entire template,",
			"it doesn't need to recalculate how to generate the sidebar for your website.",
			"It just knows that we can use the same version of the sidebar",
			"from the last time that we loaded this website instead.",
			"And Django also gives you access to a lower level cache API",
			"where, for any information that you might want to cache and store for use",
			"later, you can save that information inside of the API.",
			"You make an expensive database query that",
			"takes a couple of milliseconds or a couple of seconds to process.",
			"You can save those results inside of a cache",
			"to make it easier to access that same data if ever you",
			"try to get access to that again.",
			"So caching allows us to be able to deal with these issues of scale",
			"by reducing load on our servers, but also on our databases.",
			"Rather than need to talk to the database every single time we",
			"make a new request for a particular web application,",
			"we can just reuse information that happens",
			"to be in the cache to allow our web applications to become even more",
			"scalable.",
			"So that then was a look at some issues concerning scalability.",
			"And we'll next turn our attention to security--",
			"trying to make sure that, as we build our web applications, as we deploy",
			"our web applications and more users start to use them,",
			"we want to make sure that they're secure.",
			"And there are a whole bunch of security considerations",
			"to take into account across all of the topics",
			"that we've looked at in the course.",
			"We've looked at a number of different topics.",
			"And with each of them, there are security vulnerabilities.",
			"There are ideas to be mindful of when it comes towards making sure",
			"that our applications are secure.",
			"And we can begin our story, in fact, by talking about Git and version control.",
			"Git is all about trying to make sure we're",
			"able to keep track of different versions of our code.",
			"And one thing that goes hand-in-hand with Git",
			"is this idea of open-source software.",
			"On websites like GitHub and other services that host Git repositories,",
			"increasingly, a lot of software is becoming open source",
			"where anyone can see and contribute to the source code of an application.",
			"And this is great in the sense that it allows for many people",
			"to be able to collaborate and work together",
			"in order to try to find bugs that might exist inside of a web application.",
			"But it also comes with drawbacks-- drawbacks",
			"where, if there is a bug in the application,",
			"now someone who's looking through the source code of our program",
			"might be able to spot that bug.",
			"Or you might imagine that, because Git keeps",
			"track of different versions of our code every time",
			"we make a commit to our repository, you have",
			"to be very careful when it comes towards credentials or things that",
			"might leak inside of the source code.",
			"You generally never want to put passwords or any secure information",
			"inside of the Git repository because the Git repository could",
			"be shared with other people and might be open to anyone to look at.",
			"And so those are security considerations to be mindful there as",
			"well-- that if you make a commit, and accidentally make a commit to your code",
			"where you expose those credentials, you might remove those credentials",
			"and commit again so the latest version of your program",
			"doesn't have those credentials in it.",
			"But someone who has access to the Git repository",
			"has access not just to the latest version of your code,",
			"but to every version of your code.",
			"And that person could, theoretically, go back",
			"through the history of the repository and find the commit",
			"where the credentials were exposed and see those credentials as well.",
			"So while Git is a very powerful tool, it's also one to be mindful of.",
			"Any change you make could potentially get saved inside of a commit--",
			"could potentially, therefore, be accessed later on.",
			"And so if ever credentials are exposed inside of the repository,",
			"you want to make sure to wipe out all of those previous commits",
			"and not just make some new commit in order",
			"to try and hide the previous credentials that can be exposed because they can",
			"still be retrieved if someone goes back through the history",
			"of any particular repository.",
			"And so that, then, was a look at some issues that might surround Git.",
			"We also talked at the beginning of the course",
			"about HTML, and about what it is that we can use with HTML,",
			"and how we can use this language in order to design the structure of a web",
			"page, in order to decide where all of the paragraphs are going to be,",
			"what tables are going to be on the page.",
			"We talked about links and how we can use anchor tags",
			"to link one page to another page.",
			"Now, one concern is this type of attack known as a phishing attack with HTML.",
			"And a phishing attack really just comes down",
			"to a little bit of HTML that looks like this-- very easy to write,",
			"where I have an anchor tag that is going to direct the user to URL one.",
			"But it looks like it directs the user to URL 2.",
			"So what might an example of this be?",
			"All right, so we'll take a look.",
			"I'll go ahead and open up link.html.",
			"And in link.html, I have a website that I've written",
			"that appears to have a link to Google.",
			"But if I click on that link, I'm suddenly",
			"directed to this course's website, for example.",
			"So how did that happen?",
			"Why did that happen?",
			"It seems like it's linking to Google.",
			"Well, if you look at the code, if I go ahead and open up link.html,",
			"we'll see that here I have an anchor tag that actually links to the course",
			"website but appears to be linking-- the text",
			"that the user sees appears that it is linking instead to Google.",
			"And so this is a very common attack vector, especially in emails,",
			"for example.",
			"You might see an email that tells you to click on a particular link.",
			"But that link takes you to somewhere else entirely instead.",
			"And as a result, someone might inadvertently",
			"share their bank account credentials or other sensitive information.",
			"And so here, too, something be mindful of as you interact with the web,",
			"maybe not necessarily on your own website, but in other websites",
			"that you might interact with, just to be mindful about where links are actually",
			"taking you.",
			"And most web browsers, if you hover over a link,",
			"will show you where that link might actually",
			"be directing you to because it might be different than what",
			"the text of that particular anchor tag might appear to link you to instead.",
			"So HTML has all these various different vulnerabilities",
			"where, because you can just decide what you want the structure of the page",
			"to be, it leaves open the possibility that someone",
			"might try to trick you into thinking that you were going to a page",
			"that you're not actually on.",
			"And this problem is more widespread because anyone",
			"can look at the HTML for any page.",
			"HTML comes back from the server.",
			"And therefore, the web browser has access to all of that HTML",
			"and can use that HTML in order to render a page, for example.",
			"And this leaves open other vulnerabilities, too.",
			"For example, let me go ahead and go to bankofamerica.com, just",
			"Bank of America's website.",
			"You can go to any other website instead.",
			"If I wanted to create a fake version of Bank of America's website,",
			"for example, to trick people into thinking",
			"they're going to Bank of America's website",
			"when really they're going to my website, well, then what I can do",
			"is just go ahead and view the source of this page.",
			"I go ahead and view page source.",
			"And here is all of the HTML for Bank of America's website.",
			"And nothing then stops me from copying all this content,",
			"going into an HTML file, and creating a new file that I'll just call bank.html.",
			"And I'll go ahead and paste in the contents of that HTML file,",
			"secure then all of Bank of America's HTML.",
			"And now, if I open up bank.html--",
			"that HTML file that I have now written, but really",
			"just copied from Bank of America--",
			"I open it up.",
			"And now here, on my page, is a web page that",
			"appears to look like Bank of America.",
			"It's using all of Bank of America's HTML.",
			"But instead, it is my HTML page and not, actually, Bank of America.",
			"And so you might imagine combining these to create an even more concerning",
			"attack vector where, instead of linking to google.com,",
			"let me try and link to bankofamerica.com.",
			"But where I'm actually going to link to is bank.html, my version",
			"of Bank of America's website.",
			"Now, if I open up link.html, here appears",
			"to be a link that links me to Bank of America.",
			"If I click on that link, I get to a page that",
			"looks like Bank of America's website.",
			"But it's not Bank of America's website.",
			"It's my bank.html file that I have written.",
			"It just so happens to look like Bank of America's website",
			"because I copied all of that underlying HTML.",
			"So HTML has the ability to describe the structure of our web page.",
			"But anytime you're writing this HTML, it's good to be mindful of the fact",
			"that anyone can copy your HTML, could theoretically pretend to be you.",
			"These are security vulnerabilities that are",
			"worth bearing in mind as we start to develop web applications",
			"and interacting with web applications as well.",
			"So ultimately, we used HTML in the context of designing web applications",
			"using Django, a framework.",
			"And how exactly, then, did these web frameworks",
			"work in terms of creating these web servers that are listening for requests",
			"and that are responding to those requests?",
			"Well, ultimately, much of the internet is",
			"based around this idea of a client communicating with a server or, more",
			"generally, any one computer communicating",
			"with another computer using HTTP and, in particular,",
			"HTTPS, a more secure version of the HTTP protocol.",
			"And so you imagine that what these protocols are really about",
			"is how information gets from one person to another",
			"and what we're storing with that information.",
			"We have one computer trying to communicate with some other computer.",
			"And in order to do so, information is generally",
			"going to flow through these routers.",
			"You might imagine information going back and forth",
			"between one computer and another computer,",
			"going through these intermediate routers along the way.",
			"And as a result, one thing to be cautious about",
			"is, how do you know that this information that's",
			"getting passed back and forth is getting passed back and forth securely?",
			"Ideally, when I send a message to another computer--",
			"I'm sending an email to someone else, I'm",
			"sending a message, I'm making a request to a website that",
			"might contain sensitive information, like my bank account, for example--",
			"I don't want it so that any intercepting router that is taking my request",
			"and passing it along--",
			"I don't want those routers to be able to look at that request",
			"and see the contents of my email or the contents of what password",
			"I happen to be sending across the web or not.",
			"Ideally, I'd like for this information to be encrypted.",
			"And so here, we'll talk a little bit about cryptography--",
			"this process of trying to make sure that I",
			"am able to communicate with some other person",
			"without some eavesdropper in the middle being able to intercept that message.",
			"Obviously, if I just take a plain text version",
			"of the message I'm trying to send and just literally take",
			"the text of the message I'm trying to send and effectively pass it along",
			"across the internet, well, then anyone who",
			"is able to see that message is going to know what the text of that message is.",
			"And so I want to do some kind of encryption,",
			"some way of encrypting that message so that someone along the way",
			"won't be able to do that decryption if a router in the middle",
			"or someone in the middle is able to intercept that message.",
			"And so the first approach we'll look at is what's",
			"known as secret-key cryptography.",
			"In secret-key cryptography, I have not just the plaintext, but some key,",
			"some secret piece of information that can be used in order to encrypt",
			"or decrypt information.",
			"And so I'll use both the key and the plaintext",
			"to generate what's known as the ciphertext, the encrypted version",
			"of the message I'm trying to send.",
			"And then, instead of sending the plaintext",
			"across the internet to the other person, I",
			"might instead want to just send the ciphertext across the internet",
			"to the other person so that I'm not sending the plain version",
			"of the message across the internet.",
			"So the ciphertext goes across.",
			"And the other person will also need the key.",
			"Now, if the other person has both the ciphertext and the key,",
			"well, then using that information, the other person",
			"can use the key to decrypt the ciphertext",
			"and obtain the original plaintext.",
			"And this key is what we might call a symmetric key encryption and decryption",
			"key.",
			"You use the key in order to encrypt messages.",
			"And you use the same key in order to do the decryption process.",
			"And as long as both I and the person I'm communicating with both have access",
			"to that key, well, then we'll be able to encrypt messages and decrypt messages.",
			"And someone who just has the ciphertext but not the key",
			"likely won't be able to figure out what that original message was.",
			"But there's a problem here, especially in the context of the internet.",
			"And that is that both I and the other person need to have access to this key.",
			"The key is what I use to do the encryption and the decryption.",
			"And I can't just send the key across the internet to the other person",
			"because, if I do that, well, then someone in the middle who's",
			"intercepting all of my requests could intercept",
			"both the ciphertext and the key.",
			"And therefore, they would be able to decrypt the message because they",
			"have both the ciphertext and the key.",
			"Now, if I were able to go to another person in person and exchange",
			"this secret key in secret, well, then this scheme",
			"might work, because we both have the key.",
			"And I didn't share the key publicly with anyone who might intercept the message.",
			"Only I and the other person had the key.",
			"But in general, when communicating on the internet,",
			"you're not communicating with servers you've",
			"necessarily communicated with before.",
			"I might be trying to make a request to a new website.",
			"And we somehow still need to agree on a system where I can encrypt messages",
			"but only the other person on the other side",
			"is able to decrypt those messages instead.",
			"So this kind of cryptography-- probably not great",
			"for trying to initially try and create a secure connection on the internet.",
			"And for that reason, a major advancement in cryptography",
			"that allows for the internet to work is this notion of public-key cryptography.",
			"In secret-key cryptography, it's important",
			"that the key is secret because, if the key were known by everyone, well,",
			"then anyone would be able to decrypt messages.",
			"In public-key cryptography, we're able to create a secure encryption",
			"system where the key is allowed to be public,",
			"or one of the keys, as we'll soon see.",
			"And the idea here is that we're using two keys instead of just one--",
			"that we have both a public key and what's known as a private key.",
			"The private key-- your private key is something",
			"you should not share with other people to keep the encryption scheme secure.",
			"But the public key is one that is OK to share with other people.",
			"And the distinction between the two is that the public key will be",
			"used in order to encrypt information.",
			"And the private key will be used to decrypt information",
			"that was encrypted by the public.",
			"And the public key and the private key are mathematically related.",
			"And there are a couple of ways that we might imagine doing that.",
			"But the idea now is that, if I want to communicate with another person,",
			"that person sends me their public key.",
			"And it's OK for the public key to travel across the internet.",
			"Anyone is allowed to see the public key because the public key is only",
			"used for encrypting that data.",
			"So I can then take the plaintext and the public key",
			"and use that to generate the ciphertext, the encrypted version of the message",
			"that I am trying to send across the internet.",
			"And then I send the ciphertext to the other person",
			"with whom I'm trying to communicate.",
			"And the other person now, using the ciphertext, then uses the private key--",
			"the private key that they did not share, and the private key",
			"that has the ability to decrypt information that",
			"was encrypted using the public key.",
			"So using a combination of the ciphertext and the private key,",
			"the person I'm communicating with can decrypt that information",
			"and get back whatever the original plaintext of that information",
			"happened to be.",
			"And so this, then, is how we can do a lot",
			"of this communication on the internet.",
			"By using this public-private key pair, we",
			"can say, use the public key to do the encrypting,",
			"use the private key to do the decrypting.",
			"And now two computers that have never interacted with each other",
			"before, without having the opportunity to meet,",
			"to exchange some secret information, can use a technique like this",
			"in order to securely communicate with each other--",
			"to send a message back and forth without anyone in the middle",
			"being able to intercept the message and identify what the message is about.",
			"And once you have this ability, the ability to communicate with another",
			"secretly, well, then you can imagine agreeing on some secret key",
			"and then using secret-key encryption to be able to encrypt and decrypt messages",
			"as well.",
			"And so that's an approach that you can also",
			"take when trying to communicate with other people across the internet.",
			"But this idea of encryption is what allows for HTTPS,",
			"the secure version of the HTTP protocol, to actually work to make sure that--",
			"when you are communicating with your bank's website, for example--",
			"that someone along the way won't be able to intercept that information",
			"and identify what it is that you're communicating about",
			"and, instead, only has the encrypted version",
			"of the information and a public key with which they can encrypt information,",
			"but not a private key that can ultimately",
			"be used in order to decrypt information as well.",
			"And so that then is how we might allow for this kind of secure communication",
			"on the internet and allow our web applications to be secure.",
			"But in addition to our web applications just listening for requests",
			"and then providing some sort of response,",
			"our web applications were also dealing with data.",
			"We introduced the idea of SQL data tables",
			"where we had tables of data with rows and columns",
			"that are representing information.",
			"And we've also created web applications in this course where",
			"we've had applications that have users.",
			"Users sign in with a user name and a password, for example.",
			"And so how might we represent that information",
			"about users and their passwords?",
			"Well, one way would be just stored inside of a table like this.",
			"Here's a table of users.",
			"Every user has an ID.",
			"They have a user name, and they have a password.",
			"But this turns out to be an incredibly insecure way",
			"to store passwords-- to be storing passwords",
			"in what might be called plaintext, just to literally store",
			"the passwords inside of a database.",
			"And we should never do this in practice because of the security vulnerabilities",
			"associated with it.",
			"If ever someone were to, unauthorized, get access to this database,",
			"they would be able to see all of the passwords for all of the users.",
			"So if this database ever leaked for whatever reason, suddenly",
			"all of these passwords are now known.",
			"And this kind of thing does happen.",
			"If companies are not careful about how they represent user names",
			"and passwords inside of their databases, and if ever there's",
			"some sort of database leak, suddenly a whole bunch of passwords",
			"could potentially be compromised.",
			"And it's for that reason that the recommended approach,",
			"rather than store an actual password, is to store",
			"a hashed version of the same password using a hash function where",
			"a hash function, in this context, is some function that",
			"takes a password of input and outputs some hash--",
			"some sequence of characters and numbers, in this case--",
			"that represents that particular password,",
			"a hashed version of the password.",
			"But the important thing about this hash function",
			"is that it's a one-way hash function.",
			"From the password, you can get to the sequence of letters and numbers.",
			"But it is very, very difficult to go the other way around",
			"to use this information to figure out what the original password actually",
			"was.",
			"And so what this means is that the companies won't actually",
			"know what any particular user's password is when a user tries to log in.",
			"What we'll do is take their password that they're trying to log in with.",
			"We'll hash it and compare that hash against the hash",
			"that we've stored in the database.",
			"If the hashes match up, that means the user probably typed in their password",
			"correctly and, therefore, we can sign the user in.",
			"And otherwise, that's a sign that the user did not",
			"type their password in correctly.",
			"So this, then, is the reason why companies--",
			"if they're obeying these best practices-- usually",
			"can't tell you what your password actually",
			"is if you forget your password.",
			"If you forget your password, the company will let you reset your password.",
			"They can update the data inside of the table.",
			"But the company won't be able to tell you",
			"what your password actually is because the company doesn't know your password.",
			"The company only knows some hashed version",
			"of the password, some result of passing that password through a hash function.",
			"And as a result, they're able to know whether you",
			"logged in successfully or not with the correct credentials",
			"without actually knowing what your password actually is.",
			"And so this is another area where you might",
			"imagine that, if you're not careful about how you're storing this data,",
			"it could be a security vulnerability inside of your program",
			"where, if ever that data is leaked, passwords suddenly become known.",
			"And there are other more subtle ways that web applications could potentially",
			"leak information that you, as the web developer,",
			"need to decide if you're OK with or not.",
			"Imagine a website, for example, where you do have a place where you can say,",
			"if you forgot your password, you can be sent",
			"to a place where you can reset your password, for example.",
			"You might imagine that, if you type in your email address, click Reset",
			"Password, you might get a message like, all right, password reset email",
			"has been sent.",
			"But you might imagine typing in an email address and getting something like,",
			"error, there is no user with that email address.",
			"And here, again, is a potential security vulnerability",
			"in terms of leaked information.",
			"This page that just seems to send you an email if you forgot your password is",
			"now leaking information about which users happened to have accounts",
			"on your website and which users do not because all someone needs to do",
			"is type in an email address and find out whether it results in an error or not",
			"in order to know whether a user happens to have an account on the website",
			"or not.",
			"And maybe that's not a big deal if that's not",
			"something you care about securing.",
			"But if it's a website where you do care about making sure",
			"that, if someone has an account or doesn't have an account,",
			"that information is kept private and secure only to the user,",
			"unless they want to share it, well, then this type",
			"of page, this type of interface with the database",
			"could potentially be leaking that kind of information.",
			"And information can be leaked in all sorts of different ways.",
			"You can even leak information just based on the time",
			"it takes for the database to be able to respond to a particular request.",
			"You might imagine, if you make a request about a user,",
			"and it takes longer to respond, that might tell you",
			"something about the number of database queries it needs to run",
			"or the amount of information that's stored about that user as opposed",
			"to if a request takes less time.",
			"So even something like how many milliseconds it takes for a web server",
			"to respond to a request can reveal or leak information",
			"about the data that is stored inside of the database.",
			"And there have been examples of researchers who actually try and see",
			"what information they can get just from looking at these kinds of information.",
			"It doesn't seem like it would leak information,",
			"but it might actually reveal information as well.",
			"Now, another concern when dealing with SQL and databases we've talked about",
			"is the context of SQL injection--",
			"this threat where, if you're not careful about how",
			"it is that you run your SQL code, you could inadvertently",
			"end up executing code that you don't mean to be executing.",
			"Situations like here-- we're in a username and password field.",
			"We've seen this example before--",
			"where, if a user tries to log in, you might imagine a query",
			"like this is run selecting from the user's table",
			"where user name equals whatever was typed in as the user name and password",
			"equals whatever was typed in as the password.",
			"And we saw how, for a normal user-- someone who types in, Harry and 1, 2,",
			"3, 4, 5 as their username and password--",
			"that this type of query works just fine.",
			"But if a hacker tries to log into a website",
			"and maybe includes a double quotation mark and two hyphens,",
			"for example, where two hyphens mean a comment in SQL,",
			"and we were to literally substitute these values into our SQL queries,",
			"well, then you might end up substituting hacker hyphen hyphen hyphen",
			"hyphen creating a comment that ignores the rest of this query,",
			"effectively ignoring any kind of password checking that we might",
			"want our web application to be doing.",
			"So this, too-- another vulnerability that",
			"comes about whenever we're dealing with executing",
			"SQL code inside of a database.",
			"And in order to deal with this, we want to make sure",
			"that we're escaping any of these potentially dangerous characters that",
			"might show up inside of our SQL queries.",
			"And Django's models do this for us.",
			"When we do these kinds of queries using Django saying, .objects, .filter,",
			"to be able to filter out for only certain versions of a particular model,",
			"it is going to take care of the process of making sure that it's not subject",
			"to these kinds of SQL injection attacks.",
			"But if ever you're writing a web application that is directly",
			"executing secret code, which you might imagine doing,",
			"you do want to be careful about making sure",
			"that you're not exposing the application to be",
			"vulnerable to these kinds of threats as well.",
			"So that then are potential threats that come",
			"about when we're just talking about what's happening on the server.",
			"But we also can think about what might happen",
			"when we're interacting with other servers--",
			"when we're interacting with APIs, for example.",
			"So we talked about JavaScript and using JavaScript",
			"to be able to make additional requests to APIs or to other services that",
			"are able to return back with certain types of information.",
			"And with APIs, there are a number of techniques",
			"that we can use in APIs to allow them to be more scalable, to allow",
			"them to be more secure.",
			"One is this notion of rate limiting where",
			"we might want to make sure that no user is",
			"able to make more than a certain number of requests to an API",
			"in any particular amount of time.",
			"This is in response to a security threat that",
			"has to do with the scalability of a system, which",
			"is known as a DOS or Denial of Service Attack where,",
			"effectively, if you just make a whole bunch of requests to a single server",
			"over, and over, and over again, you could potentially shut down that system",
			"because you're making so many requests that it's not",
			"able to handle that many requests all at the same time.",
			"And for that reason, because it's so easy to make an API request--",
			"you can do so using just a single line of Python or JavaScript, for example--",
			"APIs will often institute some kind of rate",
			"limiting to limit the number of requests you can make so that you're not",
			"going to overwhelm the server or overwhelm the database that",
			"needs to be queried in order to respond to those requests.",
			"And so this kind of limiting might work as well.",
			"APIs might also want to add some kind of route authentication.",
			"You might not want everybody to access the same data via an API.",
			"Maybe there's some sort of permission model",
			"where only certain users are able to access certain pieces of data",
			"from the API.",
			"So you might imagine that a user needs to have an API key, for example--",
			"effectively, a password that they need to pass around anytime",
			"they're making an API request to your API",
			"and that allows you to then be able to look at that key",
			"and verify that they are who they say they are.",
			"Now, with those API keys comes other potential security vulnerabilities",
			"to be mindful of.",
			"One is that, just as you should never be putting passwords inside of your source",
			"code-- inside of your Git repository, for example--",
			"you likewise generally shouldn't be putting your API keys",
			"inside of your web applications as well, inside of the source code of those web",
			"applications, because then anyone who has access",
			"to the source code for the web application",
			"can see what your API key is, could then use",
			"the API key to pretend to be you and, therefore, get access",
			"to potential API routes that they should not be able to access.",
			"One common solution to this is to use what are known as environment variables",
			"where, effectively, you in your program say that your API key is not",
			"going to be some predetermined string that is in the text of your program",
			"but instead is going to be drawn from the environment in which the program is",
			"being run.",
			"And then, on the server, when you're running the web application,",
			"you'll first make sure the server has all of those environment variables set",
			"correctly so that, rather than have the API key actually in the source",
			"code of the program, the API key is simply in the environment on the server",
			"where the web application is running.",
			"And the server can just draw that information from the environment",
			"so that it knows what the API key should be without the API key",
			"actually having to be inside of the web application source code itself.",
			"And so as we begin to deal with APIs, you",
			"might notice that many APIs will require you to have an API key.",
			"And often, it's for these sorts of reasons--",
			"to make sure that we're able to authenticate users effectively",
			"and also to make sure that we're able to limit users to make sure that they're",
			"not making too many requests to the server",
			"or to the database at any particular time.",
			"But this, then, starts to get us into other potential vulnerabilities--",
			"in particular, vulnerabilities concerning JavaScript.",
			"JavaScript, again, is a programming language",
			"that we use in order to write code that runs inside of our web browser--",
			"a browser like Chrome, or Safari, or something like that.",
			"And as a result, JavaScript has a lot of power to manipulate things on the page.",
			"It can simulate the clicking of buttons.",
			"It can change the content of what happens to be on any particular page.",
			"And as a result, there are many, many vulnerabilities",
			"that come about when it comes to thinking about JavaScript.",
			"And one such vulnerability is this notion of cross-site scripting--",
			"that, in general, when on your web application,",
			"you only want JavaScript to run if you, yourself have written it.",
			"Cross-site scripting is a potential threat",
			"where someone else might be able to get JavaScript code to run on your website",
			"when it's JavaScript code that someone else wrote instead of you, yourself.",
			"And this is a potential vulnerability because, if someone else can",
			"write the JavaScript code, they can manipulate the contents of what",
			"happens to be on your website.",
			"They can potentially manipulate the user experience",
			"to get a result that is not, actually, desired.",
			"So let's go ahead and take a look at one example of cross-site scripting.",
			"All right, so I've prepared a web application in advance--",
			"it's called security-- inside of which is a single Django app called XXS,",
			"for Cross-Site Scripting.",
			"And inside of here, we'll first take a look at the URLs.",
			"So there's a single URL that just allows us to provide any path.",
			"And then it's going to load the Index view.",
			"And on the Index view, we're going to display in HTTP response.",
			"It says, here was the path that just happened to be requested.",
			"So you might imagine this is a simplified version of what",
			"you might see on other websites, for example, where websites might show you",
			"on any particular page what path you're on in order to get to that page,",
			"some indication of where you are inside of this web application.",
			"So I'd go ahead and see the security and run the server--",
			"Python manage.py, run server.",
			"So I am now running the server.",
			"And now I'll go ahead and go into my web application, /hello, for example.",
			"And so what I see here is the requested path hello,",
			"which is what I would expect it to be.",
			"I can change it to something else, like hi.",
			"So here's requested path hi.",
			"Here's hi/2, for example.",
			"Whatever page I visit, it gives me a page",
			"that says, requested path, and then whatever",
			"path I happened to be visiting.",
			"But watch what happens if I try and visit this URL instead.",
			"I'm going to visit URL /script alert hi, and then end script.",
			"So I run it.",
			"And suddenly, an alert shows up on my page that says, hi.",
			"And I press OK.",
			"And it says, all right, requested path.",
			"That alert was a JavaScript alert.",
			"It was JavaScript code running on my web application.",
			"But it was not code that was JavaScript code inside of my web application.",
			"It was someone else who wrote based on the URL",
			"to run particular JavaScript on my particular page.",
			"And so someone linked to my web application",
			"and passed in this script tag as part of the URL.",
			"Someone who clicked on that link might have been taken to my web application",
			"but ultimately had JavaScript run that was created by someone else.",
			"And that, ultimately, is potentially dangerous.",
			"It leaves open the possibility that someone else",
			"could run JavaScript code on my page.",
			"And it might not just be something like a script.",
			"You might imagine someone not just displaying an alert,",
			"but modifying something inside of the DOM-- changing the contents of the web",
			"page, making API requests, doing other types of tasks",
			"that you can do using JavaScript inside of a web browser",
			"that, ultimately, leave my page open to potential security vulnerabilities.",
			"And so these are cases where it's important to be mindful of when you're",
			"designing these pages, if ever there is a possibility that someone could inject",
			"their own JavaScript into your page somehow,",
			"you'll want to either detect that or escape it in some way.",
			"Or take other precautions to make sure that this kind of cross-site scripting",
			"isn't going to be possible.",
			"You might imagine that, in a messaging application-- for example,",
			"if you're messaging back and forth--",
			"you don't want it to be the case that, if you message someone",
			"else some JavaScript code that, when they receive it,",
			"that code actually ends up running as some JavaScript that",
			"runs on that particular page.",
			"You want to be sure to escape that information so",
			"that they just see the text of the JavaScript code",
			"but that the code isn't actually executed.",
			"And this is a similar threat to that threat of SQL injection.",
			"It all comes back to the idea of not wanting",
			"to allow someone else to be able to inject",
			"their own code into your program.",
			"You don't want someone else to be able to inject SQL code into the queries you",
			"run on your database.",
			"And you don't want someone to be able to inject JavaScript code into your web",
			"page because that leaves open potential security vulnerabilities as well.",
			"One type of security vulnerability that Django",
			"is quite good at defending against is one that we've seen before,",
			"but we'll explore in more detail how it might work.",
			"And it's this idea of cross-site request forgery where",
			"you fake a request to a website when you didn't intend to actually make",
			"a request to that website.",
			"So you might imagine that, if your bank, for example,",
			"had a URL that allowed you to transfer money",
			"from one person to another person-- we've",
			"talked about this idea a little bit.",
			"But imagine now how you could implement this if it really was just a URL.",
			"You could go to /transfer and say, as get parameters,",
			"who am I transferring money to?",
			"And what is the amount that I'm transferring?",
			"Then someone else on some other website could, in the body of their page,",
			"just have a link where that link says, click here.",
			"And it links to your bank.com, or whatever",
			"your bank is, transferring money to me in this amount.",
			"And if some user unknowingly just clicked on that link not knowing",
			"where it would take them, this website might",
			"be able to forge a request to the bank-- make",
			"it seem like the user had gone to the bank",
			"and tried to initiate some kind of transfer",
			"and, ultimately, tried to transfer money.",
			"And it doesn't even necessarily need to be in a link.",
			"How else might you get some new request to happen inside of the web browser?",
			"You might imagine-- though it might seem a bit strange--",
			"to put this inside of an image.",
			"Image source, the source of the image, is this particular URL--",
			"the bank's transfer page.",
			"Now, that doesn't really make any sense.",
			"The transfer page is not an image.",
			"But it doesn't matter.",
			"All an image tag is going to do is try to make a request to this source URL",
			"to get that image and then try to display it in the user's web browser.",
			"But the first part is what's important-- the fact that this source ends up",
			"being requested by the web browser.",
			"Without the user having to click on or do anything,",
			"they might try and request from your bank.com/transfer this particular",
			"request, which might initiate some sort of bank transfer without the user even",
			"realizing it.",
			"And it's for that reason that we generally suggest that,",
			"anytime you're creating a website that is going to allow for the manipulation",
			"of some kind of state-- that allows for some change to happen,",
			"something like transferring money--",
			"you don't want that to be a Git request, something that you could just",
			"load in an image or load by clicking on a link that takes you to another page.",
			"You don't want that to happen because then it",
			"makes it very easy for someone else to fake a request to your page",
			"by just creating an image or linking to, somehow, a website,",
			"transferring funds from one user to another.",
			"So a solution to this-- and we've talked about it--",
			"is that, generally, we only want post requests",
			"to be able to manipulate something inside of the database,",
			"to be able to actually initiate a transfer from one user to another user.",
			"But even then, this is not perfectly secure.",
			"You could still be tricked into submitting a post request.",
			"Imagine an adversarial website that had a form like this--",
			"a form whose action was your bank.com/transfer and whose method was",
			"post.",
			"And now here-- two input fields whose type is hidden, meaning you",
			"won't actually be able to see those input fields when",
			"the user is looking at the page.",
			"They'd only know about it if they inspected the source",
			"code of this particular HTML page.",
			"Here, there's a hidden input whose name is to,",
			"meaning the person I'd like to transfer money to.",
			"Here is the amount, the value that I would like to transfer.",
			"And all the user is going to see is a button that says, click here.",
			"They're not going to see either of the input fields, because they're hidden.",
			"But if they do click the Click Here button, well, then",
			"suddenly they're going to be submitting a post request to the bank",
			"and initiating some transfer when they didn't intend to.",
			"Now, maybe this seems like, oh, it's not a big deal, because the user still",
			"needs to click a button.",
			"And the user shouldn't be clicking on a button",
			"if they don't know what the button is going to do.",
			"Well, for one, it's probably reasonable to imagine that an adversary might",
			"embed this button inside of a page where it looks totally",
			"safe to be able to click on a button.",
			"But moreover, the user doesn't even need to click on it in order",
			"to submit the form.",
			"We can just add a little bit of JavaScript.",
			"You might imagine that an adversary could do something like this.",
			"Add an unknown attribute to the body that says,",
			"when the body of the page is done loading, go to document.form--",
			"meaning all of the forms for this web page.",
			"Get the first one, and submit it.",
			"Submit the form.",
			"And what that's going to do is, even without the user doing anything--",
			"even without the user clicking on the Click Here button--",
			"as soon as this page is loaded, this form is going to submit,",
			"submitting a post request to the bank, and attempting to transfer funds",
			"from one user to another user.",
			"And so this is what we might call a cross-site request",
			"forgery where some adversarial website has forged a request to our website.",
			"And ideally, we wouldn't like for that to be able to happen.",
			"So how do we guard against this?",
			"Well, what Django allows us to do and a very common approach is to add a CSRF",
			"token-- a Cross-Site Request Forgery token--",
			"that is going to be regenerated for every session",
			"such that, only if that token is present,",
			"will the transfer be able to go through.",
			"So on our website, we can include the CSRF token inside of this HTML form",
			"and, as a result, make sure that we're able to transfer money only",
			"when the CSRF token is present.",
			"But if some other website tries to forge a request,",
			"they won't know what the CSRF token should be",
			"because it changes for every session.",
			"And therefore, they won't be able to actually forge a request from one user",
			"to another.",
			"So all across the various different tools and technologies",
			"we've been using--",
			"Python, HTTP, Django, HTML in terms of creating these web",
			"applications using JavaScript, and the APIs",
			"that we might be interacting with--",
			"there are security considerations all throughout.",
			"We've only touched on a couple of them here.",
			"But it just goes to show how it's important to be mindful as you think",
			"about the practice of web programming, thinking about what you're going to add",
			"to your web applications and what features your web application supports,",
			"to think about what the potential vulnerabilities there are as well--",
			"how someone might exploit your web application in order to do something",
			"with it that they probably shouldn't.",
			"And as you take your web applications from applications",
			"that are just running on your own local computer",
			"to applications that are running in some web server",
			"that many people are starting to use, these",
			"are the types of questions to start to be asking.",
			"How can you make sure that your web application is scalable?",
			"How can you make sure that your web application is secure?",
			"So now that we've explored that-- a lot of web programming-- what comes next?",
			"In this course, we've explored a number of different tools,",
			"and technologies, and languages.",
			"But there are many other web frameworks and ways",
			"you can build web applications as well.",
			"We spent most of our time looking at the Django web",
			"framework, written in Python.",
			"But you can use other programming languages",
			"to build web applications as well.",
			"Express.js, for example, is a very popular JavaScript framework",
			"for building web applications.",
			"Ruby on Rails is a popular server-side web framework built using Ruby.",
			"And there are many others as well.",
			"And there are also client-side frameworks",
			"used primarily with JavaScript to be able to build user interfaces.",
			"We've seen a little bit of React to both dynamic and interactive user",
			"interfaces.",
			"Other popular client-side frameworks include Angular JS, and Vue.js,",
			"and a number of others as well.",
			"And then, once you've built these web applications--",
			"using any of these server-side frameworks and client-side frameworks--",
			"then you might imagine wanting to take these applications",
			"and deploy them to the web.",
			"And to do that, there are a number of ways we can do this",
			"as well-- a number of different services including Amazon Web Services, AWS,",
			"Google Cloud, and Microsoft Azure that can be used in order to deploy",
			"these web applications.",
			"Roku is a service that uses AWS and tries",
			"to simplify the process of making it easier to deploy your web applications.",
			"And if you're web application is really just static-- it's just HTML,",
			"and CSS, and JavaScript-- well, then you can use something like GitHub Pages",
			"to be able to host a web application for free on GitHub's own servers instead.",
			"And there are many other ways you can imagine deploying web applications as",
			"well-- different services that you can use in order",
			"to take the web applications that you have been building or web",
			"applications you might build in the future",
			"and make them available on the internet for others to be able to use as well.",
			"So as we look back on the various topics within web programming we've explored,",
			"we've seen a lot of tools and technologies",
			"we can use that we can leverage in order to build interesting web applications.",
			"We started by taking a closer look HTML and CSS,",
			"diving into how we can use that to describe the structure of our page,",
			"and then taking advantage of tools like SAS",
			"that allow us to generate CSS that allows for much more",
			"complex styling for our website that would have been much more",
			"difficult to do with just CSS alone.",
			"As we started to build larger web applications, we took a look at Git--",
			"version control tools that we can use in order",
			"to make sure that we keep track of versions and changes we",
			"make to our code, allowing multiple people to collaborate on a project",
			"simultaneously.",
			"We then took a look at Python, looking at various different features",
			"that the language offered-- functions, and conditions, and loops,",
			"as we've seen in many other programming languages.",
			"But also object-oriented programming-- the ability",
			"to represent objects, and methods, and functions",
			"that operate on those particular objects, which",
			"prove especially powerful in the context of dealing with data inside of our web",
			"applications.",
			"Django was the example of a web framework written in Python",
			"that we used to very quickly be able to start up",
			"a web application, that's able to listen for requests, and make responses.",
			"Django has a whole lot of features built in that",
			"really make it easy to get started with building a web application.",
			"And in particular, it makes it easy for writing",
			"web applications that deal with data.",
			"So Django allows us the ability to build models",
			"that interact with SQL without us having to actually write any SQL code.",
			"Django can generate the SQL for us just using these models and migrations that",
			"allow us to continually apply changes that we make to our database.",
			"As we add new tables, add and modify existing fields on those tables,",
			"Django can take care of all of that.",
			"After that, as you'll recall, we took our attention",
			"towards the second of the main programming languages",
			"in the course, JavaScript, which has a lot of uses and is very, very popular.",
			"But we primarily use it on the client side",
			"to be able to build interesting user interfaces-- using JavaScript",
			"to manipulate the DOM, the structure of the page,",
			"to change what it is the user sees.",
			"And also to add event handling-- so that when",
			"the user clicks on a button, when the user hovers over something, when",
			"the user interacts with the page in some sort of way,",
			"our code is able to respond to it.",
			"And we saw React, a client-side framework that uses JavaScript in order",
			"to allow us to create really interesting and interactive user interfaces",
			"with not all that much code at all.",
			"And then, finally, in these last couple of lectures,",
			"we've been looking at some best practices-- how we can design tests,",
			"tests the test the server, but also the client",
			"to make sure that our code is working appropriately,",
			"and also some industry practices like continuous integration",
			"and continuous delivery that just help to make sure",
			"that, as we make changes to our code, we're able to deploy and deliver them",
			"rapidly and effectively and make sure that we're",
			"able to make incremental changes to our code base",
			"rather than need to wait on longer release cycles.",
			"And then finally, today, we've been talking",
			"about issues about scalability and security, especially important",
			"as we begin to take our application and move them to the web.",
			"We want to make sure that these applications are scalable,",
			"that they're able to handle multiple different users,",
			"and also to make sure that they're secure--",
			"that we're not exposing ourselves to potential vulnerabilities like someone",
			"who might inject SQL or inject JavaScript code into our pages",
			"or who might try to access some data that they're not supposed to access.",
			"We want to make sure that, when we go about designing these web applications,",
			"we're able to do so in a scalable and, ultimately, in a secure way.",
			"So hopefully, you enjoyed this exploration",
			"into the world of web programming with Python and JavaScript.",
			"Best of luck with the web programs that you,",
			"yourself might build with the tools we've seen here today,",
			"and also other tools that are inspired by our use similar tools",
			"and techniques and ideas as the things that we've ultimately",
			"talked about here.",
			"A big thanks to the course's teaching staff and the production team",
			"for making this entire class possible.",
			"I look forward to seeing the web applications",
			"that you might go on to create.",
			"This was Web Programming with Python and JavaScript."
		],
		"is_youtube": false
	}
}
