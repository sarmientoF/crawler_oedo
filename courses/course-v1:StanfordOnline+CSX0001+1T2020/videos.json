{
	"video_001": {
		"section": "Week 1",
		"subsection": "Introduction",
		"unit": "Stanford CS101 Introduction",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/code+1a+bighead.mp4"
		],
		"video_duration": 436,
		"speech_period": [
			0.95, 3.46, 4.73, 1.86, 2.07, 1.93, 2.29, 2.16, 2.32, 2.599, 2.125, 3.3,
			2.57, 1.36, 1.299, 4.09, 2.76, 2.07, 4.15, 3.422, 3.848, 2.793, 4.037,
			1.88, 1.78, 2.33, 2.419, 6.9, 2.72, 4.23, 6.515, 3.73, 1.72, 4.77, 1.49,
			5.4, 3.43, 3.28, 1.07, 2.96, 1.35, 3.237, 3.653, 4.6, 2.12, 3.83, 1.129,
			2.451, 3.44, 2.66, 2.92, 2.08, 0.93, 1.57, 2.74, 3.67, 2.45, 2.94, 4.19,
			2.88, 3.431, 2.939, 1.9, 4.57, 1.319, 2.1, 2.33, 2.33, 4.36, 2.0, 2.649,
			2.11, 1.389, 1.44, 2.405, 1.6, 2.19, 2.98, 6.79, 4.56, 1.4, 1.59, 1.141,
			2.27, 3.159, 2.54, 2.8, 1.82, 2.01, 3.32, 1.55, 2.45, 0.53, 1.47, 2.189,
			2.61, 5.01, 1.83, 2.257, 2.196, 1.769, 3.622, 2.969, 4.967, 4.068, 0.54,
			1.71, 1.54, 2.85, 3.87, 5.26, 5.57, 1.87, 2.169, 4.184, 3.666, 2.65, 2.04,
			3.3, 1.959, 3.29, 0.13, 2.9, 2.84, 2.77, 2.38, 2.12, 1.309, 2.698, 2.688,
			3.72, 3.955, 4.257, 1.28, 3.21, 1.94, 2.655, 1.615, 2.65, 1.12, 2.62,
			1.896, 3.129, 1.095, 6.84, 2.74
		],
		"transcript_en": [
			"Hi.",
			"I'm Nick Parlante at Stanford University and this is CS101.",
			"CS101 is about the basic features of how computers work.",
			"And I don't want you to think about the",
			"computer as some sort of magic box that you",
			"kind of, you know, interact with everyday but you're a",
			"little iffy about, yeah what's going on in there.",
			"Because really, the basics of how",
			"computers work are understandable by anyone.",
			"so, in CS101, we're going to really look inside the",
			"computer and, and get a feel for how it works.",
			"And indeed, play a little bit with how computers work.",
			"And ultimately, I would like you to then understand",
			"what computers can do and what they can't do.",
			"How they, how they fit into the world.",
			"I just say that, no computer background at all is require for this course.",
			"This just assumes nothing beyond the ability to use",
			"a browser and we're just going to, like, work through it.",
			"so, if you're curious about computers, you know, this is",
			"a good next stop, this is the right class room.",
			"Just a, a brief format note for every video segment like",
			"this, there's actually a companion doc,",
			"written document with diagrams and explanations.",
			"And that's always going to be available for review, even you could",
			"pause in the middle of the video and look at it",
			"or maybe later if you were curious about something you could",
			"always go look at that as another way of getting the information.",
			"So, I'm going to say that the, the fundamental equation of computers that has",
			"sort of their essence is, that computers",
			"are both extremely powerful and profoundly stupid.",
			"They're powerful in that, a computer can do billions of operations per second.",
			"It can just rip through data at just an inconceivable speed.",
			"That's the powerful part.",
			"But, the computer is very stupid in that, the operations that it can do so quickly.",
			"Are really very simple.",
			"So, maybe add two numbers to get a third number, or check if a number is zero.",
			"So not only are those operations simple, but they're nothing",
			"like what you would describe as, as insight or understanding, right?",
			"Just add two numbers.",
			"Insight and understanding are really human qualities.",
			"And I want to highlight how the computer",
			"world is really this mechanical world, and then",
			"we'll, we'll connect how it is that you can make useful features out of that.",
			"As was mentioned in movies computers are, they are never shown as mechanical, right?",
			"It's always essentially a human character that",
			"has emotions and gets mad or, or whatever.",
			"And here I have a link to the",
			"the famous HAL 9000 video segment that represents that.",
			"So we've got this funny combination, powerful and stupid.",
			"And I gotta say it will come through very clearly in",
			"later sections when we start playing with computer code a little bit.",
			"You will get a vivid sense for that combination.",
			"But",
			"just for today,",
			"well if the computer is so stupid, you know, how is",
			"it that so many useful features can be implemented up with computers?",
			"And in a way that's what CSI 101 is about.",
			"I want to visit the computer world and get a feel",
			"for this kind of powerful, mechanical world of the computer.",
			"And then connect that to useful features that we use",
			"every day and sort of understand what puts all that together.",
			"Ultimately you know, the goal for this class",
			"is that you understand how computers work, and in",
			"particular you're not intimidated that you understand how",
			"they, how they work and what they can do.",
			"Also I'll mention in here, I'll highlight my hidden agenda.",
			"Hidden agenda is that for some people",
			"taking this class, after we play around inside",
			"the world of the computer, some people may feel like, wow, that was pretty awesome.",
			"I really like computers and so my hope is that",
			"those people would consider taking more classes in computer science.",
			"Certainly in the Computer Science department,",
			"it is thought that there are just",
			"not enough people in the world who",
			"are really comfortable doing things with computers.",
			"There are problems we would like solved with computers,",
			"and there's just not enough people to do it all.",
			"So, I'm always happy to get more people into the club.",
			"So, at a high level the operation of a computer is really driven by code.",
			"And, for today, I'll just describe code as being made up as a series of instructions.",
			"So, as I mentioned before, maybe add",
			"two numbers or something really simple like that.",
			"So here, I have my little drawings.",
			"So, inside the computer, we've got some body of code and they're just",
			"a series of instructions or add these two numbers and then compare this, whatever.",
			"So what the computer does, really is it just has",
			"a series of instructions and it just does them in order.",
			"It does this one, and does this one, and does the",
			"third one, the fourth one, so on, just rips through them.",
			"When, when you hear the word \"run\" used with computers, that's what it means.",
			"There's a series of instructions in there, and",
			"it just rips through them, it just does them.",
			"Man.",
			"So yeah, it does them very quickly,",
			"but the individual instructions are quite simple.",
			"So I think this leads to a natural question.",
			"You're like, well, if these instructions are so simple, how",
			"is it that we can have like a useful feature?",
			"So here I'm going to use red-eye reduction as",
			"an example of like, oh that's a useful feature",
			"a computer can do or like you know,",
			"email or MP3 audio or, gee, you know, anything.",
			"So, what, what connects these two sides?",
			"And the answer is that's what computer programmers do.",
			"So, a computer programmer maybe has an idea of like oh, yeah, red eye reduction.",
			"That's a great idea.",
			"We should have red eye reduction.",
			"And that's an insight.",
			"And then the computer programmer thinks of like, well, how could we do that?",
			"Well we would look for the red color and maybe it's in a round shape or whatever.",
			"So think through how to do it. And then eventually ultimately",
			"the computer programmer has to break that algorithm down into simple instructions.",
			"In a way, sort of dumbing it down into instructions",
			"that are so simple that the computer can do it.",
			"And so whenever you've used email or you",
			"know SMS or some useful feature on the computer,",
			"it's because there was a comp, a person that",
			"had the insight like oh, we should do that.",
			"And the person structured it, sort of broke it down",
			"for the computer, so that the computer could do it.",
			"And in a way CS101 is going to, is going to look at this picture.",
			"Right?",
			"We're going to examine the left, we're going to look at what code",
			"looks like and what it's limitations are and what it can do.",
			"And then I'm going to want to formulate little computer programs",
			"that we can play with and that you can write",
			"to try and, you know, see both sides and sort",
			"of get a feel for how the whole picture works.",
			"I'm going to say that, I, I like this picture.",
			"I feel like this is, it's like a, it's a, it's",
			"a nice combination in that each side brings what it's good at.",
			"The computer programmer can concentrate on being creative and having",
			"insight and putting together you know, solving a real problem.",
			"And then what is the computer good at?",
			"Well, the computer is good at being inexpensive.",
			"Right? With Moore's law, which we'll study in",
			"a little bit, computers are just gradually getting cheaper.",
			"They can be more widespread, and the computer can",
			"be inexpensive, and just rip through its instructions very quickly.",
			"And so, that's great.",
			"Ultimately, that means we get, you know, solutions",
			"to many many problems, and they can be widespread.",
			"That's fantastic.",
			"So.",
			"In the, in the next section what I want to do is look a little more closely at code.",
			"And get to a point where you can start playing with code."
		],
		"is_youtube": false
	},
	"video_002": {
		"section": "Week 1",
		"subsection": "Code Writing",
		"unit": "Code Writing",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/code+1b+bighead.mp4"
		],
		"video_duration": 581,
		"speech_period": [
			1.8, 3.41, 2.16, 1.94, 2.67, 1.56, 2.38, 2.85, 2.39, 3.05, 1.83, 4.37,
			1.76, 2.24, 2.6, 1.55, 2.75, 4.0, 3.12, 4.08, 4.49, 2.21, 1.609, 2.481,
			3.63, 3.66, 1.93, 2.96, 5.06, 3.389, 1.9, 3.83, 3.49, 3.79, 3.67, 3.85,
			4.72, 2.84, 1.15, 4.35, 5.209, 3.36, 2.15, 5.96, 2.53, 4.91, 2.68, 3.55,
			7.08, 2.87, 2.02, 1.372, 3.748, 2.17, 2.3, 2.93, 1.56, 2.85, 2.2, 4.45,
			4.63, 2.03, 2.48, 4.22, 2.91, 2.08, 2.72, 1.77, 3.8, 2.0, 1.96, 4.87,
			2.039, 3.51, 3.01, 1.6, 1.45, 3.55, 1.75, 2.44, 4.68, 3.77, 4.87, 2.4,
			5.48, 2.81, 2.27, 2.65, 3.28, 1.71, 4.29, 2.08, 3.38, 2.78, 2.54, 1.66,
			1.57, 3.77, 1.89, 3.46, 3.56, 4.05, 3.15, 1.33, 3.5, 1.71, 2.25, 1.47,
			2.81, 3.02, 1.23, 1.62, 2.04, 3.07, 4.96, 3.54, 4.13, 3.27, 3.38, 5.41,
			3.18, 1.788, 2.872, 1.61, 2.65, 3.6, 0.98, 2.34, 2.68, 3.38, 1.724, 3.596,
			1.62, 2.77, 3.29, 3.79, 4.61, 2.46, 3.09, 2.54, 1.91, 1.72, 2.91, 3.62,
			1.81, 3.26, 3.84, 2.12, 2.65, 2.65, 0.8, 2.29, 2.51, 1.51, 1.86, 2.57,
			1.19, 2.27, 2.8, 2.44, 1.7, 3.23, 1.97, 1.61, 2.19, 1.79, 1.29, 2.81,
			0.81, 3.02, 2.09, 2.31, 2.529, 3.231, 1.62, 1.798, 1.22, 0.98, 1.43, 3.06,
			4.96, 1.736, 0.954, 1.21, 0.69, 1.08, 2.36, 2.36, 4.356, 3.184, 3.47,
			1.96, 4.169, 4.82, 3.48, 2.26, 2.81
		],
		"transcript_en": [
			"In this section, I want to get to the point where you",
			"can write some code, and run it, and see what it does.",
			"Everything in the computer really comes down",
			"to code running, that's how stuff happens.",
			"And so, in order to understand the nature of computers, well, you",
			"have to run code a little bit and see how it works.",
			"Not like a million lines of code, just a little bit of code.",
			"That's how we're going to do it in CS101.",
			"Now, before I get to the code, I'm going to have",
			"to, have to ask for a little bit of patience.",
			"The code elements that I'm going to show you",
			"here are just, they're not flashy, they're very simple.",
			"It's maybe a little sort of like Lego bricks.",
			"I have to show you a couple basic",
			"bricks that individually don't really do anything, but",
			"later we're going to be able to put",
			"them together and do stuff that's just fantastic.",
			"Just by way of foreshadowing: within a few hours,",
			"you'll be able to write code that manipulates images.",
			"Such as for example here we have the monkey, moon and banana.",
			"So there's something to look forward to, but for today it's just very simple.",
			"Javascript is a computer language.",
			"There's a lot of different computer languages you",
			"can use to tell the computer what to do.",
			"Javascript is the one we're going to use in CS 101 or it's actually JavaScript",
			"plus a little bit of extra stuff that I put in just for CS 101.",
			"CS 101 does not cover the entire JavaScript",
			"language, this is not a full professional programming class.",
			"Instead I've picked out just a few features just the minimum that we need",
			"in order to play with the key ideas to really understand how computers work.",
			"All right, so here's our first example.",
			"So, this rectangle has code in it, you can type in here.",
			"And when I click the run button what the computer does is it just runs",
			"it, it does that, does that and just goes through them, and does whatever I say.",
			"In this case, the first thing we're going to see is the print function, and",
			"that tells the computer to print something over here to, on the right hand side.",
			"So it has the word print and then its followed by a left parenthesis and then",
			"after the parenthesis, we just type out whatever",
			"it is, we want the computer to print.",
			"So in this case, we just see a six and so over here, on the right, it prints a six.",
			"If I were to change that to a 123 and then run it sure enough we get a 123 over here.",
			"You can have multiple things in within the",
			"parentheses here, so I can they're separated by commas.",
			"So if I said ,2,12 and I run it, and we'll get those things.",
			"So you can see there's also a print one, two down here showing that.",
			"So this is, this is very kind of limited, but that's our first thing, print.",
			"And it also gives you a little example of just the interaction",
			"between code and a run button that causes the computer to do it.",
			"Now, the syntax that you see here, is very limited.",
			"It's not like you can just write out some sentence free form.",
			"The computer will just figure out what you mean.",
			"It's really quite the opposite.",
			"There's a small number of words that the computer",
			"understands here and you have to use one of those.",
			"And then also the other bits of syntax like the fact",
			"that there's a left parenthesis here and a right parenthesis there.",
			"All those things are required.",
			"And the have to, everything has to be written out just,",
			"just so for the computer to be able to understand it.",
			"That is not just a gratuitous limitation of the code.",
			"Instead the code is limited sort of as a reflection of the inner sort",
			"of mechanical, sort of stupidity of the",
			"computer that I was talkin' about last time.",
			"So it is not an accident that the code, in order for the computer to",
			"be able to understand it, has to be in this sort of mechanical, strict form.",
			"The good news is that because it's kind of simple, it's not",
			"very hard for us to use, it's just a little bit foreign.",
			"But I like to think of that as sort of oh well that's",
			"giving us a little insight about the mechanical, simple nature of the computer.",
			"Anyway, the good news is you can, you can get used to it.",
			"It looks weird but really it's pretty simple.",
			"All right, so let me introduce a second bit of code here.",
			"Oh, before they do that I have a reminder to myself here.",
			"So, as I mentioned before, each video comes with this document so",
			"you could pause the video right now and go visit the document.",
			"And in the document, all these things with the",
			"run button and the code you can just try",
			"yourself, or of course maybe later after a lecture",
			"you could go and try do it as review.",
			"All right, so here's our second bit of code.",
			"So I'll run this, so it says \"6, hi\".",
			"And that \"hi\" in between double quotes, that's a string.",
			"So, in computer code, a string is a, just a series of letters.",
			"And in the code it's written in between double quotes.",
			"So there's the word hi, or I could change it to, woo hoo within double quotes.",
			"When I run it, it's going to print the woo hoo over here.",
			"So, you can imagine strings, strings and numbers, are",
			"the two very common data types in computer code.",
			"You can imagine a string is used, maybe to hold",
			"a URL or a paragraph, if you are typing something.",
			"All that sort of text manipulation, is stored as strings in a computer.",
			"That's just a second data type that we're going to be",
			"able to use to tell the computer how to do stuff.",
			"Another thing that we see here is a comment.",
			"So, a comment begins with two slashes like that",
			"and it just runs to the end of the line.",
			"And in the comment, you can just sort of write notes to",
			"yourself, what you intended or what's going on and the computer, when",
			"we click the run button, the computer just knows to ignore the",
			"comment so it's just a way of decorating the code with little remarks.",
			"All right, so I can put different things in here.",
			"If I say hello or whatever, whatever I put in there,",
			"it's just a string so that it can get printed out.",
			"One sort of funny example I could do here is",
			"what if I put the word print in there, since",
			"that is also the name of the function over here,",
			"so we can see what that does, just try it.",
			"Click the run button.",
			"It just puts, it just prints print there.",
			"So when letters that I type are include, are enclosed by",
			"double quotes like this, the computer",
			"understands that they're just passive data.",
			"And it just handles them the regular way.",
			"It doesn't get confused by what word I put in there.",
			"So, a key message here about syntax.",
			"I talked about syntax a little bit before about how it's mechanical.",
			"But there's a pattern with when you write code that",
			"involves the syntax and that is when you just write in",
			"code, oh print this or whatever, it's very common even for",
			"very professional programmers it's very common to have little syntax errors.",
			"And so, when the professional programmer hits the run button,",
			"it's very common, oh there'll be a couple syntax errors.",
			"And the program is just going to go in and fix those.",
			"Very quickly, and think nothing of it.",
			"It's just a quick, superficial, little process.",
			"The reason I'm mentioning this, is when someone is just beginning with code,",
			"of course, they're going to run into",
			"syntax errors 'cause that's the common thing.",
			"I think they can get the mistaken impression that the",
			"syntax error means oh, wow, I really don't understand this.",
			"I, you know, no one else has this trouble.",
			"And that couldn't be farther from the truth, everyone has syntax errors.",
			"It's just something you fix very quickly.",
			"So, to promote this idea that the syntax error is just no big deal,",
			"and I want to show you how to fix it, I've prepared some examples here.",
			"Just a bunch of code examples all of which have syntax errors.",
			"And I just want to sort of work through the process of identify and fixing them.",
			"So each one of these blocks of code is",
			"supposed to produce this little a, b, b, c, c,",
			"c printout and each one of these has an error",
			"and I just want to go through you know, fixing them.",
			"All right so let's try clicking this try this first one.",
			"Let's see so we're getting this error message.",
			"Sometimes the error messages are helpful, and sometimes, they're just confused.",
			"So, but you should at least read the error message.",
			"So it says, \"Error: prlnt is not defined.\"",
			"Not defined means it's a word but that the computer doesn't know that word.",
			"So if I look carefully, you'll see here, that",
			"second one, instead of saying \"print,\" it says prlnt.",
			"And I chose the l, 'cause it, it looked kind of like an i.",
			"I was trying to be tricky.",
			"key there, so I'll put the cursor there, I'll",
			"just change that to an I, and now I run.",
			"Okay, it works.",
			"And let's go [UNKNOWN].",
			"Error unterminated string literal.",
			"Not the most friendly phrasing.",
			"So it has the word string in there, that's a tipoff.",
			"String literal is this form where you have",
			"double quote and the string inside the quotes.",
			"And what you'll see here is unterminated.",
			"What it means there is, if you look carefully, the second quote.",
			"The closing quote is just missing.",
			"The string didn't end.",
			"So I'll put the quote in there, and I'll run it.",
			"Okay, now that one's good.",
			"Let's try this one.",
			"Error, missing right parenthesis after argument list.",
			"Oh yeah, sure enough, look.",
			"So in that case, the error message was just spot on.",
			"So put the references there.",
			"All right, I'll try this one.",
			"Error, missing references after, oh so now in",
			"this case, I'm looking, the right parenthesis is there.",
			"Sometimes the error message is just confused.",
			"At least it's highlighting the right line in this case.",
			"So you have to look kind of careful.",
			"I think this one's a little subtle.",
			"Yeah, print bb it looks right but if you look at",
			"the next line, see they have this one has the comma.",
			"It's like oh, right, we're missing the comma after the first item.",
			"All right, now it works.",
			"All right, I'll do just one more.",
			"This one has two syntax errors.",
			"That's a comment.",
			"I'll use that.",
			"Let's see, error, there's the right parenthesis missing.",
			"I'll run again and there is still an error pront is",
			"not defined the word it doesn't know so that should be print.",
			"All right, that works.",
			"I will leave this one that you can visit if you care to",
			"and here is also an example problem you can try if you want.",
			"Sometimes in the document that if you wanted to you could go visit and try.",
			"So we've seen the print function, how to call it, the basic process of,",
			"you know, clicking the run button and seeing code run and fixing syntax errors.",
			"Those are all the things you need to do to write simpler code like this.",
			"So, for our next step, give it a try yourself on the exercises."
		],
		"is_youtube": false
	},
	"video_003": {
		"section": "Week 1",
		"subsection": "Code Variables",
		"unit": "Code Variables Lecture",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/code+2a+(old).mp4"
		],
		"video_duration": 184,
		"speech_period": [
			4.09, 3.71, 2.32, 4.11, 2.816, 2.814, 2.07, 4.44, 3.06, 2.05, 3.64, 4.05,
			4.73, 3.109, 5.377, 2.004, 3.17, 4.014, 1.085, 2.904, 3.807, 1.44, 2.99,
			2.76, 5.75, 2.22, 2.244, 3.056, 3.578, 3.265, 3.987, 3.28, 3.26, 2.84,
			2.53, 2.94, 2.28, 4.42, 6.073, 3.627, 3.28, 2.377, 2.148, 9.095, 3.34,
			2.748, 2.921, 2.382, 2.203, 3.423, 1.382, 2.898, 2.603, 4.81
		],
		"transcript_en": [
			"In this section, I want to add the idea of variables to code.",
			"A variable in the computer is sort of like a box.",
			"So, here, if I have code like this where I",
			"say x is equal to 7, semicolon, what that means is",
			"there&#39;s a box in the computer labeled x, as I&#39;ve",
			"drawn here, and this just stores a 7 into that box.",
			"Or we could store any value we wanted.",
			"Then later in the code, if wherever an x appears, the computer",
			"knows to use 7 or whatever it is I put in there.",
			"So in effect, the variable becomes sort of a,",
			"a convenient shorthand for whatever value I want to use.",
			"So let me show you how this is going to work in typically in CS101.",
			"I&#39;ll have a line like this, x equals 7, so that just puts a 7 in the box.",
			"And then on the later lines, I will use that variable.",
			"So I&#39;ll say, here it says print x or lucky x or actually, x is x.",
			"So let me just try running that.",
			"And what you see is the 7 just shows up through here because any",
			"place I used x, the computer is pulling the value out of the box.",
			"This makes it convenient to change.",
			"So for example, if I change this to 4x equals 42",
			"and run it, now the 42 shows up all over the place.",
			"Or works for strings too.",
			"I could say x equals quote hi quote, and",
			"run it, and we get the hi all through there.",
			"I should mention this use of equals to in the computer just puts a value in the box.",
			"That&#39;s the only way we are going to use it.",
			"In mathematics, the equals sign has a",
			"different, and kind of a, a stronger meaning.",
			"In mathematics, the equals sign means the two values are the same",
			"at all times, and that is not what it means in the computer.",
			"In, in this use it is a simpler, just assign value into box.",
			"So let me try let me work this little problem.",
			"So this says you know, write code to produce this",
			"output, Alice Alice Alice, I had a crush on Alice.",
			"And it says, do it in a way that we",
			"can change the name very easily, so use a variable.",
			"I put a little code here to start just to remind you of the syntax,",
			"but it, this doesn&#39;t do anything like we, want we wanted, so I&#39;ll fix it.",
			"So, I&#39;m going to say x is equal to quote Alice.",
			"And then inside here, I&#39;ll just say x, x.",
			"X will just try, this is not a complete solution, we&#39;ll just try it as we go.",
			"So if I run that, right, we get the three Alices",
			"and then I had this, I had a crush on thing.",
			"So I&#39;ll say print quote, I had a crush on, comma and I&#39;ll say, x.",
			"So that way, it&#39;ll just use whatever we had in the box there.",
			"So if I run that, all right, that looks right.",
			"And then this has the, the the desired feature that if",
			"I changed this to like, if I just say x equals Zoe",
			"at the top, then it just says Zoe, or I could",
			"say, you know, Bob or whatever, or you know, bleh, let&#39;s say.",
			"Then like, it just shows up all [INAUDIBLE].",
			"So this shows those kind of shorthand nature of variables",
			"and that&#39;s the way we&#39;re going to use them in CS101.",
			"So, that&#39;s how to use variables in code, so try it yourself now in the exercises."
		],
		"is_youtube": false
	},
	"video_004": {
		"section": "Week 1",
		"subsection": "Digital Images",
		"unit": "Digital Images",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/1+-+3+-+Introduction+to+Digital+Images+(13+mins).mp4"
		],
		"video_duration": 810,
		"speech_period": [
			4.95, 5.268, 5.141, 4.828, 4.681, 5.046, 5.046, 4.95, 5.415, 5.392, 5.098,
			4.845, 4.325, 4.671, 4.498, 4.941, 4.768, 4.538, 4.79, 4.129, 4.13, 4.141,
			4.306, 4.142, 4.931, 5.252, 5.137, 4.611, 4.962, 4.785, 4.608, 4.726,
			5.339, 5.532, 4.49, 4.225, 4.437, 4.713, 4.419, 4.661, 4.843, 4.721,
			4.885, 5.154, 4.922, 5.078, 5.077, 3.807, 4.77, 4.441, 4.626, 4.935,
			4.811, 4.627, 4.688, 7.546, 6.655, 5.872, 4.49, 3.935, 4.033, 3.984,
			4.082, 4.682, 4.63, 4.28, 4.368, 4.68, 4.213, 4.212, 4.264, 5.284, 6.086,
			5.403, 5.547, 4.745, 5.481, 5.481, 4.32, 4.194, 4.402, 4.338, 4.613,
			4.339, 4.558, 4.451, 5.382, 5.445, 4.26, 3.784, 4.172, 3.687, 3.978,
			4.075, 3.93, 4.124, 4.493, 5.914, 5.548, 4.785, 4.652, 4.897, 4.774,
			4.591, 4.836, 4.289, 3.812, 4.213, 3.862, 4.899, 4.966, 4.84, 5.092,
			4.886, 4.463, 4.404, 4.757, 4.405, 4.757, 4.308, 4.346, 4.983, 4.983,
			4.693, 4.925, 4.945, 4.579, 5.495, 5.103, 5.364, 5.505, 5.103, 5.939,
			5.557, 5.022, 5.435, 5.367, 5.366, 6.529, 5.952, 5.408, 5.828, 6.362,
			6.27, 4.328, 4.061, 4.012, 3.573, 3.376, 4.061, 3.866, 4.678, 6.63, 7.057,
			4.414, 4.471, 4.471, 4.64, 4.867, 4.584, 4.471, 3.949, 3.847, 3.999,
			4.151, 3.898, 4.101, 3.999, 3.999, 1.266
		],
		"transcript_en": [
			"In this section, I wanna talk about how digital images work in the computer. So,",
			"here I've got an example - an image of some yellow flowers and what we're gonna see is",
			"that this looks like sort of an organic rounded whole thing. In the computer, it's",
			"gonna come down to really just a lot of little numbers. So, how's that work? So",
			"what I wanna do is focus on this upper left flower here. You'll see there's a",
			"little green area with a little thing in the middle. So if I zoom in by a factor of",
			"ten on just that square, it looks like this. So what you see is that the image is",
			"made of these little square things. So these are called pixels. So each pixel is",
			"square. They're quite small, so, you know, there's not an exact number for it but",
			"maybe 100 pixels per inch. And each pixel shows just a single color, so it's just",
			"locked as the square of a single color. And what's funny is if you, you look at it",
			"here it looks kind of. Very artificial and hard edged, but because the pixel is so",
			"small when you look at it here in the original image, you know just, it just",
			"looks right. The eye doesn't, the pixels are small enough that you don't see those little",
			"hard edges. So this is what an image looks like when you sort of zoom in and see the",
			"parts. If you want to think about how many pixels there are in an image, it's just a",
			"question of multiplication. So if I had an image that was 800 pixels wide by 600",
			"pixels high it's just a question of multiplying. So I multiply those two, and",
			"that's 480,000 pixels. You may have heard the term megapixel. Is commonly used for",
			"computers and cameras and things. So, a megapixel is a million pixels. So, my",
			"800x600 image, 480,000. Well, that's about half a megapixel, roughly speaking.",
			"So that's not a very big image, by modern standards. A digital",
			"camera today, even on a phone usually would produce an image on the order of",
			"five megapixels, ten megapixels, maybe twenty megapixels. That would be a pretty",
			"big image. All right, so let's see how, how this thing works. So I've made a.",
			"Just to make it a little more crisp I made this diagram. So if I have an image I can",
			"think of it really as this grid of pixels. So each pixel is a square and it's just",
			"showing a single color. Now we're gonna have an addressing scheme to sort of",
			"identify each pixel as opposed to all the others. So the way that works is that we have a",
			"set of x numbers along the top here. So zero is the far left and then it goes up,",
			"goes to the right. And then the y-direction is done in sort of a unique way.",
			"So zero is the very top, the top row, and then the y numbers read down. And that's",
			"just historically how, how things are numbered in the computer. So I can just do",
			"some simple examples. So for example, the, the, the upper left pixel is at (0,0). Or",
			"x=0, y=0, I can say. The pixel one to its right, so this pixel here",
			"is at x=1, y=0. And a lot of times if I say the coordinate, the",
			"convention is to just say the x number and then the y number. So I would say, this is",
			"(1,0). And let's say, this pixel over here. Well, you can kinda read up. It's at",
			"x=4, y=2. Or I could just say (4,2). Now, in reality, we're not gonna get into",
			"a lot of detail of messing around with these x-y numbers to identify specific",
			"pixels. You just need to appreciate that there is this scheme. So even if we",
			"had ten million pixels, any particular pixel has some x-y number that addresses",
			"it, versus, all the other pixels. So, the question is. Well I've got these pixels,",
			"how do I encode what the color is of any particular pixel? And so to talk about",
			"that, I'm going to make a brief historical side-trip. So Newton had this famous",
			"experiment in the 1600s, where he had a - which I reproduced here - a prism which is",
			"just a triangular piece of glass. And here white sunlight is coming in the left hand",
			"side and the prism splits it. Into the spectrum of colors here, which I just,",
			"projected onto a white piece of paper. So what this shows is that white light is not",
			"some indivisible pure thing. Instead, it can be separated into these pure",
			"constituent colors. And so this is the same thing that you would see with a",
			"rainbow. So the colors are actually in a continuous spectrum. But we Newton",
			"identified certain ones. You know gave them, gave them words. So it goes, this is",
			"the famous sequence where it goes red on the side here, and then orange, and",
			"yellow, and green. And finally blue, indigo and violet on the far side here.",
			"So. In the computer. I want to think of these pure colors as kind of a palette.",
			"And the scheme we're gonna use is to pick actually red, green and blue out of here.",
			"And use those as sort of to, as constituents to build up any other color",
			"we might want. So the, or, ultimately, you could think of it, here we have white",
			"light coming in the left, and we get the constituents out here. You could think of",
			"it as running it backwards. That if I took the constituent colors and ran them back",
			"this way, I could get white light out. And then, physics is not exactly the same, but",
			"this is a little bit suggestive of, of how we're gonna take the constituents and put",
			"them together in the computer. Also there is kind of a funny thing about indigo",
			"here. When Newton named these, right in between blue and violet we've got indigo,",
			"and it seems like. Really? And to go like that we needed a separate word for that",
			"and couldn't we just call that blue. And it's funny because that shows sorta what",
			"it's like to live in the 1600s. Newton was believed in a certain amount of mysticism",
			"things that we think of as not scientific and, at the time, there were seven known",
			"planets and Newton felt like, well, the number of colors should sorta match up the",
			"number of planets. And so I think he kinda forced indigo in there just to make the",
			"numbers add up. All right. So, what I'm gonna do. Is work on the scheme to encode",
			"a particular color called the RGB color scheme. RGB stands for red, green, blue.",
			"And the way this works, or the, the question is, I want a way of encoding.",
			"What each color is, inside of my, my grid there. And so in the RGB scheme, we're",
			"gonna use pure red, green, and blue lights, and mixing those in different",
			"combinations, form, be able to form any kind of color. And rather than try and",
			"talk through this, really, this just demos very well. So I'm gonna go to this, RGB",
			"explorer page. And this will allow me to demonstrate how this works. So the way",
			"this works is, I've got this three sliders on the left here. So there is this one",
			"controls the red light. And we're gonna number these. So, when the red is all the",
			"way dark. We're gonna call that zero. And if I turn it all the way up to maximum.",
			"We're gonna call that 255. And if you see it at the bottom actually, the it always",
			"reads out what the numbers are for the sliders. So I got a red slider, and a",
			"green slider for making green light and a blue slider for making blue light. And so",
			"the strategy in the RGB scheme is that. Essentially you have these, these",
			"three knobs that I can have I can vary the brightness of red, green and blue light.",
			"And it turns out, you can make any color by combining just the right proportions of",
			"red, green and blue. So. I'll show some examples. Well, so obviously if I wanna make red, I",
			"would just turn red up all the way, and likewise if I wanna make green, I would",
			"just turn green up all the way. If, now if you turn it all the way you get kind of a",
			"bright version. If I want a darker green, well, I could start with green and,",
			"and then just sort of turn it down. So that I get darker green. In this",
			"way. Now really, the left-hand side here, the zero numbers represents black. So in a",
			"sense what I'm doing is I'm taking green, I'm like, well I just sorta go closer to",
			"black. And that's, that's dark green. So, the other end, if I wanna make white, this",
			"is the case where I take red and I turn it all the way up. And green and blue and",
			"turn them all, all the up, and that's how I get white. So all the numbers at 255,",
			"that's white. And then turning them all the way down here, all at zero, that's",
			"black. So let me show just a few combinations here. I think probably the",
			"most interesting one is, is red plus green. So, if I turn red up, and I turn",
			"green all the way up, what I get is yellow. And if I wanted to make maybe a",
			"slightly darker yellow, well I can st, keep red and green sort of close to each",
			"other, but just turn them both down a little bit, a little bit towards black,",
			"and I get a darker yellow, or we'll go this way, we'll get an even darker yellow.",
			"If I want to make orange. What I'm gonna do is I'm, I think of orange as being",
			"like, well it's kinda like yellow but instead of red and green being similar,",
			"the red is a little stronger. So I'll have red and green here and I'll just turn the",
			"red up a little bit. And I'll turn the green down a bit. And we can get a nice",
			"orange there, that's kind of a. Road cone color, kind of a nice orange. So this sort",
			"of just gives you the flavor of how you can, you know, by tweaking things end up",
			"making a lot of fun colors. Let's see, there was one other attempt I wanted to",
			"do. Oh yeah, I'll make kind of a, a light green. So I'll, actually, let me show you",
			"how to make a pastel yellow. So here I've got red and green turned up all the",
			"way so I'm getting this very bright yellow. And so pastel you think of as",
			"being kind of more diffuse, more sort of foggy. And so the way to do that is",
			"actually I'm going to add in blue. So I'll turn the blue up to about 180, 185 here.",
			"And as you can see, well it's still yellow, but it's kind of pastel, foggy.",
			"And the way to think about that is like well, if I had all three of these all the",
			"way at max, that was white. And so, by turning the blue up, I've sort of gone",
			"towards white but instead of just pure white, by having the red and green a",
			"little bit of the head of the blue, I end up with this yellow cast. Now the way this",
			"is going to work for this class is, I'm, I'm not requiring that you have you know,",
			"you can just plug there what the three numbers are for any particular color. It's",
			"just that you under, you appreciate that there is this basic scheme to make colors",
			"just by varying red, green, and blue. Let's see, there is just one other one I",
			"want to show. So we did red, green, yellow, is important, and we'll do the",
			"other combinations. So blue plus green you can actually see a kind of turquoise, kind",
			"of makes sense sort of a blue green. And our last combination will be red plus",
			"blue, so red plus blue you get a kind of a violet. Kind of makes sense does seem to",
			"be a combination of red and blue. Alright, so let me go here back to our images. So",
			"we've got this idea that you can take red, green, and blue light and mix them",
			"together. And so what that means in terms of the image is that I've got all those",
			"pixels, for every pixel is gonna have some color. And that color is gonna be",
			"defined by red, green, blue levels. Or, in terms of numbers, what it means is,",
			"basically, every pixel just has three numbers. So I could say, well, red is 250,",
			"and green is 10, and, blue is 240. But, I mean, more likely, we were to say, oh",
			"yeah. That pixel is (250, 10, 40). So, we tend to always use the order, the red number,",
			"then the green number, then the blue number. So I can sort of refine my diagram",
			"here. So, here's my grid of pixels. It's making up the image and we've got the x, y",
			"like we had before and now. Essentially what, what's going on with each one of",
			"these pixels is that there's each one has it's own three numbers. So, maybe this one",
			"is (6, 250, 7) right, so 6 is very low; green 250, very high; blue 7 is",
			"low. Basically green, right? The green number is very high and this pixel might",
			"be a (241, 252, 23) so. Red and green are very high, blue is very low. Yeah, it's",
			"basically some shade of yellow. I should say that when we take digital images in",
			"the real world. Right, when I was playing with the sliders, well, I tended to have,",
			"you know, either 255 or zero. In the real world, you always get some inter-,",
			"intermediate number, like 237 or 26. Whatever, in they're, they're mixed",
			"together to whatever, make whatever that particular shade is. So this is gonna be",
			"our kinda working definition of an image for now. So we've got this big grid of",
			"pixels. Every pixel just shows, each pixel shows one color. And that color is",
			"completely captured by just three numbers. So kind of stepping back a little bit, we",
			"started with you know, this whole, this whole image. And I've reduced it. To just",
			"this grid that has a lot of numbers. And that's actually a very common theme in",
			"computer science. You start off with a whole image, or a whole sounds, or a whole",
			"encyclopedia or something. Which, as a human, we think of that as sort of this",
			"organic whole. In the computer, inevitably, all that data, there's some organizational",
			"scheme where it's structured down to just a lot of little numbers. That is how, that",
			"is how it's gonna be represented in the computer. And, if we think of an operation",
			"on the data, so if I wanted to take an image, and maybe make it a little lighter.",
			"In the computer, we're gonna translate that into some operation on the numbers.",
			"So, for example, for an image, if I wanted to make it a little lighter. Like, oh",
			"jeez, we've got all these, red, green, blue numbers. Maybe what I could do is",
			"just go through and add ten to each one. And if you think back to the RGB explorer,",
			"I'm gonna shift each one a little bit to the right, just make it a little big",
			"lighter. Anyway, that's gonna be, a few sections from now. But the, the general",
			"them that in the computer, [inaudible] a lot of little numbers, and that's kinda,",
			"that's what the computer domain looks like. That is, that is certainly something",
			"we'll be seeing a lot of."
		],
		"is_youtube": false
	},
	"video_005": {
		"section": "Week 1",
		"subsection": "Image Code",
		"unit": "Image Code",
		"video_sources": ["roRE1usYFX8"],
		"video_duration": 544,
		"speech_period": [],
		"transcript_en": [],
		"is_youtube": true
	},
	"video_006": {
		"section": "Week 2",
		"subsection": "Image For-Loop",
		"unit": "Image For-Loop",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/2+-+1+-+For+Loops+(10+mins).mp4"
		],
		"video_duration": 632,
		"speech_period": [
			4.5, 4.442, 4.762, 5.012, 5.013, 5.138, 4.511, 4.825, 4.794, 5.226, 5.35,
			5.04, 5.029, 4.393, 4.69, 7.058, 6.733, 5.939, 5.142, 4.481, 4.537, 4.537,
			4.37, 7.23, 5.523, 5.384, 5.383, 5.02, 4.377, 3.748, 3.8, 3.901, 4.282,
			4.569, 4.803, 4.51, 5.038, 4.569, 6.207, 4.176, 3.824, 4.227, 4.075,
			4.277, 4.461, 4.574, 4.632, 4.805, 4.863, 4.357, 4.345, 4.399, 4.879,
			4.974, 4.484, 4.606, 4.914, 5.442, 6.771, 5.479, 4.422, 4.249, 4.765,
			4.594, 4.995, 4.766, 4.557, 4.215, 4.374, 5.318, 4.192, 4.085, 3.768,
			4.742, 5.995, 5.72, 5.513, 5.15, 4.518, 4.687, 4.574, 4.575, 4.405, 4.627,
			4.979, 4.19, 4.4, 3.684, 3.826, 3.826, 3.779, 4.11, 3.873, 6.41, 5.183,
			5.715, 5.382, 5.582, 6.283, 6.747, 4.719, 4.382, 4.157, 4.494, 4.381,
			4.551, 3.858, 4.854, 4.351, 4.073, 6.643, 4.423, 4.012, 4.424, 4.063,
			3.96, 3.909, 4.27, 5.73, 4.487, 4.714, 4.487, 4.658, 4.828, 3.991, 4.612,
			3.798, 4.448, 4.504, 4.449, 4.774, 4.717, 2.899
		],
		"transcript_en": [
			"So the topic of this section, is what's called a for-loop. And this is going to be a",
			"big increase in what we can do with the code. So, if you look at the original",
			"flowers image, here, it's 457 pixels wide by 360 pixels high. So, if you",
			"multiply just to get the total number of pixels that's 164,000 and a few odd",
			"pixels. And this is a pretty small image. So, that's a lot of pixels. So the way we",
			"were writing code before, where you would have a line like pixel.setRed(255) to",
			"change one pixel to red, that's just, that's not a practical way to do an",
			"operation on a whole image. I mean, this is a small image and has over 100,000",
			"pixels. So what we want is a construct where we can write a few lines of code",
			"that capture some change we want to make and then let the computer take care of the",
			"bookkeeping of running those lines of code again and again once for each pixel on the",
			"image. So the for-loop, the topic of the section, is gonna do exactly this and this",
			"is gonna be a big increase in what we can do with, with the code. So let me talk",
			"about the, the structure of this thing. I'm just going to identify the parts then",
			"I'll do an example. So here in the blue box here I have a picture of a for-loop",
			"and I'll just talk about what the parts are. So, it starts off - and I'll use my",
			"pen - this, this begins the for loop so it has the word for and then in parenthesis",
			"it says pixel colon image and then there's a left curly brace to start to set off the",
			"next line and so what this means is. And all the syntaxes require the parenthesis",
			"and the curly brace and everything. Usually in my examples or in the exercises",
			"we'll, it's just, it's the same every time, so usually we'll provide it and then",
			"just ask you to write the code on the following line. So what this means is, for",
			"every pixel in this image please to the following and then the following is to",
			"defined as whatever is in the colored braces here so. These lines.",
			"Inside of the thing. That's the, called the body of the for-loop. And this is",
			"just a few lines of code that can do, whatever we want. So, the way the",
			"for-loop works, is, and let's say we're, you know, working on the flowers image here.",
			"Is it. Here we have three lines. So it's gonna take, let's say, pixel number one of",
			"the whole image, the upper left pixel. And so it, it isolates pixel number one. And then",
			"the for-loop runs these, these first three lines. So it says; pixel.setRed(0),",
			"pixel.setGreen(0), pixel.setBlue(0). So those are all",
			"happening to pixel number one. And then it, really, what that does is it changes it to",
			"black, right? It sets red, green, and blue all to zero. So when the for-loop gets to",
			"the bottom a funny thing happens and I sort of have this black arrow. It loops",
			"back up to the top of the three lines and now it's gonna isolate pixel number two,",
			"so the second pixel, and then it runs these three lines again. So it does them",
			"to pixel two and then it loops back to the top and it runs the three lines again from",
			"pixel number three, and so on. It just runs the lines again and again and again",
			"once for each pixel in the image. So. The, oh the other thing I should point out here",
			"is you'll notice that the, the three lines in the body are indented and that not",
			"required but it's a, it's a common convention to show that the lines in the",
			"body are kind of different from the other lines of code. Where this image equals new",
			"simpleImage, well that just happens once and the print image that just happens once.",
			"But the lines inside the loop are sort of special in that they had this quality that",
			"they're going to be run again and again. So let's try. We just run that, that exact",
			"example. So here I have it in runnable code so the, this loads the image. Then",
			"I've got the, the for-loop setting off the body. Here's the three lines of the",
			"body. And then it, it's kind of small here but then there's a, a right curly brace",
			"sort of balancing the left curly brace up here that closes off the body. So let's",
			"just run it. See what we get. So you can see, what we get is just this pure black",
			"rectangle, and it's, it's not very useful but it, it does show what the for-loop",
			"does. So what's happened is, we have this original flowers image with all sorts of",
			"red, and green and yellow and whatever in it. And what this code has done, is it has",
			"visited every pixel on that image and done these three lines. And what this do is",
			"they take, they set the red, green and blue all to zero, so in fact it just",
			"changes the pixel to be a pure black pixel. And so then, if you imagine that",
			"just happening over the entire flower's image, obliterating all the data, this is",
			"what we're left with, just this pure black rectangle. Alright. So let me a try a,",
			"more sane example. So here I'm gonna say, for each pixel set red, green - red",
			"and green to 255 and blue to zero. So I wanna think about, well what's the code to",
			"do that. Very often, for these problems, we'll have the pattern that in English,",
			"I'll say well, have, you know, do this effect, set red to 255 or whatever. And",
			"then ultimately, on the exercise, it will be your job to sort of translate that into",
			"code. So here is this is an example of that pattern. So the code to put in the",
			"body to change red and green to 255 and blue to zero is just to say first, the",
			"first two lines say pixel.setRed(255) and pixel.setGreen(255). And then the",
			"third line is pixel.setBlue(0). So if I run that. What we see is this",
			"bright yellow rectangle so this is kinda similar to the previous example. We've",
			"just gone through and changed the green and blue for every pixel in this thing in",
			"this case to sort of get this vivid yellow color. So my, so those two examples are a",
			"little unrealistic, right? I just, we just obliterated all the data, and just made",
			"this, colored rectangle. So now I'd like to try one, that's a little more",
			"realistic, where we, instead of obliterating all the data in the flowers",
			"image, we work with it. So here's the, the original flowers image. And as we know",
			"yellow equals red plus green so we would expect that here where I've got the yellow",
			"flowers that the red and green are, are high there. So what I'd like to do for",
			"this example is set the red to zero for the whole image. Think about what that's",
			"gonna do. So the first question is alright, what's the code to do that? And",
			"in this case what you see is, I just have the line pixel.setRed(0) as the",
			"body. Now in my previous examples the body was like three lines of code. It could, it",
			"could be anything. So it could be three lines or six lines. In this case it's just",
			"gonna be one line. And what this says, you know, the sort of English translation of",
			"this for-loop is, for each pixel in the image, set the red to zero. So let's see",
			"what that looks like. So if I run that, what you see is there's sort of a...",
			"the flowers have changed to look like these kind of weird radioactive green flowers.",
			"And that can make sense if you sort of unpack like what made the flowers yellow",
			"before well they were yellow because there was a combination of red and green light.",
			"What this code does is, it just zeroes out all the red light. It's like we just",
			"turned that lamp down to zero everywhere. And so what we're left with is just the",
			"green light that was making the images. The other thing to notice is, look over",
			"here at the, the green leaves kind of on the lower right. They, they don't look",
			"much different at all so probably this was mostly green light to start with. The red",
			"light was maybe, you know, a value like eight or twenty or something. And so when",
			"we changed that to zero it doesn't really make much, much visible difference. Let's",
			"try one more example here. So for this one, I'm gonna start with the flowers",
			"image and I'm gonna say set green and blue to zero and leave red unchanged. So what",
			"is the code for that? Well, I'm gonna have a two-line body here. I'm just gonna say",
			"pixel.setGreen(0) and pixel.setBlue(0), and I just, I just don't change",
			"the red, so it'll be left at whatever it is. So we can run that. And what you see,",
			"is now we get these, red flowers. And what?s happened here is, this is actually",
			"called the red channel of the image. And what's happened is, normally, the image is",
			"this combination of red, green, and blue light. What we've done is we've changed",
			"both the green and the blue to zero. So we've turned those down to just be",
			"nothing. And what we're left with is sort of a map of, where was the red light in",
			"his image? Where was red bright, and where was red dark? And what we see is, well,",
			"over here on the left, where it was dark, there is not a lot of red light. And also,",
			"here, the green leaves. Not much red there. And so, really, it's just the",
			"yellow flowers, was this, prominent area of red light. So that's a, that's just a",
			"way of looking at the image. There's actually an analogous, blue channel and",
			"green channel we could make to sort of look at where, those lights are,",
			"alternately. Alright. So, the for-loop is, I said it turns out this is a very",
			"powerful feature that allows us to write a few lines of code and let the computer run",
			"them over just, you know, some sort of big data set. In this case, we're doing",
			"images. I should mention for completeness, JavaScript language you're using actually",
			"doesn't have a for-loop that's as compact as this. It's just an omission in the",
			"language. So I added it just for this class to make it work here. So if you're",
			"doing some other JavaScript problem I'm afraid you won't have this. But, many",
			"languages do have a for-loop that looks just like this. It's just sort of a weird",
			"omission from JavaScript. So the pattern here is that we get to write code, you",
			"know, just in, in the sense of short bit of code capturing what we want, and I",
			"would say that this reflects the theme of the idea that computers are powerful yet",
			"kind of stupid. So you write the code that's kind of interesting, like, well I",
			"wanna change the green this way or that way or whatever. And then by putting it in",
			"the for loop we have this partnership with the computer where the computer will take",
			"care of the powerful thing, like we're running that, 100,000's or even",
			"1,000,000's of times. The computer handles that end, but it is also, the computer is",
			"really just doing something very mechanical there. And so I think that,",
			"that does show the general theme of, of a, how computers are. That their sort of, the",
			"computer handles the mechanical part very quickly, but the person has to add the",
			"creativity to like control what's actually going to happen. So in the next section",
			"- after there's some excersises of looking kind of like this - and then in the next session I need",
			"to add just one more feature that will allow us to start doing image processing",
			"examples like this that are a lot more interesting."
		],
		"is_youtube": false
	},
	"video_007": {
		"section": "Week 2",
		"subsection": "Image Expressions",
		"unit": "Image Expressions",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/2+-+2+-+Expressions+(14+mins).mp4"
		],
		"video_duration": 854,
		"speech_period": [
			4.853, 4.737, 4.503, 4.913, 4.854, 4.386, 4.62, 4.542, 5.464, 2.567,
			4.912, 4.139, 4.306, 3.808, 4.306, 4.359, 4.354, 4.685, 4.568, 5.548,
			5.737, 4.917, 5.232, 5.107, 5.067, 5.14, 4.489, 4.544, 4.713, 4.376,
			4.606, 4.587, 4.574, 4.4, 4.4, 4.4, 4.748, 4.287, 4.154, 4.206, 3.949,
			4.154, 4.0, 5.051, 4.83, 6.327, 4.06, 3.695, 4.216, 4.112, 4.268, 3.956,
			4.372, 4.363, 4.458, 4.754, 4.755, 4.992, 4.811, 4.927, 7.374, 7.005,
			5.602, 5.603, 5.671, 5.534, 5.286, 4.829, 4.523, 5.073, 4.95, 4.658,
			4.738, 4.019, 3.898, 4.739, 4.438, 4.559, 4.619, 4.934, 4.428, 4.653,
			4.485, 4.926, 5.203, 6.052, 4.768, 4.037, 4.087, 4.138, 3.734, 4.037,
			4.037, 4.57, 6.871, 7.157, 6.169, 6.325, 6.402, 6.202, 5.711, 5.568,
			5.355, 5.346, 4.667, 4.552, 4.494, 4.637, 5.496, 5.496, 5.836, 5.631,
			5.076, 3.587, 3.827, 4.412, 5.6, 5.818, 5.89, 5.6, 5.148, 4.878, 6.322,
			4.567, 4.512, 4.292, 4.677, 4.457, 4.787, 4.674, 4.192, 3.404, 3.231,
			4.772, 6.807, 5.3, 5.178, 4.87, 4.993, 4.809, 5.549, 4.875, 5.132, 4.94,
			4.267, 4.92, 4.921, 4.617, 5.659, 5.725, 9.26, 5.411, 5.479, 4.937, 5.546,
			5.572, 5.61, 5.334, 5.258, 4.538, 4.252, 4.913, 5.242, 5.18, 5.242, 4.62,
			4.113, 4.113, 4.114, 3.749, 4.217, 4.599, 4.843, 4.513, 1.982
		],
		"transcript_en": [
			"In this section, we're gonna add what are called expressions to the code we have",
			"available. And that's kinda the last piece we needed to start writing, you know,",
			"kinda realistic image manipulation code. And in particular by the end of this",
			"section we'll play with puzzles that are based on images so, that'll be kinda fun.",
			"So we've written code like this a lot of times. So, here it says print(42). We just",
			"have a number 40 or 100 or 250, or whatever and it's just in the code. It",
			"turns out you can instead write that this way. So it says print(11+31). And the",
			"11+31 here, that's called an expression. And basically, instead of a, a",
			"fixed number that's known ahead of time, we can put a little, a little arithmetic",
			"expression. So in this case, 11+31, it's a little problem. The way this works",
			"is that, when the computer runs, when it gets to this line. The first thing it's",
			"gonna do, is, it is said to evaluate the expression. So it just picks out the",
			"expression, and says, alright. Well, I need to work out what number this is. In",
			"this case, it just does the addition, so, 11+31, it's 42. So once the",
			"expression's been evaluated down to a number of 42, then the code can continue,",
			"and just use that number. So, in effect, this'll just print 42. And so anywhere in",
			"the code where we would have had a number like 0 or 255 or 100 or something",
			"instead we're gonna be able to put little arithmetic expressions to sort of embed a",
			"little computation to compute what number we want to use in that. That's gonna",
			"enable us to, to solve better problems. So we haven't talked about it up to now but",
			"the pixel has these three extra functions. There's pixel.getRed() and what getRed",
			"does is it, it's kind of the reverse of setRed. It retrieves the number out of",
			"the pixel. So there is some red value; 0 or 100 or something. This retrieves it",
			"out. And there's also getGreen and getBlue. And so these are going to be very",
			"natural to use in expressions to mess with the RGB values in a pixel. So",
			"suppose what I want to do is double the red value of a pixel so if it's 50 I wanna",
			"make it a 100 if it's a 100 I wanna make it a 200 or whatever. So here's some code",
			"that does that so I'm gonna walk through this and this idea of making a relative",
			"change to a pixel whatever it was change it to you know triple it or something like",
			"that, that gonna be a much more realistic way to deal with the RGB values",
			"of pixels. So let's walks with what this code does. So this quote is correct. It does",
			"double the red value of a pixel. So what the first line does, is, it calls pixel.getRed().",
			"So that's gonna retrieve the number out. And let's just say, in this",
			"case, that the red value is 50. So, pixel.getRed(), is gonna retrieve the 50.",
			"And then, here, we're using the equal sign, and the way we have before, to just",
			"store that number in a variable. I'm, I'm just gonna call old, for the, the old",
			"value. So basically, this just stores 50 in old. So then, the next line says,",
			"pixel.setRed(old \"times\" 2). So here, I'm using the expression. And remember, the",
			"way it works is, when it gets to this line, the first thing it's gonna wanna do",
			"is evaluate the expression. So it's gonna look at old times 2. Old, remember it's",
			"just storing 50. So basically, this says 50 times 2, it's gonna evaluate that,",
			"come up with 100. So it evaluates the expression to get 100. And now that it has",
			"that value, then it can go ahead and run the code. And so it says pixel.setRed,",
			"essentially 100. So if you, you think through the whole sequence, basically this",
			"pulls the 50 out, multiplies by 2 to get 100, and then stores that back. So in",
			"effect, it multiplies by two. Now. In reality this is the way we're gonna write",
			"it. The whole thing can be condensed down to just one line because, really, that,",
			"that variable old there was, it wasn't adding a lot. It was just kinda a",
			"temporary holding spot. And so let's imagine that same case of pixel where the",
			"red value is 50, and I'm just gonna run this. I've just condensed it down to one",
			"line. So, let's imagine this code running. So, I have a pixel with actually here I",
			"have it. Pixel with red of 50 and I'm gonna run this line. So the first thing",
			"it's gonna do is it's gonna notice that there's an expression here, pixel.getRed()",
			"times 2. So, it's gonna evaluate that expression. So pixe.getRed() is",
			"gonna go get what the red value is currently. So let say 50. So it'll say,",
			"it's the same math we had before so 50 times two. That's 100. And so then with",
			"that value 100, essentially it's gonna call pixel.setRed of 100 to put that",
			"back. So it works out as the same dynamic we just went through. So it gets out the",
			"value, multiplies by two and puts it back. Or, in effect, served in English, it",
			"doubles the red value. So I'll do a bunch of examples that follow, sort of this",
			"pattern. So what we're gonna see. As I'll start using this inside of loops as were",
			"as previously we had to you know say zero or 250 I we had some fixed number but now.",
			"We're gonna write code and this is the example I just did. Code like this where",
			"we're going to change the red value based on what the red value was before. And so",
			"the dynamic is, we'll have, you know, very often we'll say pixel.setRed and then",
			"in the parenthesis we'll call pixel.getRed() and then have some arithmetic. So",
			"in this case, this line doubles the red value or ultimately, this line. Calls",
			"pixel.setRed of pixel.getRed() times 0.5. So it's getting the old value",
			"and multiplying it times 0.5, or essentially dividing by two, so it's gonna",
			"make it smaller and then put that back. So, that's gonna be the well, we'll follow",
			"that pattern, a lot of times. So let me get to a real example, here. So suppose I,",
			"I'm gonna take the flower's image. And let's say I wanna make it look kind of",
			"more orange. So my strategy is gonna be, well, let's change the green value. Let's",
			"just turn down the green. And so, mathematically, I'm gonna say, let's",
			"change the green to be 75 percent of whatever it was. Now, in this example,",
			"I've actually started the page with a no code in it. So I'm just gonna actually",
			"type this in. So I'll say pixel, so, if I wanna change the green to be 75 percent of",
			"what it was. And this is, you know, some of the example I just showed. I'll say",
			"pixel.setGreen. You can also write this outside in so, I wanna call setGreen",
			"and I want to put some kind of expression here, right so I want it",
			"to compute a number that I want to put back for the green value. So the pattern",
			"I'm gonna use here is I'll say pixel.getGreen(), I'm gonna get the old value and",
			"then I can kinda, you know multiply times whatever. In this case I multiply times",
			"0.75. So I'll change it to be sort of, three quarters of whatever it was. So lets",
			"try that. Oh, okay. So that does make it, if you recall it was",
			"sorta yellow. Actually if I put. 1.0 here. We can make no change. Right, so that's",
			"when it was nice and yellow. So that's your 0.75 back here.",
			"Then we get kinda a little more orange. I should say, for these examples. I'm gonna,",
			"I'm gonna just take the time to type the code in. And you can do that if you want",
			"to go back on this yourself. There's a little show solution button down here. So,",
			"if you come to the review later. The solution code is available. But, I just",
			"felt like practicing purposes. It's better to start with a blank screen. And then",
			"really go through the process of typing the code in. So, all these examples will",
			"follow that pattern. Let's try something a little bit more difficult. So this says",
			"set red, green and blue each to be, 0.75 of their original values, and then we'll",
			"try 0.5 and 0.25. So what I'm gonna do. A great computer science tradition, instead",
			"of typing the code in absolutely from scratch, I'm gonna copy it, the one I made",
			"before and I'll just paste it. I'll make three copies of it, and then we'll fix it",
			"to do what I want here. Okay, so usually I always go in the order, red, green, blue.",
			"So I'm gonna say setRed. To getRed() and, what did it say to, 0.75. Alright, so",
			"that's, that one's good. And then we'll say setGreen to getGreen() times 0.75. And",
			"then we'll do blue last. So setBlue, pixel.getBlue(). So you can sort of see",
			"the pattern here of the set and get being combined. That's fine. It's a very",
			"workable pattern. So I'll run it that way. Yeah, It's a little bit subtle but what",
			"this has done, is taken the original image and made it a little bit darker. Cuz if",
			"you think about it, by multiplying 0.75 we're sort of moving everything towards",
			"zero, and obviously 0,0,0 is pure black, so we're kind of compressing down",
			"that way. So let's try make it a little extreme. So, I'll multiply times 0.5 and",
			"I'll run that. Oh, it's a little darker. And if almost by 0.25 so just a quarter of",
			"the original values. Oh, then yeah, then it's getting quite dark. So, this shows",
			"a good realistic sort of interesting use of this kind of scaling idea of using",
			"setRed combined with getRed() and multiplying times some number to sort of play",
			"with the values. Either scaling them up or scaling them down. Alright. So there's a,",
			"a third problem here I, I'm gonna sorta skip over. This one's just for extra",
			"practice, if you wanna come and try this one and it has a, it has a solution code",
			"as well. So what I really want to do. Is work one of these five, ten, twenty",
			"puzzles. So the idea with the five, ten, twenty puzzles is that there were some",
			"image of a flower, piece of fruit or something and it's been modified and the",
			"way it's been modified is that the red, green and blue values have all been divided by",
			"either five, ten or twenty. So the values are way to small the images could be",
			"really dark and the challenge. Is to multiply the red, green, and blue values",
			"by either five, ten, or twenty. Essentially to kind of undo the darkening",
			"to kinda get the image back. And so. Such as this it just comes down to some",
			"experimenting and playing around a little bit to try and figure out how to get the",
			"image back. So the number five is used once the number ten is used once the",
			"number twenty is used once so basically you just have to figure out, which one",
			"goes with which color. And I should say, you know there's only six possible ways to",
			"have five, ten and twenty so there's really not that many to go through. The",
			"way I think about it is you can imagine well maybe the five is first is on red and",
			"so then there's either, five is first and then it's either five, ten, twenty. Or",
			"five, twenty, ten. So if five is first there's only two possibilities and then",
			"likewise if ten is first there's only two possibilities and if twenty is first",
			"there's is only two possibilities so that's a way you can kind of organize",
			"while your searching through this, alright so let me let me go back here. As I said",
			"before and grab, a copy of my code so we don't start with nothing. Alright, so in",
			"this case what we have is a, a banana. Actually, here, I'll, I'll comment these",
			"lines out for a second, so we can just see what the image looks like with nothing. So",
			"there is the puzzle image. And what it show-, I'll tell you. There is a yellow",
			"banana, and it's on a background of dark red bricks. And in between the red bricks,",
			"there's little bits of green moss that you can see. So if you fix the image, we",
			"should be able to see all of those things. So to fix the image. What I wanna do here",
			"is multiply. Lets, I'm just gonna... I'll just start with five, ten, twenty like",
			"these. So let's say, well let's guess that the red needs to be multiplied by five,",
			"the green needs to be multiplied by ten and the blue has to be multiplied by",
			"twenty. Its just a guess. So, If I do that. Mm-hm, well, well that, that's",
			"clearly wrong, right? The banana doesn't look quite right. And the bricks have this",
			"sort of blue cast, so that's not good. So I'll, I'll stick with the assumption that",
			"the five is first, though. And I'll try the other permutation. Alright, so, well",
			"maybe it's five, twenty, ten. So I'll try it that way. Oh, and that's worse.",
			"Alright. So, I don't think the five is first. When I tried the two ways",
			"with five first. So let's try the ten first, so I'll try ten. 520. Alright, so",
			"I'm just scaling these up. Ew, hm. Well, I mean I think we're getting there, right? I",
			"mean the banana looks pretty good but the bricks obviously are, that's not, you",
			"know, that's purple, they're supposed to be red. So let me try, I'm",
			"gonna try leaving the five in the middle and just putting the twenty first. Twenty,",
			"five, ten, let's try that. There we have it. There's the banana, it looks nice and",
			"yellow. You can see the bricks have this dark red color. And then even little bits",
			"of, green moss here. That's sort of reassuring. So I'm gonna zoom in on this,",
			"so I'll show you. [inaudible] some, some of the qualities of it. So partly there's,",
			"there's the brick. And the moss and the bananas all look good. There's just a",
			"minor thing but you'll see there's kind of a, see there's sort of this horizontal",
			"banding. In the banana and that's okay that is that's the way the solution looks",
			"when you do it quickly. That's happening because when the red, green, and blue when",
			"they were divided by this numbers by ten or maybe twenty all of those values which",
			"normally range to zero to fifty five they are compressed down to ranging maybe just",
			"zero to twelve or zero to twenty four. And as a result... Because they were",
			"compressed down to that range, there were just a few shades of yellow available,",
			"when it was compressed down like that. And even when we expand it back up, we're",
			"still stuck with just those few shades. So that's what we're seeing in these",
			"horizontal band here, is, there, there were just a few different shades of",
			"yellow. And so it's unable to capture. I'll zoom in a little bit. It's unable to",
			"capture. The, the real gradations that you would want. And so that's just sort of a,",
			"an artifact of the, the way this exercise works. Alright. So the, the exercises to",
			"follow this section are actually just more of these five, ten, twenty puzzles. So,",
			"it's something you should check out."
		],
		"is_youtube": false
	},
	"video_008": {
		"section": "Week 2",
		"subsection": "Image Puzzles",
		"unit": "Image Puzzles",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/2+-+3+-+Puzzles+(4+mins).mp4"
		],
		"video_duration": 246,
		"speech_period": [
			4.986, 5.047, 4.925, 5.229, 5.419, 5.489, 5.352, 5.883, 6.05, 3.281,
			3.956, 3.764, 3.908, 3.908, 4.67, 4.773, 4.958, 4.525, 4.834, 5.613,
			8.407, 4.568, 4.624, 4.234, 4.178, 4.123, 4.401, 4.401, 5.56, 7.26, 6.649,
			5.577, 6.035, 5.73, 5.653, 4.786, 4.83, 4.713, 5.344, 5.176, 5.449, 5.313,
			4.854, 4.532, 4.703, 4.704, 4.761, 4.875
		],
		"transcript_en": [
			"This is just a short section to introduce a type of puzzle, which is built on",
			"the sort of image manipulation code we've been doing. So the idea is, there's a picture of some",
			"mystery object. And the red, green and blue values in the image have just been",
			"messed up in some way. And so, what you need to do is write code to fix the",
			"red, green, and blue values, and so reveal the original image, and, and see what it is.",
			"So, here is an example I'm gonna do here. This is the so called \"Gold Puzzle\".",
			"And, the idea, so there's, there's, some object is shown here. And what's happened with this",
			"is that, first of all, the green and blue values in the image have been just",
			"set with random values between zero and 255. And actually, if you look at it,",
			"so it gives a kind of a, a snowy appearance. And it, you can kinda see, there's,",
			"so there's some pixels where the green is very high, some pixels where the blue is very high,",
			"they just look blue or green; and then there's these sort of turquoise pixels scattered through;",
			"so those are cases where, both the blue and the green are high. So that's one,",
			"one level of mess-up in this image. The other thing that's happened",
			"is that the image that we wanna recover, it's in the",
			"red values. In fact, it's exclusively in the red values. The green and blue are just, sort of, garbage.",
			"But the values have been divided by ten, so they're very dark. So, kind of what we're seeing here",
			"in the obscure version, is, there's, there's a dark red image",
			"behind there. And it's been covered with this, sort of bright random",
			"green blue snow, so we can't see it. So what we want to do is, write code to fix it.",
			"So let me start off here. So as usual, for these, I'm going to start off",
			"with just a blank text area to just write the code. And then down here there's a solution,",
			"\"Show solution\" button. So if you wanted to visit this page and try it yourself, you can, you can get the code that way.",
			"Alright, so the first thing I want to do, so here's, here's what it looks like if I just run it right here:",
			"the loop is empty; so if I run it, we just, we just get the, the puzzle image raw.",
			"Alright, so the first thing I'm going to do is I'll say",
			"pixel.setGreen(0)",
			"I'm going to punch out the green values. I'm just going to get rid of them",
			"and we'll see what we get. Hmm, alright, So now, well, it's better. Now, we just",
			"have this blue snow. We've at least gotten rid of the green snow. So I'll get rid of the blue snow as well.",
			"So I'll say, pixel.SetBlue(0), we'll try that.",
			"Alright, hmm, So, I, I've got rid of the snow. But now the problem is that the",
			"image, which is in the red values. It's just so dark, we can't see it. So it is,",
			"it's technically there, but it's invisible. So what I need to is scale it back up,",
			"right? It's down there, I just need to make it brighter. So I'll say pixel.setRed of",
			"pixel-dot-getRed\" Looks a little bit like the five, ten, twenty",
			"puzzles here. So I'm gonna, in this case, the instructions say that it was scaled down",
			"by a factor of ten. So I'll scale the red back up by a factor of ten.",
			"Huh, there we go. So that, that is the solution image. So,",
			"this is a picture of the Golden Gate Bridge, as seen from the San Francisco side. Now,",
			"it's a little, obviously, it doesn't look quite right. What's happened, is that, because",
			"the data is exclusively in the red, even when we recover it, it just looks red. I mean, what's,",
			"what's happened, actually. Is this is an essentially a black and white image",
			"and normally those are shown on a, on a sort of black to white spectrum. In this case,",
			"the image is being shown on a black to red spectrum. So it is the right image but it just,",
			"it has this red cast. For this sections we're gonna say that's good enough: you know,",
			"you can see what it's supposed to be. In a later section I'll show how to,",
			"how to fix that. And get it to look like a, a proper black and white image."
		],
		"is_youtube": false
	},
	"video_009": {
		"section": "Week 2",
		"subsection": "Grayscale Images",
		"unit": "Grayscale Images",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/2+-+4+-+Grayscale+(14+mins).mp4"
		],
		"video_duration": 854,
		"speech_period": [
			5.647, 5.933, 6.077, 5.718, 5.362, 5.633, 4.737, 5.045, 4.921, 4.799,
			5.043, 5.267, 5.137, 5.397, 5.138, 5.564, 5.657, 6.17, 5.583, 5.877,
			4.952, 4.92, 5.014, 4.601, 4.241, 4.796, 4.907, 4.848, 4.671, 5.072, 4.64,
			4.578, 5.277, 5.029, 4.78, 5.029, 4.976, 5.328, 6.199, 5.938, 4.851,
			7.689, 5.285, 4.77, 5.059, 5.161, 4.974, 5.348, 4.974, 6.646, 7.243,
			4.692, 4.079, 4.469, 4.637, 6.892, 4.606, 4.724, 4.665, 4.522, 4.681,
			4.111, 4.281, 4.465, 5.056, 4.756, 4.876, 4.515, 5.157, 5.426, 4.132,
			4.706, 4.7, 5.061, 4.81, 4.936, 5.185, 5.599, 5.385, 5.451, 5.124, 5.219,
			5.158, 4.784, 4.939, 4.655, 4.323, 4.599, 4.212, 4.212, 4.322, 4.323,
			4.171, 4.878, 4.174, 7.342, 6.343, 7.406, 5.112, 5.055, 4.924, 4.514,
			4.589, 4.96, 5.512, 5.235, 5.03, 5.098, 6.056, 5.635, 5.228, 5.364, 5.229,
			4.911, 4.22, 4.219, 4.608, 5.555, 5.739, 6.197, 6.198, 5.892, 5.416,
			4.976, 5.216, 6.261, 4.982, 4.742, 4.802, 4.682, 5.178, 5.121, 5.121,
			4.738, 5.441, 7.17, 7.972, 6.105, 5.796, 6.26, 6.528, 6.537, 5.56, 6.312,
			5.259, 5.041, 5.286, 4.979, 4.61, 4.677, 5.309, 5.309, 4.93, 4.866, 5.183,
			4.93, 5.221, 3.968, 3.628, 4.064, 3.629, 3.676, 4.561, 4.937, 4.82, 2.41
		],
		"transcript_en": [
			"In this section, I'm gonna talk about how to make grayscale images and code to",
			"carry out that idea. So the first question is how do you make a gray color, so to ex,",
			"clear off that, I'm gonna go over here to the RGB explorer and it turns out in the",
			"RGB scheme, the way to make a gray color, one that lacks any hue, is for all three",
			"numbers, red, green and blue to be the same. So I can demonstrate that here, I",
			"can put red and green. Up to be, the I'll put them all at 190. So you can see that's",
			"kind of, you know fairly bright yellow. And blue is down here. So watch what",
			"happens as I drag blue up towards being the same as red and green you can see the",
			"color is kind of drained out of it and just as blue gets to be exactly the same",
			"you can actually use the arrow keys in these controls. There once, now that all",
			"three are exactly a 190 what were left with is just grey. So we can, you",
			"know, I'll do another example. So, so if I put, I'll put green and blue down here",
			"sort of at the middle so they're both at 99. It's kind of a, I don't know, a dark",
			"turquoise, if I put right at zero. So then I'll bring red up to be closer and closer.",
			"And then once it is the same as the other two then, again, I'm left with gray. In",
			"this case it's kind of a, a dark gray. So the pattern is, if red, green, and blue",
			"values are all equal, they're all the same, then that's gonna be it, some shade",
			"of gray. And actually, the, our original cases of pure black and pure white, I'll",
			"make black here. They follow that too, right. And black it's 0,0,0. They're all the",
			"same, so that's one endpoint of the, of the, the grayscale spectrum. So I'll go",
			"back here and I'll, we'll say that, you know, so we can make these arg-, if we put",
			"all, the RGB values to be equal, that'll make a shade of gray. And we can make dark",
			"gray and light gray and black or white or whatever. We'll say that those, those",
			"shades of gray. Another way of saying it is that they lack hue. So they're not",
			"towards red or green or anything like that. They're just this colorless",
			"brightness. So in this table I just have some examples. So for example if I had",
			"something that was 50, 50, 50, that's sort of a dark gray. Or 120, 120, 120, that's",
			"medium gray, or 200, 200, 200 that'd be a light gray. As I said before the pure",
			"black and pure white cases that we talked about before, those, those fit th-, this",
			"pattern as well. Alright. So how can I do something useful with this? So I'm gonna",
			"look at this unusual image here. The, the liberty-red jpeg. And I'll just run this",
			"code. Right now, there's no code in here, so we'll just. We'll just see it natural.",
			"So the, the liberty-red image here it's, it's a picture of the Statue of Liberty.",
			"But all of the data is in the red values of the pixels. So the red values are, you",
			"know, 37 or 200, or whatever. They're, they're varying to show this image. The",
			"green and the blue values are just zero everywhere. There's nothing there. So, I",
			"mean, whatever. It, it looks bad, or it certainly looks wrong. So I wanna think",
			"about, well, how could I fix that? I'd like to fix this to look like a, a",
			"grayscale picture of Statue of Liberty, not this, not this red thing. So, the way to",
			"do this. What I'm, I'm going to use this the fact that if the green, blue, and red",
			"are all the same, that's going to be shaded grey. Now in this case, the data is",
			"in. For each pixel is in the red value. So if I say, pixel.setGreen. And what",
			"I'm gonna do is I'm gonna make the green value, I'm gonna change it to be the same",
			"as the red value. So I'll do that by saying, pixel.getRed here. So what",
			"this does. Is with the pixel.getRed that sort of picks the number out of for,",
			"you know, for each pixel. It picks up the red value. So it's 27 or 100 or whatever",
			"it is. And then sets it in to be the green value. Now this is a little unusual.",
			"Usually what we call setGreen we've mixed it with getGreen and setBlue we've mixed",
			"with getBlue. But this is a valid combination as well and it happens in this",
			"case it does what I want. So then I'll do it again for blue. Whoops. So, I will say",
			"pixel dot getRed. And then I'll set that into blue. I'll neaten this up, now let's",
			"try that. Oh, there we go. So, this is just an application of this feature of the",
			"RGB space that, when the numbers are equal, it's grayscale. And so I, I sort",
			"of retrieve the value out of the red, and I set it over to blue and green. And so",
			"now, it, it sort of fixes the image, so it looks, It's black and white, but at least",
			"it looks okay. So a related question. Or maybe a more practical question is, well,",
			"if I've got a color image. Like, here's, here's our old flowers image. How could I",
			"convert it to gray scale? And, the way I'm gonna think about that, is, you know, if",
			"we're looking here at these flowers, it's, like, well. I wanna drain the hue out it.",
			"I just wanna think of each one of these pixels as being. Dark, or, dark or light.",
			"Just having some amount of brightness, and obviously, there's, you know, there's many",
			"examples in this, in this image. So suppose, so the problem is gonna be",
			"looking at a pixel, how dark or light is it? That's what I wanna [inaudible],",
			"reduce this down to. So suppose I, I picked three pixels. Out of that image and",
			"I put them in this table and now I want to think about which one of these pixels is",
			"darkest and lightest. So here's the first pixel and here's the second pixel and",
			"here's the third pixel. And here, I'll zoom in on this a little bit. So I'm just",
			"trying to judge light versus dark. Who's the, what's the lightest, what's the",
			"darkest here? So suppose, if I was just looking at the red values. I'd see that",
			"this first pixel has a red of 200. And then that's, that's just much brighter",
			"than the others, right? I mean, high numbers are bright, 255 is the max. And",
			"zero is black, so. It looks like, oh yeah, this first pixel. 200, that's clearly the",
			"brightest. But then, if I look over. In the at the green value. And then it's",
			"like, oh gosh, but this third pixel actually has a really high value for green",
			"even though it's kinda low for red. So I, I'm not quite sure how that balances",
			"against the other pixels. But it's hard because what it, essentially what we see",
			"is that you can't just look at one of red, green, blue to judge how bright the thing",
			"is, you sorta want to count them all. So, our solution in this case, which I have in",
			"the, the fourth column here, is to compute the average for each pixel. So each pixel",
			"has a red, green and blue value. What I'm gonna do is just compute the average of",
			"those three numbers, and the way to do that. Is you just add'em up, so I'm just",
			"gonna compute red plus green plus blue for each pixel, and then just divide by three.",
			"So that'll give us the average value of the red, green and blue. And that average",
			"value is gonna work as a pretty nice summary of just how bright the pixel is.",
			"Right, so that the average is zero or ten or twenty, some low number. We don't know",
			"what hue it is exactly, but we know it's dark. And at the other end, if the average",
			"is 220 or 240, again we don't know what the hue is but, but we know it's bright.",
			"So the average is going to work as a kind of a summary of the pixel, where it drops",
			"out the hue and just gives us one number, zero to 255, that just captures the",
			"brightness. Now I should say, there's other ways of doing this but just",
			"computing the average is simple and it's fine. It wor-, it's gonna work fine for",
			"our purposes. So in this case, I, I had these three pixels and so here on the",
			"right hand side I just compute the average. And what we see is, really the",
			"third one is by far the brightest. If you, you know look at all three of red, green",
			"and blue, and then the middle one is the darkest and the first one is kind of",
			"medium. Alright. So I can use this. This idea that I've got the average, and it",
			"sort of makes this nice one number summary. I can use this to, convert",
			"something to, gray. So let's try this. So here I've got the, I'll just run this. So",
			"in, inside the loop there's no code here so, if I just run it now we just see the",
			"image unchanged. So I'd like to do is add the code here. To change this to grayscale.",
			"So I should say what my strategy is going to be. So what I'm going to do is in",
			"the loop for each pixel I'm going to compute this average number; so just get",
			"one number. So it might be 27 or 100 or whatever for each pixel. And then I'm",
			"gonna take that number, and set it into the red, green, and blue. So if the",
			"average is 27, I'm gonna make red, green and blue all be 27. And if the average is",
			"211, then I'm gonna make red, green, and blue all be 211. So that, that converts",
			"each pixel into the, the grayscale spectrum we saw before. So first off I",
			"have to, compute, the average here. So I'm just gonna. As I said, add'em up.",
			"So I'll say pixel.getRed() + pixel.getGreen() + pixel.getBlue(). And",
			"then I'm going to put those three inside of this outer set of parentheses just for",
			"the order of operations. So I want to do the addition and then I'll say slash",
			"three. So I'll divide by three. So this does the addition in the parentheses. And",
			"having gotten that sum, divide by three. And I'm just going to store that in a",
			"variable called avg. And this line, it's gonna turn out to be kind of a stock line",
			"for us. There's, there's many little techniques or problems we might wanna do",
			"in the future, where we wanna compute the average, and it, inevitably, the line",
			"would come out like that. Alright, so what'd I say? So my strategy is, I compute",
			"the average, and then I set red, green, and blue to all use that. So",
			"I'm gonna say, pixel.setRed. And then here, I've stored the average. This",
			"is just a variable. So I've stored the number in there. And then, inside here, so",
			"I can just say avg. I'll just go to that variable, and get the number back out. And",
			"likewise, I can say, setGreen(avg) and pixel.setBlue(avg), okay, so let's",
			"try that. Very good. So you can see, this is it works. So it's gone through all",
			"these pixels, you know, red, green or whatever. It's reduced it down to this one",
			"average brightness number and then set that back. So we get this nice sorta gray",
			"scale. So actually. Having tested it on flowers, I'm gonna go back to...",
			"The poppy image which I think appears in one of the exercises. So here if I comment",
			"these three lines out and just run it right now we'll, we'll just see the poppy",
			"image, there it is. So we'll scroll to the right here a little bit. So you can see",
			"that it's obviously, you know, it's got this sorta orange California poppy look",
			"and the faded background here. So now I'll put these lines back. And we can try our",
			"oops, algorithm on that one. There we go, that works very nicely. So you can see,",
			"obviously the, the orange and the green it's all been drained out and each pixel",
			"has been reduced to just, just a brightness. And I like here how the, the",
			"texture on the front of the of the poppy is still, still kinda visible. So, there",
			"you have it, suitable for framing. Alright. So a, a question that often comes",
			"up. Looking at this code. Is. That line, average equals, and then this formula for the",
			"average. Does that need to be inside the loop? It, it, it, it feels like, perhaps,",
			"it could be just here. Up, up, up after the, the image equals sign. And the answer is.",
			"No. It can't be up there, it does need to be inside the loop. And the reason is.",
			"What you could think. That this line sort of sets up a relationship about average",
			"that, must be true for all time like as if its just true at all times as the program",
			"runs. And that is not how a computer code works. A computer code is less",
			"sophisticated than that. What this line does with equals, is it just evaluates the",
			"right hand side. And assigns it into this variable on the left hand side when this",
			"line is run. So if we were to put this up at the top it would just run once and it",
			"would store some number in avg and that would be it. In this case remember we're",
			"inside of this for-loop here. Let me kinda highlight the body. And so this code it",
			"running thousands or maybe millions of times, once for each pixel. And those",
			"pixels each have different red, green, and blue values. Alright, so this sum. Is",
			"different thousands of times. And so what we need is to compute this sum anew for",
			"each pixel. Each time we see a new pixel, we need to redo this math. And so, the way",
			"the equals sign works is it's, it's, it's just evaluated when the computer runs",
			"across it. And so for that reason, because each, each one of these pixels is",
			"different, we, we'll, we need to put it, very often we'll just put it as the first",
			"line inside the for. Just compute the average. So that's why, that's why",
			"that needs to be there. Alright. So, just to kinda summarize. So we've learned this",
			"quality that, if the red, green, and blue, red, green, and blue are all equal, that's",
			"a shade of gray. And we've got this technique where we could compute the",
			"average. And that just gives us this one brightness number, basically, from zero to",
			"255. And that's gonna be, I'm using it here for grayscale. But actually, in the",
			"future, we're gonna use that for some other stuff. It's just a, a useful thing",
			"to know. And, finally I'll say that this line, which I was highlighting before,",
			"average equals add the three up and divide it by three. That's gonna be kind of a",
			"stock line, and so I'm gonna, we're gonna end up using exactly that line later, and in",
			"fact it should show up in some exercises."
		],
		"is_youtube": false
	},
	"video_010": {
		"section": "Week 3",
		"subsection": "Image Logic",
		"unit": "Image Logic",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/3+-+1+-+If+Logic+(16+mins).mp4"
		],
		"video_duration": 1008,
		"speech_period": [
			4.718, 4.495, 4.438, 4.269, 4.495, 4.55, 4.663, 4.745, 4.479, 4.643,
			4.679, 6.293, 5.379, 4.502, 4.558, 4.673, 4.672, 4.559, 5.24, 5.049,
			5.112, 5.428, 5.108, 4.166, 4.28, 4.28, 4.714, 4.638, 4.755, 4.932, 4.696,
			4.858, 5.862, 6.155, 6.174, 7.009, 6.355, 5.358, 5.031, 4.564, 4.677,
			4.402, 4.127, 4.182, 4.622, 4.567, 5.827, 4.384, 4.267, 4.618, 4.618,
			4.924, 5.03, 5.293, 5.129, 4.31, 4.31, 4.419, 4.301, 4.577, 4.417, 4.147,
			4.47, 4.739, 4.632, 4.362, 5.713, 5.943, 5.511, 4.183, 4.397, 4.236,
			3.861, 5.709, 3.979, 3.729, 3.879, 3.979, 4.654, 5.318, 6.205, 4.753,
			4.657, 4.622, 4.607, 4.722, 5.621, 5.715, 4.527, 4.553, 4.276, 4.832,
			4.22, 5.021, 4.881, 5.266, 5.33, 4.606, 4.844, 6.052, 6.123, 5.764, 5.403,
			4.322, 3.995, 4.302, 4.302, 3.943, 4.184, 3.557, 4.167, 4.014, 4.116,
			4.659, 5.097, 5.033, 4.894, 4.578, 4.81, 4.636, 4.636, 5.306, 5.402,
			2.571, 6.341, 6.184, 4.202, 4.489, 4.604, 4.501, 4.272, 4.434, 3.947,
			4.315, 4.74, 4.74, 4.986, 4.802, 6.495, 6.438, 6.546, 4.191, 5.09, 4.86,
			6.669, 5.951, 5.879, 6.334, 5.958, 5.663, 5.885, 6.031, 5.922, 4.941,
			4.754, 6.019, 6.701, 6.781, 6.303, 5.459, 4.505, 4.684, 4.565, 7.962,
			11.776, 6.191, 4.697, 4.927, 4.526, 4.525, 4.583, 5.358, 5.961, 5.373,
			5.565, 4.603, 4.487, 4.725, 4.858, 5.103, 5.042, 4.918, 8.987, 8.886,
			6.404, 5.998, 5.999, 4.511, 4.357, 4.468, 4.412, 4.744, 4.357, 4.413,
			5.015, 5.476, 5.398, 5.093, 4.271, 2.19
		],
		"transcript_en": [
			"So one theme in computers is this idea of bulk operation. So we have this ...",
			"right now with the for- loop. So you can write a little bit of",
			"code, and the computer takes care of running that code thousands or millions of",
			"times across some big data set. So another theme is, this idea of logic or",
			"selectivity. So, for this, we're gonna be able to write a test, which is true or",
			"false, and then use that to control if a particular piece of code runs or not. And",
			"so, that, in JavaScript is done with a thing called the if-statement, and that'll",
			"be the subject of this section. Combining the if-statement, with the for-loop gives us",
			"a very powerful combination. Both the sort of reach to cover a lot of data, and the",
			"selectivity to sorta pick exactly what we want to do with, different parts of data.",
			"So that'll work. That'll allow us to work on many interesting problems. So here's the",
			"syntax of an if-statement shown in the context of a for-loop. So, it's right here.",
			"So, it starts with the word if. And then, that's followed by a part called the test,",
			"which appears inside of parentheses. And we're actually gonna spend most of our",
			"energy sort of playing around with the test. In this case, the test says, if",
			"pixel.getRed is greater than 160, So for now, our tests will, will pretty much",
			"have this form. Basically, comparing one number, versus another number. In this",
			"case, I'm using greater than or the other one. The one going the other way is the",
			"less than. So following the, so what this does is, obviously, just tests, for this",
			"pixel, is the red value over 160 or not? So that, that's just true or false. The",
			"way the if-statement works is that the test is followed by a set of curly braces,",
			"just like for the for-loop. And inside the curly braces, I'm gonna call that the",
			"\"then\" code. And the \"then\" code could just be any lines of code we want. So the way",
			"the if-statement works, is that when it runs, it evaluates the test. And the",
			"tests can be, essentially for each pixel, this test will be either true or",
			"false. If it's true, the if-statement then goes ahead and runs the \"then\"-code,",
			"whatever that says to do. If the test is false, then the \"then\"-code is just skipped.",
			"So the if statement works as kind of a switch. To just either enable or disable,",
			"the code, inside the, inside the \"then\"-block here. So that, this pattern of having",
			"the outer loop look at all the pixels, and then inside of it putting an if-statement",
			"to sort of control what we're going to do in certain cases, that's going to work,",
			"to solve, many interesting situations. So, the, first problem I'll look at here. Is",
			"suppose, is the, the stop sign. So suppose I wanna take this stop sign and I wanna",
			"change all of the red in the sign to be blue, so it just looks like it looks like",
			"a stop sign from Mars. So my first attempt at this is. Gonna write the test. I'll",
			"just, my test will be if pixel.getRed is greater than 160. So that's just checking",
			"if the red value is kind of large. And, so that's here. And I can do whatever I want",
			"in the \"then\"-code here. In this case I'll just set red and green to zero and",
			"blue to 255, so that will give us that kind of blue appearance. Let's just try",
			"that. So if I run it. So you can see it's... It kind of works. The red parts of",
			"the sign have been certainly obliterated to look all blue. And then we've got some",
			"areas over here and areas over here as well. I should say this technique is, it's",
			"an okay technique but we're going to refine it to come up with something a",
			"little bit better. One thing I want to show is that this 160 here, there's",
			"nothing really magic about that value. For code like this, you would expect to sort",
			"of play around with different values and sort of adjust it so it looks the way you",
			"want. So let's say I wanna... I wanna cover, I wanna have less blue here. Then what I",
			"would want is to make this test more restrictive. Now, the way you can think",
			"about it, is that, it's going through thousands of pixels, and for each one,",
			"it's checking the red value. And, in this case, to say that the red value is over",
			"160, it's sort of a hurdle. It's like, it has to get over the 160. So if I were to",
			"put a bigger number here, like, let's say, 200. And I run that. Well that's not much",
			"difference. Alright, lets try even bigger. How about 240. I run that. There we go.",
			"You see what's happened is I've made the if, the if-test more restrictive. Sort of,",
			"fewer pixels get by. And if I make it up to 250. Really raise that thing. Then all,",
			"the great majority of the pixels don't get past the if-statement. There's just a few",
			"remaining pixels scattered around here that are, red enough to get past that",
			"test. So it can go the other way too. So instead of 160, I could go down to like,",
			"let's say 100. I'm gonna lower the, the hurdle. In that case, then. Yeah, we know.",
			"Way to, many more pixels than I want end up making the test. So that's kind of a",
			"typical step for a lot the, the problems we're gonna look at where we'll have some",
			"num-, we'll, we'll have some structure we want and then we'll be left with some",
			"number that we kinda tweak up or down a little bit to, to get it the way we want.",
			"The other thing I can show here, I'll set this back to 160 is the code, the",
			"\"then\"-code could just do whatever. Now it's under the control of the if-test. Here it",
			"just sets it to blue but I could just as easily say well, let's set red, green, and",
			"blue all to zero. And if I run that, we get a sort of a black stop sign instead. So",
			"we'll, we'll use that sort of creativity later to put different sorts of code in",
			"the \"then\"-section. Alright, so scroll back here, so this kinda works, I'm, I'm",
			"getting the red sign. But I'm also getting, it turns out I'm getting all the",
			"white parts of the sign as well. This, our test effectively gets both red and white.",
			"And you can see that most clearly if you just scroll back to see what the sign",
			"looked like originally, right? It's got these red areas, but it's also got,",
			"obviously, these big white letters. And we're just getting all of that. And. If I",
			"look at this test again, you can sorta see why that is. Well, I'm checking if just,",
			"if red is greater than 160. And so when does that happen? Well, one time that",
			"happens is for a red pixel, you know, a pixel that we think of as reddish. Where",
			"the red value's gonna be high, and the green and the blue will be kind of low. So",
			"it'll be t-, let's say red is 200. It'll be true then. But what about the white",
			"pixels? So, a white pixel might have values like, maybe, red, green, and blue",
			"are all 220. All three numbers are high. And because my test just looks at red, and",
			"says, is it greater than 160? It's gonna trip for the, the white pixels as well.",
			"Both the white and the red pixels for both of those this test will appear true. It",
			"fails to distinguish those cases and that's exactly what's happening here. The",
			"red areas and the white areas both have red values of high, that are high. And so",
			"this test just... It's not, it's not quite distinguishing in those cases. So, we want",
			"to do a little bit better. So I'm going to build up a better strategy that we could",
			"use to solve this problem. So to get started I want to make sort of a graphical",
			"view. Of a pixel. Suppose I've got three pixels. And each pixel obviously is going",
			"to have red, green and blue values. And so suppose what I did, is I made this little",
			"bar chart. So here's the pixel on the left, and here's the pixel in the middle,",
			"and here's the pixel on the right. And all I've done is, I've just graphed, the red,",
			"green and blue values. And so, for any one of these, I could ask, well, for that",
			"pixel. Which color predominates? What sort of cast does it have? So here for this",
			"pixel, I'd say it's red. You can see the red just sticks up the most. For this",
			"middle pixel I would say blue. It has kind of a blue cast. And here this pixel, even",
			"though the pixel itself is much darker, I would say that it has a greenish cast. In",
			"all three of those cases what's going on is. I think intuitively, we're kinda",
			"looking at the three bars and asking well which one pokes above the other two. And",
			"that, that is a reasonable way of thinking about well what color cast does that have?",
			"So, I'll remind you, sort of have to bring in here, in last section we had this idea",
			"of the average of a-, of a pixel, so the average was going to be, averaging the",
			"red, green, and blue values to come up with sort of an average between those",
			"three. So I can combine that. With my little bar chart here. Where for this",
			"first pixel, I could take the red, green, and blue values and average them and I",
			"could think of that as sort of a line. And the line is going to be kind of in the",
			"middle of the heights of the bars. Because it is right? It's going to be shorter than",
			"the tallest one and taller than the shortest one it's going to be kind of in",
			"the middle somewhere. So with the average. It, it allows us to pursue the earlier",
			"strategy, but now it's a little more concrete. We'd say, like, well, right.",
			"This first one is reddish, and we see that the red bar is poking above the average,",
			"and the other two aren't. In this middle one, we see that the blue bar is poking",
			"above the average. And here, here we see the green bar is poking above the average.",
			"So, that just gives a kind of. A little intuition about how it is I could decide",
			"what cast a color has. The nice thing about the average is it's just a number.",
			"It's just a single number. And so it's gonna be pretty easy to incorporate into",
			"an if test. So for example, I, I could write the tests. If pixel.getRed is",
			"greater than average. Right, getRed is a number. Average is a number. And then, if",
			"you look at this left pixel, it's going to be true. Yeah, the red is greater than the",
			"average. And for these other two pixels, it's going to be false. In both cases, the",
			"red is below the average. And so, this suggests sort of, the strategy I'm going",
			"to pursue. For detecting what cast a pixel has by first computing its average, and if",
			"I wanna look for red or green or whatever comparing that to the average to decide if",
			"that cast is present. And this is gonna work pretty well. So let me revisit",
			"my stop sign problem. And now what I'm going to do is for the test, as I was",
			"describing earlier, I'm going to write the test as pixel.getRed, greater than",
			"average. And then, actually, I'm gonna multiply times, sort of, an adjustment",
			"factor. I'm just using the average, just by itself, is, really is absolutely what",
			"we want. We want some sort of a number that we can tweak. So here's, here's the,",
			"here's the real code down. So I'm, I'm looping over the whole image. As in the",
			"last section, I'm gonna just compute the average between the red, green, and blue,",
			"so I can use that for my comparisons. And then here, I'm gonna write the if-test,",
			"as, as, I've said. Is the red greater than the average, and then, this is sort of the",
			"adjustment factor that we'll play with. Alright, so let's try that. All right. So",
			"what we see is, I'm, we're getting the sign pretty nicely, but, you know, there's",
			"way too much extra blue over here. This is just, we have to fix the adjustment",
			"factor. So I'm just going to try, making the hurdle a little higher. So if I say",
			"1.3 here, make it a little higher, and that cuts it down. We still have a little",
			"bit over here. I could go up to, 1.8. Make the hurdle much higher. Okay well you see",
			"I get the sign but I, I lose this 4-way thing here. Apparently those are slightly",
			"different shades of red, so I'll go down to, let's try, 1.4. There. I think, I think",
			"1.4 looks pretty good. Right, where there's a little bit of blue here, a",
			"little bit of extra coloring over there that I'm gonna tolerate, but it seems like",
			"in terms of the sign, we've dialed in on the red areas pretty nicely. So. So that",
			"shows this technique, working pretty well. I should just show that this factor, you",
			"could also try numbers less than one, so I could try like 0.9 and then it's like",
			"super impressive. So I'll put this back to 1.4. There we go. That's nice. That's dialed in on the sign.",
			"Alright, so let me try a second example of this technique. I want you to imagine that",
			"you're visiting Stanford sometime and you park here and you get a parking ticket.",
			"Now philosophically we know it's best to sort of take in the world as it has",
			"actually happened. Don't think too much about what you wish had happened. However",
			"in this case, we're gonna try and fix it, fix history in code. So what I wanna do is",
			"take this picture and fix the red curb to not be red anymore, to be gray. So here's",
			"the code for that. We'll try different variants of this. So I've got a curve.jpg",
			"is this image. I'm going to loop through all the pixels and compute the",
			"average. And so now we're left with. The test. So I'll say if pixel.getRed is",
			"greater than average. Whatever here, we'll start with a factor of 1.5. And as my",
			"first attempt at this problem, what I'm gonna to do is set the pixels to just sort",
			"of a middle gray, so 120, 120, 120. We'll just sort of paint gray on there. Alright,",
			"so let's try that. Alright so what we see is, we're getting too, too little gray",
			"here. So when you're adjusting one of these if, if-tests, you always wanna",
			"think, well, do you wanna make it more or less restrictive? In this case, I wanna",
			"make it less restrictive, right? I wanna get the grey going along here. So I'm",
			"gonna make the hurdle lower. So I'll try 1.4. Hm, that's getting there, let's try",
			"1.3. Yeah keep going, how about 1.1. Oh, too far. Okay, 1.2. Alright, so",
			"this does a pretty good job. I've, I've identified the red curb over here, and,",
			"like, put this sort of flat 120-120-120 gray on there. If you look carefully, I'm",
			"also catching a little bit of parts of the plant that I guess had a little bit of red",
			"cast. And actually, over here on the right hand side, there's these plants that I",
			"guess had sort of a red cast. And I'm, I'm clobbing them up with this, right? With",
			"this gray. So this is, you know, it's pretty good. But what it says in the",
			"problem statement here, is, actually, for part (b). What I'd like to do is instead of",
			"just changing this to 120-120-120 I wanna use the technique from the previous",
			"section, where I say \"Well, look, let's take the red parts of this image, and",
			"change just those parts to be grayscale.\" Previously I did an example where I would",
			"change an entire image to grayscale. Now I'm using the if-test to just pick out",
			"certain regions of the image and just change them to grayscale. And it just turns",
			"out, this is gonna, this'll look better. Beac.. All of this. Let's just see. So",
			"remember the algorithm to change a pixel to grayscale, is to first compute the",
			"average for that pixel, which actually I'm already doing here. And then with that",
			"average number in hand then set the red, green and blue values of the pixel to all",
			"be that average. It happens for this code that's a very small change, instead of",
			"saying setRed(120). I'll just say setRed(avg), and likewise setGreen(avg) and setBlue(avg).",
			"Let's try that. There we go. So you can see here, I've mapped right, sorta put",
			"gray. On here. And it looks a lot better. Because, really, this red curb does have a",
			"pattern of light and dark on it. And by changing each pixel to be gray, but we're",
			"still respecting the light and dark. So that's why, that's why it looks better",
			"here. Also notice the plants, over on the right hand side here, that looked so bad",
			"before. Well they were red plants before. Now we've changed them to kind of gray",
			"plants. But I think, you sort of can't tell, like where it looks fine. So I think",
			"that's a, you know, I think that's a nice solution. All right here. So this just",
			"restates, what I was just saying there. So, I'd say the conclusion for the section",
			"is, mainly, the, just the idea of, of an if-statement, that combines a test with",
			"some then code under the control of that test. And then, I've done a couple",
			"examples using this particular technique to detect. Pixels of a certain color in an",
			"image. So, you know, my standing example of pixel.getRed greater than average times",
			"some factor and using that's kinda dial in on pixels of a certain color. And then",
			"finally we've seen that the then code. Can sort of do anything. It can change it to",
			"blue or change it to red or whatever and certainly we'll take advantage of that",
			"flexibility for solving lots of problems."
		],
		"is_youtube": false
	},
	"video_011": {
		"section": "Week 3",
		"subsection": "Image Bluescreen",
		"unit": "Image Bluescreen",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/3+-+2+-+Bluescreen+(12+mins).mp4"
		],
		"video_duration": 714,
		"speech_period": [
			4.801, 4.569, 4.786, 4.481, 4.428, 4.588, 4.801, 4.267, 3.99, 4.268,
			4.404, 4.118, 4.691, 4.633, 4.071, 4.212, 4.42, 4.159, 4.004, 4.108,
			4.406, 4.538, 5.09, 5.028, 5.211, 4.064, 3.886, 3.936, 3.986, 4.188,
			4.188, 4.857, 5.309, 4.924, 5.181, 5.181, 5.524, 4.18, 3.722, 4.644,
			5.027, 4.91, 5.561, 5.275, 4.689, 5.146, 5.593, 4.777, 4.659, 4.776,
			4.659, 4.658, 5.141, 5.443, 3.901, 4.0, 3.853, 5.138, 5.034, 4.847, 4.442,
			4.673, 4.719, 4.862, 4.554, 4.923, 4.611, 5.098, 5.224, 5.606, 5.759,
			5.399, 5.975, 5.87, 5.605, 5.138, 5.539, 5.235, 4.471, 4.298, 4.643,
			4.528, 4.413, 4.7, 6.043, 5.076, 5.743, 5.41, 7.224, 6.371, 6.208, 7.872,
			16.339, 7.927, 4.095, 3.742, 3.894, 3.792, 4.197, 3.792, 3.741, 7.888,
			4.907, 5.354, 5.371, 3.915, 4.338, 4.18, 4.55, 4.021, 4.391, 4.497, 5.31,
			5.42, 6.5, 8.238, 6.726, 6.811, 6.257, 4.246, 4.364, 4.072, 5.706, 5.544,
			8.866, 5.514, 5.514, 5.234, 5.514, 5.514, 5.542, 4.714, 5.792, 6.355,
			4.734, 4.115, 4.79, 4.566, 4.565, 4.396, 2.762
		],
		"transcript_en": [
			"For this section we're going to take the techniques we've built up so far, with the",
			"for-loop and the if-statement and the average technique to detect color areas,",
			"and put them together to do a real movie special effect. So this special effect is",
			"called blue screening. And I should point out that what you think of as video data",
			"is really just made of a series of regular still images, just showed something like",
			"twenty to 60 times per second. So for our purposes we'll just do the special effect",
			"on still images, and you can see how it'll generalize to movies. So the idea is it'll",
			"be a very simple model. Imagine I have the stop sign image. So we've, we've talked",
			"about the code to detect the red area inside of here. So for the blue screen",
			"effect, we're gonna have a second image which I'll call the, the background image.",
			"And the idea is, we'll detect the red areas, as we've done before. But whenever",
			"I get a pixel over here on the red area, I wanna think about the sort of",
			"corresponding pixel over from this other image. And I'm gonna copy that pixel over",
			"to sorta fill in all the red area over here with pixels over here from the other",
			"image. Sorry, it's a slightly more detailed diagram of it. So, I'll do",
			"examples in a little bit. But we're going to have a for-loop where we're kind of",
			"looping through this image. And we'll have an if-statement which is going to identify",
			"some of the pixels up here. So let's say we've identified this pixel in the left",
			"image. So that pixel has some x-y-coordinate and we haven't messed with the",
			"x-y very much up to now but it, you know, maybe x is 200 and y is 100 or whatever.",
			"So what we want to do is get those two numbers. And then find the corresponding",
			"pixel over here from the other image. So, maybe a (200,100), or whatever it is.",
			"There's some pixel that matches up. So once we've got that corresponding image, a",
			"corresponding pixel from the other image. Then we wanna copy it over, to set the",
			"pixel over here. And you know, how's that going to work, how do you copy a pixel",
			"over? You have to think about, 'Well, what defines a pixel? What makes a pixel look",
			"the way it looks?' And the answer is it's just the three numbers. It's just red,",
			"green and blue. So we're going to write code to sort of get the red value from",
			"this pixel over here and then set that as the red value over here. Likewise for",
			"green and blue. And by setting all those three numbers over we're going to make the",
			"pixel over on this image just look exactly the same as the pixel over here on this",
			"side. So, here's some code, here's our first code example to do this. And rather",
			"than sorta describe the effect, I think in this case I'll just run it so we can see",
			"it, and then I'll talk about what the lines do. So, here we see the sorta as",
			"outlined before, the stop sign with all its all the red areas of the stop sign.",
			"We've substituted in pixels from the leaves image instead. So let me point out the,",
			"the, how the parts of this work. So first off In all of examples up to now, I think",
			"we've just opened one image, but it turns out you can have multiple images. So here",
			"I open a second image, for the leaves.jpeg, and I store that in a variable",
			"called back. So then all this code we've seen before. I'm just looping over the",
			"stop sign and detecting the red pixels. So the interesting action is here inside of",
			"the if-statement. What do we do when we have a red pixel. And it sorta breaks down",
			"to three parts. So these first two lines just call pixel.getX() and pixel.getY(), and",
			"store the resulting values in variables x and y. Now I don't think I've used getX()",
			"and getY() up to now, but what tho-, what those do is just go to a pixel and",
			"retrieve whatever its x, y is out of it, so very analogous to getRed() and getBlue().",
			"So I'm just gonna store those in these variables x y. And then on this line. I",
			"take those two numbers, x and y. Actually I'll sorta read it left to right here. So",
			"I go to the back image, so that's the, the leaves image. And I call getPixel, so I",
			"wanna retrieve a pixel out of it. And then I have to give it some x, y, and in this",
			"case the x and y I wanna use is the x, y that was set right here. So essentially,",
			"it's the x, y of the pixel from the stop sign image, saying, whatever that x, y is,",
			"go get that s, the pixel at the same x, y from the leaves image. So. Once we've got",
			"that pixel, then I'm just going to start another variable called pixel2. So",
			"a natural question would be like, oh well couldn't we just call that pixel? Well we",
			"can't call it pixel, because we're already using pixel to refer to the pixels from",
			"the stop sign image. So, pixel2 just seemed like sorta the most obvious other",
			"name to use. All right, so at this point, I've got pixel2 and pixel2 refers to",
			"the pixel from the background image, from the other image. And now, these three",
			"lines do what I was describing before as a copy. So let's just look at the first one.",
			"So it says pixel.setRed. So we've seen that, like, a 100 times. I'm gonna set",
			"the red value of the pixel from the stop sign image. And what, what am I gonna set",
			"that red value to be? And what I'm gonna set it to be, is, pixel2.getRed().",
			"So I'm getting the pixel from the other image, getting it's red value. So, 160, or",
			"whatever it is. And I'm just gonna set that into the stop sign image. So",
			"repeating that for green and blue, we're just, essentially just, we're copying the",
			"three numbers over. So, in effect, this copies the pixel. So, this is fairly",
			"complicated. I want to do a few examples of this. So let me do a second example.",
			"This is a picture of baby Abby, when she's like six months old. Happy little baby on",
			"her bouncy chair. And later when she's a teenager she can be mad at me for using",
			"this example. So what I'm going to do is, or, what I want to do in this case is,",
			"notice the green areas of the bouncy chair. I want to kind of copy over the",
			"leaves so we get this kind of nature baby leafy effect. And, as, as I recall, there",
			"were basically two things that I needed to do in the loop here. Well first I should",
			"point out, so I'm, I'm going to call pixel.getGreen(), for the, the if-test. So",
			"the first problem was this. Get the, get pixel2. Get the corresponding pixel.",
			"And here I'm going to write it just as one line. So I say, back - so I go to the other",
			"image - back.getPixel. And I'll sort of space it out here. I want to get the",
			"pixel from the other image, and then I have to specify the x, y. And here what I",
			"want to do is, well, I wanna specify the x, y, of the pixel from the stop sign",
			"image. And previously I did that by having x, y variables, and well, that's fine. But",
			"I'm, in this case I'm gonna compact it down to just do it in one line. So really",
			"I can just say, pixel.getX(). So pixel is the pixel from the stop sign image. And",
			"I'll just call getX() and that gets the x-value and then I'll just, I'll put that",
			"directly here inside of. The back.getPixel call. So this it's the same idea as before",
			"but I've just compacted it down to one line. All right, so that one line sets",
			"pixel2 to be the corresponding pixel. And then the second thing we need to do in",
			"the loop is this copy over operation, and that is just literally the same so I'll",
			"just, I'll copy that from up here. Alright. So now get rid of the blank.",
			"These blank lines are harmless. Alright, so let's try, let's try that. Alright. So",
			"you can see we have, we're getting a little bit of the leaf data in here but",
			"it's not it's a little thin. So we need to make this a little smaller. .4 it's a",
			"little bit more, I want more. .2. Just a little bit more and.",
			"Too much. [laugh] All right. So let's try 1.05. Too much for me. Okay, I think",
			"that's pretty good. So you could see, it's sort of, you know, there was green arrows",
			"over here. There's sort of the shadow area that's, I mean, maybe just barely",
			"greenish. And then there was some green blankets over here that we sort of",
			"sprinkled these leaves in. So it's, it's a nice effect. Or, it's sort of eerie,",
			"right, that we've gotten these pixels from the leaf image, and sort of put them into",
			"this other image, and it looks, well, not totally realistic. But you could see",
			"where, with tuning, you could get this real effect. Alright, so let's try one",
			"like the movies. So here is our movie star, monkey. And I've taken a picture of monkey",
			"in front of a blue background. It's just a blue towel. You'll see that monkey is",
			"brown and has kind of a light tummy here and here, this banana is sort of a light",
			"yellow. So if you think of brown and tan and yellow, those are all kind of. On near",
			"yellow, right? So there's a lot of red/green used to make this up. Not a lot",
			"of blue. So separating the monkey from the blue background, in terms of, thinking of",
			"it in terms of RGB, is gonna work pretty well. So here's what I wanna use as the",
			"background. This is a candidate for one of the most famous pictures ever taken. This",
			"is a picture taken by the Apollo 8 astronauts as they were, they were in",
			"orbit. They were flying around the moon, and as they came around here's, the Earth",
			"loomed. Sort of showing the Earth just over the horizon of the moon. Emphasizing it's",
			"just a little lifeboat we're all on. So what I want to do is start with the monkey",
			"image, and for all these blue pixels, I want to pull in, pixels from the moon",
			"image. And so it'd look like the monkey is like, on vacation on the moon. And so I'll",
			"just grab. This code to get started. Let's see. Okay, so what I wanna do is, for the",
			"if, I wanna say if getBlue(). So I wanna detect the blue background right? And if",
			"it's the blue background, then I wanna pull it over pixels from the, the moon. So",
			"here our image is monkey back is moon.jpg I've got my if- statement. And",
			"then, this code is unchanged, right? It's just, get the corresponding",
			"from, it's unchanged from the earlier example. So just get the corresponding",
			"pixel, copy over red, green, blue. So that, that requires no change at all.",
			"Alright, so let's try it. Alright, so it, at 1.5 what's happening here is the if",
			"statement is never firing. I've specified, I've made the hurdle too high. Okay so",
			"let's try 1.3. Oh, just a little teeny hunt. So I'm too high. Let's try 1.1. Huh,",
			"okay. So now you can see, you know, for s, the bluishness of this part of the blue",
			"background was maybe just a little bit more, so we're getting that, but not down",
			"here. So I need to try 1.0. Now it's getting there. We have a little bit less,",
			"so actually we can go under we can go under 1 here so I'll try 0.9 as the",
			"hurdle where I'm just lowering the hurdle. Ooh, that's pretty good. See, there's a",
			"little teeny bit of moon on his chin there. 0.95. There we go, that's pretty",
			"good. We could, we could tweak this [inaudible], I think, three, there's a",
			"little bit of, there we go. I think that's perfect. So, you can see that's, you know,",
			"movie star in laser battles, spaceship, whatever, like. All right. So just to",
			"kinda summarize. In the code you're gonna have two images instead of one and then",
			"you loop through the main image and just kinda the way we've done before,",
			"identifying areas of some color. And then, once you've identified an area that's in",
			"the color you care about, then there's this operation to locate the corresponding",
			"pixel from the other image, and then copy over its red, green, blue values to, to",
			"get the effect done. And as you can imagine. You know, it's pretty easy to",
			"make up exercises that work on this technique."
		],
		"is_youtube": false
	},
	"video_012": {
		"section": "Week 3",
		"subsection": "Computer Hardware",
		"unit": "Computer Hardware",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/3+-+3+-+Hardware+(15+mins).mp4"
		],
		"video_duration": 912,
		"speech_period": [
			4.609, 4.133, 2.141, 7.033, 5.267, 4.9, 4.6, 4.087, 2.433, 3.6, 8.549,
			5.284, 4.515, 2.052, 2.871, 1.393, 3.169, 3.933, 6.267, 5.333, 3.967,
			5.52, 4.513, 5.234, 8.039, 3.827, 1.434, 6.628, 2.438, 4.234, 5.309,
			7.991, 5.105, 8.87, 2.276, 1.482, 4.834, 2.601, 1.865, 7.608, 6.688,
			3.871, 4.4, 3.9, 4.033, 3.115, 3.318, 3.434, 3.933, 9.3, 4.256, 3.39,
			1.287, 6.794, 3.34, 7.3, 7.766, 2.367, 2.865, 6.002, 3.843, 2.99, 6.233,
			6.067, 5.051, 4.737, 7.012, 5.633, 3.734, 4.3, 4.133, 5.667, 6.487, 3.146,
			7.433, 7.1, 3.683, 3.817, 4.934, 3.533, 6.524, 2.176, 4.744, 4.323, 6.433,
			2.2, 5.967, 8.616, 0.95, 5.273, 4.161, 4.633, 5.277, 2.723, 5.543, 6.641,
			6.316, 3.667, 4.3, 6.033, 4.7, 4.7, 7.668, 2.799, 5.0, 6.969, 1.997,
			1.858, 4.04, 4.069, 3.233, 7.667, 5.325, 4.575, 5.3, 2.478, 9.613, 3.876,
			2.366, 5.867, 2.9, 3.01, 2.09, 0.5, 3.7, 6.7, 4.518, 4.04, 2.109, 6.529,
			5.737, 5.467, 4.433, 2.3, 5.794, 5.273, 2.761, 4.272, 2.167, 6.467, 5.866,
			3.937, 1.811, 5.434, 5.452, 8.8, 3.733, 6.4, 2.433, 5.179, 2.821, 6.234,
			7.533, 1.667, 3.6, 5.126, 5.207, 3.933, 4.167, 4.619, 8.081, 3.808, 1.259,
			7.133, 6.004, 4.463, 5.104, 5.129, 4.252, 6.948, 6.844, 4.876, 3.483,
			2.297, 4.53, 5.303, 5.332, 1.468, 7.03, 6.92, 4.087, 4.063, 1.788, 4.312,
			9.034, 6.0, 4.1, 3.6, 4.433, 4.7, 4.167, 2.166, 3.3, 5.69, 0.677, 359093.0
		],
		"transcript_en": [
			"If a computer is like a piano, then the term software refers to the code - what runs on it, like the music.",
			"And the hardware is the physical parts of the thing.",
			"So in this section, I'm going to talk about hardware, physical parts of the computer.",
			"So probably one of the most important inventions of the twentieth century is the transistor.",
			"And this is a little electronic component that can be used to build all sorts of different things.",
			"The most common form of transistor today is built on what's called a chip.",
			"And here's a picture of a chip, that I'm linking to from Wikimedia.",
			"And so a chip is made of a little fingernail-sized piece of silicon.",
			"And then different electronic components can be etched onto the silicon",
			"and this allows you to essentially make the components very, very cheaply.",
			"So the most likely, the most common component put on here is transistors. And you can make all sorts of stuff out of transistors.",
			"So the things I'm gonna talk about later, CPUs and memory and whatnot, those all come down to chips that look like this.",
			"Now a chip like this is said to be solid state",
			"meaning there's no moving parts, there's no gears, there's no wheels.",
			"And in a way, that makes it very reliable.",
			"And as I said before, they can be made pretty cheaply.",
			"And so this is one of the driving forces in the, computer revolution.",
			"I should point out, this is the element silicon, which is like glass.",
			"Not to be confused with silicone, which is like that kinda soft, rubbery stuff.",
			"So, one of the most important forces driving silicon development is this thing called Moore's Law.",
			"And so this was formulated by Gordon Moore. And it's just an observation about",
			"how the manufacturing of chips with transistors on them tends to go.",
			"And what the law says is that every 18 to 24 months, approximately,",
			"the number of transistors which can be fit onto one of those chips doubles.",
			"So, you could sorta take that two ways. It might mean that for each year when I make a chip",
			"after it doubles, well, now I can make that same chip but I get twice as many transistors.",
			"So, in some sense it... it's more powerful.",
			"Or you can think of it as just that the transistors are just getting cheaper and cheaper.",
			"Now Moore's Law is not some law of nature, like the law of gravity.",
			"It's just an observation about how transistor manufacturing tends to go,",
			"but it's been true for over twenty years, and it seems to be continuing to be true.",
			"So. Moore's law is why you can have computers now that are getting cheaper and they're showing up in thermostats and microwaves.",
			"Essentially it's the doubling quality of Moore's law,",
			"making what used to be a computer that would fill a room and cost millions of dollars now fit in the size of a sugar cube and cost under a dollar.",
			"That is the effect of Moore's law when you think of doubling.",
			"Well, just one doubling it's not that big.",
			"If you have ten doublings that's a factor of a thousand.",
			"So that's how you get from the room down to the sugar cube.",
			"The other way you can think about this just in your own life,",
			"is imagine buying... maybe six years ago buying a 50 dollar mp3 player.",
			"had some amount of capacity. Maybe it had one gigabyte of capacity.",
			"And then a few years later, with the same $50, if you bought an mp3 player it might have two or maybe four gigabytes of capacity.",
			"And then a few years later, for the same $50, well now they all have eight gigabytes.",
			"And what's going on is, well, basically there's a chip in the mp3 player that does the storage.",
			"And by Moore's law, the manufacturing of that chip...",
			"because there's more transistors that fit in there,",
			"for pretty much the same price they can offer more and more capacity.",
			"So that is the exponential quality of Moore's law.",
			"So, to talk about computers, I'm gonna talk about the major parts that go into one.",
			"And largely - oh, and here's a little picture of a computer - I'm going to say that there's the CPU, which is sort of the brains of the thing;",
			"and then there's RAM, which is sort of the temporary scratch pad memory;",
			"and finally, disk or flash for persistent structure.",
			"So we'll talk about each one of those parts.",
			"So, probably the most important part of the computer is the CPU, which stands for Central Processing Unit,",
			"and it's inevitably described as kind of \"the brains\" of the computer. It actually does the computing.",
			"So...  the CPU has certain fairly simple operations that it can perform,",
			"and so when you say that a computer runs at two billion operations per second,",
			"really that's talking about the CPU: that means the CPU can do two billion things per second.",
			"And that's a very typical number for 2012.",
			"To say that it's the brains, we have to think about, well, the 'run' button in the earlier coding exercises,",
			"where you had the code, and then something was executing the code.",
			"Really, that was the CPU that was taking in that code and doing it.",
			"So, before I talk about, RAM and disk and those things, I need to have a brief word about bytes.",
			"So a byte is the, sort of, most common measure of information storage.",
			"So one byte refers to approximately one letter that you might type,",
			"like a T or an X or something. That fits in one byte.",
			"Later on I'm gonna talk about RAM and disks and things like that. And those are all the sizes. How much information can they hold?",
			"Those are measured in bytes. And later on, I'll go into more detail about the different sizes that you might have.",
			"For now, I'll just say that one megabyte is a common size. That's about a million bytes.",
			"And one gigabyte is about a billion bytes.",
			"So,with that in mind, let's go to our second bit of technology here...",
			"So RAM stands for Random Access Memory - or we might just say 'memory'-",
			"and RAM is the temporary storage used by the CPU",
			"to hold data and code that it's using right then just in the course of doing computation.",
			"So in the code when we said something like 'new SimpleImage (\"flowers.jpg\")'",
			"and I would say, 'well, this kind of loads the data into the computer' -  really what was happening is the bytes of that data were being loaded into RAM,",
			"and once they were in RAM then the CPU could do operations on them.",
			"could do operations on them. So when you wrote code like 'pixel.setRed(0)' - really that was",
			"going into RAM and manipulating of the data; actually making a change.",
			"So, that sort of active stuff happens in RAM.",
			"The main thing about RAM is that it is not persistent.",
			"What that means is - when the power is removed, it just goes blank.",
			"So it just works well as fast, temporary storage, but it's not long-term storage.",
			"And you can kind of, I think you can have some intuition about that if you think about when you're working on",
			"some, you know, paper, and you're typing in a word processor and then suddenly your computer shuts down...",
			"maybe it crashes or the power goes out or something.",
			"And so you have a sense that, well, whatever you were just... those last few bits you were typing. Those are gone.",
			"Those were just in RAM. And the version that you have is the version that you saved.",
			"So in a word processor when you hit the 'save' command, really what you are doing is",
			"you're taking the version that is in RAM - this kinda temporary version - and you're writing it to disk.",
			"(mumbled) I'm just getting something, and we'll talk about it in a second.",
			"So that kinda gives you the sense of what does it mean to be persistent - like disk, or volatile - like RAM.",
			"Alright, that leads us to our third hardware component: persistent storage.",
			"So, the main thing about persistent storage:",
			"It's a big area of bytes, but when you remove the power the data stays there.",
			"So for the longest time persistent storage in computers has been done with a hard drive.",
			"So a hard drive has a spinning disk in it. And there's a little head that writes magnetic patterns on the disk,",
			"and it does that to record 0's and 1's, and store data.",
			"And so when you... if you have a computer and you hear kind of a high-pitched 'whining' sound,",
			"what you're probably hearing is the hard drive disk spinning in its little enclosure.",
			"More recently there's been advances in what's called a flash drive.",
			"And so a flash drive also stores 0's and 1's persistently, but it's solid state.",
			"It just uses a chip - a so-called 'flash chip' - so there's no moving parts, it's very small, it's very reliable.",
			"So, flash chips are used to make those little USB thumb drives",
			"or SD cards, that you might put into a camera or something like that.",
			"It used to be that per byte, flash was much more expensive than hard drives, and so hard drives were used for everything.",
			"Sort of following the pattern of Moore's Law,",
			"flash chips have been getting cheaper and cheaper.",
			"And so it may be that the hard drive kinda dies out for day-to-day usage.",
			"Like, we don't need it: we can just use these chips. So that remains to be seen.",
			"So when you've got a hard drive or a flash chip",
			"that just has this big area of bytes to do persistent storage, um, just on its own it's not really ready for the user to use.",
			"Usually what happens is, the hard drive or flash drive is organised with what's called a file system.",
			"And so the file system is just a way of organising this big area of bytes",
			"and giving it that sort of familiar structure of files and folders.",
			"And they each have names, and you can move them around and stuff.",
			"And so a file is really just a way of taking some area of, you know, 100,000 bytes, and assigning a name to them.",
			"So saying, 'look, this is flowers.jpg'. And flowers.jpg, that name, refers to those 100,000 bytes.",
			"And then the user can copy it, or move it around, or whatever.",
			"So, the file system just facilitates for you, seeing what data you have on there",
			"and moving it around and organising it.",
			"So that's our quick introduction.",
			"So actually what I'd like to do is show you just pictures of actual hardware.",
			"So, this is a picture of a motherboard.",
			"This is a computer, a Shuttle computer, I bought in I think 2008, and then it broke.",
			"So it became my little demo computer.",
			"So this was a cheap computer, about $200 with all the parts.",
			"So this is the motherboard all the electronic components plug into.",
			"And right here in the middle is maybe the most important component. That's the CPU.",
			"So let's zoom in on that.",
			"So, if you kinda zoom in and look at the CPU, this metal package has the CPU chip in it.",
			"And I'm gonna flip it over. If you flip it over you see there's all these gold pads here.",
			"So the CPU is the most complicated chip on here and so it has a very large number of connections,",
			"electrical connections to the motherboard.",
			"And so then I can look again at my Wikimedia image, and now you can appreciate...",
			"...well, so there's these little tiny wires around the outside. So these connect to pads on the package",
			"- the gold pads we were seeing -",
			"and so inside the package they connect to little tiny spots around the chip",
			"in order to get the electricity into the transistors on the side here.",
			"The other thing I'll point out here is this copper thing. There's a second chip underneath here.",
			"This is called a heatsink. So, the chip, because it has electricity running through it, it can heat up,",
			"so there needs to be a way of dissipating that heat.",
			"This is made of copper: copper's really good at conducting heat,",
			"and so just by bolting that on there, it keeps the chip cool enough to operate.",
			"There used to be another heatsink on top of the CPU here, but I removed it. Just so I could take it apart and show it to you.",
			"All righty. So that's the CPU in the, uh, in this computer. So now let's look at the RAM.",
			"So if you look at the side of the computer here, this is the RAM.",
			"It's on a little separate card. And in this picture I have removed the card.",
			"So the card fits into the slot here, so that's RAM.",
			"So that's about 512 megabytes of RAM.",
			"This is some years ago. You probably couldn't buy a RAM card that small nowadays.",
			"So, you can see there's two chips here and there's two more chips underneath the stickers.",
			"So this was made with four chips. Probably by Moore's Law, when this card was manufactured a few years before,",
			"it probably used to be eight chips.",
			"And then, by Moore's law, they can fit more under each chip and so they can just save money.",
			"So, for the same 512 megabytes they could use fewer chips, so it's cheaper.",
			"So that's...what do we have...CPU and RAM. So the last thing we need is persistent storage.",
			"So, for this computer, persistent storage was provided by this. This is a hard drive.",
			"So this is a three and a half inch hard drive - very typical size for a desktoop computer.",
			"So this is where there's the spinning magnetic disk in here.",
			"And this connects to the motherboard by this little SATA cable, which is a standard thing.",
			"So those are the three parts of a computer.",
			"That was a $200 computer, and it sorta did everything you'd want a computer to do.",
			"More recently now we've got this alternative to the hard drive.",
			"So this is a USB flash drive, or sometimes called a thumb drive.",
			"So it's, you know, it's tiny. And I took this one apart.",
			"And so if you look inside of it, this is a flash chip.",
			"So this is the chip that just stores persistent data, little 0's and 1's, as little groups of electrons.",
			"So this is the thing that's competing with the hard drive.",
			"So this is a one gigabit chip, so it stores one billion bits.",
			"And later on we'll look at how many bytes that might be. So that's a thumb drive.",
			"This is an SD card, which is just a similar, you know, just an alternative to the thumb drive.",
			"It's really just the same technology; it's just a different shape basically.",
			"So this is the sort of thing you would use inside of a camera.",
			"So as a last example, looking at that big computer...",
			"So, one of the effects of Moore's Law is that you get these cheap little computers that can sort of fit into different places.",
			"So a little computer on a chip is known as a microcontroller.",
			"So the idea is, that instead of having all these separate chips",
			"you can fit the CPU, the RAM, and the persistent storage all onto one chip.",
			"And it's not gonna have a lot of power, but it's gonna be cheap. And Moore's Law has made that possible.",
			"So microcontrollers, now, you can buy essentially the whole computer for under a dollar,",
			"and it's just on the one chip. So these are the kinda computers - or I should say microcontrollers -",
			"that you would find in a thermostat,",
			"or they're probably scattered around your car doing little computer functions.",
			"So, a neat example of a micro-controller is this guy. This is an Arduino board.",
			"And this is a free and open source board, just offered by artists or hobbyists, or just for kinda playing around.",
			"So this here. This is the chip; this is the micro controller.",
			"So, it has a little bit of RAM, a little bit of CPU, and a little bit of persistent storage",
			"just all on there. And then it's put on this board with some other support chips:",
			"so, this is a USB chip, and it's got some power chips here to just make the whole thing work.",
			"So, you can buy a version of this I think for about $20.",
			"And the idea is, it's just a little computer,",
			"so it can read sensors or switches, or control little lights or whatever.",
			"So it's just a fun way to play around and make, like, an art project, or something like that.",
			"So if you like working with your hands and you like wires,",
			"then this is another form of computer that might be good to play with."
		],
		"is_youtube": false
	},
	"video_013": {
		"section": "Week 3",
		"subsection": "Optional Video: Moore's Law Flashlight (2:35)",
		"unit": "Moore's Law Video",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/hardware+moore.mp4"
		],
		"video_duration": 154,
		"speech_period": [
			2.99, 3.931, 2.87, 1.79, 3.67, 4.75, 0.3, 3.92, 0.38, 3.919, 3.13, 0.712,
			3.75, 2.309, 4.471, 3.989, 4.031, 3.28, 4.5, 3.959, 2.06, 4.121, 1.09,
			4.109, 4.441, 2.72, 2.47, 4.35, 1.129, 3.621, 4.15, 2.549, 0.371, 3.57,
			3.129, 1.25, 4.43, 3.671, 1.52, 3.379, 2.011, 3.39, 3.25, 0.38, 3.4,
			3.509, 4.181, 3.14, 3.16, 3.25, 2.629
		],
		"transcript_en": [
			"this is just a short, neat Moore&#39;s Law example",
			"this is a maglite brand XL 200 flashlight",
			"it&#39;s not the fanciest for brightest flashlight you can buy it just kinda",
			"medium fancy in medium right",
			"and I like that uses just regular AAA batteries",
			"so I with LED technology and flashlights that this is a problem that they cannot",
			"be",
			"very very bright and so you to want to have some adjustment right so it&#39;s not",
			"just",
			"super bright all the time um so you want to be",
			"the brightness to be adjustable but you still want to be waterproof and pretty",
			"rugged",
			"so that suggests well you don&#39;t have like a knob on here you turn you could",
			"just imagine that breaking off for causing all sorts probs",
			"so this flashlight solves that problem in a kind of neat way so the way it works",
			"so I will click it on here comment click on hold the button",
			"and then as I move my elbow what happens is",
			"it translates the rotation of the Flash Lite",
			"into brightness so at this position it&#39;s full bright and then as I rotate",
			"down it goes down to like 10 percent bright so what&#39;s going on is there&#39;s an",
			"accelerometer chips sort of a gravity",
			"measuring chip inside here and inside the flashlight it can measure just in",
			"degrees right what",
			"is the rotation up the flashlight and it&#39;s very easy for a computer",
			"to notice what the degrees were right when I first click the button",
			"and then to just measure what the difference is you know ten degrees or",
			"twenty reason just translate that into a brightness setting",
			"very natural little you know inside a loop a little truck little translation",
			"for the computer to do",
			"arm now we could quibble if like this is really a",
			"great interface because it&#39;s not something you would think was there just",
			"when you pick a flashlight up right that by moving your elbow around around and that&#39;s going to adjust it",
			"",
			"you probably have to read the instructions arm but given that I still",
			"think it&#39;s a pretty elegant way to get the information into the flashlight",
			"without requiring a hole",
			"I&#39;m so I think that&#39;s neat now really what&#39;s going on",
			"I would say this is a moore&#39;s law example  twenty years ago it would have been",
			"crazy talk about",
			"miniturizing a computer and putting it inside a flashlight I do have been too",
			"expensive and too big in taking too much power",
			"and now none other things are a problem and so",
			"with the computer chip available it is sort of enables creative solutions like",
			"this",
			"usually think of Moore&#39;s Law as arm",
			"being about more powerful computers course that&#39;s true",
			"but equally Moore&#39;s Law is about computers becoming more inexpensive",
			"and as a result showing up in more",
			"and unexpected places and solving problems and i think thats",
			"this is a nice example that so Moore&#39;s Law",
			"it&#39;s not just the law it&#39;s a good idea"
		],
		"is_youtube": false
	},
	"video_014": {
		"section": "Week 3",
		"subsection": "Optional Video: How a Hard Drive Works (6:00)",
		"unit": "Hard Drive Video",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/hard+drive.mp4"
		],
		"video_duration": 363,
		"speech_period": [],
		"transcript_en": [],
		"is_youtube": false
	},
	"video_015": {
		"section": "Week 3",
		"subsection": "Bits and Bytes",
		"unit": "Bits and Bytes",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/3+-+5+-+Bits+Bytes+1+(9+mins).mp4"
		],
		"video_duration": 563,
		"speech_period": [
			6.583, 6.133, 4.837, 5.224, 5.159, 5.418, 5.878, 5.646, 5.17, 5.726,
			5.987, 5.986, 5.968, 5.368, 5.162, 5.436, 5.022, 4.406, 4.35, 4.519,
			4.689, 4.124, 5.657, 5.631, 4.989, 4.442, 4.807, 4.867, 4.421, 4.418,
			4.472, 4.784, 4.976, 4.977, 4.916, 4.977, 4.623, 4.456, 6.739, 4.521,
			4.52, 4.576, 4.464, 4.632, 4.632, 4.512, 4.555, 4.278, 4.305, 4.417,
			4.194, 4.529, 4.193, 4.585, 4.441, 5.009, 4.762, 5.195, 4.948, 4.885,
			4.886, 4.57, 4.737, 4.678, 4.796, 4.797, 8.344, 4.264, 4.427, 5.042,
			4.979, 5.104, 5.042, 4.758, 5.783, 5.927, 5.859, 6.362, 6.486, 5.651,
			5.582, 4.531, 4.834, 4.998, 4.572, 4.8, 4.857, 4.115, 4.686, 4.571, 6.837,
			7.697, 5.851, 5.245, 6.32, 6.149, 6.071, 6.622, 6.721, 5.954, 8.482, 6.35,
			6.852, 6.238, 5.212, 5.564, 5.916, 1.864
		],
		"transcript_en": [
			"So in this section I'm going to talk right at the smallest level inside of the",
			"computer at individual bits and bytes. So, a bit in a computer is the smallest amount",
			"of storage that you can have, like an atom. So a bit just stores a zero or a",
			"one. Those are the only two states it can do. So you may have heard the expression,",
			"oh well, in computers, you know, it's all zeroes and ones. That's referring to bits.",
			"Everything in the computer is built up out of this larger and larger collections of",
			"these simple bits which is just zero and one. So In the hardware, Anything that",
			"can, is capable of taking on two different states and when it takes on one state it",
			"can stay in it. That's how you can represent a bit in hardware and there's a",
			"bunch of different ways of doing it. I've actually just as a prop. I built this bit",
			"here. So this is a bit made out of a tennis racket with some plastic in it. And",
			"the way this works is that it has two different states. So I'm gonna just call",
			"the state the zero state, and then I can push it to the other state. The plastic",
			"snaps and it stays, we'll call that the one state so I could switch it back to",
			"zero. Zero, turn around, there's one. So, it's a trivial example but at the hard",
			"rail of it shows, we have few have two different state and its stable. When you",
			"put it in a state, it stays. That's enough to represent a bit in the computer and we",
			"see different forms of it so with the transistor, the two different states are",
			"done by having little tiny groups of electrons. On the hard drive platter the",
			"two different states are done by having either a little area set to either North",
			"magnetism or South magnetism and later can come back and look, you know just say oh",
			"well, we'll say if it's North, that's a one and if it's South, it's zero or",
			"whatever. So, the bit just by itself, it's too small to be good for anything. It's",
			"just, you know? Zero and one, So, really what we're gonna do is to group eight bits",
			"to make a byte. And the byte is just this very common unit of measurement. So, if an",
			"example byte is written out, I sort of think about it like this. Like well,",
			"you're gonna have eight digits but the digits are binary so each one is just a",
			"zero or a one. And so, any eight, any byte we could think of is just gonna be this",
			"pattern of eight 0's or 1's. As I mentioned before a byte in the real world",
			"you can think of it as sorting kinda one type letter so it's really, it's pretty",
			"small. It holds, holds very little but we can you know build up other measures out",
			"of it. So the question I wanna look at is. Exactly how much can one byte hold? And I",
			"wanna work out the math for that. Now I'm not gonna hold everyone responsible for",
			"the details of this but I wanna go to the derivation just so you can see it. So",
			"the question I'm going to explore is, if I have a number of bits, how many patterns,",
			"hHow many distinct patterns can I make with those bits? And I'm gonna; first of all",
			"just consider either one bit, two bits, or three bits. So I, I've put these in a",
			"little table. So if I have one bit, I'm gonna say, this one you could do on your",
			"head. There's just two patterns. Either it's a zero or it's a one. There's no",
			"center pattern and that's it, two is all we can do. So supposed we've got two bits so",
			"I'm gonna imagine putting the two bits next to each other so there's like a left",
			"bit and a right bit and then we can work out the patterns for that. Well, let's see",
			"there's the pattern where both bits are zero then there's the pattern where the",
			"left bit is zero and the right bit is one and then going the other we can have the",
			"left bit be one and right bit be zero and then finally there's the case where both",
			"bits are one so at two bits I can get four patterns. Now, for three bits it gets a",
			"little more complicated so I'm gonna, I'm gonna sort of break the problem down and",
			"walk through how many patterns that's going to make. So for three bits, the",
			"trick is gonna be, so here's the three-bit case down here. Just consider so I'm, I'm",
			"imagining I have three bits next to each other, just consider the left most bit.",
			"Let's just isolate on the left most bit. And, there's only two possibilities.",
			"Either the left most bit is zero or the left most bit is one, that's the only two",
			"possibilities. So let's just consider the case, just supposed it's zero. Just",
			"supposed it's a zero, so that's gonna give me this top row. Well if I just lock the",
			"left most bit at zero, then I've got this other two bits at the right of it. But",
			"actually we already worked out how many patterns are possible with two bits that",
			"might reappear, just four, that's just four patterns. And so if I lock the left",
			"most bit at zero there's, then I get four patterns cuz I have zero and then each one",
			"of the four patterns for two bits so in this highlighted row that gives me four.",
			"So that was the case where the left most bit is zero. What's the other case? The",
			"other case is that the left most bit is one and if I lock the left most bit at",
			"one. You know I just got those four patterns again like I still have two bits",
			"to the right and so I get in a sense another copy of the four patterns that can",
			"be made with two bits. So for three bits it works out actually that there eight",
			"patterns and I'm thinking of them as kind of like well, there's the four with the",
			"left most bit of zero and then there is four again with the left most bit as one.",
			"So if you, in general, you can see it here even my little table, for each row, On the",
			"next row, you're basically adding a bit to the left and so what that's gonna do is",
			"just double the number of patterns that you have in the row above. And so I've run",
			"through the math here so with one bit we saw that there were two patterns, just a",
			"zero or one. So then when I go to two bits, I get four patterns and three bits, I get",
			"eight patterns. But if you just look at the numbers here you can see its doubling.",
			"It goes two, four, eight, sixteen so each time I add one bit which I'm thinking sort",
			"of going out to left, it doubles the number of patterns I can make. So if we",
			"just follow this through, it goes 32, 64, 128 and with eight bits there are 256",
			"different patterns possible. And of cour se eight bits that's the size of a byte,",
			"so it works out. One byte can store 256 different patterns. Mathematically in",
			"turns out to be exponential so with n bits I can make two to the nth different",
			"patterns, Two to the nth power so the case I wanna focus on is one byte. And here's",
			"what you need to know. So, one byte is a group of eight bits. And I've sort of gone",
			"through the derivation that with eight bits, 256 different patterns are possible.",
			"So, I think the natural question is, where well, pattern, what's that good for?",
			"Really what I wanna do is think about, how can I use those patterns to represent",
			"numbers? So the way I'm gonna think about numbers is each number is gonna get one of",
			"the 256 different patterns and I'm not gonna get into details of, of how they're",
			"assigned but each number needs its own and it can't share a pattern with some other",
			"number. So the way when I think about it, is just bullet. Let's give some pattern to",
			"number zero. So we, we've got 256 patterns, we'll give one of them to zero",
			"and then we'll give another pattern to 1 and another pattern to 2 and another",
			"pattern to 3 and so on. And we'll just try to keep going until we run out of",
			"patterns. So let's go to work, is we get up to 254 and then the last pattern, we",
			"have one left we'll use for the number 255 so 255 will be the maximum representable",
			"number in one byte. I think a reasonable question would be, okay I got 255. Why",
			"isn't it 256? We have 256 different patterns and the reason it's not 256 is",
			"that we use one pattern for number 0. So we use that one up and then if you just",
			"count up the number of, the number of numbers I have here. 255 is gonna require",
			"the last pattern; pattern number 256. So, turns out if you think of what can be",
			"stored in one byte as a number, the counter representation is that one byte will store",
			"numbers between zero up to 255. So 255 is the max. So this actually came up earlier",
			"when we were looking at code like pixel.setRed and what number did it take?",
			"Pixel.setRed takes a number in the range 0-255. Why? Why? And the reason is",
			"that the red value for pixel in the computer is stored in one byte. And that",
			"byte can store numbers in the range 0-255. It's just, that's it. It cannot store",
			"300 or -12 or whatever. So that's why. In this, in this scheme, setRed takes",
			"the numbers 0-255. It actually reflects that the red value - and this is",
			"also true for the green and the blue values - each one of those is stored by one",
			"eight bit byte and so that's why the range is exactly zero to 255. So, the mystery of",
			"the 255. Now you know."
		],
		"is_youtube": false
	},
	"video_016": {
		"section": "Week 3",
		"subsection": "Kilobytes Megabytes Gigabytes",
		"unit": "Kilobytes Megabytes Gigabytes",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/3+-+6+-+Bits+Bytes+2+(7+mins).mp4"
		],
		"video_duration": 409,
		"speech_period": [
			5.01, 4.639, 5.613, 5.763, 6.293, 5.92, 6.397, 6.718, 5.861, 5.643, 5.644,
			5.781, 5.448, 4.89, 4.665, 4.947, 4.327, 5.433, 5.742, 6.033, 5.379,
			5.888, 5.57, 5.656, 5.726, 5.587, 5.725, 5.174, 4.692, 4.407, 4.808, 4.46,
			4.634, 5.704, 5.508, 5.437, 4.706, 4.735, 4.914, 5.031, 4.795, 4.996,
			6.72, 4.805, 4.629, 4.453, 4.571, 4.57, 4.512, 5.524, 5.544, 5.928, 5.928,
			5.929, 5.788, 4.423, 4.423, 4.652, 4.538, 4.919, 5.692, 5.488, 5.421,
			6.096, 4.794, 4.691, 4.75, 5.047, 4.69, 4.81, 4.851, 4.406, 4.1, 3.81,
			3.811, 3.76, 3.911, 4.011, 4.011, 3.124
		],
		"transcript_en": [
			"In this section, I'm gonna step back from things as small as a bit and a byte and",
			"look at larger sizes like kilobytes, megabytes, gigabytes that will actually",
			"come up in day to day life. So, a kilobyte or KB is about a thousand bytes. So, an",
			"e-mail, a small e-mail might be two kilobytes. A document that you're writing",
			"might be 50 or 100 kilobytes. In general, text just plain text is one of the most",
			"naturally compact types of data's that doesn't really take a lot of space. The",
			"next size up is the megabyte. So, megabyte is about a million bytes or I could think",
			"of it as about a thousand kilobytes. So, MP3 audio just is a very rough rule of thumb.",
			"You think of that as taking about a megabyte a minute. Or if you have a high",
			"quality, quality digital camera something that takes ten or twenty megapixels then",
			"those high quality images probably take something like two to five megabytes when",
			"you look at the on disc. So the next term up is the Gigabyte. So a Gigabyte is about",
			"a billion bytes or we could think of it as about a thousand megabytes. And this is probably",
			"the most common size that's gonna come up for modern hardware. So you could think of",
			"4,000 megabytes is equal to four gigabytes or vice versa so to switch putting gigabytes",
			"and megabytes the different by factor of a thousand so for the megabyte figure I can",
			"imagine like well basically I'm, I'm dropping the right three digits to go to",
			"gigabytes. So a computer today in 2012 might have maybe four gigabytes of RAM.",
			"These are the typical figure. A DVD disc, a single layer DVD disc holds little less",
			"than five gigabytes. Video data although it varies quite a lot by how big it is and",
			"the resolution but takes about two gigabytes per hour, A cheap flash drive",
			"that you might buy holds probably about sixteen gigabytes today and a cheap hard",
			"drive might hold 750 gigabytes or something like that. So, the next term up is the",
			"Terabyte or TB which is about a thousand gigabytes or it's about a trillion bytes.",
			"And we've just enter the time when you can buy a one terabyte or two terabyte hard",
			"drive. But other than that, it's not a term I see and you saw that much. However,",
			"gigabyte used to be a rare term too. But then, gradually, Moore's Law - stuff is getting",
			"more and more dense - now, gigabyte is very common. So, I expect terabyte is",
			"coming. Just long as I'm, I'm talking about terminology mentioned the word",
			"gigahertz. Gigahertz is not a measure of byte, it's a measure of speed so one",
			"gigahertz refers to one billion cycles per second and so gigahertz usually it will",
			"come out when talking about how many cycles per second a CPU can do. So a CPU",
			"might be one gigahertz or two gigahertz. Two gigahertz is somewhat more common modern",
			"figure. So what I like to get out of this is that anyone today is comfortable doing",
			"sort of common forms of arithmetic with kilobytes, megabytes, and gigabytes just",
			"sort of think about big their data is and where it might fit. So I've got some",
			"problems here. Some word problems involving megabytes and gigabytes and as",
			"usual, I've got the show button here to look at the solution. Let's try the first",
			"one here. Alice has 600 megabytes of data, Bob has 700 megabytes of data, it will all",
			"fit on Alice's two gigabytes thumb drive. So the first part of this is just adding,",
			"adding the data up. So, 600 megabytes + 700 megabytes is 1300 megabytes. And then",
			"we're left with sort of this units problem. Like, oh, we got a two gigabyte.",
			"Thumb drive is that gonna fit? So you can think of 1300 megabytes - as I mentioned before -",
			"these differ by factor of a thousand so to go to gigabytes; I sort of put the decimal",
			"point after the three digits. So 1300 megabytes is the same as 1.3 gigabytes so",
			"phrased that way you can see that 1.3 gigabytes will fit on the two gigabyte",
			"from drive, no problem or we could have done the other way. We could say well, a",
			"two gigabyte in thumb drive how many megabyte is that? So that's gonna be 2000",
			"megabytes and so we can see the 1300 megabytes of data that fits on the 2000",
			"megabytes thumb drive. All right, let's try another one of these. Alice has 100",
			"small images each of which is 500 kilobytes. How much space does it take",
			"overall? So, I wanted, there's a hundred of these so, they're 500 kilobytes a",
			"piece. So, I think I wanna multiply by a hundred which I think is by multiplying by",
			"ten twice. So, 500  ten = 5,000 and 5,000  ten = 50,000. So, all hundred images is",
			"gonna be 50,000 kilobytes, And then expressed in megabytes. I'll just take the",
			"left two digits here, that's gonna be 50 megabytes so 50 million bytes so the",
			"images are fairly small. So, 100 of them, doesn't add up to that much. All right",
			"last problem, I'll say you're a ghost hunting group that wants to record sound",
			"from a haunted Stanford classroom for twenty hours as MP3 audio files. How much",
			"data is that gonna expressed in gigabytes? So first I'll work out just how many",
			"minutes that's gonna be. So twenty hours 60 minutes in an hour is 1200 minutes so I",
			"have 1200 minutes of data. And then the rule of thumb for MP3 audio is that it's about",
			"megabyte per minute so that's gonna be 1200 megabytes or expressed in gigabytes",
			"that's gonna be 1.2 gigabytes. So just as a detail, there's something I need to",
			"mention which is I've talked about. Megabytes being oh, about a thousand",
			"kilobytes and I haven't really been more specific than that. In reality, there's",
			"this two different schemes. There's a scheme where each unit goes up by a factor",
			"of exactly a thousand, 1000. Or there's a scheme where each unit goes up by a factor",
			"of 1024 and that's just because inside the computer, doing things",
			"by power of two is more convenient. A thousand 24 is two to the tenth and it's",
			"just sort of near to a thousand so it's kinda natural number to pick. So there's",
			"actually, these two parallel schemes. When someone says megabyte or gigabyte it's not",
			"really clear which scheme that they mean. Now for this class I'm, I'm willing to",
			"just not care. I'll just figure like, well, whatever. It's about a thousand and",
			"I'm not gonna be more specific than that. That's fine. That will get us close",
			"enough. The error you might get is maybe five or ten per cent. I, I can just live with",
			"that. If yo u care about distinction, there is actually a set of terminology and",
			"rules that have been made up to, to make those, to define those terms exactly. And",
			"so if you're curious about that, you can, I had a little write up down here about",
			"exactly what those terms are. All right."
		],
		"is_youtube": false
	},
	"video_017": {
		"section": "Week 4",
		"subsection": "Software",
		"unit": "Software",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/4+-+1+-+Software+I+(9+mins).mp4"
		],
		"video_duration": 526,
		"speech_period": [
			4.121, 7.0, 3.96, 5.23, 5.02, 3.24, 5.3, 4.57, 4.57, 6.18, 3.82, 4.03,
			5.25, 3.54, 4.15, 5.16, 3.4, 2.78, 4.39, 6.75, 6.08, 4.02, 3.529, 5.651,
			5.58, 3.74, 3.54, 3.97, 3.121, 3.55, 4.7, 5.74, 4.28, 4.55, 2.129, 3.64,
			2.741, 2.259, 5.451, 5.88, 3.34, 5.41, 4.309, 5.891, 4.73, 2.31, 3.539,
			3.841, 3.299, 4.341, 5.049, 3.601, 6.149, 5.981, 2.7, 3.5, 3.63, 5.76,
			5.84, 4.311, 4.479, 4.25, 4.66, 3.921, 3.989, 5.56, 4.34, 4.06, 5.41,
			4.69, 4.12, 4.051, 5.259, 4.151, 3.479, 5.78, 2.25, 4.991, 5.31, 5.22,
			5.419, 4.49, 4.76, 3.93, 5.5, 3.91, 4.34, 2.84, 3.311, 4.459, 3.881,
			3.519, 3.321, 2.149, 5.321, 2.399, 3.37, 2.8, 3.19, 2.931, 5.019, 4.06,
			3.77, 3.75, 3.091, 5.06, 4.53, 2.949, 4.18, 3.66, 5.401, 5.689, 4.85,
			5.37, 3.591, 4.909, 4.621, 3.979, 3.881, 5.039, 4.231
		],
		"transcript_en": [
			"All right. So it&#39;s such a beautiful spring day, here, on campus. I&#39;m gonna record",
			"outside, here at Stanford campus. Just kind of sunny, park like, filled with college",
			"students just kind of like, hanging out. So the",
			"topic for this section is: What is software? What is code? How is it that",
			"something runs on a computer? So when we talked about hardware in the computer we",
			"talked about the cpu, that&#39;s the brains of the thing. So the cpu&#39;s what actually does",
			"running, and the cpu implements what is called &quot;machine code instructions&quot;. And",
			"machine code instructions are extremely simple. One machine code instruction might",
			"add two numbers, another instruction might compare two numbers to see which one is",
			"bigger. So, when, for code that we&#39;ve seen, so something like pixel set red dot ten.",
			"That&#39;s much more complicated, than an individual machine code instruction. So",
			"the way that&#39;s going to work, is that pixel set red dot ten will ultimately",
			"expand to a series of maybe five or ten of these very simple machine code",
			"instructions, such that, when those ten instructions are run, one after the other,",
			"it sort of has the effect of setting the red value of the pixel to ten. Alright, and",
			"I&#39;ll get into more detail later on about, how that, how that expansion happens. So,",
			"I think a good first question for running a program is like, alright well, what is a",
			"program? So I&#39;ll look at the, the right hand side of this",
			"diagram. So a program - and I&#39;ll, I&#39;ll sort of use, as my running example,",
			"Firefox - so a program is made actually of just an enormous sequence of these very",
			"simple machine code instructions. And so, when Firefox is, is running on your",
			"computer, that means somewhere in RAM, there&#39;s a block of these instructions,",
			"such that running them, has, you know, does the things that Firefox does. So it",
			"blinks the cursor, it takes URL, draws, gets web pages and all that sort of stuff.",
			"So, the individual instructions are really trivial, right? Just add two numbers. So",
			"how does it get from that to like blinking the cursor? And the best I can say is it&#39;s",
			"maybe sort of like the relationship between sand and sculpture. That each",
			"instruction is like a grain of sand. Like by itself it&#39;s meaningless and it kind of",
			"looks like all the others. But if you put them together in just the right way, you",
			"can build this complicated overall structure. And so that is the way that",
			"Firefox is built out of these, these simple instructions. So the way it works",
			"is the CPU, over here on the left, runs what is called a fetch execute cycle. And",
			"all that means is that, the CPU will start off, let&#39;s say here, with Instruction one,",
			"and it&#39;ll load that instruction and run it. Or sometimes we&#39;ll say it executes",
			"that instruction. So, it, it adds the two numbers, or it does whatever the",
			"instruction says. And when it, it&#39;s done with Instruction one, it just goes down",
			"the list. It goes to Instruction two, and it does that one. It goes to instruction three,",
			"and it does that one, and so on. It just",
			"runs through the sequence. So, when we say that a CPU operates at two gigahertz, two",
			"billion operations per second, it&#39;s these little instructions that that refers to.",
			"So there are, there&#39;s obviously a, a big variety of instructions. But I&#39;m just",
			"gonna point out a couple special types. So one type of instruction has the effect of",
			"changing the order that the instruction. Normally the CPU just runs down the list",
			"and does them in order. But let&#39;s say instruction four maybe says, oh jump back",
			"and start executing again at instruction one. And so think about what the cpu&#39;s",
			"gonna do. So it&#39;s gonna do instructions... One, two, three, four. And then when it",
			"gets to four, it&#39;ll sorta jump back, and do instructions one, two, three again. And",
			"then one, two, three again, and again. You can sorta see that&#39;s how loops are",
			"implemented. Just arranging the instructions so that there&#39;s some piece",
			"of code we wanna do 500,000 times. Well, you can set up an instruction to just loop",
			"back and so, do those instructions again and again. Another sort of instruction,",
			"or a related idea, is an instruction, well, the same instruction two here, which",
			"tests some condition and if the condition is true maybe it skips ahead, to where",
			"instruction five would be here. So. That&#39;s how if statements are implemented. You",
			"have an instruction that&#39;s gonna look at some condition, and if it&#39;s, if the",
			"condition is true, it&#39;s gonna sort of tell the CPU to go over here. And if it&#39;s",
			"false, it&#39;ll go over to some other place. So by arranging the instructions just so,",
			"you can get the effect of, something that we, that, in our code, looks like an if",
			"statement. Alrighty. So how, how does a program get running and",
			"how do we get to, how do we get to this state? So I would imagine you&#39;ve got,",
			"Firefox on your flash drive, you know, the file. So on your flash drive, or on your",
			"hard drive. So here, I&#39;ve stored, long term, you know, persistent storage down",
			"here. And here&#39;s RAM and here&#39;s the CPU. So when you&#39;ve got Firefox on your hard",
			"drive, it&#39;s a file, basically, and here I, it&#39;s called Firefox exe, that&#39;s",
			"just a Windows convention, for, how to name a file, which is a program, but it,",
			"it helps keep things clearer so I&#39;ll follow that. So firefox.exe, that file, it",
			"has a lot of bytes in it, and for the most part, those bytes, are just the",
			"instructions that make up the program, plus some icons, pictures and other",
			"stuff. So what I want to think about is well, what happens when you double click",
			"Firefox.exe? How does it start running? And basically what happens is there&#39;s two",
			"steps. The first thing that happens is the bytes for these instructions, at least",
			"enough of the instructions to get started, get copied up to RAM. So it just copies,",
			"puts the instructions in RAM where the CPU can get at them. And then step two, just",
			"tell the CPU, &#39;Okay, well, here&#39;s instruction one. Start executing here.&#39;",
			"And so then the CPU just starts ripping down the series of instructions and now",
			"it&#39;s running Firefox. So I think this leads to the question of like, well wait who",
			"do this, right? How did - who handles",
			"the double click? Who gets Firefox running? And so that&#39;s what an operating",
			"system is. So the operating system is a set of kind of supervisory and",
			"administrative programs that sort of, you know, organize, organizes the whole system.",
			"So, in particular, the operating system manages multiple programs, and starting",
			"and, ending programs. So a modern computer can, run multiple programs at the same",
			"time and so the operating system sorta keeps things organized. So it, it does the",
			"initial startup of a program, giving it some RAM to use, and maybe giving it a",
			"window to draw in. Also, operating systems try to keep programs isolated from each",
			"other. So each program has its RAM, but it can&#39;t necessarily just go mess with the",
			"RAM of some other program. So that helps if a program has bugs. Hopefully, it&#39;ll",
			"just mess up that program, but not mess up some other program that you&#39;re running. Or",
			"maliciously, if I program was trying to do something bad to some other program that,",
			"the operating system tries to keep them separate. So, the operating system is",
			"really the first thing that runs when your computer starts up. So that&#39;s what&#39;s gonna",
			"put up those first windows, and maybe show you what&#39;s on the hard drive. And then,",
			"from thereafter, you can double click, or do other things, and the operating system",
			"will start those programs for you. So that&#39;s really the, the thing you&#39;re",
			"seeing, when you start up your laptop. Digital camera, it, you don&#39;t think of it",
			"as a computer, necessarily, but it&#39;s really the same. When the digital camera",
			"first starts up, there&#39;s probably a couple programs. There&#39;s maybe the program that",
			"takes pictures, and the program that lets you look through the pictures you&#39;ve",
			"already taken. And so, when the camera first starts out, there&#39;s a little bit of",
			"administrative, sorta get, get the, the programs running to sort of show you the",
			"interface, and then it just lets you go. Am. So just as a, a last thing, there&#39;s",
			"sort of the, the, these, this terminology boot and reboot, I always thought that was",
			"kinda funny. Like, where does that come from? And I-, it refers to the sort of",
			"chicken egg problem of, like, well, when the computer first turns on, when it first",
			"starts up, how does it. How does it get itself organized? How does it start",
			"running a program? And this terminology actually comes from sort of an old joke,",
			"about if you want to get over a fence, what you could just do is reach down to",
			"your bootstraps, and pull up, and just like lift yourself over the fence that",
			"way. And it&#39;s obviously kind of absurd. But it, it has the same quality of like,",
			"well wait, what program does the computer run to enable the computer to run",
			"programs. So it sort of a chicken and egg problem. So the way it works is that the",
			"hardware, the, the CPU, has, when it recognizes that it has, it was turned off,",
			"and that it has, it has just started up. And so there&#39;s a special tiny program that",
			"is hardwired into the computer to run, at that moment. And that program can maybe",
			"check, check what&#39;s hardware area, you know, do some basic early start-up stuff.",
			"And then pretty much it looks around for a hard disk or a flash drive or something",
			"that contains an operating system on it. And then it can start that operating",
			"system and then, then the computer can start up in that way. So that&#39;s why it&#39;s",
			"called boot up. It refers to this old boot strap idea. And then that&#39;s what rebooting",
			"is. So reboot means just to sort of, we want to get a clean slate so it&#39;s going to",
			"shut down and start up fresh. All right. So now you know."
		],
		"is_youtube": false
	},
	"video_018": {
		"section": "Week 4",
		"subsection": "Computer Languages",
		"unit": "Computer Languages",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/4+-+2+-+Software+II+(11+mins).mp4"
		],
		"video_duration": 707,
		"speech_period": [
			4.27, 4.901, 6.099, 4.361, 5.47, 3.35, 5.789, 5.281, 4.52, 2.989, 3.69,
			5.48, 6.2, 5.461, 6.67, 6.08, 4.52, 2.78, 4.39, 7.0, 7.0, 4.02, 5.59,
			5.37, 6.479, 4.94, 3.101, 2.979, 6.861, 5.11, 3.479, 4.03, 2.851, 7.0,
			3.561, 3.679, 5.381, 3.17, 3.649, 5.31, 7.0, 4.539, 3.901, 4.379, 5.31,
			6.47, 3.731, 3.039, 4.39, 4.18, 3.99, 5.321, 3.68, 4.23, 4.97, 4.71, 5.12,
			3.23, 4.02, 2.88, 2.79, 6.02, 6.62, 5.23, 4.91, 2.21, 4.27, 6.2, 4.3,
			6.47, 7.0, 2.98, 6.3, 4.01, 4.69, 7.0, 3.32, 4.66, 4.44, 2.27, 4.22, 6.18,
			3.66, 3.15, 4.35, 6.02, 4.38, 4.83, 4.03, 2.58, 5.43, 4.73, 4.18, 5.91,
			5.45, 5.37, 5.91, 5.27, 5.779, 5.031, 4.69, 5.18, 4.57, 4.29, 2.739,
			6.571, 3.71, 3.82, 4.13, 5.18, 6.67, 4.86, 6.61, 3.82, 3.03, 3.41, 3.41,
			5.06, 3.59, 6.1, 7.0, 3.38, 4.06, 4.34, 5.36, 5.18, 3.68, 5.799, 4.19,
			3.81, 4.921, 2.9, 4.24, 2.51, 4.64, 5.49, 4.02, 5.27, 3.23, 2.48, 5.46,
			3.74, 6.8, 5.21, 5.13, 4.89, 4.319, 4.851, 3.14, 2.6
		],
		"transcript_en": [
			"You&#39;ve seen a little bit of JavaScript code and in this section; I wanna talk",
			"about what connect to that world to the machine code in the CPU. So, this is",
			"beyond generally the topic of computer languages. So a programmer works in some",
			"computer language and computer languages are said to have high, quote, &quot;high level",
			"features&quot; and that means things like loops and if statements and strings. Those are",
			"facilities that are more complicated, that are most present in a really simple",
			"machine code on the CPU. So the programmer writes what it&#39;s called source code in",
			"whatever computer language they are writing. So here is an example of some C++",
			"source code, this assigns a string into a variable and then puts and exclamation",
			"mark on the end of that string. You know what? Some, it&#39;s kinda similar to the",
			"JavaScript code we&#39;ve seen A lot of these languages at the syntactic level, eh,",
			"they&#39;re kind of similar with the use of quotes and semicolons or what not. So how do you get",
			"from the C++ source code say to running on a CPU? So one strategy used is what&#39;s",
			"called a Compiler. And, the Compiler is a separate program. And what the compiler",
			"does is it looks at all of the source code and it does a bulk translation over to a,",
			"to create a big body of machine code. So for example maybe there is a part of the",
			"source code where there is an if statement. And there is not a specific",
			"instruction in a machine code for an if statement but maybe there&#39;s a sequence of",
			"five machine code instructions that in effect make up an if statement and so the",
			"compiler does that kind of expansion. So, just an example Firefox is written in C++",
			"and so, to make a new version of Firefox someone runs the C++ compiler and it reads",
			"in the many source files that, the great body of source code that makes",
			"up Firefox and produces, essentially, firefox.exe. Firefox.exe is the output of",
			"the compiler to just translate all of that source code. Couple of things to point out",
			"about this: the compilation only has to happen once. So somebody with source code,",
			"someone makes Firefox.exe and then you can just send out Firefox.exe. The",
			"end users don&#39;t need the source code and they don&#39;t need the",
			"compiler so the compilation can just sort of to be done, done at the factory in",
			"effect. Another effect, another feature of this is that it doesn&#39;t work backwards, So, I can",
			"distribute firefox.exe all through this machine code but there&#39;s not something",
			"that will read that in and go backwards to give me a big body of source code. Or at least",
			"not perfectly. You can sort of do it imperfectly but ideally, to produce a new",
			"version you who really want the source code. So, let&#39;s talk about the source code",
			"a little bit. So if you wanna add a feature of fix a bug to Firefox, real way",
			"to do that is to go back to the original source code and rework it just what we&#39;ve",
			"done in JavaScript. So, add a few lines or an If statement to change some behavior",
			"and some way into source code and then run the compiler again to make in effect a new",
			"version of Firefox that has this, this little change that you&#39;ve put in the",
			"source code. And just as we&#39;re, we&#39;re talking about source code. There&#39;s also",
			"give you, gives you a sense of what Open Source software means. So, Open Source",
			"software is a format where the program is distributed but also there&#39;s access to the",
			"original source code to the program and usually does come with a license saying,",
			"hey here&#39;s the source code if you wanna make your own version or if it&#39;s about",
			"whatever, this program, feel free. So, the two main features of Open Source software",
			"is one, it&#39;s, it&#39;s typically distributed for free so it&#39;s just, you know, cheap.",
			"But the other feature is it comes with a sort of freedom. Because if the software",
			"is close source and you want some different feature there is some bug that",
			"you need implemented you&#39;re really dependent on the vendor who holds the",
			"source code like do they feel like implementing that feature. In contrast",
			"with open source software it&#39;s like there is no handcuffs you know the source code",
			"is available and if there is something that you really wanted to do or say the",
			"original vendor goes out of business then because you got the source code you could",
			"or you know maybe pay someone to make a change and produce your own custom",
			"version. And so it comes with this sort of deep, you could take this as an insurance",
			"policy. So often there&#39;s, there&#39;s many different types of license terms for open",
			"Source software but most often they require in some cases that if you take the",
			"source code and add some feature that you then offer those changes back to the",
			"community. So sort of in the same way that you&#39;ve benefited from others work they can",
			"benefit from your work. In, in the details on how that can be done is complicated.",
			"There&#39;s, there&#39;s many different forms of it. I&#39;m gonna talk about open source",
			"software a little bit later on but I just want to mention it now because it really",
			"gets up this idea of what is the source code of a program versus just having the",
			".exe or something. So that&#39;s why I just talked about C++. So there&#39;s, a whole",
			"another very big category of languages. We come in to call Dynamic Languages Or",
			"sometimes interpreter languages. And there&#39;s sort of a big strategy, there are",
			"many different languages with many different qualities and I&#39;m just kinda",
			"sort of lumping it into this large category. So examples of Dynamic Languages",
			"currently are Java and JavaScripts and Python. So one way that these can work is",
			"that they are implemented by what is called an interpreter as supposed to the",
			"compiler case I was describing earlier so an interpreter is a program which takes in",
			"code written in some language and sort of quote, unquote runs it so. Best example is",
			"that there is this computer language called JavaScript that actually we&#39;ve been",
			"using and web browsers which are programs include as part of them a Java Script",
			"interpreter and so when the web browser comes across a page with some JavaScript",
			"code in it, it can use the interpreter to run that code to make it do whatever it&#39;s",
			"going to do. So, an available detail, the way an interpreter works. Is that it, it",
			"deals with the program one line at a time. So, if, so here&#39;s a little bit of",
			"JavaScript code. If the interpreter wanted t run this, well, we&#39;ll look at the first",
			"line and it would look at what that line says and then the interpreter would do it.",
			"So in this case the interpreter would say oh well, I guess I need a variable name a",
			"and I need to put a one in it. So, once it summed at that line it goes ahead and it",
			"does the next line and so on. So the compiler does this big bulk translation",
			"from the source code into machine code. But it&#39;s not really running code, it&#39;s",
			"just doing a translation to be run in the future. In contrast, the interpreter",
			"really lives in the moment Just going through the code line by line and just",
			"doing it. So let me talk a little about the differences between these two and I",
			"should tell you as a disclaimer there are many computer languages. There is no best",
			"language. The old joke is that. Really when, you know, you&#39;re on this seminar and",
			"you are arguing about the pros and cons or something. Ultimately, the answer is just",
			"it depends. Like there&#39;s not a best language, it&#39;s like well, what&#39;s the best",
			"language for the situation with all the, with all the feature. So broadly speaking,",
			"compiler code does tend to run faster and when you put, when you compile C++ code",
			"and produce that EXE, it&#39;s sort of in a sense lean. A lot of detail and decisions",
			"has been stripped out as much as possible. On the other hand, dynamic or interpreter",
			"languages tend to have more features. More features that make their programmers job a",
			"little bit easier or put in another way. Broadly speaking, programmers can tend to",
			"get more work done per hour in dynamic languages than they do in compiled",
			"languages. However there is no free lunch. It is also the case that dynamic language",
			"code tends to run slower on the CPU in terms of just getting work done compared",
			"to a compiled language, compiled source code that was going to do the same thing.",
			"So, an example of this, a great example of this is memory management. So, memory",
			"management refers to the problem in the code of knowing how many bytes are needed",
			"to store something And in particular, for how long. Well, I need these bytes for",
			"here on line six but maybe on line twenty. I don&#39;t need them anymore and I can reuse",
			"those bytes for something else. And that is actually a kind of a complicated",
			"problem. In C and C++ memory management is to a degree manual and that just means",
			"that the programmer, they&#39;re producing all these lines of codes to do stuff and there",
			"is going to be times when they maybe to add some lines to do some thinking to help",
			"guide the memory management so there is some programmer effort required. In",
			"contrast most dynamic language have what&#39;s called automatic memory management and",
			"this means that. No programmer input is required that the lower on the stacks that",
			"the language is gonna notice automatically when memory is needed; when memory is not",
			"needed anymore it can be recycled and just take on that whole problem. So, this fits",
			"within the, the, the trend of dynamic languages that I was mentioning earlier.",
			"So this is an example of how well, you know, because the programmers has less to",
			"do they&#39;re able to just get stuff done a little quicker, so memory management is a",
			"great example of that. However, you can also imagine this is one of the things",
			"that makes dynamic language codes run a little slower because the CPU now has this",
			"additional bookkeeping problem where it&#39;s looking at memory and trying to figure out",
			"of when it can be reused. So, very broadly speaking the trend for computer",
			"programming today is towards dynamic languages that the trade off that. The",
			"programmer will get things done a little quicker at the expense of using a little",
			"more CPU or maybe a little more memory, that&#39;s a pretty attractive payoff for many",
			"for many problems. And this is maybe a little unintuitive but you can think of well",
			"what&#39;s the scariest quality for a computer program and oftentimes, it&#39;s the",
			"programmer that having skilled programmers working on a problem who, you know,",
			"are working on this, working on this  domain, a lot of times they&#39;re hard to",
			"find and so using up their hours, using fewer of their hours looks attractive. In",
			"contrast the CPU only we want programs to run as fast as possible but cpus are",
			"fairly, and if it got some fairly, effective and there was even this funny",
			"effect where Moore&#39;s Law keeps making it more truth. Where the CPU in a fact each",
			"year gets a little bit cheaper, but if you think of the balance between the",
			"programmer cost and the CPU cost of getting something done, that means in",
			"terms of the share of the pie, the programmer is in a fact of getting more",
			"expensive each year. A little bit more scarce. So, this fits the pattern that on,",
			"on, on, on whole, dynamic languages are becoming a little bit more popular. Just",
			"the last thing I&#39;ll mention is that there&#39;s, I think a thing called a JIT, a",
			"Just in Time compiler and this is sort of the natural synthesis of the compiler and",
			"interpretative strategies of trying to get the best of both worlds. It&#39;s like, well,",
			"we&#39;d like to have a dynamic language with all these features, all these",
			"programmer-friendly features but we wanted to run fast and so the JIT will take parts",
			"of the code and try and compile them on the fly and so it tries to sort of",
			"marry the two approaches. It turns out this works pretty well. So all modern",
			"browsers now have jets for JavaScript code so actually when you are running",
			"JavaScript code even for this class inside of the browser there was a jet that was in",
			"a very physical way on the fly, taking those scraps of JavaScript code and",
			"compiling them on the fly into native code. Anyway, you",
			"do not get exactly the performance of compiled code but it gets fairly close. So, this",
			"is, this is actually how most dynamic languages work first. And I&#39;ll say",
			"well, it&#39;s an active area of research but it seems to work pretty well."
		],
		"is_youtube": false
	},
	"video_019": {
		"section": "Week 4",
		"subsection": "Computer Networking",
		"unit": "Computer Networking",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/4+-+3+-+Networking+(16+mins).mp4"
		],
		"video_duration": 991,
		"speech_period": [
			4.11, 3.8, 5.889, 5.841, 4.34, 3.299, 2.111, 6.5, 5.72, 4.539, 3.201,
			4.11, 5.89, 4.839, 4.821, 2.969, 5.241, 7.0, 5.881, 3.11, 5.349, 2.74,
			6.2, 5.531, 4.599, 2.48, 3.75, 6.411, 3.839, 4.87, 3.621, 4.97, 3.89,
			3.42, 5.45, 4.44, 5.91, 2.629, 4.11, 4.071, 3.94, 4.049, 5.28, 3.47, 3.36,
			4.69, 5.73, 5.22, 3.931, 5.69, 3.48, 4.199, 3.33, 5.741, 3.7, 4.979,
			5.181, 3.78, 3.811, 2.98, 3.06, 6.52, 5.51, 4.169, 4.62, 3.701, 5.019,
			6.87, 3.78, 2.88, 7.0, 5.609, 4.19, 3.981, 3.21, 5.75, 4.26, 4.68, 2.97,
			3.97, 3.91, 4.9, 3.079, 3.521, 5.299, 4.301, 3.83, 4.549, 6.011, 4.25,
			5.69, 5.619, 3.74, 5.23, 3.071, 5.199, 4.371, 2.849, 3.31, 3.35, 3.141,
			4.079, 2.72, 4.91, 1.571, 3.79, 3.62, 4.93, 4.019, 5.951, 3.389, 3.6,
			5.821, 5.829, 4.44, 4.891, 4.79, 5.49, 4.59, 4.11, 5.38, 5.04, 3.08, 4.81,
			2.88, 3.43, 3.05, 5.38, 4.19, 5.07, 5.44, 4.92, 2.83, 5.13, 4.49, 3.25,
			4.22, 4.55, 3.2, 3.24, 4.45, 4.52, 5.96, 4.98, 3.31, 3.83, 3.97, 2.82,
			4.7, 3.08, 7.0, 5.62, 5.4, 4.32, 4.25, 5.43, 4.04, 3.91, 3.36, 3.2, 5.65,
			4.84, 4.28, 4.65, 5.54, 3.74, 4.7, 3.24, 3.58, 5.11, 3.38, 4.38, 3.06,
			6.3, 3.23, 3.16, 7.0, 4.19, 5.29, 5.79, 5.75, 4.84, 4.93, 3.3, 4.53, 2.73,
			3.25, 4.5, 4.24, 4.68, 4.1, 3.0, 2.75, 4.5, 5.75, 6.76, 5.72, 2.94, 4.2,
			2.5, 4.25, 5.22, 3.15, 5.6, 4.69, 5.03, 4.28, 4.35, 4.8, 3.99, 5.33, 3.71,
			3.69, 3.83, 5.13, 3.39, 3.96, 2.53, 3.69, 3.81, 5.43, 3.46, 4.06, 5.13,
			5.84, 1.28
		],
		"transcript_en": [
			"In this section, I&#39;m going to talk about how computer networks work. So computer",
			"networks are kinda like a phone system for computers. Where any computer can place",
			"like a data call to any other computer. Now, the basic outlines of how it works",
			"are surprisingly simple. Although the details are fairly complicated. But, I",
			"figure, just making up a statistic, I expect most Stanford students are doing,",
			"are using a computer network within ten minutes of waking up in the morning, and",
			"probably within ten minutes of falling asleep at night. So, I figure, like, well",
			"it&#39;s kinda like, worth knowing. So I&#39;ll start at the small scale. A LAN, it stands",
			"for a Local Area Network. These are very common. A LAN is a network that would be",
			"used to cover maybe one floor of a building or maybe just within a house or",
			"something like that. So I&#39;ll talk about that case first. And then in the next",
			"section I&#39;ll talk about how that scales up to cover the entire earth, with the, the",
			"Internet. So, two very common examples of LAN technology are Ethernet. Which is",
			"wired, uses wires, it&#39;s wired land technology, and Wi-Fi, which is the",
			"wireless radio sort of analog to Ethernet. Those are both incredibly common",
			"so those are worth seeing. So let&#39;s talk about Ethernet",
			"first. So the way wired Ethernet works is it uses these wires that are maybe about",
			"the size of a soda straw. Here&#39;s a picture of one. And they terminate in these jacks",
			"that&#39;s called an RJ-45 jack, which is a little bit bigger than a phone jack. And",
			"here you can see the wires going into it, and the wires are, a lot of times they&#39;re",
			"blue or yellow. And Ethernet is good for about 100 meters maximum length. So you",
			"can see that&#39;s how it sorta covers, you know, basically one building or, or one",
			"floor or something like that. Here&#39;s a picture of a wireless router. But just so",
			"you can see, the two Ethernet cables going into the back. And so if you&#39;ve got any",
			"piece of, you know, a computer or something that you&#39;re going to use",
			"Ethernet with. You know, yeah, it&#39;s gonna have this kind of plug in the back and at",
			"so me point you end up plugging this piece in that jack, Ethernet jack in there. So",
			"that&#39;s, that&#39;s what that is. So what I wanna talk, figure is, well if you have",
			"these wires how is it the data gets from one place to another? So the case I wanna",
			"consider is, let&#39;s say, you know, here at computer one I&#39;ve got flowers.jpeg. Just a",
			"file with a lot of, a lot of bits in it. And I wanna think about well how does that",
			"get, how would I send that over the Ethernet cable over to computer two? So",
			"the way that works, the way all networking is done. Is that if you&#39;ve got a",
			"relatively large file, the way the networking lair is going to deal with",
			"stuff is to break the data into what are called packets. And so each packet is",
			"relatively small. Packet might be 1000 bytes, or it might be 1500 bytes. So",
			"let&#39;s, I&#39;ll use 1500 bytes. It&#39;s a common size for my running example here. So when",
			"computer one wants to send this image, really what it&#39;s gonna do is take the",
			"image, all those bytes, you know, 50,000 bytes or whatever it is, and break it into",
			"a series of packets where each packet is only 1,500 bytes and so all we have to",
			"think about is well how do you send one packet on the wire. And then you can see",
			"it sorta scales up, you know, you just sorta send all the packets. So I wanna",
			"look at the case very specifically of the ether net sending one packet. So let&#39;s I&#39;m",
			"gonna start on the right hand side here of my drawing. So let&#39;s say I&#39;ve got a, you",
			"know, I. Computer one and you, you&#39;ve got this packet. And if we were to look inside",
			"of it, basically it&#39;s a series of bytes, where each byte is a series of eight",
			"zeroes and ones. So, the way this is gonna work. Is that the sending computer, the",
			"way you can think of it, is it just reads through the, the first byte here. And",
			"there&#39;s just a pattern of 1&#39;s and 0&#39;s. And so it&#39;s just going to follow a scheme.",
			"Say, alright, let&#39;s say that for each one, we&#39;ll call that three vaults. And so I&#39;ll",
			"put three volts on the wire. And every time there&#39;s a zero I&#39;ll put zero volts on",
			"the wire and so just kind o f reads through. You don&#39;t have to understand in",
			"electricity to follow along, but it just reads through and puts a pattern of 1&#39;s",
			"and 0&#39;s on the wire. And also to hand wave a little bit it turns, turns out the wire,",
			"that pattern of 1&#39;s and 0&#39;s travels along the wire here. It&#39;ll make most sense if",
			"you just look at the left hand side. And just imagine the receiver, is just looking",
			"at the wire. And what the receiver is gonna see, is a series of voltages. So the",
			"first thing the receiver sees is oh three volts hm, okay I guess that&#39;s a one. And",
			"then the next thing that comes is like a pipe hm, the electrons are coming out. The",
			"next thing it sees is a zero. Oh okay I guess that was zero volts. And then",
			"there&#39;s three volts. Oh I guess that was a one. Oh it&#39;s still at three volts so I",
			"guess that&#39;s another one. And a zero and so on. So the receiver. You can think of",
			"just observing this pattern of three volts and zero volts coming down the wire. Of",
			"course, it happens very, very quickly. And from just observing the pattern of three",
			"volts and zero volts is able to sort of recover. Of what the original bite was.",
			"And so, ultimately that&#39;s, that&#39;s how the entire packet is sent. The sender just",
			"reads through all the bits, and sends a pattern of voltage. And the receiver,",
			"basically you know reconstructs all 1500, 1500 bites to get the packet back. So,",
			"that&#39;s actually how it works. That&#39;s how it is. You can have data, on one computer",
			"and they&#39;re connected with an Ethernet cable and somehow it like sends all the",
			"ones and zeros over that wire. So, an actual question. Is, well what about",
			"errors? So for modern Ethernet, the transmission happens at a rate of one",
			"billion bits per second. A billion ones and zeroes per second on that wire, so",
			"very quickly. And it&#39;s easy to imagine. Yeah, sure. Every now and then there&#39;s",
			"gonna be an error. A one, for some reason, comes through as a zero or something like",
			"that. So I wanna talk about this technique called check sums that are, well, just",
			"kinda interesting to see and are really used to detect and correct errors. So, the",
			"way it works is, look at, I&#39;ll look at my little diagram down here. Is the sender,",
			"before they send the packet they, you know, they can look at the whole packet",
			"and it&#39;s just a bunch of numbers. Right? A bunch of bytes between zero and 255 as we",
			"know. And so what the sender can do is go through these numbers and just add them",
			"up. So in this case these add to 491. And the sender will say, let&#39;s see, you know,",
			"we&#39;ll just choose an example. Let&#39;s say our scheme is we just always take the last",
			"two digits. So in this case the last two digits are 91. And we&#39;ll say, that&#39;s the",
			"check sum for this packet and we&#39;ll just put that on the end and send that too. So",
			"the way this works is that obviously the receiver, gets all the. Gets the whole",
			"packet and the receive, r can just do the same addition. So the receiver adds up all",
			"the bites that they got. And they see oh did they get 91 two? Do, do the check-ons",
			"match? If the checks-ons don&#39;t match then that suggests well. Some bit in there got",
			"flipped. There, there was some error. Something didn&#39;t come through quite right.",
			"And so what, what the receiver can do, is just ask the sender to re-send that",
			"packet. Each packet is relatively small so this is not, it&#39;s, it&#39;s not a big problem.",
			"And so the result is, basically, this provides a little guarantee that each",
			"packet came through correctly. And so by requesting that the one is re-sent the",
			"receiver can eventually end up with a perfect set of packets, and sort of",
			"having, having checked each one. So this scheme is used, actually not just in",
			"networking, but in many layers of computer systems. There&#39;s this notion of having to",
			"check something that accompanies the data to sort of make sure that each, each",
			"transfer went through correctly. So that&#39;s how it is that you can have, some",
			"large.jpeg file on your computer and put it on a thumb drive and then later send it",
			"over the network. And somehow even though you&#39;re sending it from place to place, it",
			"keeps coming through, really a 100 % correct right? Each zero and one is",
			"exactly what it&#39;s supposed to be and checks on just a little bit what&#39;s going",
			"on behind that network. One thing I should mention is that this check sum",
			"scheme - well, so, first of all, the scheme I",
			"described here is just adding it up - the real check sum scheme that&#39;s used is a",
			"little more complicated than that. But it is possible",
			"that you can have two errors that sort of cancel out just so, so there&#39;s an error,",
			"but the check sum scheme doesn&#39;t detect it. That&#39;s possible, although it is a, it",
			"is a microscopic possibility. But it is, this is not a completely foolproof scheme.",
			"So I want to scale this up a little bit. Thus far I&#39;ve talked about just",
			"essentially having two computers with an Ethernet cable and talk about, also, how",
			"does Ethernet scale up to having a bunch of computers all talking to one wire? This",
			"is I think a, a nice design to see. It&#39;s a very elegant design. And patterns that you",
			"see in this design will reappear in. It&#39;s such a successful design that has been",
			"kinda used for solve a lot of problems. So let me just set up the, the problem here.",
			"Look at this picture at the bottom. So the way Ethernet works is that you could have",
			"a bunch of computers. So here I&#39;ve drawn four computers, and there&#39;s just one wire.",
			"Here the sort of backbone, and they&#39;re all sharing it. So the Ethernet design is all",
			"about having one share piece of hardware and a bunch of computers using it and",
			"they&#39;re able to cooperate to use that shared bit of hardware, efficiently. So I",
			"want to talk about how it is that one computer would send a packet to another",
			"computer. On Ethernet, and it&#39;s setup like this where I have a bunch of computers all",
			"sharing the wire. So the analogy is always that it, it&#39;s kind of like at a cocktail",
			"party. That if you have a bunch of people all sort of facing each other, they&#39;re",
			"able to have a conversation, even though two people can&#39;t really talk at the same",
			"time, but they&#39;re able to sort of cooperate and take turns, basically. And",
			"Ethernet works in a way similar to that. So here&#39;s how it&#39;s gonna work. Each one",
			"of these computers has a, an address, a unique address I would say, you know,",
			"computers one, two, three, four. And when a computer wants to send a packet. So here",
			"I&#39;ve drawn on the left here, a packet. The com, the packet will begin with a, a two",
			"colon field. It&#39;ll say what is the destination computer for this? So let&#39;s",
			"say in this case that computer one wants to send a packet over here to computer",
			"four. So computer one will get the packet ready. And then what computer one will do",
			"is wait for a period of silence, on the wire. So maybe computers two and three",
			"were having some conversation. So the wire was kinda busy, carrying that traffic. But",
			"eventually the wire goes, quiet. And so when computer one here&#39;s a period of",
			"silence. Then computer one puts the package on the wire. Sends it out there.",
			"And. Naively you sort of think oh looks like. Oh you know the package sort of goes",
			"down here and turns right goes to computer four. But really it&#39;s more like a",
			"broadcast. The signal of that package just spreads out on the wire and it just",
			"spreads out, to every corner of the wire. So it&#39;s really a broadcast. It just",
			"occupies the entire wire. Now, the way it works in Internet is that every computer,",
			"is listening to the wire all the time. Everybody listens to the wire. And what",
			"they&#39;re doing is really they&#39;re just listening for packets addressed to them.",
			"So when this packet addressed to computer four goes out, computer four will hear it",
			"and say, oh hey, that one&#39;s for me. And so copy down the zeros and ones for that",
			"packet and like okay, that&#39;s one for computer four. And computer three and",
			"computer two will also see the zeros and ones go, going by. But they&#39;ll, they&#39;ll",
			"just notice, oh hey, to: computer four. Okay, that one&#39;s not for me. And so they",
			"can just disregard it. So that, that&#39;s how it works. The so the interesting case for",
			"sharing with Ethernet is. What if, computer one, as I discovered before, is",
			"gonna send a packet to computer four. But it happens that computer three. Also had a",
			"packet to send. And if the, you kn ow, if you&#39;re just unlucky, it&#39;s possible that",
			"both computer one and computer three will hear the same period of silence. And so",
			"they will both decide to start, start sending on our one shared wire. And so",
			"what will happen is, the wire can&#39;t carry multiple conversations at once. And so if",
			"they both start transmitting, there&#39;s said to be a collision, where the two",
			"conversations kinda overlap and they override each other. And it eventually",
			"just becomes hopelessly garbled. So, neither, both packets are basically",
			"destroyed and useless by this property, by this collision. So what happens is,",
			"ideally computer one and computer three eventually notice that someone else is",
			"talking over them, and so they can at least stop transmitting. And so the wire",
			"gets back to being. Quiet. And so both computer one and computer three, we",
			"realize, okay well, that didn&#39;t work. So. If they both just heard the silence and",
			"just started transmitting again, well it would just collide again. And so this is",
			"a, a clever part, a very clever part of the Ethernet. Which is, well how to, how",
			"to get them essentially to take turns. Right? To get one to transmit and the",
			"other one to wait. So the way this works is that, both computer one and computer",
			"three in Ethernet wait a random amount of time. They just make a random number and",
			"say, I&#39;m gonna wait that long, and then I&#39;m gonna, then I&#39;ll try and transmit. And",
			"so in effect, it&#39;s kind of fair, in effect, one of them will end up going",
			"first, the wire won&#39;t be quiet anymore cause it&#39;s carrying that conversation and",
			"so we can just go back to our regular strategy. So that enables that when you",
			"get a collision, essentially they both sort of back off and then one of them is",
			"able to take turns, so eventually you&#39;re able to use the wire pretty, pretty",
			"efficiently. So, that&#39;s, that&#39;s how you have a, a bunch of computers all connected",
			"to just this one Ethernet wire. And they&#39;re able to, to use it, use it pretty",
			"efficiently. Now probably most of the people watching this aren&#39;t maybe using",
			"wired Ethernet anymore . That almost seems a little bit old. The very common way to",
			"connect to any kind of network now is Wi-Fi. And I&#39;ll tell you I&#39;m going to talk",
			"about Wi-Fi very little it&#39;s really the same strategy. So, the hallmark of",
			"Ethernet is that you had this shared wire. And only one person really can transmit at",
			"a time. And you want to kind of somehow collectively share it. Wi-fi is exactly",
			"the same. In this case instead of a wire what you have is a radio channel. So",
			"there&#39;s some Radio Channel that&#39;s been used right? So we got all these computers.",
			"They have little radios on them that drawing these kind of lame, radio",
			"transmitting marks on here. So there&#39;s some Radio Channel. They&#39;re all sharing",
			"it, and then it looks very much like the Internet. So they&#39;re gonna have a strategy",
			"of waiting for a period of silence. And when there&#39;s silence broadcasting. All the",
			"computers listen all the time. Watching out for packets addressed to them and",
			"ignoring packets that are not addressed to them. And sometimes you&#39;ll have a",
			"collision. Two people start transmitting at the same time. You wanna sort of notice",
			"that and then have some random back-off strategy so that you can, you can wait for",
			"silence again and transmit without overlapping. So, it just happens, very",
			"similar strategy works. So just to kind of to summarize as I was saying, some of the",
			"qualities that go into Ethernet&#39;s design. Re-occur in other. In sort of larger",
			"problems. It&#39;s just a, a fundamentally bunch of good decisions. And so I think",
			"it&#39;s, it&#39;s worth seeing for that reason. So the set up is that you&#39;ve got the wire",
			"the radiowave or whatever - some shared resource - and",
			"you want to you wanna use it efficiently. And the solution is not gonna have,",
			"involve essential authority. Instead, all the actors are gonna have a distributed",
			"and collaborative strategy. So they&#39;re, they&#39;re able to cooperate with each other",
			"collectively to use the thing efficiently. Another quality, which I. Which I&#39;ll point",
			"out now which I didn&#39;t point out then is. This is very insecure. Remember what it",
			"looked like when computer one was sending a packet to computer four? Well that",
			"packet kind of went to computer three too. Right? If computer three wanted to listen",
			"in they could. And this really gets back to the notion of, well what does shared",
			"mean. Shared in this case means when anybody broadcasts anybody else can",
			"listen. Not anybody else on earth, but anybody else. You know, within a hundred",
			"meters sort of on, on that same local area network then that is certainly true. Now",
			"this doesn&#39;t mean that all security on the Internet is hopeless, it just means that",
			"there&#39;s another layer of encryption and security that we would wanna add. That the",
			"LAN itself is not secure. So I&#39;ll talk about that more when I talk, you know,",
			"in a later security section. Another quality of this is that, because",
			"you&#39;ve got this one medium that you&#39;re sharing, it means that as more and more",
			"computers are using it, the performance available to any one computer kind of",
			"degrades. Then again, this just gets back to sharing. Right? Well, if computers two",
			"and three are tying up the wireless zone, you know, sending some big file or",
			"something, well that means that there&#39;s going to be less silence. And so computer",
			"one will sort of get less, have less, less, fewer bytes that they&#39;re able to",
			"send. That&#39;s not - it can be a good quality, but what you want is that the",
			"performance sort of degrades. You get less capacity but it doesn&#39;t just break out",
			"right. And so ethernet definitely has that quality, of degrading. So as I said this",
			"is, it&#39;s a very popular very successful set of design choices. And so we&#39;ll see,",
			"see that kinda thing later on."
		],
		"is_youtube": false
	},
	"video_020": {
		"section": "Week 4",
		"subsection": "The Internet - TCP/IP",
		"unit": "The Internet",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/4+-+4+-+TCP_IP+(16+mins).mp4"
		],
		"video_duration": 999,
		"speech_period": [
			3.205, 0.5, 3.946, 6.8, 1.467, 2.966, 5.915, 2.508, 0.5, 3.633, 5.991,
			4.287, 5.033, 3.967, 3.3, 4.633, 2.033, 2.196, 4.538, 8.3, 9.166, 5.1,
			5.497, 3.537, 5.466, 3.334, 3.633, 9.0, 8.234, 3.066, 2.6, 5.1, 3.467,
			4.766, 3.1, 2.267, 1.967, 10.5, 7.1, 3.2, 6.433, 5.041, 0.626, 5.7, 2.2,
			4.0, 5.772, 3.343, 4.085, 3.366, 5.6, 3.2, 3.208, 3.559, 4.753, 2.547,
			5.233, 3.041, 3.359, 8.901, 5.099, 2.4, 1.8, 3.6, 4.867, 2.133, 2.934,
			5.233, 1.167, 1.533, 3.067, 6.1, 4.266, 3.5, 1.467, 1.267, 4.134, 3.732,
			2.234, 4.901, 5.433, 1.332, 3.3, 3.681, 5.353, 3.933, 6.736, 4.431, 4.067,
			6.499, 3.134, 2.6, 6.4, 6.666, 2.467, 4.5, 2.3, 3.7, 4.267, 2.266, 5.403,
			4.297, 4.467, 6.282, 5.151, 3.234, 3.829, 9.149, 1.055, 3.567, 2.733, 3.2,
			4.909, 1.624, 2.134, 4.733, 2.6, 3.433, 8.7, 6.134, 1.9, 6.233, 6.8,
			5.833, 5.934, 8.966, 4.9, 6.434, 4.533, 4.533, 2.867, 3.289, 2.944, 5.415,
			2.552, 4.767, 4.4, 5.046, 2.654, 2.233, 5.967, 4.192, 4.784, 1.624, 5.633,
			3.233, 9.234, 6.066, 6.2, 5.567, 4.133, 5.134, 3.566, 6.967, 3.572, 2.028,
			5.233, 4.134, 9.921, 2.368, 5.711, 1.9, 3.266, 3.6, 3.167, 6.367, 6.933,
			2.433, 5.075, 1.904, 3.205, 6.409, 2.074, 3.833, 4.034, 3.766, 6.434,
			6.666, 6.5, 8.3, 1.7, 3.875, 3.692, 4.033, 5.65, 2.45, 6.188, 5.294,
			7.718, 4.134, 3.7, 2.433, 6.233, 9.867, 1.953, 4.414, 3.266, 5.434, 5.229,
			3.437, 4.134, 4.5, 8.177, 4.089, 5.467, 2.833, 5.534, 4.508, 7.558, 5.867,
			3.533, 2.9, 5.567, 2.467, 4.1, 4.033, 2.433, 7.006, 1.261, 5.833, 4.4,
			4.992, 4.675, 3.9, 6.733, 2.834, 5.366, 359001.067
		],
		"transcript_en": [
			"In this section, I wanna talk about how you go",
			"from a land technology that just covers one house,",
			"up to the world-wide internet, where any computer can talk to any other computer.",
			"So the way this works is you can think of the worldwide internet as sort of a phone system for computers.",
			"Where they're scattered all over.",
			"And every computer has essentially an address,",
			"and any computer is able to attempt to make sort of a data call to any other computer.",
			"That's... that's where I want to get.",
			"How does that work?",
			"So, the world wide Internet is based actually on some Government-funded research",
			"in the 70s from the United States, creating some standards called TCP/IP.",
			"And TCP/IP are free and open standards. They've obviously been enormously successful.",
			"They're not proprietary or specific to any vendor, they're just... anybody's free to implement these.",
			"And one of the lessons of the Internet is that for... for sort of basic infrastructure like that,",
			"that you want to allow a lot of different organizations to use and feel they can build on,",
			"having it be an open standard is really the way to go.",
			"Alright. Let me talk about how this works:",
			"So the first thing to know, about the internet,",
			"is that every computer connected to the Internet has an IP address.",
			"So, what this looks like... so for example, here's my picture of the internet",
			"So for example, the computer in my office. It's IP address is 171.64.64.166. That identifies my computer.",
			"Over 30 miles from there, there's another machine which I maintain - codingbat.com -",
			"and it has the address, uh, the IP address 173.255.219.70, and so on.",
			"So these are IP V4 addresses, which are very widely used on the internet today.",
			"And there is a revision called V6 that's kind of in the wings, but hasn't really taken off yet.",
			"Okay, so the thing to know about these IP addresses is, it's actually four bytes.",
			"Those are four numbers, each between zero and 255.",
			"So, another thing to know is that the...the left part of the address roughly indicates the neighbourhood.",
			"So for example Stanford, the Stanford Campus is generally 171.64.something;",
			"and in my building it's 171.64.64.something.",
			"So for example, the office next to mine:",
			"The computer in there might have an address 171.64.64, maybe .164",
			"So locally just the right number changes,",
			"and the left part indicates more sort of, on the Internet where this thing is.",
			"So, it's... it's like phone numbers in a way.",
			"You have the country code and the area code, and you can't just pick 'em out of the air:",
			"they sort of indicate where that number is.",
			"There's a somewhat famous blooper in the movie 'The Net',  where Sandra Bullock types in an IP address: 2375.345.200.",
			"Peals of laughter filled the theater, because with 345, it's too big to fit in a byte.",
			"So that's, uh, that's not... it completely takes me out of the movie.",
			"All righty. So I'm gonna zoom in on this picture, explain how all the parts of this work.",
			"One thing I should just mention, is that most of my discussion today will talk about IP addresses.",
			"That is, how it works under the hood.",
			"But we've got these familiar names like nick2.stamford.edu, or codingbat.com -",
			"those are what are called domain names.",
			"And domain names form effectively kind of a shorthand for IP addresses",
			"but they use just regular words and dots, so it's easy for a person to remember or to type.",
			"The way it works is, there's essentially a world wide directory",
			"where whenever you type in nic2.Stanford.edu, really that gets translated.",
			"There's a look up that happens, that translates that into an IP address",
			"and then the IP address is what's used from there on out for the packets, as we'll see.",
			"So how does a packet get.... How does any of this work?",
			"So I need to introduce this character: the router.",
			"So a router is a bit of networking equipment that's connected to two or more networks",
			"and it basically shuffles packets back and forth.",
			"So, it can pick up a packet from one side, and translate it over to another network.",
			"And so, you can think of the internet as sort of built up collectively by all these routers.",
			"So if you look at my office:",
			"Let's say here's my computer, 171.64.64.166,",
			"and my computer's connected, I will say 'upstream' to a router: 171.64.64.1.",
			"And essentially what happens is my computer gets its Internet service through this router.",
			"This router sort of provides service for my computer.",
			"And, that's kind of a first approximation.",
			"What happens is, well,  if my computer wants to send a packet out to the internet",
			"it just sends the packet, I'll say... say, one hop over to this router.",
			"And then, now it's the routers problem.",
			"The router will then in turn, send the packet on to some next router,",
			"whatever sort of goes off onto the Internet.",
			"And I'll...I'll look at it in a little more detail, about how that works.",
			"One pattern you'll notice, is that a lot of times -",
			"so maybe, you know, here's my computer and a few computers in offices next to mine...",
			"and a lot of times the router will have the .1 or .2 address. The... the right-most number will be small.",
			"And then its servicing all the computers with, you know,",
			".50 and .166, and whatever computers over here.",
			"Alright. So let me get to the question.",
			"I'll, I'll phrase... the biggest question is:",
			"'Look, how does a packet get from one side of the Internet to the other?'",
			"And the answer is basically, hop, hop, hop, hop. Like little bunnies.",
			"So let me show you how this works.",
			"So, let's say here's...here's my computer.",
			"And let's say my computer wants to send a packet across the Internet over here,",
			"to about 30 miles away, to codingbat.com.",
			"So, what's going to happen is, my computer will make up a packet",
			"which I've drawn here as sort of the dotted outline.",
			"And without going into too much detail, I'll say this is an IP packet, used for TCP/IP.",
			"And an IP packet has some addressing that's standard on it.",
			"It has a 'from' address and a 'to' address, and these correspond not to all the computers in between,",
			"but to the...the end points. So, where was it originally from, and where ultimately is it supposed to go to.",
			"So the way this is going to work, is that my computer will make up this packet,",
			"and it'll send it one hop upstream to my computer's router. Which we saw in the earlier diagram.",
			"Now this router is maybe fairly simple, it only has a few connections,",
			"and so it'll look at the packet, and it just has to decide:",
			"'Well. Which way do I send this to get it one...one step closer to its ultimate destination?'",
			"Now for this router, it'll send it in turn upstream to its router; a slightly bigger, more expensive router.",
			"That's a second hop. And this process continues,",
			"where each router looks at the packet and has to make a decision:",
			"'Well. Which...which way do I send this?'",
			"And that is...it's tricky for it to know, but it is...it is feasible.",
			"In particular, each router doesn't have to know a map of the whole Internet.",
			"It just has to sort of know its...its neighbourhood.",
			"As a practical matter, the way this kinda works is, basically it's kinda like capillaries and arteries,",
			"where down here at my office, these are just little machines and little routers: not much going on.",
			"So the packet sort of gets forwarded up to what you would call a core router.",
			"Eventually there's some very large, very expensive router, that actually knows a lot.",
			"And so, on the core it'll sort of hop over sideways until it gets to, you know, the nearest core routers to the ultimate destination.",
			"And then it kind of hops down again to the sort of capillary level,",
			"until eventually it gets over here to codingbat.com.",
			"So. I gues it is...it is surprising that every time you watch a YouTube video, or send an email,",
			"or whatever, and use that sort of data with packets,",
			"the packets are actually making this...this fairly large number of hops.",
			"Just hop, hop, hop, hop, from one...one place to another.",
			"From one router to another to get where it's supposed to go eventually.",
			"So let's talk about routers for a second.",
			"As I mentioned before, they don't know the entire route:",
			"each router just knows kinda locally what's going on.",
			"Also notice in that explanation my computer doesn't know anything about the layout of the internet.",
			"Essentially it's...it's delegated to the router. It says:",
			"'Hey router, here's a packet. You know...you know how to do routing. You take care of it'.",
			"I should mention that routers are... it's not that all the maps of, kind of, which way things go, are done statically.",
			"Instead, the routers are dynamic; they're always sort of measuring which links are overloaded,",
			"or which ones are functioning, or not functioning, or whatever,",
			"and they will automatically route around breakage, so the whole system has a sort of dynamic healing quality.",
			"As I mentioned earlier for Ethernet, routers are another example of a distributed collaborative system.",
			"That they cooperate with each other, sort of working all together, to solve the routing problems for these packets.",
			"This is sort of a detail, but I should mention there are certain special IP addresses.",
			"So, 10. any three numbers; or 192.168.something; those are special local IP addresses,",
			"and they're not valid out on the Internet at large. They just sorta work within an organization.",
			"And, the way it works is that when a...when a packet with a special local address like that",
			"is making its way along - hop, hop, hop - It'll get translated to be a real....real IP address.",
			"The reason I mention this is...is that oftentimes Wi-Fi routers will give out these special local addresses.",
			"And so if you...if you're playing around with your own equipment you may see these.",
			"So that's why I want to explain what it was.",
			"So. Given...given that level of explanation, I can talk about:",
			"'Well, what, what does it mean to be...to be on the Internet? To have a connection to the Internet?'",
			"And generally the way that works through Wi-Fi or through Ethernet",
			"is it means, well, you establish a...a connection to some upstream router, and then it's gonna handle traffic for you.",
			"And, actually I'll just bring this up here.",
			"So this is the, you know, the Mac networking panel.",
			"And here I've clicked on TCP/IP. So I didn't just make that up.",
			"I'll just point out some of the major things here:",
			"So when you connect to, let's say, a Wi-Fi router as I have here, generally it'll give you an IP address sorta temporarily.",
			"It'll say: 'Okay, well, you can use this IP address for now'.",
			"Notice this is a 171.64 address, so that's in the Stamford neighborhood. So that makes sense.",
			"So you get an IP address.",
			"You also tend to be able to see the IP address of the router that you're associated with.",
			"So I'm associated with 171.64.71.",
			"Also notice that as I said,  the router ends in .1, and it's maybe providing service for all these 171.64.70 IP addresses.",
			"And finally a lot of times you'll.... there's a system called DHCP: Dynamic Host Configuration Protocol.",
			"DHCP is just a way for the router to inform my computer of a bunch of other parameters about how networking works around here.",
			"So very often you'll see DHCP is sat, saying 'Oh yeah. When you talk to the router, basically do whatever it says'.",
			"So, that's...that's, you know, you can...you can look in your own network control panel if you wish.",
			"And hopefully you'll see a lot of the information actually...actually appearing.",
			"All right. So, what I wanna show you, just kind of for fun",
			"is a couple networking utilities that you can use to play around with this a little bit.",
			"This is not something you need to do yourself, but if you wish to, you could.",
			"The utilities I'm gonna show you are called 'ping' and 'trace route'.",
			"And on whatever kind of computer you're on, there's very likely some variant of these available.",
			"So, I'll just, I'm...I'm going to type these in the...the command line.",
			"So, ping - if I say, like, 'ping www. Google.com', what ping does is it sends a single packet out to some other computer",
			"and what that packet basically says is, 'hey are you there?'",
			"And, computers are not required to respond to ping packets,",
			"but if they're polite, they will, and Google does.",
			"And it just sends back a single packet basically saying, 'Yes'.",
			"So if you ping another computer and you get back a response it's really kinda telling you two things.",
			"It tells you that, well, that other computer is switched on and functioning.",
			"And it tells you that the network - all the various hops between you and that computer - that those are all functioning.",
			"When the ping.... So, it sends it once a second. And what it does for each one, is it reports how many milliseconds it took.",
			"So a millisecond is a thousandth of a second.",
			"And so this is sending wherever, you know, www.google.com is,",
			"it's sending a packet hopping over there and hopping back,",
			"and it's taking, you know, something like four milliseconds each time.",
			"So, let's see. So I think 'ping' actually has sort of entered a little bit the gist, the vocabulary of regular people",
			"where you'd say, 'Oh, well, is so-and-so going to the party? Oh, I'll ping them and see'.",
			"It just kind of a means sort of a quick, 'Hey, are you there?', sort of message.",
			"So, you can use ping if your network doesn't seem to be working or whatever,",
			"and you want to do, sort of like a little basic checking. Ping is one way of seeing...seeing if stuff works.",
			"So a relative of ping, a more complicated utility I'm gonna use here, is called 'trace route'.",
			"And I'm going to use... I'll do a trace route to codingbat.com.",
			"[quietly] Oops. Oh, I'm sorry. There. Now to trace route to codingbat.com.",
			"So. What trace route does, is it maps the hops between your computer and some other computer.",
			"And so it's sort of amazing.",
			"So, I'm...I'm starting off here at 171.64.whatever,",
			"and so what this is saying is that was one hop away, that's two hops away, three hops away and so on.",
			"So, it's kinda just mapping the path between two spots on the Internet.",
			"And we're not gonna have to get too much into the details on this - but you can see why, you know,",
			"so this first hop away, that's 176. So that's some Stamford computer.",
			"That's probably some box the size of a hardback book in some closet somewhere on the floor of this building.",
			"And you know, here's some slightly larger book - we're probably still on campus here.",
			"You can see at some point it jumps over to this by hop five, at 137.164. something or other cenic.net.",
			"I'm guessing that's some provider that Stanford pays probably a fairly large monthly bill",
			"to be sort of the big upstream for Stanford's number.",
			"Okay. So this is probably more of a core router.",
			"As with ping, you can see it gives you the milliseconds for... that's the round trip time.",
			"So what's happened is my packet has kinda made it on a few Stamford routers over to the cenic router,",
			"and then at some point, following my artery-capillary analogy, it's probably sorta making its way back down.",
			"Linode is where codingbat.com is hosted - it's a network down on some linode equipment",
			"and eventually here - that's actually codingbat.com.",
			"So as I said that's about 30 miles from here. And so that was eleven hops.",
			"This also gives you, uh, to me a little bit of a sense of how fast it is, right?",
			"So that's eleven hops out, eleven hops back... and it does the entire round trip in 5 thousandths of a second.",
			"So you do get that feeling, like, 'Oh, right. This computer stuff, Moore's Law, it's pretty fast.'",
			"So what I wanted to do, I was sort of playing around with, 'well, what's something further?'.",
			"So eventually I found, uh, poland.pl. Oviously this is...is in Poland.",
			"So what we'll see - so the treasure hunt's taking a little longer here -",
			"so the first few hops are the same. Right? It's still just some closet in my building, whatever.",
			"It gets out to the cenic. This is all sorta the same.",
			"But now it's going over, it's routing over to level3.net - so that's just a big...a big provider.",
			"And you see the milliseconds here are still fairly low.",
			"And when it gets to the TInet.net 89.194, notice the...the milliseconds has jumped up from 2 milliseconds to 202 milliseconds.",
			"I think what you see here - I'll highlight the two lines - I think that was the Atlantic Ocean. [laugh]",
			"I think when it went from this Level3.net, probably then there was a big fiber-optic link where it went",
			"and now it's made its way to Europe.",
			"And the speed of light, whenever it does actually enter into this. Like, it...it does take time, in milliseconds, to get a signal that far.",
			"So, now that it's over, I'm just guessing, this is somewhere in Europe.",
			"And now it makes its way over a little bit, it eventually gets over here to Poland,",
			"and you can see, you know, it took something like 200 milliseconds.",
			"And that's a round trip time, so that's pretty neat.",
			"So one thing you can see here... well,partly it just shows that...the sort of 'hop, hop' quality.",
			"Yes. Every packet, every YouTube video, everything you've seen:",
			"all that data was making that sort of crazy large number of hops, sort of getting from place to place. That really is how it works.",
			"The other thing to notice is that this is something like, 8000 miles away?",
			"So it's not... Uh, hops don't just go up linearly with distance.",
			"There are, you know, there are cer- there's fiber optic links under the oceans or whatever.",
			"There are certain links that are, that cover a vast amount of distance, and then maybe it'll get down to a particular city,",
			"and then have a lot of hops on a campus or whatever, to...to get to the final destination.",
			"So, that's not something - ...you don't need to run ping and trace route yourself.",
			"I just want to demonstrate those, but if you want to play with them, you can give 'em a shot.",
			"And I guess in the CS101 sense, like, that's really how it works."
		],
		"is_youtube": false
	},
	"video_021": {
		"section": "Week 4",
		"subsection": "Table Data",
		"unit": "Table Data",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/4+-+5+-+Table+Data+(16+mins).mp4"
		],
		"video_duration": 976,
		"speech_period": [
			5.049, 3.351, 3.09, 4.869, 4.991, 6.09, 4.36, 4.79, 4.01, 4.939, 3.281,
			5.21, 3.41, 4.24, 5.79, 2.06, 4.79, 4.82, 5.0, 7.0, 5.5, 4.739, 5.111,
			4.349, 5.911, 7.0, 4.78, 5.841, 4.32, 4.49, 5.72, 5.53, 3.73, 3.811,
			5.849, 5.631, 3.949, 5.32, 5.01, 3.51, 4.761, 3.7, 4.019, 4.591, 4.659,
			4.49, 5.0, 3.31, 4.07, 4.96, 5.99, 3.56, 6.461, 7.0, 4.6, 4.01, 5.72,
			6.64, 4.5, 5.31, 4.83, 3.17, 5.11, 6.61, 4.53, 4.76, 2.71, 4.7, 5.35,
			6.36, 4.9, 2.69, 6.86, 7.0, 5.79, 6.55, 4.81, 4.86, 4.57, 3.38, 6.06,
			6.63, 3.81, 4.9, 3.48, 2.64, 6.79, 3.76, 4.97, 4.1, 6.0, 6.52, 5.49, 4.67,
			4.72, 3.72, 4.3, 4.98, 6.53, 2.24, 3.88, 7.0, 4.72, 3.16, 4.679, 4.2,
			2.901, 4.94, 3.73, 4.909, 4.671, 4.639, 6.361, 3.589, 5.31, 5.51, 3.63,
			5.04, 3.671, 4.23, 7.0, 6.81, 3.52, 3.641, 4.26, 4.43, 4.699, 4.311, 4.0,
			6.23, 5.789, 4.45, 4.8, 4.341, 5.63, 5.269, 3.721, 6.26, 4.199, 4.481,
			4.19, 4.57, 4.38, 4.279, 5.61, 6.531, 3.269, 4.19, 3.84, 5.761, 3.969,
			7.0, 7.0, 4.941, 5.169, 7.0, 3.241, 3.229, 3.511, 4.719, 2.921, 4.349,
			6.0, 5.261, 6.589, 7.0, 4.89, 7.0, 4.701, 5.839, 6.64, 4.591, 3.269,
			4.981, 3.729, 5.81, 4.221, 3.589, 7.0, 5.089, 3.281, 4.0, 4.419, 2.72,
			4.931, 7.0, 3.939, 7.0, 3.06, 5.25, 2.839, 4.971, 4.57, 5.049, 4.79,
			3.781, 7.0, 1.379
		],
		"transcript_en": [
			"In this section, we&#39;re gonna look at a new form of data, called a table. And once we",
			"look at how tables work, then we&#39;re gonna play around with code that manipulates",
			"tables. So it&#39;s very similar to the way earlier we did images and then looked at",
			"the code that manipulates images. The code to work with tables will actually in some",
			"ways look, similar to the code that worked on images. So my goal is that the real",
			"patterns that make any sorta code work are gonna start coming through. So, tables are",
			"a really common way to organize data on the computer. So as a running example for",
			"this section, I&#39;m gonna use the social security baby names database. So the",
			"social security administration does retirement benefits and stuff in the US.",
			"But they also happen to track, every year what names are given to babies born in",
			"that year in the US. And so that&#39;s gonna be kinda fun data set that we&#39;re gonna",
			"use. So here I&#39;ve, I&#39;ve structured this as an example of a table. So, as I was",
			"saying, table&#39;s a way of storing data. It&#39;s basically, you can think of it as",
			"like a rectangle. So the way the table works is that it is first organized into",
			"fields. So the baby data is organized into four fields and the fields are name, rank,",
			"gender and year. You could look at the other fields",
			"as basically as the columns that make this thing up. And then the data is stored in",
			"what we&#39;ll call rows. So here&#39;s the first row has the data for the name Jacob, so it",
			"says the name is Jacob, the rank is one for that name and what rank one for this",
			"data set is that Jacob is the most popular boy name for babies born in 2010. Then we",
			"have gender is boys and year is 2010. So the second row has another name. So each name",
			"has its own row. So in this case it says the name is Isabella, the rank is one. So",
			"what that means is Isabella was the most popular girl name for babies born in 2010.",
			"So, then we see, Ethan has rank two for boy names, Sophia has rank two for girls,",
			"and so on. So it, the, the table just has all the names. In this case they&#39;re, they&#39;re",
			"shown, sorted by rank. So there&#39;s one row per name. In this case it has the 1,000",
			"top boy names and the 1,000 top girl names. So, it&#39;s, there&#39;s 2,000 rows",
			"overall. So as I was saying, tables are really common for storing all sorts of",
			"data on the computer. You may have heard the term database. So, a database is a",
			"related concept to this, sort of simple, basic idea of a table. Generally the way",
			"this works is that the fields are, are, or you can think of them as the categories,",
			"the number of fields is not very big. Fields, and there might be eight or ten or",
			"something. So they represent kinda the fixed categories we wanna keep track of.",
			"And then the number of rows could be enormous. It might be millions or maybe",
			"even billions of rows. So I&#39;ll just, mention a couple examples. So you could",
			"think of your, your email inbox is maybe stored in a table on the computer. So the",
			"way that would work is, well, what would the fields be? The fields might be",
			"something like from, and to, and date, and subject, and, you know, a few other things",
			"that you store, per message. And then one row is just one message. So each message",
			"gets its own row, and then we have this, fixed number of fields. So then when you",
			"go to your inbox, well, there might be. 10,000 rows in there for all your email",
			"and maybe when you go to your inbox it just selects the ten most recent ones and",
			"shows you, maybe not all the fields, but maybe the most important fields from that",
			"message. Another example is Craig&#39;s List. Or, you know, any sorta online auction",
			"site. Where maybe it&#39;s stored, it could be stored in a table where one row is gonna",
			"be one item for sale. And then the fields would again be sorta the categories that",
			"you want for one item. So the categories, the fields might be the price, the date it",
			"was listed. Maybe a short description, and a long description, and a few things like",
			"that. So those are just a couple examples of how many of the things you deal with",
			"day to day often, back on the computer, that&#39;s gonna be stored in some kinda",
			"table. Alright, so to make this real, I wanna look at co de to manipulate, tables.",
			"And I&#39;m gonna use the baby name table as sort of our, our working example for a, a",
			"couple sections here. So, in this case, the baby data for 2010 is stored in,",
			"baby-2010.csv. I should just mention, CSV stands for Comma Separated Values. It&#39;s a",
			"standard for storing, essentially table data in a text file, and it&#39;s a really",
			"simple, fairly old standard. So it&#39;s a pretty, you know, easy way to interchange",
			"data from one program to another. So in terms of the code, I&#39;ll make my analogy to",
			"images. So for images, we had four pixel colon images, And that would loop through",
			"all the pixels in the image, and for each pixel. Everyone, whatever this code was",
			"inside the colon braces. So, for the table to be very similar we&#39;re going to have",
			"four row colon table, And what that&#39;s going to do is it&#39;s just going to loop",
			"through each row through the table. So, it just starts from the top and go through",
			"each one. And for each row it&#39;s going to run whatever code I put in the colon",
			"braces. So, here is our first example. That is the line, very similar to, loading",
			"an image. So that&#39;s the line that, grabs the table and stores it in a variable,",
			"which I will inevitably just call the table, And then here I have the four loop,",
			"sorta looking through all the rows. And in this case, the simplest thing I&#39;m gonna do",
			"is I&#39;m just gonna say, print row. So, I&#39;m just gonna, essentially just, you know,",
			"look at a, print each row in the data. So this is the baby data, so if I run this.",
			"There is row one and row two and so on, So you can see that Jacob, Isabel, Ethan,",
			"those fairly popular names. It actually made my web page quite tall because of",
			"course there is two thousand of these things. So you know there&#39;s Courtney with",
			"a K The 637 popular girl names. So it runs all the way down here as I was saying.",
			"Oops, to a, to a thousand. So Acre and an Danea, So That is one thing, so what, I",
			"guess what this shows, sort of, a bulk output thing, but what it shows is, that",
			"line ran 2,000 times. Once for each row in the table. So, just as with the image, the",
			"four loop just went through and looked at each one. Alright so here I&#39;m gonna comma",
			"this out and run again just to get rid of the output so I can have my webpage and",
			"I&#39;ll be a mile high here. So what are we gonna do with the table? Just looping",
			"through and printing each row, that&#39;s like [laugh], like for Craigslist or for your",
			"email. That&#39;s never what you want. What we want is to loop through all the rows and",
			"just pick out the six or two of the 2,000 that we want. This is very common thing to",
			"do with tables. It is sometimes called in database terminology a query.",
			"That I&#39;m going to kind of sort of narrow down to just the rows I want. So, let&#39;s",
			"talk about the code to do that. So for our purposes, we&#39;re going to do this with",
			"an IF statement, put an IF statement inside",
			"the loop and in the IF task we will write a task to select just some of the rows. So",
			"here&#39;s gonna be my first example. So here is the four loop. So that&#39;s looping",
			"through all the rows. And then inside the four loop, I&#39;ve got this if statement. So",
			"what&#39;s gonna happen is, this highlighted code is gonna run again and again and",
			"again, once for each row in the thing. And so what I&#39;ve done, I&#39;ve, written a test",
			"here, and my, the goal here is, in this case, is to just pick out the rows where",
			"the rank is six. And so, let me talk about how that works. So what&#39;s gonna happen is",
			"that highlighted test, that test is gonna be evaluated once for every row, so in a",
			"sense, 2000 times. So, what I&#39;m gonna do is structure the test so it&#39;s true for a row",
			"I care about. And then inside of here I&#39;ll put a print, so it&#39;ll print the ones I",
			"care about, and for all the other rows, this will be false, and so it won&#39;t print the,",
			"won&#39;t print those. All right, so how does this work? So just as for the pixel, we",
			"had get red and get green and get blue the row has get field. And so you could,",
			"remember we called it a row because all the way across it has a bunch of different",
			"fields. So you can say, well, which field do you want? The way this works is each",
			"field has a name. In this case, the names are name, rank, gender and year. So in",
			"this case, I say get field. And then, within the parentheses, I say in a string,",
			"which field do I want by name? So in this case, I&#39;m, like, oh right. I wanna go to",
			"the row, and I wanna pick out the rank. So this highlighted part that goes to the",
			"row. And that picks out the rank. Just as before we would have a pixel dot get red",
			"and that would pick, that would pull the red just out of the pixel, so this is",
			"analogous but for a table. So now my goal here for this example is I wanted to just",
			"show what the rows where the rank is 6. And so this will require a new little",
			"bit of code. So having picked the rank out here,",
			"then I says equals, equals, which I think we already used before, but two equal",
			"signs next to each other that compares two things for equality, it tested they are",
			"the same. And so road get field rank equal, equal six. What that says is, get",
			"the rank out, and test if it&#39;s six. And if it&#39;s six, we&#39;ll say that that&#39;s, the test",
			"is true. And if it&#39;s not, we&#39;ll say it&#39;s false. So, let me just try running this.",
			"So if I run it, what&#39;s happened is, it went through all 2,000 rows. And for these",
			"two rows, that test was true, Because that&#39;s the case where the, the rank was",
			"six. And obviously, you know, I could say it, like, 127 here or whatever. And then",
			"we would get the two rows. It just happens; each rank number has one boy name",
			"and one girl name in the Stata set. So, that&#39;s why I keep getting two rows here.",
			"So let me try another example. Oh, also I should mention a, a warning about this. So",
			"I&#39;ll change this back to six, quick. So this use of the two equals for equality is",
			"a little odd in computer code. I think it would be very reasonable to think, oh,",
			"what, shouldn&#39;t there be just one equal sign? Right? If rank equals six? And",
			"unfortunately the single equal sign in JavaScript already has been used for",
			"variable assignment. It&#39;s kinda already dedicated to meaning that. And so they",
			"couldn&#39;t use it for quality, so that&#39;s why there&#39;s this different symbol for equa",
			"lity. Now, just for this class. So the, it&#39;s actually a pretty common error coding",
			"to sort of accidentally type a single equal sign, when someone meant two equal",
			"signs for comparison. In this case. I&#39;ve outfitted the run button with some special",
			"checking code, where it notices if in an if test, it sees a single equal sign, And",
			"it gives this error message that basically says, hey, did, did you maybe mean to use,",
			"two equal signs? So, that is an easy error to make, but. Hit the run button and we&#39;ll",
			"catch it for you. That, that&#39;s something I just did for this class, Alright so now",
			"let me do a now let me do another example. So the test I did before I tested if rank",
			"was six but really any kind of test as we were doing before with images, will work",
			"here. So in this case what I&#39;m going to do is I want to go through the data set and I",
			"want to find the data, let&#39;s just say, for Alice. So as I mentioned before forget",
			"field you can just patch in the name for any field. So, you would need to know what",
			"the field names are. For this data set they are name ranked under here and here.",
			"So, here I will go to the row and say, hey give me the name field. So I&#39;ll say, name",
			"there. And then I&#39;ll, I&#39;ll equals, equals, test if the name is, is the same as Alice.",
			"So, if I run that. In effect what this does is it just pulls out the Alice row.",
			"It goes through all the rows, does this test, and if the name is Alice, let&#39;s hear",
			"the English translation of this, then it prints the row out. Alright, so that&#39;s the",
			"basic pattern. So let me just work a few examples for this. So, the pattern is",
			"gonna be, well, just as I was doing. We have a for loop, there&#39;s an if",
			"statement side of it, and then really, all of the action is in the parentheses of the",
			"test. Where I say row.getField something, and I have some test about it. So let&#39;s",
			"try these. So if I run it this way, we pull out, it says, if name is equal, equal",
			"to Alice, I get the Alice row. If I wanted to look for something else, pull out some",
			"other data, we could say Robert. So Alice is 172. Robert is 54. Let&#39;s try Abby.",
			"284. So, what&#39;s happening is, this highlighted test is happening all 2000",
			"times. And it&#39;s just a question of which rows are we, are we picking out there? I",
			"did Robert before. I&#39;ll show you something kind of funny. If you do Bob and you run.",
			"Nothing appears here. What&#39;s going on there is actually no one names their kid",
			"Bob. Apparently, so what&#39;s happening is that we are getting no... Zero printing is",
			"happening here. This thing was just never true. That&#39;s sort of the pattern on the",
			"form I guess for just as how people name babies is that they tend of the form...",
			"They put a long name, like Robert. So, and then Bob is like, they don&#39;t put on the",
			"form. Maybe that&#39;s just what they actually call the kid. Alright, so let me try a",
			"different test. Let&#39;s say I wanna test if the rank is one. So I would change get",
			"field, and I would type rank here. And then the equals, equals. I can say one,",
			"sure. So that gives me the two rows Jacob and Isabella. We saw four, those are rank",
			"one. So... what was the other one we did? 1,000? So say rank equals a",
			"thousand. And we get Crew and Dania. So the tests we did earlier with images, like less",
			"than, less than equal to - all that stuff works too. So let&#39;s say I wanna look at,",
			"if the rank is less than ten. I can just say less than ten and when I run that, you",
			"can see I get rank one, rank two, rank three, rank... All these are rank numbers",
			"where the less than ten test is true. Although you&#39;ll notice the last I get is",
			"Aiden and Chloe, number nine. The rows where rank is ten, I don&#39;t get. And that&#39;s",
			"because this form of less than is a strict less than. So it&#39;s true for nine but it&#39;s",
			"not true for ten. If you want, there&#39;s another form of less than where you&#39;re",
			"like, where you wanna say less than or equal to. And, I don&#39;t think we did this",
			"for the images but it&#39;s just, what you do is you put in an equal sign right after",
			"it. That means less than or equal to. So if I run it now then it goes through ten.",
			"So, and that works for, greater than as well. Alright, so let&#39;s try a, let&#39;s try a",
			"greater than one. So I could say, I would like to see all the rows where the rank is",
			"greater than 990, let&#39;s say. And so what I, so I get 991, 92, da, da, da, da, up",
			"through 1000. Okay, let me just try one more. I, so thus far I&#39;ve just done examples",
			"with name and rank. And so inevitably, I&#39;m",
			"calling, row.getField, and just changing what string is there to pull out a",
			"different field. I&#39;ll try pulling out the, the gender field. In this case, the way",
			"the data&#39;s coded, the gender field is it&#39;s, it&#39;s, it&#39;s just strings. So it&#39;s",
			"either the string boy or string girl. So if I were to say, if gender is equal,",
			"equal to girl. Hit one then I get [sound] I mean if you look where it say scroll",
			"here, what&#39;s happened is I have just gotten all 1,000 girl rows. And, and none",
			"of the 1000 boy rows. Whoops. Alrighty. Sorry, let me get this back. So this is",
			"ju-, just a trick where I comment out print, so it prints nothing, and run it",
			"again. So then, that way, it just, it just blanks out the output here. So. Just to",
			"repeat what the pattern is. So, the, these first few lines are always the",
			"same. And I guess I was always printing the row. So the, that was always the same.",
			"What I change is the if test. And the gist of it, the pattern tended to be I would",
			"say row.getField, whatever field I care about. And then I would write equals",
			"equals or less than or equal to or something. Let&#39;s say on the rank or equal,",
			"equal to the name to, in a sense, pull out the rows. And the rule was, I&#39;m pulling",
			"out a row, if this test is true. And so, with that in mind, well this can be a good",
			"source of some exercises."
		],
		"is_youtube": false
	},
	"video_022": {
		"section": "Week 5",
		"subsection": "Table startsWith endsWith",
		"unit": "Table startsWith endsWith",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/5+-+1+-+Strings+(4+mins).mp4"
		],
		"video_duration": 273,
		"speech_period": [
			3.62, 4.95, 3.98, 3.62, 7.0, 6.42, 1.421, 4.44, 4.189, 3.381, 6.099, 3.25,
			5.051, 4.89, 3.37, 5.95, 4.51, 4.1, 5.21, 3.28, 7.0, 6.73, 6.1, 7.0, 6.15,
			6.44, 5.48, 2.839, 4.871, 2.37, 4.38, 6.48, 7.0, 4.62, 7.0, 5.87, 2.779,
			3.701, 4.61, 5.49, 4.0, 4.44, 6.27, 6.41, 6.65, 4.13, 3.38, 5.85, 7.0,
			3.089, 6.99, 2.96, 3.551, 3.239
		],
		"transcript_en": [
			"This is a, going to be a very short section. I just want to add on",
			"an additional test that happens to work very well with the baby name data. So this is",
			"going to be an alternative to the == that we were using before on",
			"the baby name data. And I want to show you these functions, which are called",
			"startsWith and endsWith. And these work on strings. And to explain it, I&#39;ll just",
			"look at the code in my example here. The way this works. Is, all this is the same as we&#39;ve seen before. I&#39;ve opened the table,",
			"I have the loop, they have the if-statement, where I&#39;m",
			"looking at each row. So we&#39;ve just look at the task left right here. So, the first",
			"part of the task is the same as we&#39;ve done before. So, I say row.getField(&quot;name&quot;) so",
			"I&#39;m pulling the name out of the row, and that&#39;s a string. And previously we&#39;ve done",
			"examples like, oh, is it equal to &quot;Abby&quot; or &quot;Robert&quot; or whatever, with the ==-test.",
			"The way these startsWith and endsWith -functions work, is the syntax is",
			"kind of funny. It has a dot... And you just tag it right on to the right hand",
			"side of the name so I get out the name and I immediately say .startsWith. And",
			"then, inside of the parenthesis for the startsWith, you could just say anything.",
			"So here I say &quot;Ab&quot;. And what that tests is, does the name begin with the letters &quot;Ab&quot;?",
			"And if it does it&#39;s true, the startsWith is true, and if it doesn&#39;t it&#39;s false. So it,",
			"it kinda reads. You know, does, does, does the name start with &quot;Ab&quot;? So, let&#39;s just",
			"try it. So if I just run this, what you&#39;ll see is it&#39;s gone through the 2,000 rows,",
			"and it&#39;s just picked out, we&#39;re gonna see they all start with &quot;Ab&quot;. It&#39;s just; it was",
			"true, for all of those. So whatever I type here. We&#39;re gonna get rows where the name",
			"begins with that, So, I can type... I don&#39;t know, we&#39;ll reverse it. I can type",
			"in &quot;Ba&quot;, oh, there&#39;s not that many. Or I can type maybe just uppercase &quot;A&quot;, not two letters.",
			"We&#39;re gonna get quite a lot, quite a lot of names, beginning with &quot;A&quot;. If I",
			"type a lower case &quot;a&quot; here, And I run. We actually get no output. And what&#39;s going",
			"on there is in the computer the upper case &quot;A&quot; and the lower case &quot;a&quot;, those are",
			"just two different letters. And so in this data the names all begin with an upper",
			"case letter and then all the other letters are lower case. So startingWith(&quot;a&quot;)",
			"- that&#39;s a subtlety, but that has zero results, whereas if I put an upper",
			"case &quot;A&quot; here and run it then we get them all.",
			"Right, and you can even see how yea, they begin with an upper case letter then later",
			"letters are lower case. So you just need to know that on the test. What else was I",
			"going to do here? Let&#39;s try &quot;Z&quot;. So if I look for startsWith(&quot;Z&quot;), then we get all",
			"the names; there&#39;s a few there. Or I could narrow it. I could say, oh well, maybe",
			"it has to start with &quot;Za&quot;. Then we get fewer. And maybe I could say &quot;Zai&quot;.",
			"Then we get down to just four, And then I could say it like, I&#39;ll say it like",
			"&quot;Zai&quot;... I don&#39;t know, &quot;x&quot;. Then I run it, oh",
			"then I get naught. So its poss-, it&#39;s certainly possible to write a test where it&#39;s just",
			"false. For all 2000 rows and then it just prints nothing. So I&#39;ll just back it to &quot;Zai&quot;,",
			"and then we just do those. So that the startsWith function, And for these",
			"first examples, we&#39;re always going to use it pretty much this way. So we go the row",
			"for the baby data, we get the name out, and then we immediately say .startsWith, to",
			"check the left side of the name. So, as you might guess, there&#39;s also a",
			".endsWith that tests the other, the right hand side of the name. So if I say,",
			"endsWith(&quot;z&quot;), I run that, oh gees, surprisingly few of those so that picks",
			"up, apparently there&#39;s only three names in this whole data set that end with &quot;z&quot;. So",
			"I could say, or I could take multiple",
			"letters. I could say, endsWith(&quot;ly&quot;). So a few more Or I, I&#39;ll try endsWith(&quot;la&quot; ). And",
			"I&#39;ll run that. Oh, so then there&#39;s quite a few of those. You can see, I think these",
			"are all girl names too. I mean, that, that&#39;s just culturally the pattern in",
			"English that, girl name, or &quot;la&quot; is, supposed to be a girl&#39;s name. So, these",
			"are, this is just two addit-, just two additional functions. And we&#39;ll, as I was",
			"saying, we&#39;ll t end to use them for the names in the baby data set, baby data set.",
			"But they&#39;re, they&#39;re gonna allow us to do some more interesting problems."
		],
		"is_youtube": false
	},
	"video_023": {
		"section": "Week 5",
		"subsection": "Table Boolean Logic",
		"unit": "Table Boolean Logic",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/5+-+2+-+Boolean+Logic+(11+mins).mp4"
		],
		"video_duration": 691,
		"speech_period": [
			5.299, 4.691, 5.87, 6.589, 4.92, 5.57, 5.131, 4.2, 3.629, 5.691, 5.739,
			3.3, 5.751, 3.71, 4.25, 4.62, 3.89, 5.75, 5.14, 4.24, 3.97, 3.58, 3.21,
			3.57, 5.56, 4.22, 3.24, 4.44, 3.24, 3.4, 6.6, 5.08, 5.55, 2.98, 3.78,
			2.88, 3.23, 4.68, 5.329, 5.521, 6.39, 5.14, 3.36, 6.69, 2.51, 3.34, 3.799,
			6.0, 3.771, 6.0, 2.93, 5.32, 5.93, 4.689, 4.881, 6.709, 2.621, 5.911,
			5.559, 4.971, 6.38, 3.679, 4.011, 2.28, 7.0, 3.579, 4.171, 7.0, 4.831,
			7.0, 1.66, 2.65, 3.94, 5.98, 4.68, 4.361, 5.699, 2.91, 5.25, 4.71, 3.901,
			3.0, 4.509, 4.12, 4.13, 4.44, 3.03, 2.75, 3.59, 4.63, 3.54, 4.881, 3.239,
			4.75, 3.101, 4.339, 6.27, 7.0, 7.0, 7.0, 5.74, 3.301, 4.239, 2.421, 3.139,
			4.85, 4.37, 5.571, 5.93, 7.0, 7.0, 7.0, 7.0, 7.0, 4.159, 7.0, 7.0, 3.93,
			3.739, 7.0, 7.0, 6.581, 6.919, 7.0, 4.76, 3.93, 3.721, 3.839, 4.861, 3.04,
			4.49, 6.679, 2.86, 4.161, 4.029, 2.7, 4.331, 4.479, 1.281
		],
		"transcript_en": [
			"In this section, I wanna show you can take a simple test, like startsWith(&quot;A&quot;), and",
			"use, the notion of AND, and OR, to combine it with other tests to sort of put",
			"together a more complicated test. So this is called Boolean logic. So the way this",
			"is gonna work, is, in code, the notion of AND is the, the symbol for that two",
			"ampersands run together (&amp;&amp;). And the, the symbol for OR is two vertical bars (||),",
			"put together. So let me show you what that looks like. So here&#39;s some code. And it",
			"has, the first test just says if the name starts with &quot;A&quot;, just as we&#39;ve seen before,",
			"and that test is, it&#39;s complete and functional. So that is not changed by",
			"adding the notion of Boolean logic. So for Boolean logic, what we do is we take that",
			"test and we follow it with two ampersands. So you would pronounce that as, AND. And",
			"then it&#39;s followed by a second test. The second test is also complete and makes",
			"sense on its own. So, what this does is it just takes two tests and it puts them",
			"together, and it says, well. For this overall if-test to be true, both of these",
			"subparts have to be true. So the components are, well here, I&#39;ll, I&#39;ll run",
			"it. So what this says is, names that begin with &quot;A&quot;. That has to be true. And the name",
			"has to end with &quot;y&quot;. So if I run it, we just get this, you know, kinda shorter list of",
			"names that begin with &quot;A&quot; and end with &quot;y&quot;. Syntactically like I said it has the two",
			"tests, each of which is complete. They&#39;re joined with AND or, OR as we&#39;ll see in",
			"a minute. And then finally there is still this one set of parentheses, a left most",
			"parentheses and a right most, a right most parenthesis, around the entire thing. So",
			"I&#39;ll do a bunch of examples, like this. A couple other, one other thing to point out",
			"about this, in this case what happened is, the test is kind of long, right? I have",
			"this whole startsWith part, and the ampersand, so if I did it all on one line,",
			"it gets a little, a little long. So what&#39;s happened in this case is I, actually I hit",
			"return after the ampersand. I went down here and I hit the space bar, to get the",
			"row over here and kind of line it up. So I wrote the second test on a second line.",
			"That&#39;s optional but you can do it. Putting in spaces and stuff like that doesn&#39;t",
			"upset the code. So, I&#39;m, always my examples I&#39;ll sort of neaten up in this",
			"way, Where I&#39;ll tend to write one test per line, and then I&#39;ll align them this way.",
			"So here&#39;s the second test. The only thing that&#39;s a little confusing is to note that",
			"there are two parentheses are required here. This, this first one just balances",
			"the parentheses for the endsWith. And then the second one, is the one that covers the",
			"entire test, so it matches up to the, that first one. So if you leave that out,",
			"actually I can illustrate this, so it&#39;s a pretty easy error to leave that one out,",
			"&#39;cuz you have to kinda realize alright I need two there. So in that case, not",
			"always, but the run button for the, just for this class, will try to give you an",
			"error message, like oh, it looks like there&#39;s a missing parentheses there. So",
			"now form it that way we&#39;ll get them, we&#39;re still good. As I said before each of",
			"these tests is complete and stand on its own. So just syntactly just the way we did",
			"things before. There&#39;s this one form of the code that looks right but is wrong.",
			"And so I&#39;ll create that here. So if you just write it this way. So I&#39;ll",
			"just sort of pronounce it. row.getField(&quot;name&quot;), that startsWith(&quot;a&quot;) AND",
			"endsWith(&quot;y&quot;). So just to the ear to a human, they would know",
			"what that means, but this code does not work. The problem is the second term. On",
			"its own, doesn&#39;t make sense. Right? Doesn&#39;t just stand on its own like ends",
			"with, well it doesn&#39;t make sense. Usually what we need is, we&#39;re gonna put in a",
			"cursor here, we would need row.getField(&quot;name&quot;) or &quot;rank&quot; or whatever it&#39;s gonna",
			"be .endsWith. So this is not working. Each, each, to the left and the right of",
			"the ampersand, each task has to be complete. So in this case, I&#39;ll just sort",
			"of hit undo in Firefox here, the, if we wanna be talking about name, like we",
			"spell it out for the first test, and then we also just completely spell it out for",
			"the second test. So each test makes sense to the computer. Alrighty, So, I&#39;m gonna",
			"try another example here. Let&#39;s see. So right now, if I run this, it just shows",
			"all the &quot;A&quot; names, which is quite a lot. What the problem statement says is, change",
			"the code so it prints the names that start with &quot;A&quot; and the rank is less than 50. So,",
			"oh here&#39;s, here&#39;s the first test, and I&#39;ll add two ampersands, and return let&#39;s",
			"say row, that starts, that startsWith(&quot;A&quot;) is one test and now we&#39;re gonna add, I&#39;m",
			"gonna combine it with an AND, with the second test, where I&#39;ll say rank, oh let&#39;s",
			"say less than or equal to 50. So I think I&#39;ll try it, yeah so that works. So",
			"we still get &quot;A&quot; names but now we&#39;re just getting up to rank 50. I&#39;m just gonna try",
			"a third example here. Alright, now we&#39;ll do an example with OR. Change the code",
			"below, so it prints rows where the following is true. Name starts with &quot;X&quot;, or",
			"the name stars with &quot;Y&quot;, or the name stars with &quot;C&quot;. So if I just run, run it right",
			"now, the code that&#39;s there just does &quot;X&quot;. So",
			"I wanna use OR. And we&#39;ll copy this. So by using an OR-test. You make",
			"multiple ways for the overall if-test to be true. It&#39;s like, well, the if-test were",
			"true if this one is true, or if this other thing is true. So it&#39;s kind of a widening.",
			"So here I&#39;ll say, OR row.getField - &quot;Y&quot;. So, for the previous run, we only got &quot;X&quot;.",
			"Alright? So I&#39;m gonna run this. Oh, so now we get &quot;X&quot; and &quot;Y&quot;. So there&#39;s &quot;Yusuf&quot; and",
			"&quot;Yeritza&quot;. Notice that I, my goal ultimately was to show &quot;X&quot; or &quot;Y&quot; or &quot;Z&quot;,",
			"but I think it is kinda nice if you get the code",
			"into a kind of half built state, but where it makes sense. You know, just try running",
			"it and kind of verify, oh that works before going on to do the whole thing.",
			"That&#39;s kind of a classic computer code rule of thumb; don&#39;t try and do the entire",
			"thing in one step, OR startsWith(&quot;Z&quot;). So, I",
			"guess partly what I&#39;m showing here is. You can have multiple ORs and multiple ANDs and",
			"string things together. So let&#39;s try that, There it goes, Quite a few &quot;Z&quot;",
			"names. So there we have it, &quot;X&quot; or &quot;Y&quot; or&quot; &quot;Z,",
			"so this shows the two vertical bars, and then in this case I have strung together",
			"three things. For this class, I will only, I&#39;ll use either a bunch of things",
			"connected with AND or a bunch of things connected with OR. I won&#39;t combine them.",
			"Combine them just brings up some other cases that are kind of interesting but I",
			"not, I don&#39;t really want to get into. They don&#39;t really help a lot. Other thing I",
			"should mention about this, alright so I should just apologize to this. This",
			"ampersand business is sort of a historical accident, or the vertical bar business.",
			"Language, influencial language chose this in, like the mid&#39;70s. And once one",
			"language had chosen this symbol to mean OR, some other languages thought, oh, well",
			"we should just use that convention. And so it just kinda snowballed, where now,",
			"that&#39;s a very common convention. So I felt like, well, it&#39;s kind of obscure, but.",
			"That&#39;s the convention so we should just go ahead and learn that one. Alright, So,",
			"let&#39;s scroll down here a little bit. So actually, what I have set up is just a",
			"large number of examples here. And there&#39;s a show solution button here, so if you",
			"want practice or to review these examples I&#39;ve done, you could come back and it&#39;s",
			"all sorted here. What I&#39;ll is I&#39;ll just try the, the first six. So, I&#39;ll type in",
			"the code for those and I&#39;ll leave the others as kind of extra practice for",
			"people who want it. Okay, so the first one says, name starts with &quot;Ab&quot;, or starts with",
			"&quot;Ac&quot;. So I&#39;ll say there&#39;s some code here that we start with already. So it starts",
			"with &quot;Ab&quot;. And what was it? OR starts with &quot;Ac&quot;. So this one starts with here, So this",
			"should be an OR, Two different or&#39;s. Let&#39;s try that one. So we got &quot;A&quot;, &quot;Ac&quot; Where&#39;s",
			"the &quot;Ac&quot; name? Oh. Look I made a bug. I typed &quot;Ab&quot; twice. Okay. There we go.",
			"Ok, there&#39;s an &quot;Ac&quot;. That showed that interesting example of a bug, where sometimes bugs are",
			"syntax errors where you hit the run button and it, it just, you know, it, it crashes",
			"and you get some red output. But sometimes a bug is just that. I typed",
			"something that does mean something to the computer, but it&#39;s not what I intended.",
			"And so then the output is not what I expected, then I&#39;m a little bit confused.",
			"So that&#39;s the more higher level kind of bug in this course. It&#39;s fairly",
			"common with computers. Okay, let&#39;s see, next one. Name starts with &quot;Ab&quot;, or",
			"&quot;Ac&quot;, or &quot;Al&quot;. Oh, I see. So this just extends. This just shows that you can have",
			"three. So I&#39;ll say vertical bar. I&#39;ll paste this in. So it was &quot;Ac&quot;,",
			"so &quot;Ab&quot; and &quot;Ac&quot; doesn&#39;t give us a lot but with &quot;Al&quot; you know it&#39;s quite a lot.",
			"Okay. So the next one was, name starts with O and ends with A. So I&#39;ll say",
			"starts, I&#39;ll just translate it. Starts with &quot;O&quot; AND ends with &quot;a&quot;. Alright. Let&#39;s",
			"try that. Oh, there&#39;s only one, &quot;Olivia&quot;. How",
			"bout, starts with O and gender is girl? So, we&#39;ll just get gender right here, and",
			"then we test that is not with startsWith endsWith, but just with ==.",
			"So, O AND girl. Oh, there&#39;s only two. So we get Olive. Okay,",
			"name ends with &quot;a&quot; and gender is what? Change this to name.endsWith(&quot;a&quot;), and",
			"per my previous example, my previous claim, I&#39;ll just cut that out.",
			"Now it&#39;s half built right, name ends with &quot;a&quot;. But I could run that and sorta verify,",
			"all rigt that&#39;s working. And then, take your working thing, and extend it. What",
			"did I want? In this case I wanted oh, names ends with &quot;a&quot; and gender is blank.",
			"Okay. Jesus, Lyle. Girl names neither. Boy. Oh, well, there&#39;s a few, Joshua,",
			"Ezra. Okay, I&#39;ll do this last one, number six Rank is less than ten, and gender is",
			"girl. So I&#39;ll change this to &quot;rank&quot;. Instead of endsWith. I&#39;ll say, less than or equal",
			"to ten. And, so, Now I&#39;m not using startsWith, or",
			"endsWith for either of these but just notice each one of those is a complete and",
			"correct test as we discussed before. That one is, and that one is and I&#39;m just",
			"joining them from there. So rank is less than ten, and gender in this case is girl.",
			"Let&#39;s try that. So that makes sense. We just get one, two, three, four of them.",
			"One through ten girl names. This one&#39;s kind of interesting in that this, this I",
			"think has a sensible English translation. What this is, is. What this says is top",
			"ten girl names, And then, We can phrase that as this AND thing. Where rank is less",
			"than or equal to ten and gender is girl. Or indeed",
			"ultimately we can phrase it as code. So just get it down to, to where the computer",
			"can actually do it. So there&#39;s a few more problems here and the solutions all",
			"available. So this is a good opportunity to come and review what I did or try a",
			"little bit of practice before we do the exercises. Cuz these, in some sense, are -",
			"computer languages have now gotten big enough that I can really we can have a lot",
			"of different [inaudible] alright."
		],
		"is_youtube": false
	},
	"video_024": {
		"section": "Week 5",
		"subsection": "Table Counting",
		"unit": "Table Counting",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/5+-+3+-+Count+I+(5+mins).mp4"
		],
		"video_duration": 326,
		"speech_period": [
			4.661, 4.09, 4.409, 3.801, 4.63, 3.22, 5.61, 3.21, 3.239, 5.03, 4.57,
			4.52, 5.921, 4.57, 4.09, 3.43, 5.49, 4.23, 5.4, 4.39, 5.55, 2.9, 4.38,
			4.22, 3.48, 4.07, 4.13, 3.99, 4.52, 4.09, 6.46, 3.4, 4.53, 3.62, 5.419,
			4.741, 3.17, 6.839, 2.911, 2.69, 5.34, 6.78, 3.61, 4.559, 5.661, 3.3,
			2.96, 5.15, 5.98, 3.51, 2.76, 4.38, 5.39, 2.83, 3.68, 4.98, 2.779, 4.561,
			5.74, 5.9, 2.58, 5.14, 7.0, 4.32, 6.98, 6.7, 2.36, 1.74, 4.42, 7.0, 0.28
		],
		"transcript_en": [
			"Thus far, we&#39;ve written code that, where there&#39;s an if-test. And if the test is",
			"true, we print the row in the data. So in this short section, I wanna show how,",
			"instead, you would just count the number of rows where the if-test is true. And",
			"that&#39;s, that&#39;s more akin to what you really wanna do with computers. So in",
			"order to do this, we&#39;re gonna have to add some novel code into, the code we&#39;ve been",
			"doing. So, it&#39;s described, here but I&#39;ll, I&#39;ll point out the parts in this code",
			"example. So there&#39;s three things that have to be added to do counting. One is I&#39;m",
			"gonna introduce a new variable, Which I&#39;ll be sure I&#39;ll call count. And I&#39;m just",
			"gonna set it to zero, and I&#39;m gonna do that before the loop starts running. So,",
			"count equals zero. Then, inside of the loop, inside the if-statement, where, you",
			"know, I, I print the row as we&#39;ve done many times before. But then I&#39;m also gonna",
			"have this code, count = count + 1. And that&#39;s kind of a funny looking",
			"line. I&#39;ll tell you, what that does. Is whatever value is stored inside of count",
			"it increases it by one. So it just bumps it up from five to six, or ten to eleven,",
			"Or whatever. But let me, let me explain how this works. So, in mathematics, this",
			"line doesn&#39;t really make any sense. Like, you know, what value is equal to itself",
			"plus one. But the reason this works in the computer is that the function of the equal",
			"sign in computer code is actually more simple than it is in mathematics. And the",
			"key thing to understand is that it first evaluates the right hand side. And then",
			"only once that has been resolved to get a value, then that value is stored into the",
			"variable in the left hand side. So imagine the very first time this runs. So count is",
			"zero and then it gets to this line. So the first thing it&#39;s going to do is evaluate",
			"the right hand side. So count is zero, so zero plus one is one. So it&#39;s gonna, this",
			"pile apart is one. So once it&#39;s figured that out, it stores one into count so now",
			"count is one. So you can see right there the action where coming into the line",
			"the count was zero and then coming out it&#39;s one. So it bumps it up. So then the",
			"next time it sees this line, if the if-statement is true. That little value at",
			"the right hand side, count as one. So one plus one is two, so having figured out",
			"that&#39;s it&#39;s two than it stores two in the count so now the count has two. So",
			"ultimately, you don&#39;t need to have a total command of the details of this thing, you",
			"just need to know that the form, x=x+1 for some variable, it just bumps it up by",
			"one, each time its run. So, I was saying there is three parts. We&#39;ve got to set to",
			"zero and the count=count+1 inside the if-statement and then, finally",
			"we just, we just print out whatever value is left in",
			"the, in the count after all, after the for-loop has run through all its times. So,",
			"let&#39;s just try this. So if I run this. What we see is that the",
			"loop runs, and the if-statement here, checks for names beginning with &quot;A&quot;. So, we",
			"just see all these &quot;A&quot;-names. And then, down at the end, there&#39;s this one line, &quot;count:",
			"258&quot; So what that shows is, the for-loop, you know,",
			"the count was started at zero. The for-loop ran all its times. The",
			"if-statement was true, apparently 258 times out of the 2,000 times. And then we",
			"get this &quot;count: 258&quot;. Prints it out because of this line, So, that one runs",
			"after the loop is done, so all that these internal prints are done. Alright, So let",
			"me try some experiments here, So one easy thing to do, is like, well what if I just",
			"remove this print that&#39;s inside the loop? So, I&#39;m still gonna run through the rows,",
			"I still have the if-statement, but then the only thing that happens inside if-statement",
			"is count=count+1. So just bump it up by one. So, now if I",
			"run this program. I just, I just get this one line of output. I run it and it just",
			"says, bam, 258. So this is beginning, this is beginning to resemble more what you",
			"think of as com-, you know, the form of computer is taking in some massive data",
			"and kind of sifting through it and giving you kind of a, a final answer. Alright,",
			"So, let try, try some more problems here. And as us ual, we&#39;ve got the solutions",
			"variable. How many names start with &quot;X&quot; and then compare it to how many start with &quot;Y&quot;.",
			"So, if I wanna count how many names start with &quot;X&quot;, I just change, you know, the",
			"count, and the count equals plus one. count=count+1 I can just",
			"keep. So I&#39;ll just say, how many start with &quot;X&quot;? So, if I run it, it says, six.",
			"So now it says oh well what if I want to know how many start with &quot;Y&quot; well we",
			"can see all, all the structure we keep and I just have to change that one thing to &quot;Y&quot;.",
			"And its seventeen, so I guess more names start with &quot;Y&quot;, a lot more names start with",
			"&quot;Y&quot; than with &quot;X&quot;. Then it says, for the third one, how many girl names begin with &quot;A&quot;,",
			"then change to count how many boy names begin with &quot;A&quot;. All right so this is going",
			"to bring in material from last time, I wan&#39;t to use an and here. So I&#39;ll say,",
			"startsWith(&quot;A&quot;). I&#39;ll say and (&quot;&amp;&amp;&quot;) row.getField(&quot;gender&quot;)==&quot;girl&quot; So that&#39;s",
			"the task, and then inside I just say count=count+1. Alright, a hundred sixty",
			"nine, So the, the follow up question is how many boy names. So for boy I would",
			"just change this. So this notion of the if and the task are really, is the same for",
			"counting. It&#39;s really just where as previously we",
			"would have said print(row) now I just have this",
			"count=count+1 so I can do the counting. [inaudible] so more grow names",
			"[inaudible]. Okay, so that&#39;s our first look at basic counting. So let&#39;s try some",
			"exercises."
		],
		"is_youtube": false
	},
	"video_025": {
		"section": "Week 5",
		"subsection": "Table Counting Multiple",
		"unit": "Table Counting Multiple",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/5+-+4+-+Count+II+(15+mins).mp4"
		],
		"video_duration": 902,
		"speech_period": [
			5.319, 4.021, 4.12, 3.51, 3.58, 3.84, 4.47, 4.63, 5.45, 3.98, 4.53, 3.7,
			4.87, 3.46, 4.46, 5.65, 4.451, 4.649, 4.211, 5.949, 3.67, 5.591, 4.729,
			4.76, 3.67, 3.731, 5.279, 4.16, 3.03, 3.291, 3.12, 4.8, 3.33, 4.69, 4.31,
			3.2, 4.55, 4.87, 5.31, 5.28, 3.99, 3.74, 4.56, 4.49, 3.42, 3.83, 7.0,
			5.79, 4.98, 2.66, 7.0, 4.08, 2.87, 3.8, 4.74, 2.649, 2.461, 3.1, 3.57,
			4.019, 2.681, 3.86, 3.5, 4.261, 5.04, 3.419, 4.03, 4.24, 4.361, 3.6,
			5.849, 4.311, 4.509, 4.03, 5.671, 3.769, 6.68, 3.181, 3.31, 4.09, 7.0,
			3.97, 4.291, 3.479, 4.69, 3.13, 6.19, 5.041, 3.949, 4.13, 4.81, 3.81,
			3.271, 3.859, 3.35, 3.881, 3.16, 3.399, 6.55, 3.361, 2.639, 6.18, 4.561,
			4.019, 7.0, 3.319, 2.8, 2.9, 4.58, 4.47, 4.47, 6.621, 4.9, 3.989, 7.0,
			6.669, 7.0, 3.12, 6.039, 7.0, 6.82, 7.0, 4.9, 7.0, 7.0, 4.34, 5.17, 5.96,
			4.03, 7.0, 2.74, 4.56, 4.6, 3.69, 2.49, 3.12, 5.66, 4.94, 7.0, 5.69, 7.0,
			7.0, 6.0, 7.0, 5.62, 3.41, 3.53, 4.13, 2.62, 4.0, 6.0, 4.09, 4.85, 3.65,
			5.51, 6.96, 7.0, 5.45, 7.0, 4.47, 5.76, 3.89, 4.93, 7.0, 4.85, 4.55, 4.07,
			5.95, 6.65, 4.13, 7.0, 7.0, 7.0, 7.0, 5.12, 4.01, 4.24, 4.67, 4.73, 6.49,
			2.89, 4.51, 2.9, 2.39, 3.95, 3.35
		],
		"transcript_en": [
			"So up to now. We&#39;ve looped over data, and written if statements to count one thing",
			"or another. But really what you want to do is be able to count multiple things. So",
			"that you can compare them, like are there more boys or girls or whatever they have",
			"some quality. So that&#39;s what we&#39;re going to do in this section. So in order to do",
			"this basically what I want to do is just have multiple counter variables. So",
			"instead of just having count, have a few of them. So let me just show you in this",
			"code section. So let&#39;s say I wanna go through and I wanna count my goal is do",
			"more boy or girl names end in Y, like who knows the answer? And well use the",
			"computer, so what I&#39;m gonna do. Is introduce two count variables. So outside",
			"the loop, whereas before I just said count equals zero I&#39;m just gonna use the simple",
			"form of, of calling my variables count1, count2, and so on. Pretty unimaginative,",
			"but it&#39;s simple. So I&#39;m gonna h, in this case I&#39;m gonna have two variables. So I&#39;ll",
			"say count1 equals zero and count2 equals zero. And my intention is that, well, in",
			"count1 I&#39;ll keep track of the boy case, and in count2 I&#39;ll keep track of the girl",
			"case. So, inside the loop. This looks very much like what we did before. So, I have",
			"an if task where I&#39;m looking for, rows where the name ends with Y, and the gender",
			"is boy. And so when that&#39;s true, I&#39;ll bump up count one. So, count one being sort of",
			"a boy counter. And then I have, following it, I have a very similar if statement,",
			"that looks for any name ending in Y, but I&#39;m looking for a gender that equals girl.",
			"And in that case, I&#39;ll bump up count two. So this, so the loop runs, and it&#39;s just",
			"going to be counting up the girl, it&#39;s, you know, at the same time, it&#39;s counting",
			"up the boy and girl cases. And then when it gets the end here. I&#39;ll just run it.",
			"Then it just says boy count colon count one and girl count, count two. So we see",
			"it turns out more girl name, more girl names end in Y than, than boy names or",
			"whatever it is. Obviously with this formula you could test any number of",
			"things. One thi ng I should point out is that, this is gonna be sort of our",
			"official, class format for how complicated I wanna make things. So, I&#39;ve got the one",
			"loop. And then I could have, you know, generally just two or three variables. But",
			"any number of variables, I set them to zero right here. And then for each one, I",
			"have an if statement. And I wanna point out, the if statements are one after",
			"another. And, in fact, the order doesn&#39;t really matter. What, what I would point",
			"is, the if statements are not inside of each other. I&#39;m not gonna do that. That&#39;s",
			"more complicated. Of the stuff we can do, perfectly interesting work just sticking",
			"with this form. Alright. So let me just try and natural extension with this, so",
			"we&#39;ll just go to three variables, I&#39;ll just show you how that works. So, for",
			"three variables, I&#39;m just gonna stick with my trivial naming convention. Count one,",
			"count two, count three. So I set these three variables to zero outside the loop.",
			"And this case, the questions I wanna ask it, or answer, is, do more names end in A",
			"or I or O? Who knows. So I&#39;ve got the three counters and I&#39;ll use count one to",
			"count the A case, and count two for the I case, and count three to the O case. So",
			"here&#39;s the sort of obvious if statement. If name ends with A, and then [inaudible]",
			"count one equals count one plus one. And then likewise there is an if statement for",
			"the I case that bumps up count two, and, and if statement for the O case that bumps",
			"up count three. And here I&#39;ve got these three print statements, outside the loop.",
			"So these run right the loop has completed so its bumped up all the counters to",
			"whatever they&#39;re going to be, and then we just print them out. So it&#39;s trapped. Huh.",
			"[inaudible]. So A. Totally dominates. 377 in or just like, yeah, whatever. Thanks",
			"for playing. Nice try. Just a little bit stylistic thing I&#39;ll point out here. My",
			"naming convention here is, I mean it&#39;s. Kind of lame, you know, just one, two,",
			"three. Another way we could of done this is, in this case we could of called this",
			"one count A and count I. I li ke this, count A and count I. So, it would be more",
			"demonic of, of what it was counting. But then it has the disadvantage of whenever",
			"you copy pasted or switched from one example to another you would have to like",
			"to remember rename. So, I decided to go with this very trivial simple just one,",
			"two, three scheme but we could of done something more complicated there. The",
			"other thing I&#39;ll point out is that it&#39;s, it&#39;s natural to find, to use copy paste",
			"for these so you kind of get your first case working and then you [inaudible].",
			"However, you do that there this very natural error where you have to be very",
			"careful that you&#39;re manipulating the right variable. So that in this &quot;if&quot; statement",
			"I&#39;m manipulating count one and then in this &quot;if&quot; statement count two and so and",
			"so. That&#39;s the sort of thing that happening to [inaudible]. Might help with,",
			"but it&#39;s, that is, no matter what you&#39;re doing it&#39;s a common error. So you just",
			"have to be a little bit careful about that. Right. So now that we&#39;ve got the",
			"ability to count multiply things, I wanna, kinda expand our data set a little bit. So",
			"I did this survey, which actually I didn&#39;t bring up here. Hum, so in Google",
			"spreadsheets, since it&#39;s all, everything is just intrinsically online, it works",
			"really well for sharing data and doing easy stuff. Hum, so it has this feature,",
			"where you can put up a little, sort of, form survey in front of people. So I made",
			"this trivial survey where I ask gender, and favorite color, and favorite T.V show",
			"that&#39;s on, and I just sent this out to my class. Hum, and the way it works is every",
			"time someone&#39;s submitted a set of answers, and this&#39; anonymous. It would go into the",
			"spreadsheet. And so this is a, Google Dock spreadsheet and what you is there&#39;s, it&#39;s,",
			"it&#39;s a table. So here&#39;s a column for gender, and here&#39;s a column for color. And",
			"these are just the answers. And you see is that every time someone types in an answer",
			"to the survey that just goes in as one row. And so we have data to sort of play",
			"around with. We have favorite color, favorite TV show, f avorite book, and what",
			"not. What I found is that it&#39;s easiest to do stuff with color, and sport, and,",
			"favorite soda drink, &#39;cause there&#39;s enough repetition there. If you look at book,",
			"there&#39;s, there&#39;s just so many books published that there, you know, most books",
			"just appear once. Anyway this is interesting data to, look at just to see",
			"what&#39;s going on with people who are, I guess about twenty years old in 2012. So,",
			"from Google spreadsheets you can export that data in CSV format I think I",
			"mentioned that before. It&#39;s a really common interchange format, and I just",
			"cleaned up the data a little bit so I removed dots. There was a problem where",
			"people would type in a Dr. Pepper either with a dot after the first R or not so I",
			"just removed all dots but other than the data just looks like whatever people typed",
			"in. So with that data we can write do all sorts of interesting problems, so here",
			"I&#39;ve set some up. So this data is available as survey/2012.csb so we could",
			"load that into a table. There&#39;s a function I haven&#39;t talked about before the table",
			"has called convert to lowercase. What that does is it goes through the table and it",
			"modifies all the text to just be lowercase letters. So, for example if we want to",
			"count, oh, well how many people have blue as their favorite color. Well there&#39;s this",
			"problem that did they type, upper case B blue, or lower case, or you know, all",
			"lowercase or whatever. So by calling this function we just cha-, all the data is now",
			"gonna be lowercase. So we just don&#39;t have to think about that variation of what",
			"people typed. So, I&#39;m gonna do that as a simplification here. Alright. So let me",
			"look at, so there&#39;s some sample problems here, and as usual we&#39;ve got the,",
			"solutions level so this will, I&#39;ll just try this out. So it says right code to",
			"print the soda field of each route. So, what this, what I&#39;m gonna do here. I could",
			"just print the whole row but it, it&#39;s so much data it doesn&#39;t make a lot of sense.",
			"But what could be interesting is, suppose you were curious about what people put for",
			"the soda data. W hat you could say is, get field, and you need to know what the names",
			"of the fields are. Their printed [inaudible] somewhere up here. Anyway the",
			"name of the field that the soda drinks answer is, soda. So I&#39;m just gonna print",
			"those. And I&#39;m not gonna count anything. Now we&#39;ll comment that out. So if I just",
			"print that, what we get is it just goes through all the rows. And, and remember,",
			"now, it&#39;s all lower case, and we can just kinda see what&#39;s there. This is maybe a",
			"good first step if you sorta wanna see, oh, well, what things seems to come up",
			"[inaudible]? Or just, kind of, if you&#39;re just curious, about TV shows or movies or",
			"whatever. [inaudible]. This also shows, I guess, ultimately that row.getfield really",
			"does just return a string. And so, print understands string, so if we just put it",
			"there, [inaudible]. Alright, so what I&#39;d like to do is, count the favorite sodas.",
			"So I wanna say, I&#39;m just gonna say Sprite, Dr. Pepper and Coke. Lets count those",
			"three. So what I&#39;m go to do is following my previous strategy, as I&#39;ll say count",
			"one equals zero, count two equals zero, and count three equals zero. So my",
			"intention is that I&#39;ll, you know, I&#39;ll follow, whatever the order is, what I say.",
			"Sprite, Dr. Pepper and Coke. So what do I wanna say? If row dot get field soda is",
			"equal to Sprite. And then write, I can just write it in lower case letters,",
			"&#39;cause I know that it has been changed. So I wanna say, count one is equal to count",
			"one plus one. So that&#39;s, that&#39;s counting one drink. We&#39;ll just try it. So this is",
			"count Sprite. Print count one, and I&#39;m gonna, I&#39;m gonna get rid of this line.",
			"I&#39;m, I&#39;m not gonna print all the sodas as we go. Okay, let&#39;s try that one. Okay.",
			"Sprite eight, that seems to work. So I wanna check it, because then. I&#39;m gonna do",
			"some merciless copy-paste. So then I&#39;m gonna count doctor pepper. And I&#39;m gonna",
			"manipulate count two in that case. And I&#39;m gonna count Coke. And I&#39;m gonna play count",
			"three. So this is the case I was saying, where you have to be careful. Copy base is",
			"great, but you gotta make sure you&#39;re doing the right thing. &gt;&gt; And here I&#39;ll",
			"make two copies of this line. So then this is gonna be Dr. Pepper, count two. And",
			"Coke is count three. I have to say, there was one other cleanup I did in the data.",
			"[inaudible], ... &gt;&gt; Okay. That looks right. One other is, people spelled Coke.",
			"Sometimes they write Coca Cola, with a dash, or not, or whatever, so I just",
			"changed those all to Coke. So. This is a different data set, but this is following",
			"kind of my earlier example of counting three things. So it should do well. So the",
			"case I&#39;d like to, the complexity I&#39;d like to work out is, like, well, you know,",
			"really, if you look at the data, sometimes people would say Coke, and sometimes they",
			"would say Diet Coke. And sometimes they would say Dr. Pepper, and sometimes they",
			"would say Diet Dr. Pepper. So how could I get count two, let&#39;s say, to include both.",
			"I want to include Dr. Pepper and also Diet Dr. Pepper. And the way to make it more",
			"inclusive there is to use, the or, oops. So I&#39;m going to say, or. Grab this. Just",
			"us we&#39;ve done before. I&#39;ll say well, so this is doctor pepper, or diet doctor",
			"pepper. And do the same thing for this. [inaudible] Be on this. So I&#39;m gonna say",
			"diet sprite. Oops, [inaudible]. Diet Dr. Pepper and here we&#39;ll say or Diet Coke.",
			"Alright, so without diet it was eight four eight. Assuming this code is correct,",
			"let&#39;s read it. So we see it was eight four eight. So, then Dr. Pepper [inaudible]. No",
			"one drinks Diet Sprite in my class, apparently. Or likes it their best. So Dr.",
			"Pepper, Pepper went up from four to seven. So it about doubled. And actually, Coke",
			"also about doubled. So I guess that we&#39;ve, we&#39;ve learned something a little bit",
			"there. That, for those drinks, diet represents about half. So I also obviously",
			"like this example, &#39;cause now we&#39;re sort of combining multiple techniques. That",
			"we&#39;re doing the counting, and then we&#39;re doing things like using or, and, or",
			"whatever on the if test that&#39;s controlling the count inside the loop. Okay, so let me",
			"try these are kind of, yo u know, non-trivial examples. Let me try another",
			"one. Let&#39;s try, let&#39;s try another one of the fields. Let&#39;s try the sport field. So",
			"this is where people there were a bunch of different sports identified, but I&#39;m going",
			"to look at the sports of Soccer and football were common ones identified. So",
			"I&#39;ll just use count one and count two. So I&#39;ll say if sport is equal to soccer,",
			"let&#39;s say that&#39;ll, we&#39;ll do that on count one and otherwise or. Football is the",
			"other one, so that one we&#39;ll do in count two. So here we&#39;ll say soccer and",
			"football. And this count three, I&#39;m just gonna stop doing. Okay, so we&#39;re gonna, so",
			"this should just go through, and count how many times soccer was the sport that was",
			"named. And how many times football, and then we&#39;ll see if the assumptions work",
			"out. So you see, we&#39;ve got soccer seven, football twelve. So football&#39;s pretty",
			"skippingly ahead there. So the last thing we want to try here is well that we also",
			"have this gender data. So what I wanna do is let&#39;s just take this seven. Number for",
			"soccer and let&#39;s break it down by gender and so wait when I say I can break it",
			"down, what I am doing is like let&#39;s have one counter for women playing soccer and",
			"one counter for men playing soccer. So let&#39;s say count one will be women playing",
			"soccer. So how do I, what do I do here. And this is gonna be an, an and. So, I",
			"say, well if it&#39;s row dot, get field gender. And then, you, you, it just, you",
			"have to know how the data is coded. In this case, the data is coded as female, is",
			"the word for, used for that. So, count one is gonna be, answers. Where the row is",
			"also where they said [inaudible] and here I&#39;ll say soccer and male. And so that will",
			"go into count two. So here I&#39;ll say soccer and female. And then here I&#39;ll say soccer,",
			"oops, M. Okay. So, let&#39;s try that. So, soccer without looking at gender, it was",
			"seven. So now if you look at it you&#39;ll see there&#39;s actually this huge generator. So I",
			"don&#39;t know if maybe there&#39;s just a lot of women&#39;s soccer team. People in my class",
			"this quarter, or who knows. But a nyway, yeah. So of, of those seven, six, were",
			"female, and there was, one male who identified soccer as their favorite sport",
			"[inaudible]. So, this is just another example of using, you know, combining, the",
			"counting with and, and or. My previous one was or. This one, I used and. So, that&#39;s,",
			"that&#39;s sort of as complicated as I wanna get with this table data. I think it has a",
			"nice very kind of realistic feeling that you have a, data set. And then you just,",
			"the computer rips over it with a little bit of this logic that you write. And then",
			"eventually just comes up with a couple numbers, that, you know, are gonna help",
			"you analyze what&#39;s going on. So that&#39;s a very realistic way that computers are",
			"used, and an excellent format for writing exercises."
		],
		"is_youtube": false
	},
	"video_026": {
		"section": "Week 5",
		"subsection": "Analog and Digital",
		"unit": "Analog and Digital",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/5+-+5+-+Analog+Digital+1+(22+mins).mp4"
		],
		"video_duration": 1341,
		"speech_period": [
			6.279, 3.721, 4.45, 6.41, 4.32, 5.06, 5.76, 6.85, 4.42, 4.24, 7.0, 7.0,
			3.331, 4.799, 7.0, 4.89, 7.0, 4.0, 7.0, 6.82, 5.52, 5.171, 4.249, 2.511,
			5.11, 2.659, 3.351, 4.24, 3.349, 3.191, 3.529, 5.12, 4.701, 4.189, 4.811,
			4.12, 3.38, 4.299, 4.61, 3.201, 4.89, 5.549, 5.821, 5.78, 4.38, 3.0, 4.58,
			5.79, 4.369, 6.03, 3.961, 4.97, 4.09, 5.43, 6.85, 3.62, 4.66, 3.81, 3.55,
			4.17, 6.9, 4.56, 4.07, 3.48, 3.39, 2.76, 6.19, 3.88, 3.15, 4.59, 4.77,
			4.51, 5.09, 3.4, 4.65, 3.22, 6.89, 3.8, 3.81, 7.0, 7.0, 6.22, 7.0, 2.47,
			4.6, 4.07, 3.79, 4.73, 3.72, 5.07, 5.28, 4.26, 3.15, 4.81, 4.16, 5.14,
			3.78, 3.92, 2.8, 5.39, 5.06, 5.03, 5.53, 4.34, 2.94, 6.94, 4.79, 4.99,
			3.49, 5.07, 4.67, 6.49, 6.45, 6.55, 5.3, 5.91, 5.78, 6.82, 6.39, 4.98,
			4.53, 7.0, 4.1, 5.9, 7.0, 4.99, 5.66, 4.91, 3.65, 4.06, 4.069, 3.701,
			5.54, 7.0, 7.0, 4.62, 5.31, 4.6, 4.45, 4.31, 3.82, 2.82, 4.52, 6.23, 4.38,
			5.23, 6.5, 3.39, 6.68, 3.56, 3.07, 3.27, 5.96, 3.78, 4.38, 4.24, 3.59,
			7.0, 4.46, 7.0, 4.01, 4.76, 3.71, 5.02, 5.109, 7.0, 7.0, 5.15, 4.07, 4.34,
			2.21, 4.26, 7.0, 3.91, 5.62, 5.42, 7.0, 3.24, 3.2, 7.0, 3.69, 6.951, 5.31,
			4.65, 7.0, 3.79, 7.0, 4.69, 5.25, 4.73, 4.419, 5.38, 3.5, 6.521, 5.86,
			6.65, 7.0, 4.28, 4.569, 3.951, 5.87, 4.33, 2.62, 7.0, 5.23, 3.54, 4.439,
			6.42, 4.67, 4.31, 4.881, 3.939, 2.711, 3.179, 4.671, 5.109, 4.421, 4.079,
			4.551, 5.269, 3.25, 3.861, 3.779, 3.681, 3.709, 5.11, 5.181, 5.17, 5.84,
			4.89, 3.059, 5.39, 2.561, 4.049, 4.89, 6.5, 6.311, 4.329, 5.551, 4.97,
			3.549, 5.14, 2.711, 3.73, 5.709, 7.0, 5.221, 5.309, 4.571, 4.49, 3.74,
			4.489, 3.23, 4.61, 3.91, 6.161, 7.0, 7.0, 2.48, 3.281, 3.53, 2.919, 3.1,
			3.831, 5.569, 5.6, 4.65, 6.87, 6.27, 4.97, 4.49, 4.37, 4.18, 3.791, 0.26
		],
		"transcript_en": [
			"Okay. So, today what I wanna talk about in this section is analog versus digital.",
			"And, I think of those words, like, you know they sorta come up; I think they&#39;re",
			"sorta like the word entropy, like, no one&#39;s... It&#39;s hard to know exactly what",
			"they mean. So I really liked today&#39;s lecture of the section because I can show",
			"you how those things really work, and in a way, I think, it is something that every",
			"day of your life from here on now, you&#39;ll know something about how audio or all",
			"these thing, they&#39;re just very ubiquitous, how they work. So, let me get the, one of",
			"the screen down here [sound]. So, I&#39;m going to start off. A really, really",
			"question I want to address is a, what is analog versus digital? And digital is how",
			"things work in a computer so that, that&#39;s where I want to get, so I&#39;ll start off",
			"with a, analog. So the world is basically analog, and what does that mean? Well. The",
			"simplest case and the running example I&#39;m gonna use today is sound. So, What does",
			"sound look like, how does sound work? You know the sound of my voice or music or",
			"something. So, sound is actually just pressure waves in the air, just little",
			"minute increases or decreases in pressure. And inevitably it&#39;s described as traveling",
			"up through the air like if you threw a pebble in a pond and you sort of saw the",
			"waves traveling out. So here is my, my made up example of what a sound wave might",
			"look like. It turns out many of the sounds that are used in day to day life do have",
			"this kind of repetitive pattern. And so that&#39;ll, that&#39;ll come up. So oh here&#39;s a,",
			"here&#39;s a slightly better example. So how does a violin work? [laugh] No expenses",
			"been spared on this artwork. Yeah question. Oh, I&#39;m sorry, yeah, I, I",
			"haven&#39;t put this on the web page yet. I will after class. But there is a. Please.",
			"Sorry. So, a violin you know, a violin is a musical instrument you can play it. But,",
			"how does that work? Well the way the violin works is that there is these",
			"strings and they are attached to this hollow wooden body And as the bow is drawn",
			"across the strings. You know, they&#39;re metal and they&#39;re under tension. And they,",
			"they vibrate as some, at, at a repeating, at sort of a repeating frequency. And",
			"really the gist of it is that it; it vibrates the wood of the violin. And so",
			"the wood will flex out a little bit and flex in a little bit. And so, it&#39;s sort of",
			"like a drum where you can kind of think of it as kind of bumping up and down. And",
			"what that does is it creates little pressure waves in the air. And so, those",
			"travel out in all directions And event. So, so, there&#39;s the signal in the violin.",
			"I&#39;m drawing it like this little wave. You know what&#39;s going on? Half a millimeter up",
			"and a half a millimeter down And then that translates into the air where it&#39;s going",
			"out as these little pressure waves. And the thing about analog is that the shapes",
			"are the same. So that on the violin if it kind of a little down a [inaudible] you",
			"know where, and we could have sounds with different sharpness&#39;s and different",
			"frequencies and a, that, that is reproduced in the air basically. So it&#39;s",
			"travelling out in the air and eventually gets to your, you know, your [inaudible].",
			"And you&#39;re listening and in your ear there&#39;s the little eardrum, right, which",
			"is very much like a, a drum head and the air pushes against it and so it pushes it",
			"in a little bit, out a little bit. So that. I mean partly it&#39;s just my low",
			"quality explanation of how violin sound works. But also that&#39;s very, analog. That",
			"you have something on the violin but [inaudible] it would, then it translates",
			"to some sort of other medium in the air, but you sorta keep the shape, it travels",
			"in the air for a while and starts to get to your ear drum, and again in the ear",
			"drum the shape is preserved. That is the fundamental quality of analog processes;",
			"you&#39;re sorta jumping from step to step but keeping the shape. So to show you how this",
			"works, we&#39;ll do some demos and experiments and stuff. I&#39;m gonna use a device called",
			"an oscilloscope. A sure sign that your, that nerds are near is if there&#39;s an",
			"oscilloscope. Oscilloscopes are, are really neat in my, you know, in my",
			"opinion. Really neat device and it, it very much gets this idea of analog. What",
			"an oscilloscope does is it takes in electricity on a pair of wires. And it",
			"just looks at the wires, and it observes the, the signal of voltage kinda going up",
			"or down over time. It looks at that signal. And it reproduces it on screen so",
			"you can&#39;t, something which is very abstract right I, I gesture my hands and I",
			"say well there&#39;s the sand coming out of the violin but it&#39;s all just hand waving.",
			"This [inaudible] scope makes it real it takes a signal out of the wire and it",
			"draws it makes us visualize, I think we&#39;re very visual creatures and so [inaudible]",
			"kind of amazing you know very handy. This things had been around for actually a long",
			"time since I think the 1930&#39;s and the one I&#39;m going to use today When I switch this",
			"screen here. [cough] [sound] This is actually a, a digital oscilloscope hooked",
			"up to my computer just cause it makes it easy to display stuff. But it is at the",
			"end of the day an oscilloscope. So this is the oscilloscope out-scope, output right",
			"now what its showing is nothing. Oh actually I&#39;m sorry let me switch back and",
			"explain a little bit more how this works. So the way the oscilloscope works is it",
			"grabs the signal off the wire and it, it draws it. And, the way the [inaudible]",
			"works is that it leaves the signal up there for maybe a tenth of a second. It",
			"freezes it. And then it grabs another signal off your hearing. And it puts that",
			"one up. So, it doesn&#39;t quite track what&#39;s on the wire in real time. There&#39;s maybe a",
			"half second delay because that&#39;s the way this one works. So what I&#39;ve got for my",
			"demo here is I&#39;ve got this. And as will become obvious, I&#39;m no musician. But I, I",
			"have this synthesizer hooked up. And so the synthesizer is hooked up to the",
			"speakers, so I can make sounds and kind of play around with them, but it&#39;s also",
			"hooked up to the [inaudible] scope. So what it is what it&#39;s like two of the five",
			"senses. Right? So, you can hear it, but you can also see it. And so then we can",
			"talk about what is a wave, what is a signal? Alrighty [inaudible]. This is",
			"where they complicated demo. This is where I guess I need to appeal to the demo gods",
			"for my complicated set up here. Let&#39;s slide this over so I can actually reach",
			"it. Alright y, so let&#39;s try this. So my first claim, or I&#39;ll just start, try",
			"making a sound here. Here we go. So this is a, a, a [inaudible] math class, this is",
			"a sine wave. And a sign wave, right this sort of perfect mathematical wave has this",
			"kind of boring, perfect bell like sound. And so, that&#39;s the. That is the",
			"electricity coming off the synthesizer which is driving the speakers and it&#39;s",
			"also making that thing. So let me try, so what I wanna do just first off is just",
			"talk about what are the properties of a signal like that. I&#39;m sometimes I&#39;ll use",
			"the word signal, that&#39;s kind of the term for this sort of. Data that I want to play",
			"around with. Or I might use the word wave, er [inaudible] but really what I&#39;m talking",
			"about here is signals. So, the, I&#39;m going to talk about some of the qualities that",
			"signals have the first quality I&#39;ll talk about is er, frequency. So this one, this",
			"is kind of a low note. And so, remember what I said, with the oscilloscope is that",
			"it grabs a wave and then it shows it to you again maybe a hundredth of a second",
			"later or whatever, maybe a tenth of a second later. So those variations in",
			"pressure, that&#39;s actually maybe a hundred per second, something like that, and we&#39;re",
			"just seeing it very zoomed in, so the width of the screen in this case I think",
			"is a. A hundredth of a second across and so really that&#39;s very, you know very",
			"quickly and so most a human speeds things like that, they tend to be in the range er",
			"50 cycles per second up to maybe 20,000 cycles per second. Alright, so the first",
			"quality I want to talk about, I just used the phrase cycles per second but I never",
			"explained it, is frequency. So if I go up. So something where there is more and I&#39;m",
			"gonna, we are gonna say, this is more cycles per seconds. How many ups and downs",
			"do we pack into what did I say this was a 100th of a second. So when there&#39;s more in",
			"there. [sound]. That&#39;s what you think of as higher, when you have a note which is",
			"higher or lower or whatever. Also this is higher so it&#39;s kinda like, this is kinda",
			"irritating. Okay, sorry, we&#39;ll [inaudible]. [laugh]. All the dogs are",
			"gonna like leave the building. So that&#39;s what frequency is. You have just a greater",
			"number of cycles per second. And there&#39;s actually. I&#39;m gonna go a... Well, let&#39;s",
			"talk about music a little bit. So when you go up one octave, so that&#39;s C to this one,",
			"to this one. What you think of is kind of a natural sounds repercussion, that&#39;s",
			"exactly a doubling. So, if I look at the number of cycles there and I go up an",
			"octave, it&#39;s exactly, exactly a factor of two. We can go up, into the dog range but",
			"I won&#39;t. Alright, that is one quality of signal of sound. Another [inaudible] which",
			"is kinda obvious is Official vocabulary word is amplitude, so. In a very analogue",
			"sense, the height that, that is going up and down corresponds to how the, how big",
			"the pressure wave is. Right, how hard is the speaker, the synthesizer pushing on",
			"the air? So if I were to just turn it down. It just like, goes down. So that&#39;s",
			"what, that&#39;s what loud and soft is. Loud is just, [inaudible], just like you know,",
			"going out a little harder. So this leaves me with the most kind of baffling quality",
			"which is called tamber. And that just refers to the shape of the wave, the",
			"little curly cues, whatever. And the sine wave is like there&#39;s no timbre. It&#39;s just",
			"like the most vanilla sound possible. So, I&#39;m gonna switch the synthesizer. To do",
			"like, cheesy, pan flute sound [sound] and what you see, I don&#39;t think you&#39;d tell,",
			"that&#39;s the same cycles per second I was doing before. It&#39;s actually the same",
			"frequency, it&#39;s the same note, but it has this flute timbre on it, all the little",
			"curly cues and stuff on it. And what is amazing is how the brain, that&#39;s what your",
			"brain is getting. Those little curly cues, and bumps and waggles and God knows what,",
			"and your brain takes that in and what it hears is. [sound] flute [laugh] but when",
			"it hears this one it&#39;s like. &gt;&gt; Oh yeah, sign waves. &gt;&gt; And, and what. &gt;&gt; That&#39;s",
			"all a little basic to me... &gt;&gt; Well certainly when we look at it visually just",
			"as pixels it sort of. Yeah. I have new found respect for the ear, and the brain.",
			"I really the brain, obviously the brain, The brain helps out there. Alright, So",
			"what do we have there Frequency, amplitude, timber. That&#39;s just like",
			"classic, classic stuff to know about, about these sorts of signals. Alright, so",
			"what I want to talk about Is Another question about how sound works and I&#39;ll go",
			"back to my [inaudible] here, which is there is just one air. Like in this room,",
			"there is one body of air and all the sounds in here, basically me talking and",
			"you all clickety clacketing like [laugh] [inaudible] paying attention or whatever.",
			"It&#39;s all sharing the one air. And so the question I want to get out is well how is",
			"it, what happens if multiple sounds are going on in the air at the same time.",
			"Alright, if there&#39;s, someone&#39;s talking, and then there&#39;s a low note, and a high",
			"note and you can [inaudible], oh, maybe they just sort of obliterate each other.",
			"But, that&#39;s not true, really [inaudible] you can hear, obviously, you can here",
			"multiple things at the same time. And so I wanna get a little bit is like, how does",
			"that work? How do multiple sounds fit into the one air? And so I&#39;m gonna do that by",
			"playing multiple notes at one time. Alright, so I&#39;m going to start off with.",
			"Okay yes, we&#39;ve seen this enough times, my low note, the, the sign wave, so what",
			"would happen if I played that one, and let&#39;s say this one at the same time. And",
			"I&#39;ll tell. I&#39;ll, I&#39;ll, I&#39;ll tell you, and then we&#39;ll look at it. The answer is",
			"addition. The pressure waves add on top of each other. So, there might be one place",
			"where one wave is kind of high and other is also kind of high, so they add together",
			"and they make it like even higher, and there might be other places where one wave",
			"is kind of high and other is kind of low, so it is just rhythmetic. How do they add",
			"toge ther, they make composite wave that has both sounds in it. And, um... So it",
			"just happens which bring out very neatly and visually so I&#39;ll start with the low",
			"one. And then here&#39;s the high one. [sound] And I&#39;ll just do it at the same time.",
			"[sound] Oh well, that doesn&#39;t come out quite perfect there. Let me, let me try",
			"one even a little higher. [sound] So there&#39;s my low one. [sound] There&#39;s my",
			"high one. If I do it at the same time or if you can kinda see. There&#39;re sort of the",
			"low one is in there but the just map on top of it is this high one. Okay I like",
			"everyone would just close your eyes for a second. Just humor me. So now just isolate",
			"you can here just listen to the high note. Right You can recognize there is a height",
			"note there or if you want you can also here that there&#39;s the low note. Alright",
			"you can open your eyes. So looking back [sound] your brain is just getting the",
			"signal. And this is the amazing part. Your brain gets that, and it can parse out",
			"[sound] The two sounds that are going into to it. This again gets. I&#39;m impressed with",
			"the brain how it can like pull that stuff apart. Allrighty, So I&#39;ll show you there&#39;s",
			"a If you wanted to sort of prove, or show for yourself that it&#39;s just addition you",
			"can actually do it with graph paper. Where you, you could sort of graph this note,",
			"which is this one. And then you could graph the note that&#39;s just one octave",
			"higher. So this one and then this one, Just, just 2X. And then with the graph",
			"paper, you could sorta add up the components. So where they&#39;re both high",
			"make it high. And where they&#39;re both low, make it low. And it and what you&#39;ll find",
			"is that you get. The sort of a, this is the classical one octave apart shape and",
			"so only guys optional exercise that you could, you could, you could sort of show",
			"that I&#39;m not just making this up. Alrighty, So let me show you a couple",
			"other a couple other interesting fact about this summing together of sounds",
			"There&#39;s sort of an eerie relationship between mathematics and sounds, and in",
			"particular sounds that sound good and sounds th at don&#39;t sound good and this is",
			"er, I guess the ancient Greeks were captivated by this and it is kind of",
			"magical. So, what you think of as a chord in music, what sounds good is when the",
			"peaks and valleys of two different sounds that you&#39;re going to add together, they",
			"kind of match up. So, for example, it&#39;s kind of obvious that if I take this note.",
			"And then I exactly double the frequency, exactly double, then the peaks and the",
			"valleys are gonna match up perfectly. And so in fact, those sound pretty good",
			"together So that&#39;s really, that&#39;s what a chord is, is when mathematically it kind",
			"of divides evenly so the things match up. So we can look at the other side, well so",
			"wait, what sounds bad? And the way to get it to sound bad is to have one sound be,",
			"let&#39;s say, at 100 cycles per second. So that, you know, that&#39;s the spacing of the",
			"piece of valleys. And have another sound which is maybe 100, 100 one cycles per",
			"second. Just a little bit off. And what you&#39;ll find is then the peaks and the",
			"valleys, they almost never coincide. The thing is just staggered and it makes kind",
			"of a mess. And what&#39;s neat about that. Is that there&#39;s something in your brain. So",
			"here like [sound] there&#39;s a chord where they match up pretty well. Then I&#39;m gonna",
			"add on one. [sound]. Well like it doesn&#39;t match. That&#39;s discard And what&#39;s amazing",
			"is how like, it&#39;s not just bothering everyone. It&#39;s like &quot;I&#39;m not happy&quot; and",
			"then if I just go up, I just go up a little bit so it matches, then like &quot;aah,",
			"that sounds good&quot;. [laugh] So that&#39;s math, chord and discord. Alright, so let me show",
			"you. I want to talk about that. You know, we [inaudible] that. So that&#39;s just a",
			"signal, waves, things like that. So let me bring this over to technology. And",
			"eventually I want to get at basically like, how a CD player works. Or the CD",
			"player, I guess that an antique. So we&#39;ll also talk about how mp3&#39;s work. So for",
			"starters, I got, if I&#39;m gonna talk about Analog versus digital. I, I personally",
			"want to talk about analog briefly. We talked about this a little bit with my",
			"viol in example. So, I&#39;ll talk about there&#39;s the, the original telephone",
			"system, the Alexander Grahambel model. [cough] and I talked about analog a little",
			"bit before so this very much follows that pattern. The way the original phone system",
			"work is, you know, we&#39;ve got the person on the left there and they speak, so they",
			"make pressure waves in the air and it hits a microphone. And. I&#39;m not going into too",
			"much detail what a microphone does but basically it has little magnet arranged",
			"next to a diaphragm that can be pushed by the air and so as the air moves the little",
			"diaphragm back and forth it makes a little tiny electrical current. And so the result",
			"is. Right, that&#39;s analog. It means when the air cone is pushed a little bit one",
			"way it&#39;s gonna make the electricity go a little bit one way. When the air cone goes",
			"the other way the electricity&#39;s gonna go a little bit the other way. And so we end up",
			"with this perfect. Essentially what the microphone does is, is it&#39;s an analog",
			"translator. It translates from wave in air pressure over to little pattern of",
			"electricity in the wires. And that&#39;s like, that&#39;s the classic analog step. Alright,",
			"so a telephone that takes the electricity by having transformed the signal into",
			"electricity, well now it can go on the wires. And so it goes down the wires, now",
			"in reality, the signal is so weak, so there&#39;s gonna be some amplification of the",
			"electricity, transistors, we talked about before. So it goes down the wires, and",
			"eventually gets to the other end where it gets to a speaker. A speaker is just the",
			"reverse of a microphone. So the speaker takes in the electricity, and it has an",
			"arrangement of magnets and cones, whatever. So that then the electricity",
			"pushes the cone out or in a little bit. And so it basically recreates the pressure",
			"wave and so then, then the sound comes out. So this is the original design of the",
			"telephone system, and what&#39;s funny, is that. Not you guys obviously but you know,",
			"your parents, people actually have phones in their houses. The last mile of the",
			"phone system, It st ill works this way. Like once the standard was kinda set and",
			"you know, everybody had all these zillions of phones out there, it was hard just to",
			"have something switch day, oh so [inaudible] works differently, it&#39;s",
			"sometimes called a network effect, but yes, there&#39;s this tremendous inertia,",
			"where the phone, even though the Central Office of the phone company now works",
			"completely differently, the end part is still compatible like the way it&#39;s always",
			"been. Alright, so that is your classic analog structure which is mostly so we can",
			"make fun of it a little bit. Alright, So what I want to talk about is noise, hiss.",
			"Like how is it that analog doesn&#39;t sound so great. So, I want you to image this",
			"signal: This is, you know, I call someone up and I have this beautiful bell like",
			"signing voice and I just sing this like perfect sign wave. And I just, I just want",
			"it to be enjoyed by the person at the other end of the phone. So what I&#39;m going",
			"to do... Well, so, let, let&#39;s say I sing that into the microphone, and it&#39;s",
			"perfect... What comes out at the other end? Right, it goes down the wire, it goes",
			"through the microphone, down the wires, and then it [inaudible] and then it comes",
			"down the speakers in the other end. And the answer is it doesn&#39;t come out looking",
			"like that. What happens is really there&#39;s a little bit of what we are going to call",
			"noise. A little bit of error. And I&#39;m gonna. This isn&#39;t real; this is just me",
			"drawing a model of air. But you can think of the air as sort of like fuzz around",
			"where the signal was supposed to be. And the sources of error are many right? Well",
			"maybe the microphone the paper cone was a little rigid I mean it didn&#39;t quite flex",
			"perfectly for my beautiful singing. And then the magnet has certain electrical",
			"properties that kinda shape the, the pattern electricity it can make. And then",
			"the wire has certain qualities where it&#39;s. Most of the signals go through but it. The",
			"shape of it kind of gets distorted by the wire. All electrical components do distort",
			"the shape a little bit as the signal goes thro ugh there. And so what I get out of",
			"the other side you can, you can think of it as like well the signal, you can see",
			"the signal. But there&#39;s this, and then the term is noise. There&#39;s this noise kind of",
			"added on top of it. And I&#39;ll tell you, noise has a distinctive sound. You have",
			"all heard noise. Noise is the hiss. It&#39;s that, [sound], kinda like. So think of",
			"analog technologies you&#39;ve used, right? So if you ever had, does anyone here have,",
			"like, cassette tapes? Maybe you got&#39;em from your grandparents or something,",
			"Anyway, when you play back cassette tapes, mostly, the music would be there. But if",
			"you turn it up loud enough, or if there was a quiet station, or if there was a",
			"quiet section, then you&#39;d hear this, like, [sound]. And that is exactly, it&#39;s the",
			"noise from the tape and the magnets All these sort of various layers that the",
			"analog was going through. There&#39;s this noise added on top. So er, phones actually",
			"have this cuz phones are this, sort of, comically old technology for that last",
			"while, And so, that, or anyway, that&#39;s why Skype sounds so much better than actually,",
			"actually using a phone. Okay, so that&#39;s, that&#39;s a problem other examples. I guess",
			"VHS tapes. Those are analog. So in that case, the hiss sort of shows up as,",
			"[inaudible], pure hiss, pure noise in video is that snow look where the pixels",
			"are just kind of randomly flashing between black and white and color and stuff. Okay,",
			"so that&#39;s, whatever, analog. You can do pretty well but it&#39;s not gonna. Oh, AM",
			"radio. See, all, I need to think of a technology you guys actually use that&#39;s",
			"analog. So [inaudible] product for the future Am radio has a significant amount",
			"of hiss."
		],
		"is_youtube": false
	},
	"video_027": {
		"section": "Week 6",
		"subsection": "Analog and Digital Part 2",
		"unit": "Analog and Digital 2",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/6+-+2+-+Analog+Digital+2+(24+mins).mp4"
		],
		"video_duration": 1437,
		"speech_period": [
			5.921, 6.98, 3.58, 6.289, 4.821, 2.87, 5.95, 4.599, 4.48, 4.04, 3.71,
			4.11, 6.151, 6.379, 6.331, 7.0, 5.69, 4.74, 3.229, 5.171, 4.159, 3.17,
			3.79, 3.76, 3.96, 4.571, 5.7, 5.11, 5.04, 4.01, 4.73, 3.72, 6.52, 5.9,
			4.04, 3.4, 6.3, 2.86, 3.48, 7.0, 5.45, 7.0, 7.0, 4.67, 5.8, 6.45, 7.0,
			7.0, 4.07, 6.68, 4.62, 2.44, 3.16, 4.91, 4.41, 3.56, 4.92, 5.71, 4.49,
			4.17, 4.17, 5.03, 4.0, 3.82, 6.8, 4.239, 7.0, 4.84, 3.65, 4.56, 5.61, 5.2,
			3.07, 3.75, 5.85, 4.36, 4.14, 3.72, 2.47, 3.48, 5.03, 4.11, 5.17, 5.79,
			4.65, 4.7, 3.02, 7.0, 5.611, 4.52, 3.809, 5.231, 5.47, 6.47, 3.079, 6.771,
			4.0, 3.11, 3.47, 4.06, 4.97, 7.0, 5.51, 3.08, 3.229, 5.771, 7.0, 5.14,
			4.521, 6.08, 4.93, 4.75, 5.259, 6.66, 5.23, 4.14, 4.951, 5.659, 5.11,
			4.801, 6.199, 6.121, 5.899, 7.0, 4.719, 5.471, 4.789, 6.321, 4.799, 7.0,
			6.951, 7.0, 6.75, 7.0, 4.76, 6.271, 7.0, 3.671, 5.209, 3.741, 2.909, 5.37,
			4.62, 4.591, 6.459, 6.03, 6.641, 3.94, 7.0, 4.93, 4.56, 4.661, 3.919,
			6.391, 4.51, 4.779, 4.8, 4.241, 3.329, 4.791, 3.539, 3.67, 4.96, 3.96,
			5.03, 7.0, 7.0, 4.381, 7.0, 4.309, 6.81, 4.69, 6.66, 7.0, 7.0, 6.68, 6.8,
			5.29, 4.39, 4.661, 7.0, 4.59, 4.82, 4.791, 4.31, 3.359, 3.341, 5.609,
			5.381, 5.449, 7.0, 6.25, 5.69, 4.99, 3.58, 5.25, 3.65, 4.73, 7.0, 2.941,
			4.27, 5.169, 4.561, 3.87, 4.72, 5.66, 4.159, 3.49, 4.681, 4.94, 4.74,
			3.86, 5.72, 7.0, 5.63, 6.451, 6.299, 5.801, 5.159, 6.191, 4.569, 6.26,
			4.4, 7.0, 4.529, 7.0, 4.02, 3.071, 4.76, 4.809, 4.201, 4.72, 6.6, 6.13,
			7.0, 7.0, 5.711, 7.0, 4.931, 3.559, 4.561, 5.87, 5.449, 5.25, 4.091, 7.0,
			3.87, 4.709, 4.901, 4.12, 5.069, 3.88, 2.841, 7.0, 5.651, 6.859, 5.431,
			5.51, 4.59, 5.01, 5.53, 6.429, 6.96, 5.52, 4.25, 3.89, 5.6, 7.0, 5.839,
			4.661, 5.28, 4.309, 4.21, 4.62, 4.39, 6.64, 1.2
		],
		"transcript_en": [
			"So here&#39;s how digital is going to work. Official computer science terminology.",
			"Alright, so, I&#39;ve got this signal. And for, to make it digital, what I want to do",
			"is I want to take the signal in like let&#39;s say I&#39;m going to have the digital equivalent",
			"of a microphone. I&#39;m going to take in sound signal. And what I want to do is",
			"reduce it basically to a series of numbers. So then it looks the RGB data",
			"that we applied with so that once I&#39;ve got those numbers, I could put them on a file",
			"or send them on a network or whatever so that process is called digitization.",
			"Taking in analog reducing it to numbers so I&#39;m going to show you how that works. So",
			"the way digitization is done. Is I, I, I&#39;ve got this signal, I&#39;ve drawn sort of",
			"big, and I want to match, so this, the signal is analog. Let, let&#39;s say this is",
			"really in the air and that is really perfectly what the signal looks like and",
			"so I want to try and capture that signal. So, the way that this is done with",
			"digitization is called sampling. And what am I going to do is I&#39;m going to run a",
			"little system which is going to measure what the height of the curve is very",
			"quickly overtime And so I&#39;m going to use as my example the audio CD format. So the",
			"audio CD format, digitizers, sounds and is samples 4400 per second. So I&#39;ve drawn the",
			"samples for the coarsely on the curve here but in reality for sounds you can actually",
			"hear the samples will be very tightly spaced against the curve so it&#39;s going to",
			"come up pretty good. Alright so here&#39;s what sampling does. Let&#39;s say this is",
			"going to be my first sample here. The way it&#39;s going to have a notional kind of zero",
			"line going Down the middle here All right? So that will be, that&#39;s going to be sort",
			"of the base line and the way these sounds work is I, I&#39;ve always talked about them",
			"going above the zero line but actually have the time on there below. So, we",
			"record it as a series of both positive and negative numbers. So, the way that samples",
			"go work, let&#39;s say I start recording right here, this is going to be my first sample.",
			"So what I&#39;m going to do is I&#39;m going to look at like well, how high is t his above",
			"the zero line and I&#39;m going to measure it. And I&#39;m just going to have some scale",
			"where let&#39;s say, way up here for really loud noise will be the way audio CDs work",
			"will be about 32,000 would be the max and so, in that scale. Maybe this is kind of a",
			"not very loud sound so I&#39;m just going to measure on that scale. We&#39;re just, where",
			"is that number. So, let&#39;s say, that one turns out to be a 1003. So I&#39;m going to",
			"record that number. Okay, that was a three, that&#39;s my first sample. So then,",
			"144,000 of a second later, the curve, now, this is very, this example, the curve is",
			"way moving much farther than it would for, for real sound here just to show. So let&#39;s",
			"say for this next sample I gauge the height of that like that&#39;s about 1720, so",
			"I&#39;m going to record that number. That&#39;s going to be my second sample. Now here&#39;s",
			"my third sample, oh, 1939 and my next sample, you know, 2,102 and so on. So, I",
			"just keep sampling this thing overtime. Now, here&#39;s can be a bunch the positive",
			"numbers but actually down here can be a bunch of negative numbers, that&#39;s fine.",
			"The result is I take signal in and I just reduce it to this like [inaudible] of",
			"numbers. So there are, this is not a perfect process but it does work very",
			"well. There&#39;s two sources of problems. Once source is let&#39;s that I was getting",
			"this very first sample and I&#39;ve said well let&#39;s call that a 1003. What if really",
			"that signal, it was like a little bit higher than a 1003 but it wasn&#39;t quite so",
			"far as a 1004. But in my system I&#39;m stuck picking one of those two numbers. It&#39;s",
			"either a 1003 or 1004 in my system and so there has maybe been a tiny error there as",
			"I kind of put it in the nearest bucket and Audio CD ... A little bit of detail but I",
			"mentioned, so they use numbers between roughly between -32,000 and +32,000. And",
			"the reason is, that&#39;s the, that&#39;s the range of numbers you can store in two",
			"bytes. So, the, the byte and its 8-bits comes back here And so it turns out, on an",
			"audio CD, example, one sample started two bytes And so that, that kind of give us",
			"how many different buckets and h ow many, you know, how many distinct numbers we can",
			"have. Alright So that&#39;s a small [inaudible] I should just mention. So,",
			"audio CDs, I think by most accounts, sound fantastic like, you know, whatever, the",
			"&quot;error&quot; I was mentioning here is like, well, it&#39;s pretty small. The other source",
			"of error which also for audio CD&#39;s is not a problem is like when one of the signal",
			"had some big excursion like it went way up and then when it came down before my next",
			"sample came in. I&#39;ve, I could miss something and it turns out for audio CD&#39;s",
			"just for the range of sound, a sound that did on audio CD would be outside of human",
			"hearing. So, for the most part of that, that&#39;s not really a problem. All right, so",
			"those are the two sources of Tactically imperfection but in reality this works",
			"really well for [sound] aright so what AI have done is I&#39;ve taken in the signal and",
			"now what I have is just like, there&#39;s a lot of number and you can put those them",
			"in to file or draw them on a CD or whatever. So I think that this leads to",
			"the natural question of okay well, How does playback work? Well, I don&#39;t see why",
			"to look at those numbers to be like, yeah. No of course you wanted -- Alright sop",
			"here&#39;s going to work. Just give me so the reverse process. So, this is called",
			"digital to audio conversion and there&#39;s a piece of hardware that a chip that",
			"specialized to just do this. What the digital audio conversion is going to do is",
			"it&#39;s going to take in the numbers and I swear, the phrase that comes in mind to",
			"this is connect the dots. So, what this thing wants to do is to make actually a",
			"pattern of electricity that exactly follows the original signal and then,",
			"that, that electricity then we can feed to speaker and the speaker will make it back",
			"in the sound. So, what the, what the digital audio converter going to do is it",
			"going to look at the first number, a 1003. And so, it puts a dot, and like dot far",
			"above line. Like okay, a 1003, got it. And then let&#39;s look at the next sample, oh,",
			"1720, all right. S, let&#39;s kind of put a dot that height and then it, it&#39;s going to",
			"come, basically draw a line so like, okay, I&#39;ll connect those first two. And then it",
			"takes the next sample and the next one and the next one and you can see so we get",
			"these dots and other, I drew actually these straight lines between those",
			"samples. As you could see, even though the original was in some sense curved. The",
			"straight lines put together, it does basically capture the shape of the sound.",
			"And as I was saying, for audio CDs because really the sample are so close together",
			"the straight lines were, worked very well. So I [inaudible] so the effect of going",
			"through these numbers is, is able to recreate the original signal so this goes",
			"to your direction. Taken a bunch of numbers, recreate the signal beautifully",
			"and the we could put that in the speaker and now you&#39;re hearing one of the original",
			"prerecorded sound was. So. That&#39;s how it works. And also I just sort of mention the",
			"chip that does that The DTA converter. I see that sometimes in marketing materials",
			"for like stereos or MP3 players you know, extra awesome DTA converter so you may",
			"actually, just a proof I&#39;m not making this up you actually, you may see that like a",
			"box or something that&#39;s nearby. Alright, those are two directions. The sampling to",
			"recorded it and DTA conversion to play back so I think the natural question here",
			"would be. Why? Why go to all this trouble like, it wasn&#39;t my little telephone",
			"diagram was actually simpler, right? I just have the microphone; I hook that to",
			"the wire to the speaker. So what is the advantage of putting stuff and then we",
			"would say technically taking the data and putting it in the digital domain. It used",
			"to be was in the sound domain and then it was on the electricity domain but now I&#39;ve",
			"put in the digital domain of just numbers and we&#39;re going to see there&#39;s actually a",
			"lot of advantages to having the data just be in the digital domain. So, I&#39;ll talk",
			"about those. All right, so the first thing I want to think about is errors. It&#39;s",
			"going to be one big advantage for digital And so I, when I described that I&#39;ve",
			"recorded this thing as numbers, 1003, 1720 or whatever. You know, all take is covered",
			"earlier. So, really, when I say numbers that means in a computer it could be just",
			"the [inaudible] one. It&#39;s just that, you know, the 1720, there is just a pattern of",
			"zeros and ones to represent that. It, it does take two bytes to do it but it does",
			"work. So, an audio CD At the end of the day, what&#39;s recorded on an audio CD is",
			"really the pattern of zeros and ones that makes up the series of numbers that then",
			"would feed in to the DDA converter makes the music. So, if you, you got a",
			"microscope and actually on the D, it really is really picks and valleys, Like",
			"there&#39;s a physicality of the ones in the zeros u, you can actually see. Well, here",
			"in the microscope we can see. Alright, so, I want to think about. Let&#39;s think about",
			"the C, audio CD playback. So, the way it works is there&#39;s a laser that&#39;s in the end",
			"of the CD and it&#39;s trying to kind of pull off the patterns of ones and zeros so they",
			"can remake the sample numbers so that you can make the music. So, what is that going",
			"to look like? And we talked about this a little bit before in my networking section",
			"and I would say, well, it&#39;s going to look kind of like this. The pattern, the laser",
			"is looking at the CD and let&#39;s say, the first number it sees is a one, you know,",
			"I&#39;ll say that it&#39;s a one And then the next thing it sees is a zero. And then there&#39;s",
			"a couple one and then a zero. So, it&#39;s reading the ones and zeros off the CD.",
			"That&#39;s what it looks like in the abstract. Is that really what it&#39;s going to look",
			"like coming off the CD? It I hook it in a oscilloscope off to the laser and look as",
			"the electricity coming out, is or going to look like that with perfect 90 degree",
			"corners, right? Now, there&#39;s going to be noise. Right? All the little wires and",
			"magnets and layers and CD like probably jiggling a little bit while it seemly.",
			"Here&#39;s what it&#39;s going to look like. It&#39;s going to look like that. You&#39;ve got the",
			"ones and the zeros in there just as we have for the analog scheme. There is noise",
			"crowding up on top of our signal that&#39;s wha t we actually get. We get back signal",
			"with noise. All right now, this is a, this is a little bit of a punchline moment",
			"here. Suppose you&#39;re the CD player and you&#39;re like, oh, no. My signal up the CD,",
			"[laugh]. It&#39;s got all this noise, [laugh] But look. Do you have any problem picking",
			"the ones and zeros out of there? No. Right? You can have a lot noise on that",
			"signal but the 1s and 0s you start pick them out and alright and so the effect on",
			"the noise on the digital signal, it&#39;s nothing. Right, I can see 10111 so that",
			"means I can have the CD also [inaudible] noise on it and I playback, it doesn&#39;t",
			"come back like pretty close. The playback, it&#39;s perfect. Right it&#39;s just like the",
			"signal came out ideally. So that&#39;s why or this is what is it. That&#39;s why digital",
			"sound is better. Right? And I&#39;m going to have to kind of string together all these",
			"steps but I can take the signal I care about, encoded the zeros and ones, so",
			"basically it&#39;s come to [inaudible] and it gives me a lot of noise resistance. It&#39;s",
			"not perfect, right? If you, if you draw a hole in the CD you know, there could be a",
			"mess up big enough on the CD to really to really mess things up. But it can stand a",
			"lot. In particular, it&#39;s much better than analog but with analog, that hiss was just",
			"mixed right in with the sound that I wanted to hear. So this is the big jump up",
			"in, yeah, lots of things digital. So there, now you know. That, that&#39;s how it",
			"works Alright, So, noise reduction or, you know, noise elimination really is one big",
			"example. I&#39;ll just mention for completeness so the way CDs work,",
			"obviously for the 0s and 1s is its greatly resistant to little of specs or dust",
			"whatever that cause noise. It is also the case that the CD actually stores multiple",
			"in a sense, multiple copies of the music. It&#39;s a little bit like packets on the",
			"network. Remember we talked about packets and resend. The CD actually has multiple",
			"copies and the copies are marked with checksums which I talked about in the",
			"networking section And the CD can actually notice if there&#39;s like a little tiny h ole",
			"or something but one part of the music didn&#39;t come out right, it can go to a, I&#39;m",
			"over some final behavior, but basically it can go to a fall back copy And so, it can,",
			"it can swap that one in and just keep playing. And so that is another, a higher",
			"level of air resistance. It&#39;s called air, air detection and correction that CDs have",
			"and actually DVDs do as well. So that&#39;s how it, yeah, I can see you know, when",
			"someone else&#39;s DVDs you could figure out like how big of a hole can you drill,",
			"[laugh], in a, in a DVD and still have it play. I&#39;ll place for a big but You can",
			"stand a little bit of just missing data and has another copy. That cannot, you",
			"know so also that works, that works because it&#39;s digital that we can have this",
			"logic in these if statements to kind of check someone copy and having if statement",
			"that says oh, I&#39;m going to go get the other copy in some places so yeah anyway",
			"that would work. Alright Let me show you another thing that you can do with",
			"digital. Alright so supposed the numbers That I had coming off of my audio CD were",
			"these. So 12,000, 12002, 12006, 12007 this is actually pretty realistic that the, the",
			"sampling is so fast on the audio CD that the signal appears to just change very",
			"slowly for sounds that actually you know that you can hear. Alright so that&#39;s, so",
			"what you notice about those numbers is that they are pretty near to each other.",
			"Right? Like even though the base number 12,000 is big, the change from one sample",
			"to the next is like, is not very big, right it&#39;s under ten. In fact, it&#39;s just",
			"sort of five. So, I&#39;m going to propose a scheme, a compression scheme that we could",
			"use so that we could record the audio data and have it take a, take a plus base. So,",
			"here&#39;s a scheme I&#39;m going to propose. What if. At the start of the audio data I just",
			"put whatever the first number is so I record that first sample. And then after",
			"that, I don&#39;t record any more samples. What I do, is I just record the difference",
			"of each sample to the next. So, in this case, I would end up with 12,000 and I",
			"would say plus two because the next sample is 12,002 and I would say plus four",
			"because the difference between the third sample and the second was going up by",
			"four. And so you know + one + three - five + one I just gotta put these all numbers.",
			"So now you just have to convince yourself playback can still work so as long as",
			"playback knows about my scheme. Like it&#39;s playback after to know the sample numbers,",
			"So, playback would say, alright, this is next crazy this new called delta scheme",
			"because you&#39;re just recording the deltas. So, playback, you know, alright so 12,000",
			"is the first sample and the we&#39;ll just have to do the arithmetic to recreate the",
			"sample. So, you could just work, it could just, you know, undo it to work out the",
			"samples where 12,002, 12,006, 12,007 and then using those samples, feed those into",
			"the DGA converter to like really recreate the sample. Okay, so, what&#39;s the advantage",
			"of this? What&#39;s better about +two, +four, +one, +three than 12,000 to 12,006,",
			"12,007. I mean it&#39;s sort of gets back to bytes. What this comes down to is those",
			"numbers are smaller, a lot smaller and the reality is I could record them using to",
			"your bytes. Right? If you just think about the amount of space on the CD, the amount",
			"of little bits and values or whatever, if I use the scheme and, and then I&#39;m",
			"[inaudible] a little bit of complexity. But basically, I could take that sound and",
			"I can record it may be using just half this much space because I&#39;m just being KG",
			"about making the number of small in those cases so that maybe I could just use one",
			"byte whereas previously I had to use two bytes for each sample And I know that&#39;s in",
			"complexity. So, that is compression. Right we talked out in all media, sound and",
			"images all of these sort of things, they are typically stored in some compressed",
			"format and this is an example where instead of just storing the numbers in the",
			"total like straight ahead obvious way, we&#39;re going to have some scheme that takes",
			"advantage of the fact and this is true for the images as well that the numbers don&#39;t",
			"intended as jump around rando mly. But if I would get one pixel in an image and it",
			"got certain red green blue values And then suppose you look at the picture right next",
			"to it. Super, super close probably the red green blue values to that second pixel",
			"they&#39;re probably really similar, really close to the red green blue values for the",
			"first pixel And so maybe you could take advantage of that, have that some delta",
			"encoding scheme where for each pixel maybe you didn&#39;t record what the number was.",
			"Maybe you recorded what the difference of that pixel was versus the pixel to its",
			"left and so then suddenly the numbers tend to get a lot smaller. So that&#39;s just an",
			"example or essentially compression is comes up light so this is my kind of",
			"zoomed in kind of simple example of how that might work. Now this example, this",
			"compression is called loss less Because I&#39;ve, I&#39;ve changed the data around to take",
			"up less space but I haven&#39;t given up any fidelity at all. If you run through my",
			"delta scheme here, the samples, they come back exactly right. Right, I haven&#39;t, I",
			"haven&#39;t given up any. I just add a complexity to take a plus space. So just",
			"an example so PNG I talked about that as I think a little bit as a image format so",
			"PNG is also laws less. It takes a bunch of pixels. It arranges them to take up last",
			"space but the image is not corrupted anyway. It comes back professionally. So",
			"laws less for mats I think are a little bit a little bit more rare. The more",
			"common approach to compression is called lossy compression and so lossy compression",
			"is going to take in the data. And it&#39;s going to cost it, it&#39;s going to rearrange",
			"it so it takes up a lot less space. But. It&#39;s not going to repeat on playback. It&#39;s",
			"not going to reproduce the data exactly. It&#39;s just going to be sort of",
			"qualitatively very close. So, so, you pretty much can&#39;t tell. So JPEG, That&#39;s",
			"the [inaudible] Lord knows we&#39;ve been using. A lot of, JPEG is actually lossy",
			"and I, I&#39;ll demonstrate this a little bit. So, you can give it an image with the",
			"pixels just perfect and it takes up certain amount of space. You encode it as",
			"JPEG and it will take up a lot less space, maybe ten actually less space but it will",
			"make certain shortcuts how the red and greens and blues are recorded. So, when",
			"you look at it, it looks very good, but if you put it under a microscope, you could",
			"see where it had kind of fudged a little bit to, to save space. So I can do a, a",
			"simple example of a lossy compression, sticking with my audio sample example here",
			"would be what if. I think I have this oh yeah, what if we just threw out every",
			"other number? We just said, well whatever we&#39;ve got 44000 of these a second. Let&#39;s",
			"just only record 22 thousand. And then on playback they&#39;re going to have to know",
			"that so we&#39;re going to record this number and this number and this number and then",
			"on playback, what could play back do? Playback is going to have all these",
			"missing numbers right so it&#39;ll get this number and get this number then playback",
			"is going to have to sort of fudge this middle number. What could playback do",
			"there? You could just guess, right? You could say well, let&#39;s guess that it&#39;s",
			"halfway in between. We&#39;re going to just guess 12,003. Well maybe in reality it was",
			"12,002. Let&#39;s point your sound pretty good. All right But so, this is a little",
			"bit lossy. We&#39;re fudging the data a little bit, right? So in the next one would be",
			"12,010, 12,006 so again maybe it would guess 12,008 even though in reality, the",
			"sample was 12,007. Now this is a big savings, right? So you, this have the",
			"space, my delta scheme also more or less have the space maybe in a little bit",
			"better. So you compile these techniques on where your data was originally quite",
			"large. It, it could take up a lot less space and when you play it back, so I&#39;ll",
			"do my JPEG example, it really does look very good. But if you got out of the",
			"microscope and look, you could see with certain little, fudge is the word I want",
			"to use but it was probably a better term. Little adjustments have been made.",
			"[laugh]. So it takes up my space. Okay, so the, the two, you know, so any media data",
			"that you played with. So, JPEG for images, MP3 for sound a nd all the video formats",
			"make heavy, heavy use of lossy compression, Especially video data. If you",
			"just had all the samples and you just recorded them in the raw. It&#39;s an enormous",
			"amount of data. Fortunately the data like I said with the pixels and like the pixel",
			"right next to it. It is, the pixel is said to be have a, have a lot of redundancy in",
			"it but actually, there are these patterns in the data that you can take advantage of",
			"to compress it quite a lot and have it still look very good. So, JPEG does this",
			"for images. Mp3. Which is like, it sounds like the definition of being in college. I",
			"guess not anymore. That&#39;s just being alive anyway so MP3 is very, is aggressively",
			"lossy. It&#39;s starts with a lot of data and it has all these tricks to throw out and",
			"cut corners a little bit to get it down to be pretty small. As I mention before MP3",
			"data works out about one megabyte, about a million bytes per minute at your corporate",
			"high quality audio. I should mention MP3 was the result. That format is a result of",
			"a lot of research that they had Test subjects and they would play sounds with",
			"different compression schemes and really home in on for the human ear and brain",
			"what are kind of [inaudible] and omissions that can be heard and what are omissions",
			"that cannot be heard and there was, and a lot of creativity and research went it to",
			"having MP3 worked pretty well. And that was like I don&#39;t know what to maybe",
			"fifteen years ago or something? So in fact there have been any advance since then.",
			"Where they have gotten, the formats have gotten. Even better when they take up less",
			"space in MP3 but also make their trade offs in more cover release so they even",
			"sound better than MP3. Alrighty, So, that is, so lossy compression is just like a",
			"part, part of life."
		],
		"is_youtube": false
	},
	"video_028": {
		"section": "Week 6",
		"subsection": "Digital Media",
		"unit": "Digital Media",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/6+-+3+-+Digital+Media+(22+mins).mp4"
		],
		"video_duration": 1306,
		"speech_period": [
			5.74, 6.051, 5.55, 7.0, 7.0, 7.0, 3.8, 5.3, 4.71, 3.23, 5.7, 5.69, 4.74,
			4.2, 5.12, 4.39, 3.279, 4.301, 5.32, 6.57, 4.53, 6.779, 5.781, 5.62,
			5.489, 3.881, 3.69, 4.899, 5.37, 4.03, 6.94, 4.49, 3.5, 6.301, 4.339,
			4.051, 5.5, 3.58, 5.789, 6.51, 4.58, 5.371, 5.899, 6.22, 4.18, 5.25,
			3.761, 2.5, 4.25, 3.909, 2.18, 4.74, 5.701, 5.329, 3.35, 5.291, 7.0, 5.03,
			7.0, 4.79, 4.21, 7.0, 7.0, 4.079, 6.261, 6.76, 7.0, 6.609, 6.081, 7.0,
			6.56, 4.391, 6.299, 5.481, 4.65, 3.869, 4.821, 7.0, 5.93, 5.31, 6.461,
			4.99, 6.429, 6.331, 6.18, 6.799, 6.141, 5.929, 6.3, 4.651, 4.84, 4.389,
			6.331, 3.37, 5.22, 6.48, 4.25, 5.26, 3.6, 2.98, 3.55, 5.25, 3.15, 2.5,
			3.71, 4.32, 7.0, 6.52, 5.12, 5.13, 4.98, 5.3, 5.16, 4.22, 5.08, 6.13,
			5.25, 6.19, 7.0, 4.62, 4.35, 4.17, 7.0, 4.19, 3.39, 3.67, 6.88, 4.8, 4.25,
			3.99, 3.52, 5.03, 7.0, 7.0, 7.0, 7.0, 6.3, 5.88, 7.0, 4.84, 6.98, 2.61,
			6.43, 4.73, 6.6, 4.56, 6.55, 3.16, 3.87, 3.74, 3.87, 5.58, 7.0, 4.77,
			5.18, 5.09, 4.0, 5.9, 4.97, 4.27, 2.6, 4.55, 3.64, 5.68, 3.8, 3.93, 3.81,
			4.41, 5.37, 5.74, 4.68, 4.17, 4.43, 2.86, 4.68, 4.41, 4.78, 3.98, 6.65,
			5.56, 4.94, 5.51, 5.75, 4.05, 4.43, 3.81, 3.03, 5.31, 3.39, 4.46, 7.0,
			5.14, 3.33, 3.84, 3.9, 5.09, 7.0, 5.75, 3.85, 7.0, 4.3, 7.0, 3.46, 5.96,
			4.32, 6.33, 3.01, 4.45, 2.64, 3.11, 5.87, 3.76, 5.13, 6.44, 7.0, 6.39,
			3.22, 4.54, 5.55, 5.29, 4.46, 4.17, 5.1, 7.0, 5.72, 4.04, 4.39, 5.17, 7.0,
			5.91, 3.65, 7.0, 6.04, 3.63, 5.7, 5.82, 2.89, 2.79, 3.54, 4.68, 3.68,
			5.57, 5.66, 4.67, 4.59, 5.07, 2.62, 6.29, 3.969, 3.981, 7.0, 3.7
		],
		"transcript_en": [
			"Just since we&#39;re on the topic of digital and analog I want to just briefly show you",
			"some examples of images and sound and just talk about video a little bit. Just so,",
			"cause you can see it. So, as I say before, JPEG is like the, the famous lossy",
			"format. So of course, We&#39;ve all seen this image [laugh]. The famous yellow flowers",
			"image. So what happens with JPEG which stands for a Joint Photographic Expert",
			"Group which was a committee that met years ago to just set up a standard for well what",
			"should be the format for storing a compressed image and what&#39;s funny because",
			"I&#39;m sure that committee was just like a complete dusty back water at the time and",
			"yet JPEG has turned out to be like the Rosetta Stone right? Every phone, every",
			"computer... It&#39;s just being used constantly like they, they could never have imagined",
			"how wide spread that, that work was going to end up being. So I should mention JPEG is a free",
			"and open standard. So anyone is, no permission is required to use it and it,",
			"it has that quality of standards that if one, if my digital camera formats images",
			"as JPEGs in that format which is just, it&#39;s about bytes so it formats the bytes",
			"as JPEG that it can confident that, that data can be handed to a web browser or a",
			"phone or any sort of a hardware out there and the designers of that hardware have",
			"also read the JPEG standard and so they know how the byte should be arrange and so",
			"that my image taking for in place. Works everywhere and so that&#39;s the, the classic",
			"advantage of standards. So, when a J, when an image is recorded in JPEG, there is",
			"this knob. Of how compressed should the image be. And I want you to think of this",
			"as, I&#39;m going to call it the Q number, the quality number and I&#39;m just going to",
			"imagine, it ranges from one to ten. So, let&#39;s say when the Q number is set at ten.",
			"The least amount of throwing out data happens so the quality is going to be the",
			"highest And the amount of space that takes up is going to be the biggest. Right, so",
			"if I turn it up to Q10, it&#39;s like, you know, some, you know, aliens have",
			"landed and you&#39;re like taking the picture. You know, like, wow I really",
			"don&#39;t want to have any mess ups so I&#39;ll, I&#39;ll record with highest data but it will",
			"take the biggest amount of space. So normally, on your digital camera, You",
			"would never, no one uses Q10. The trade offs are terrible. So a typical setting",
			"would be maybe something more like what I&#39;m going to call Q5 or Q6 kind of the",
			"middle of the range where JPEG throws out a little bit of the data but it&#39;s",
			"imperceptible. Like MP3 the way, and when I say throw out data, I felt like",
			"it&#39;s going to make a little bit nervous but it is well studied and well designed",
			"so the data it removes is imperceptible. So the origin, so just in standard operation",
			"with your digital camera it&#39;s probably recording the images at Q5. Or, or",
			"something like that. That means that if you edit it later and save it at some",
			"higher setting, it&#39;s pointless because it recorded at Q5 so the whatever lossy is in there",
			"has already happened that&#39;s, that was what&#39;s recorded. Sometimes the cameras",
			"will have what it&#39;s called a raw format for like really picky uses. So the raw",
			"format means. No, lossy compression Just record all the bytes for the image",
			"untouched and, you know, and then all my computer and edit it and, and futz",
			"with it later. Okay, so this is our original flowers image, we&#39;ll call that",
			"Q5. So, what I did is I say its successive versions of the image turning the Q knob",
			"lower and lower. So, you could see how it is the JPEG, the lossy JPEG quality messes",
			"up the image And the main thing I want you to remember. Yeah. I want to show you",
			"these artifacts, is the JPEG does a really good job. It is very hard to see the",
			"things that are introduced. The term for the little visual mess ups that are",
			"introduced are sometimes are called artifacts where you&#39;ll, sometimes you&#39;ll,",
			"you&#39;ll see compression artifacts or an image, the knob is being turn down so far",
			"that you can begin to see where JPEG is throwing out data. So there, so I guess I",
			"want to say, so although I&#39;m going to talk about artifacts, I don&#39;t want you to walk",
			"away here with some uneasy feeling where&#39;s my data, like for the most part",
			"this works great. I just want you to see how it works. Alright, so that&#39;s Q5. Let&#39;s",
			"see, I&#39;m sorry, oh, I&#39;m sorry. This is how my camera takes it. I&#39;m sorry, this will,",
			"we&#39;ll call this Q7. It&#39;s actually not documented from my camera but I think Q7",
			"is, is a typical figure. Alright, so here, I re-saved and this one takes 48",
			"kilobytes, compressed. So, here I saved it as Q5. So, I turned the knob down and now",
			"it takes 29 kilobytes so that was saving about what, twenty or 30 percent less",
			"space and I look between these two and I, I, I just cannot see any difference. Like,",
			"like it saved twenty percent but like I don&#39;t know, I can&#39;t see it. So I, I keep",
			"turning the nerve. I&#39;m going to turn the knob lower. Okay so here, I turned the",
			"knob down to Q1, the absolute lowest possible. And now it takes up fourteen",
			"kilobytes so that&#39;s about 3X or 4X, that is an enormous compression, right? I mean,",
			"it&#39;s reduced by a factor of three or four, the amount of bytes that this is taking",
			"up. So if you just glance at this I think it still looks okay But, what I&#39;m going to",
			"do is I&#39;m going to zoom in And zoomed in, you can actually see the effects And what",
			"I&#39;m going to do here, let me fix the lights a little bit here. All right So,",
			"I&#39;m going to zoom in on this thing really as close as my browser can go so sort of",
			"putting all the microscope so that we can see what the artifacts are Okay. So that,",
			"that was the, that&#39;s the Q5 one so that&#39;s pretty good. So here&#39;s the Q1 one, I don&#39;t",
			"know if you guys can, can you guys see the little squares in the image? I may can",
			"find a section with a short bit. Oh, there we go. So, look over here at the screen",
			"leaf. So if you look carefully, you can see really the way JPEG works is it takes,",
			"it groups the blocks of the image into eight by eight blocks of pixels so 64",
			"pixels at a time and it kind of deals with those as a group and does some of the",
			"compression by that group And so, if you, you look at this image very carefully, you can",
			"actually see the sort of checkerboard pattern that&#39;s coming about because of the",
			"because of the blocks. So, that is one JPEG artifact, that you might see.",
			"Another thing which you can see here at the edge of flower, See there&#39;s yellow and",
			"then there&#39;s white and you see how there&#39;s kind of like this fuzz coming off the other",
			"side in an area that probably should be just black or dark gray. So that is a",
			"classic JPEG artifact And what&#39;s happening is the JPEG has a hard time with",
			"boundaries, really sharp boundaries between one color and another And so here,",
			"what happened is the yellow has kind of blend over into this kind of snow poking a",
			"little bit into the other side. Now, in order to see this artifact, I had to turn",
			"the knob all the way down to one and then zoom in as far as we could But, I",
			"definitely do see this. In real life, I see this artifacts sometimes One time",
			"where I, probably where I see the most is actually in video encoding. So, if you",
			"ever select in DVD movies sometimes if you see there&#39;s some video material but then",
			"they've put letters like the titling for like produced by, directed by or whatever. The,",
			"the letters present exactly this case of a very sharp color with a sharp",
			"dividing line and then some working color behind it. And so the compression",
			"for DVDs actually suffers from the same artifact and so this can be out of",
			"dimension to your movie watching. You could stop the movie and go up to the",
			"screen and look carefully and you might see the same kind of artifact so another",
			"time, another place where this kind of compression is used is in Cable video and",
			"especially in satellite video. So that&#39;s, the satellite TV where they have like a",
			"zillion channels. Well, how is it that they&#39;re fitting all those channels on to",
			"that one dish and the way that they&#39;re fitting it on there is with heavy",
			"compression. They&#39;re taking the video stream and they&#39;re like, well, if we can",
			"press it this much, we can fit a hundred channels. Whoa. But if we turn the knob",
			"down another notch, then we can fit in a 150 channels. And so the tendency has been",
			"just like advertising revenue works and just so you can advertise a lot of",
			"channels. The tendency has been, in my experience that they compress it",
			"pretty heavily so they can have a lot of channels. So, so, it uses up fewer",
			"bytes so it can fit the most channels. All right Let me turn the lights back up",
			"here a little bit. Okay so zooming back out here. Okay there we go. Okay, there",
			"was our, that was, that was the, the most compressed one. All right, So I&#39;ve talked",
			"about this math before where you could work out the number of bytes that an",
			"image should take up. So that image it&#39;s a, it&#39;s a, it&#39;s about 400 x 300 so let&#39;s",
			"say that&#39;s 360,000 I&#39;m sorry, that&#39;s 120,000 pixels say the flowers image so",
			"you just multiple the width by the height. I think I did the math for this before. So",
			"each pixel takes three bytes, it turns out so the red number, the green number and",
			"the blue number each takes one byte so per pixel, that&#39;s three bytes per pixel, three",
			"numbers per pixel so you just multiply. So the number of bytes for one image should",
			"be something like or for that image should be something like 360,000 bytes. But if",
			"you go on your flash drive and you look at an image you have or you look at this",
			"image, this one takes 48 kilobytes. So what is that about it&#39;s a little less than",
			"a factor of ten. So, why does it take up so much less bytes? Jpeg, all right? Partly by",
			"being lossy but partly just by being smart about how it arranges the data, JPEG",
			"causes your images as naively you think bytes could take up a lot less space. So,",
			"that&#39;s, that&#39;s just going on all the time. All right So I already sort of talked",
			"about this, So I&#39;ll just mention other formats. A GIF and PNG, those are So JPEG",
			"is optimized really for digital cameras for images of things in the real world",
			"that have kind of texture and parts that are in focus and parts that are out of",
			"focus. So, just all those qualities of real images Jpeg is organized is geared for",
			"that case. The formats GIF and PNG are optimized more if you think of like logos,",
			"I was thinking like the Simpson&#39; s, something like it&#39;s a drawn thing. It&#39;s",
			"got these perfect areas of color with the sort of perfect boundaries between them,",
			"it&#39;s optimized for that case. But in reality, you could use PNG to, to compress and",
			"store anything. As I mentioned before, PNG is lossless so whatever image you put",
			"in. It comes out exactly the same. PNG just re-organizes it to take up less space",
			"but it preserves image perfectly. Alright I talked about audio a little bit before, that&#39;s",
			"always like AAC is the more slightly better Apple one for that. There is actually",
			"this format Ogg Vorbis. So MP3 and AAC are both patented so in some sense, you",
			"need permission and you need to pay some licensing fee to legally playback that",
			"data. Although eventually those patents expire The format Ogg Vorbis was design",
			"to work around these patents. So, like JPEG it&#39;s just a free and open standard. So, in",
			"rare cases you may see or for certain, If Redistributing data and avoiding, avoiding",
			"weird legal problems is an important goal of your project then Ogg Vorbis might be",
			"a, a good example, a good format to use. It, it performs better than MP3, it performs",
			"quite well. There&#39;s some of a funny, I&#39;ll just make a side note kind of making fun",
			"of Ogg Vorbis a little bit which is. Who came up with that name? [laugh] Right? If",
			"having the idea was for this format to be popular, and I think this is a classic",
			"nerd error. It&#39;s some kind of in, inside joke of referring to a character from some",
			"video that no one&#39;s ever heard of and I think there&#39;s some Latin subtext to it or",
			"something. So anyway This is an example of like, well you want to think a little bit",
			"about marketing. [laugh]. If you want to create something that people are actually",
			"going to use, don&#39;t get all wrapped up in your echo chamber with your little cute",
			"inside jokes maybe create a name that people would actually like. So I, I think",
			"this was a tragedy, like they chose this in my opinion awful name ten years ago and",
			"yeah it caused a series of legal and media problems for God knows who since then.",
			"Alright so we&#39;ll just talk briefly about video formats. So, video data takes even",
			"more space that audio. It takes the most. In fact, video data you can think of it,",
			"the way it&#39;s made is it&#39;s a series of images so maybe something between 30 and 60",
			"images per second And also audio data. Which then is, is you know, is sort of",
			"synced up and played at the same time and you know obviously that&#39;s a movie. So video",
			"data right it&#39;s how were big those JPEGs are let&#39;s say, 30 times per second. So you",
			"can imagine that, that ends up taking a lot of space. The good news is that in the",
			"same way that I was describing redundancy in an image where a pixel and maybe a pixel",
			"just to its right, the numbers are maybe pretty similar so you could, there&#39;s a",
			"room to take advantage of that and compress it. Video data, suppose I, I, I&#39;m",
			"videoing this class, I&#39;m looking at you guys and I have, I have one grab, so",
			"there&#39;s an image And then a 30 second, I have the next image. They actually",
			"probably looked really similar right? All these you know seats that are green and",
			"the wall are, all those pixels mostly haven&#39;t changed right if a ball was",
			"thrown. It was kind of moving across the scene. There would be some change but the",
			"lot of the pixels from one grab, one scene to the next would either be unchanged or",
			"would have moved a little bit And so I&#39;ll just say, that is an additional source of",
			"redundancy that if instead of encoding a frame just naively the obvious way, you",
			"encoded it and you try and think of it as well, how is it different from the one",
			"that came just a fraction of a second before and you just encoded that",
			"difference. There&#39;s a lot of redundancy to take even without being lossy, there&#39;s",
			"just a lot of redundancy taken advantage there so you can, it is possible to make",
			"video to store it in way that takes a lot less space. So, all the video formats take",
			"advantage of that. And so, if you work it up naively, just in terms of pixels, what",
			"would be a colossal amount of data, it&#39;s still a lot of data but it gets down to",
			"kind of a reasonable amount. So just kind of a working number, you could think of video as taking",
			"about two Gigabytes per hour And the one thing you&#39;ll notice is that if you have",
			"video data And it&#39;s in one format and you want to encode it or reduce it or whatever",
			"in some other format. Has anyone ever done this on their computer? What you&#39;ll find. Is",
			"on the computer, it takes it a long time. To take like one hour of video data and",
			"translate it, it might take it on my computer maybe four hours And the reason",
			"is just that the computations that try to look at each frame and then think about",
			"how the next frame is mostly similar but a little bit different is just complicated.",
			"And so if you think about having a fast computer nowadays, I think it as mostly",
			"pretty pointless cause like whatever. I just have, I&#39;m just running FireFox all",
			"the time and like it&#39;s fast enough and then mostly my experience is based on how",
			"fast the network is and then the CPU on my machine it&#39;s not, it&#39;s not really doing a",
			"lot. Video compression would be the counter example. Video compression uses",
			"everything your CPU has and more and it&#39;s still pretty slow. So, that&#39;s of 2012. So I&#39;m",
			"sure if I would locate this lecture in 2020 and, and Moore&#39;s law has clicked over",
			"two or three times then that wouldn&#39;t be true anymore more. But like oh, video, what are you talking",
			"about, that takes two seconds but anyway as of now that&#39;s one thing that actually",
			"takes certain amount of time. So there&#39;s a few different formats. There is this thing",
			"called the Motion Picture Experts Group that standardizes video formats that are",
			"used on DVDs and now on Bluray disks and on actually, you know formats that are",
			"used for like Youtube and Flash videos that sort of thing. So there are standards for that. Unlike",
			"JPEG these are very heavily patented you can&#39;t use them for free, they&#39;re fairly",
			"complicated and there&#39;s somewhat onerous terms to do with that. Google to its",
			"credit, wanted to create a format that would be the sort of the analog of",
			"what Ogg Vorbis is to audio. A format for video encoding that was patent free So",
			"for example if you&#39;re Wikipedia and you want to distribute all these videos and",
			"you don&#39;t want to be in some legal mess of like well. Do my users have permission to",
			"watch this legally? You&#39;d like just what it&#39;s called an unencumbered format And so",
			"that&#39;s what the Web M project is. It performs similarly to the, the top",
			"commercial codecs but it is, it said to be patent unencumbered but there&#39;s been legal",
			"tussle about this because the patent holders, of course, they want to say like",
			"Of course my patents are represented in your technology because that what&#39;s",
			"patent holders always say but ultimately it has to get resolved in the courts or some kind of payment or",
			"something so that. That controversy continues but it is a, I, I appreciate",
			"that they&#39;re trying to make an unencumbered format just so it is possible",
			"to distribute video without these patent problems. There was something else I was",
			"going to say. Oh right, so there, I should mention currently, the top,",
			"the top video format is called, it has a terrible name, H.264 is a very widely",
			"used video compression format And I&#39;ll probably use the word codec there that,",
			"that&#39;s a word that kind of means the encoder. And so, H.264 is extremely",
			"popular. It also works very well. It&#39;s a very aggressive and a very clever in its",
			"way that it&#39;s able to reduce a, A, a video stream down to a very small file. So, if",
			"you ever take a video with your phone or remember those little flip video cameras, does anyone",
			"remember those. So, those all refer to, those all take the video stream and in",
			"real time compress it down to H.264. So, that is, that is very common",
			"although heavily patented format for that kind of thing. Alright So, last thing I",
			"mention is that so, up till now the most common way to watch video probably on the",
			"Internet is Youtube. You guys have heard of it? Kittens, you guys have seen kittens",
			"on the Internet? All right, so Youtube, there&#39;s a certain amount of technology",
			"there so that it can take video and make it work kind of in a web page. And",
			"historically, Youtube has used this technology called Flash. Flash is actually",
			"not a standard. It&#39;s a product. It&#39;s a product that comes out of Adobe and so",
			"almost everything that works on the Internet HTML, JPEG, PNG, everything. They",
			"all have this free and open standards, So Flash is this one kind of oddity in that",
			"it&#39;s a product and so your computer is in some sense dependent on Adobe to produce",
			"the Flash Player and this is something that famously Steve Job, drove Steve Jobs crazy",
			"because it meant that if Adobe did a slightly have some bugs or did a lackluster",
			"job of producing the Flash Player on the Mac some say it made the Mac look bad. Whereas",
			"for JPEG. Apple could produce the software on the Mac that rendered JPEGs And so, if",
			"Steve Jobs was like hey, if Steve Jobs was saying, hey, I want it to look perfect, he",
			"could yell at the engineers to make it look perfect and indeed it does, Whereas",
			"with Adobe, because it&#39;s not a standard, they have this slightly oddball",
			"situation. Anyway, Adobe&#39;s Flash has been very successful but it does have this",
			"oddity for, for how it works on computers where it doesn&#39;t really fit with the",
			"entire rest of the way the Internet works. So, enter HTML5 I maybe talked about",
			"HTML5 before as adding some features to how web pages work. So, one of",
			"the features that&#39;s being added is what&#39;s called the video tag And the way the video",
			"tag works is just to summarize is it standardizes how video works in a web",
			"page so that you could put a video in the web page just as up to now, we&#39;ve put images.",
			"Like images in web, we&#39;ve been doing that for years, you just put in the image and",
			"it just kind of works. The video tag is going to try and recreate that for video",
			"and that&#39;s just now coming into use but I think, I think that&#39;s a good thing. It",
			"will, in the same way that images work very easily reliably on the Internet, it would be",
			"nice if video was open in that way as well. Okay, alright, that is enough for",
			"today. Welcome to Knowledge about Analog and Digital and I&#39;ll see you guys on Thursday"
		],
		"is_youtube": false
	},
	"video_029": {
		"section": "Week 6",
		"subsection": "Spreadsheets",
		"unit": "Spreadsheets",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/spreadsheet+1(1).mp4"
		],
		"video_duration": 551,
		"speech_period": [
			4.33, 3.4, 4.36, 0.79, 2.54, 2.99, 0.73, 2.27, 3.26, 1.22, 3.82, 2.65,
			2.94, 1.79, 4.56, 1.78, 1.92, 1.21, 7.09, 3.97, 1.32, 5.15, 0.87, 1.72,
			2.55, 2.18, 2.05, 2.26, 1.51, 2.0, 0.94, 4.29, 3.468, 1.151, 3.888, 3.313,
			2.04, 1.48, 5.18, 3.56, 4.32, 2.37, 3.09, 1.54, 0.83, 1.54, 2.05, 3.84,
			1.549, 0.91, 1.7, 2.77, 1.16, 1.67, 3.37, 3.47, 1.67, 2.71, 3.06, 2.79,
			2.24, 2.16, 1.43, 3.09, 2.62, 1.71, 2.92, 1.96, 3.64, 1.05, 1.09, 1.46,
			1.91, 3.03, 4.92, 4.1, 2.82, 2.45, 3.48, 3.72, 2.3, 1.77, 2.43, 3.58,
			2.01, 1.11, 3.8, 1.44, 2.85, 1.69, 4.65, 2.82, 1.31, 1.759, 2.0, 4.821,
			2.61, 3.06, 4.01, 4.31, 5.4, 3.47, 2.94, 3.47, 2.53, 0.85, 0.8, 2.33, 1.8,
			2.51, 5.11, 2.49, 3.17, 3.74, 3.22, 1.71, 3.22, 3.19, 1.48, 6.05, 3.19,
			5.86, 3.09, 2.99, 3.73, 2.4, 2.36, 2.02, 2.85, 3.55, 1.03, 2.77, 2.49,
			2.01, 3.31, 3.03, 4.57, 1.36, 4.17, 2.6, 3.34, 2.58, 2.02, 3.2, 4.2, 3.04,
			2.84, 3.77, 4.17, 2.13, 1.1, 1.84, 2.12, 3.83, 4.558, 0.953, 3.179, 3.0,
			2.37, 2.85, 4.12, 2.07, 3.48, 3.02, 1.16, 1.06, 2.62, 2.62, 3.26, 2.97,
			2.89, 1.77, 2.52, 1.49, 0.57, 0.95, 0.5, 6.835, 5.055, 2.674, 1.296, 2.23,
			0.91, 1.21, 1.54, 2.36, 3.49, 1.74, 2.71, 2.96, 4.51, 1.37
		],
		"transcript_en": [
			"In this section, I&#39;m going to talk about the basics of how spreadsheets work.",
			"Spreadsheets are a fantastic invention that make it really easy to do",
			"basic kinds of analysis and mathematics.",
			"With a CS101 background-",
			"you know, you&#39;ve looked, seen syntax and expressions-",
			"it&#39;s actually going to be very easy to pick up the basics of spreadsheets in",
			"just a few minutes.",
			"So that&#39;s what I want to do here.",
			"Spreadsheets were invented in 1979 by Dan Bricklin.",
			"And it became very popular.",
			"And then, there was program Lotus 1-2-3 that was very popular at one time.",
			"And then, with some very sketchy business practices,",
			"Microsoft took over with Microsoft Excel.",
			"And then, that program is very popular to this day.",
			"fortunately, the idea of a spreadsheet is not tied to any particular program.",
			"All of the different spreadsheet programs out there,",
			"you implement the features that I&#39;m going to show you today.",
			"Really, you could use any one of them.",
			"also, there&#39;s a a standard format, the xlsx format, that I&#39;m going to use today.",
			"And all the different programs now load that format, that&#39;s a Microsoft format.",
			"Just a brief editorial.",
			"Having your data in a standard format like that really is has a lot",
			"of consumer benefits.",
			"It means that.",
			"Any vendor understands that you can take your,",
			"that you&#39;re not just locked in to just that vendor.",
			"You can take your data and go to another vendor.",
			"And that pressure keeps the vendors on their toes.",
			"They have to, have good features and",
			"good pricing, and really, that&#39;s where progress comes from.",
			"I love that kind of competition.",
			"so, just to mention a few big ones, there&#39;s the Google Docs.",
			"Website works as free and that does spreadsheets in the browser.",
			"There&#39;s libre office,",
			"is a program you install on your computer it&#39;s a full office suite that&#39;s free, and",
			"then more recently Microsoft one drive is competing with Google docs.",
			"So any of those would work fine.",
			"To do this kind of spreadsheet work.",
			"So, for this section I&#39;m going to use this Catnap example.",
			"And the Catnap spreadsheet is going to be just storing and",
			"analyzing the data for a bunch of cats and looking at how much they sleep each day.",
			"So, I will switch over.",
			"To Libre Office, which I&#39;m going to use for my example.",
			"Just to kind of walk through the spreadsheet and",
			"show off the main features.",
			"so. Here&#39;s the Catnap spreadsheet,",
			"you&#39;ll see it&#39;s just a big grid.",
			"These individual rectangles are called cells, each cell can hold a number, or",
			"a string, or a date, or kind of anything.",
			"So I&#39;ll click on this one.",
			"That one has the string Alice in it.",
			"The other thing to notice is that each cell has an address.",
			"So here&#39;s the column B.",
			"See the B up here.",
			"And so, this is row 2, so that is B2.",
			"And if I click one down, that&#39;s B3, and that&#39;s B4.",
			"You can see the row numbers over here.",
			"So that sort of letter number scheme, like B3 or",
			"C7 or whatever, provides a nice addressing scheme.",
			"So I can address any particular cell in the whole grid.",
			"And I&#39;m going to end up using that in a little bit.",
			"So right now, this is just.",
			"Raw data. There&#39;s just numbers and strings.",
			"There&#39;s no computation, so I, I&#39;m going to want to add computation to this.",
			"So I&#39;m going to click down here and",
			"first off I&#39;ll show how you could just enter a number.",
			"So I could just type like, 22, and hit return.",
			"So now I&#39;ve just put 22 in that cell.",
			"To edit it, I&#39;m going to double click to put the cursor back in there.",
			"And I&#39;ll.",
			"Move the cursor over here to the right.",
			"Click the click key a couple times.",
			"So I&#39;m going to try putting a computation in here.",
			"Say I want to add up this 10 and this 9, or",
			"using their addresses, I would say I want to add up B15 and B16.",
			"If the first thing you type is an equal sign, then that makes a big difference.",
			"That signals that the cell is going to have a formula in it.",
			"So I can say =.",
			"B 15 plus B 16.",
			"And then I, when I hit return it just does the math.",
			"So it displays the 19 there.",
			"So you can see it&#39;s just adding the ten and the nine.",
			"If I single click on it, it still just looks like the 19.",
			"But if I double click it, then it shows, oh well really here&#39;s the formula.",
			"That is going on inside of there.",
			"And you can see with the colors,",
			"it&#39;s trying to kind of show you which which cells that&#39;s based on.",
			"If you&#39;re ever in this kind of editing mode,",
			"and you want to get out, you can click this big X up there, and",
			"that just means like get, get, you know, stop editing.",
			"All right, so let me try putting a more interesting formula in there.",
			"So really what I want to do is I want to sum up.",
			"This whole column of numbers, and",
			"so that&#39;s a very common thing to do with spread sheets.",
			"So I&#39;m going to type equals, saying this is the formula.",
			"And then I&#39;m going to type S-U-M, sum, and then a left parenthesis, so",
			"this looks a lot like the functions that we&#39;ve done in CS101.",
			"And then what I want to say is, well, I&#39;ll sum up all of these.",
			"The easiest way to do that is to click down here on the 11.",
			"And just drag down to the nine and then let go.",
			"And as I did that, you can see here in, in black and white it, it put in B3:B16.",
			"So with the colon, that&#39;s a way of saying, oh, that range of cells.",
			"So starting at the B3, which is 11, down here to B16.",
			"So then I&#39;ll type the right parenthesis.",
			"To close off the sum, I&#39;ll hit Return and like, there we are!",
			"It just computes the sum.",
			"So that whatever.",
			"That&#39;s a super common thing to a spreadsheet.",
			"It&#39;s very nice. You could just add up numbers like that.",
			"So I&#39;ll just show you like, if I go to this [UNKNOWN] ten and",
			"I change it to like 11 and I hit Return, the sum updates automatically.",
			"So that&#39;s sort of, what you want, I&#39;ll change it back to ten.",
			"So as I mentioned before, if you want to, right now, it just looks like a 116.",
			"If I double click, it&#39;ll show me the underlying formula.",
			"And you can see with the colors, it&#39;s trying to sort of show us, oh,",
			"yeah, you know, it&#39;s this rectangular region.",
			"Another thing that works is actually, if you single click it,.",
			"If you look carefully, up here at the top it also shows what the formula is.",
			"But i, i don&#39;t tend to use that top area.",
			"I just tend to use the, double click if I want to see what&#39;s going on.",
			"There&#39;s actually a famous, bug.",
			"In, the happens the last couple years the Reinhart-Rowgoth, rowgoth,",
			"research where they had this economic research where it showed something.",
			"It just turned out they had a bug in their spreadsheet where they meant to",
			"type something like B3:B16 but they just had B3:B12.",
			"Like they were just leaving out a bunch of numbers.",
			"And it, it made, it undermined their result.",
			"I think that&#39;s kind of a unique example because it shows you could have",
			"these famous economists with these famous results, but the bugs that they",
			"make are just like, just the same kind of bugs anybody could make.",
			"All right.",
			"So let me show you a or, also I&#39;m going to put a label here.",
			"So I&#39;ll say this is total hour.",
			"Oops. Total hours.",
			"So that&#39;s, you know I, this is the cat, Alice, that we&#39;ve just added up.",
			"Okay, Alice had 116 hours across all these, all those days.",
			"So a related feature is the ability to compute the average.",
			"That&#39;s going to look really similar.",
			"So I&#39;m going to go here, I&#39;ll type equals and then instead of sum, I&#39;ll type.",
			"Average. Average is just another function.",
			"There&#39;s actually a lot of functions built into spreadsheets but sum and",
			"average are the, probably the two most commonly used.",
			"So I typed the left parenthesis.",
			"I&#39;m going to go up here, I&#39;m going to click and drag down and let go,",
			"and I&#39;m going to type the right parenthesis.",
			"And, like, that&#39;ll give me the average.",
			"So those are two very common things to do, with spreadsheets.",
			"So, the obvious thing you want here is, like,",
			"Well, okay, I&#39;ve sort of worked out, you know, for the Alice column, but",
			"really I wanted to do it for Steve and Tallulah and Nick.",
			"How do you do that.",
			"There&#39;s a great feature for this case.",
			"So I&#39;m going to click in this upper left cell.",
			"I&#39;m going to drag over to the right and let go.",
			"And then I&#39;m going to go up here to edit and I&#39;m going to use fill right.",
			"Let&#39;s try it,.",
			"bloop. And what fill right does,",
			"is it takes whatever you have in the left most and just kind of.",
			"Paste it across the columns.",
			"But it changes it to work relatively, which is exactly what you want.",
			"So when it puts the formula in this column, it&#39;s going to use the C numbers.",
			"And when I put it in column D, it&#39;s going to use the D numbers.",
			"So it just does at an intuitive level, really exactly what you want.",
			"So that is a, is a fantastic feature.",
			"The last thing I&#39;ll show you here,.",
			"Is making a chart.",
			"So to make a chart I&#39;m going to grab just the data,",
			"so I&#39;m going to click here on this title.",
			"I&#39;m also going to drag down to the lower right and let go.",
			"And then different programs have different features, but",
			"in Libre Office this is the add a chart button so I&#39;ll click that.",
			"And then it&#39;s going to let me pick different types.",
			"I think I like the line type for data like this.",
			"So I&#39;ll say I want a line chart.",
			"There we go, finish.",
			"I&#39;m just taking all the defaults here.",
			"That&#39;s pretty good.",
			"So what we see, right this is data of the amount of napping, for all these cats.",
			"well, obviously the Steve cat is way out ahead.",
			"And then the other cats are kind of down here.",
			"And I like that.",
			"you know Graphically, [INAUDIBLE] that&#39;s one way of doing data analysis.",
			"You can see the data.",
			"And I like that.",
			"You can also look over here the numbers, right.",
			"So here is the Steve column and we look like oh, right.",
			"He&#39;s the, the total&#39;s the biggest and the average is the biggest so the number,",
			"just look at those numbers we get the conclusion and",
			"in the graph sure consistent, [UNKNOWN] I like that those who agree.",
			"It&#39;s a nice way of [INAUDIBLE].",
			"So there is your very fast introduction to the basic source Spreadsheets so",
			"give it a try on the exercises."
		],
		"is_youtube": false
	},
	"video_030": {
		"section": "Week 6",
		"subsection": "Computer Security",
		"unit": "Computer Security 1",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/security+1a.mp4"
		],
		"video_duration": 556,
		"speech_period": [
			4.199, 5.851, 4.51, 4.67, 4.42, 1.93, 4.3, 2.879, 6.031, 3.07, 5.21,
			3.329, 3.121, 3.05, 5.939, 2.37, 4.74, 3.311, 4.6, 6.909, 4.32, 5.631,
			4.04, 3.78, 7.0, 4.091, 4.449, 4.9, 4.141, 4.06, 3.87, 4.38, 2.58, 3.92,
			5.39, 6.6, 2.54, 3.61, 1.37, 1.93, 5.04, 1.89, 4.79, 5.85, 5.17, 2.9,
			2.53, 5.18, 2.5, 3.58, 6.08, 2.96, 2.77, 2.09, 7.0, 6.15, 3.43, 7.0, 3.66,
			5.17, 5.54, 6.09, 2.91, 4.84, 4.5, 6.62, 2.98, 2.92, 4.55, 3.96, 5.1, 5.9,
			5.419, 5.941, 5.85, 3.6, 5.35, 1.35, 2.71, 5.97, 2.78, 3.229, 4.081, 4.19,
			5.67, 4.02, 4.009, 3.511, 5.25, 3.38, 6.53, 3.74, 3.04, 3.0, 4.0, 3.049,
			3.011, 5.72, 4.75, 2.63, 7.0, 3.599, 4.981, 4.39, 3.909, 3.861, 3.359,
			4.161, 3.42, 6.86, 4.72, 5.91, 3.06, 4.899, 6.381, 2.72, 2.75, 4.19, 2.81,
			3.77, 3.801, 5.25, 4.14, 3.27, 3.021, 3.599, 3.821, 1.69, 4.27, 4.279
		],
		"transcript_en": [
			"So in this section, I&#39;m going to talk about computer security. Now, computer",
			"security is kind of a scary sort of dramatic topic but it doesn&#39;t need to be. So I&#39;m",
			"going to talk about some of the, the most important cases and in particular, you",
			"know, staying safe is not that hard, it doesn&#39;t need to be that complicated. So, for",
			"starters, I want to establish this model of the computer. I&#39;ll say the computer is",
			"sort of like a castle. So let&#39;s say here I&#39;ve, I&#39;ve",
			"drawn a computer and you know, there&#39;s this CPU and maybe here is a hard drive or",
			"flash drive or something with bytes on it that you care about and let&#39;s say you&#39;ve",
			"got your secretdiary.txt. There&#39;s some bytes here that you, you care about. So,",
			"I&#39;m going to say it&#39;s like a castle in that, the computer has the sort of, I&#39;ve",
			"drawn this bold boarder around like it has a real wall and the bad guy&#39;s out here,",
			"he&#39;s outside the wall. Now, the movie is sometimes that, it seems like, well, the bad",
			"guy just drives up in advance, you know, outside your house and they have got some",
			"gadgets in and you know, they&#39;ll just do something and they just get the bytes off",
			"there. And that&#39;s just not how it works. By default, the bytes are on the computer.",
			"You&#39;ve got the computer, the bad guy is on the outside like",
			"by default it&#39;s kind of safe - or to put it another way, when we look at the different",
			"things the bad guy might do, they all involve being outside and trying to get",
			"inside but by default, they&#39;re outside. So, what I want to do is talk about the",
			"different so called attacks, the bad guy might do. One sort of broad pattern I want",
			"to emphasize is that, it&#39;s not the case that there&#39;s a bad guy with the picture of",
			"you sitting in some apartment like scheming like how to get on to your",
			"computer. Generally the way it works is that the bad guys are working what you say",
			"in bulk. They don&#39;t know about you, they don&#39;t know about anything in particular. They&#39;re",
			"crafting not Fairly Medium complicated attacks. And then just sending out",
			"millions and millions of copies of that attack, not putting any thought into",
			"any particular one but j st trying to snag essentially victims who have taken",
			"the least precautions. So if you just do, - it&#39;s not that you need to have super",
			"awesome security - you just need to avoid making very common mistakes and if you",
			"just avoid the common mistakes, you&#39;re probably going to be okay. I should",
			"mention that sometimes for like corporate espionage or whatever you might",
			"get a government or someone who&#39;s trying very hard to break into someone&#39;s computer.",
			"That, that&#39;s sort of a different a different class of things. I&#39;m not going",
			"to worry about that case. Presumably if you work in the CIA or something you&#39;ve got",
			"your own class. So the first class of attack I&#39;ll talk about is password",
			"attacks. So the bad guy could try to just guess passwords to get into someone&#39;s",
			"account so you know Gmail, or so you know Gmail. Whatever, I&#39;m sure this just",
			"happens all the time. This is sometimes called the dictionary attack - the idea being",
			"that the bad guy can just sort of you know",
			"enter &quot;aardvark&quot; or &quot;acre&quot;, you know, just sort of",
			"like go through everywhere in the dictionary and just guess it. There is 86400 seconds",
			"in a day that kind of, it you would sort of",
			"guess the password of every few seconds. You know you can go through quite a few.",
			"The trick here to avoid password problems is you just need to avoid very obvious or",
			"very common passwords. So your password should never just be a word that appears",
			"in the dictionary or a pun or a little bit of",
			"work place that someone else that you know many other people on the Internet might",
			"have thought of. So actually I can showyou an example of a, this is sometimes called",
			"the dictionary attack (maybe I already said that). So",
			"actually this is a live, a real example of a dictionary attack. So I run the",
			"coding back.com server and. It turns out, bad guys are trying to break in to that",
			"thing like all the time. So, it has, it keeps a log file which have just",
			"what&#39;s happened. That&#39;s a standard thing for servers to do. I have here; I just put",
			"a copy of the log files. It&#39;s really cryptic but I&#39;ll walk you",
			"through it. So what this says is at On March sixth at 6:26:20 it says failed",
			"password invalid user Alex from some IP address. It&#39;s actually an IP address from",
			"Japan so what that&#39;s saying is there is a log in attempt and it failed for the user",
			"Alex and then two seconds later there is another one and then when is it, four",
			"seconds after that there is another one is Alex three times and then there are those",
			"for failed one for Adam and for user Fax or whatever and so. This kind of shows you",
			"the sort of bulk quality so there&#39;s just some bad guy machine out there and you can",
			"see every two or three seconds it&#39;s just trying another password and. It&#39;s just",
			"always wrong. It&#39;s just guessing what are the odds that&#39;s going to happen but that",
			"match very, very low but that&#39;s how the bad guys operate. It&#39;s not that they have",
			"a high percentage idea. It&#39;s quite the opposite. They have this very low",
			"percentage idea and then they just try it a very large number of times. So it&#39;s also",
			"I think fine that you can see they have some sort of a list of user names to try",
			"and it&#39;s kind of alphabetical right like they are just, it&#39;s just gullible, they&#39;re",
			"just going through so they&#39;re just going through so they&#39;re just kind of I guess",
			"not to be too scared but that&#39;s just going on all the time, right. The bad guys are",
			"just trying every server they can find every couple of seconds whatever just like",
			"constantly so I&#39;ll talk about in a second if you just have a password that&#39;s a",
			"little bit hard to guess. They&#39;re, they&#39;re only the guessing the most obvious kind of",
			"password for that sort of attack. So here&#39;s a It was interesting, I just looked",
			"up a list of just common passwords so here&#39;s. I&#39;m sure it depends on how the",
			"surveys is down but here is some password so the number one common password was the",
			"word password. Number two was password one. No doubt that&#39;s when they require you",
			"to put a number on there and some of you out there might actually do that. I know",
			"some of you out there may have actually done that. Here&#39;s someone as password as",
			"one through nine or one through eight or ABC123. It&#39;s not a word but it&#39;s kind of a",
			"pattern. It&#39;s pretty easy to match it to a lot of people trying that password Or",
			"QWERTY. Another example is almost trying to be clever. But if you&#39;re clever in the",
			"way that like a million other people are going to have the same idea, that is not",
			"clever. So those are all password patterns to avoid like you can&#39;t pick something so",
			"obvious that other people might try it. So, the good news is that having strict",
			"password is not really that hard and some in sites in my opinion really go overboard",
			"requiring to have a bunch of digits and multiple punctuation. I think, I think",
			"they&#39;re fooling themselves. I think that is excessive so I&#39;ll give you some",
			"examples on what my opinion represents good password. And I should say, I use",
			"good passwords for, the bad guys are really interested in sites that involve",
			"money. So banks, eBay, PayPal or your e-mail account. Your e-mail account is",
			"important because the bad guys can then trigger a password reset which is then",
			"sent to your e-mail account and then there might be some other repairs there but",
			"that&#39;s maybe a way for them to get to the account with money. So, those passwords",
			"are regardless important and then there might be some other, you know, blog were",
			"you want to come in or whatever and I don&#39;t put a lot of thought of using a real",
			"secured password for that so I&#39;m conscious of passwords where I care about security",
			"versus kind of, you know, whatever throw away passwords. So here&#39;s what I&#39;ll do.",
			"Start with the word, here I use the example of mittens just some random word",
			"and I add a little misspelling. Change the letter, mess it up a little bit so it&#39;s",
			"unclear right? And then here I edit, ERX just a little random something in the",
			"middle beginning and the end or something so it&#39;s no longer, it&#39;s really not a word",
			"anymore. That&#39;s pretty good. It&#39;s important here that the ERX is only like",
			"ABC or XYZ or something that anyone else would have thought if is just really",
			"random and jumbled a few letters. So, this kind of password I found to be pret ty",
			"easy to type. If you want to get a little more fancy you can start adding some",
			"uppercase letter and maybe out a digit in there, a lot of sites required digits Or",
			"if you want to go really over the top, we can have like multiple uppercase letter",
			"and lower case and multiple digits and function letters. That&#39;s probably more",
			"complicated than as I say. So, those are pretty good passwords. There&#39;s another",
			"problem which is, instead of the bad guy guessing the password it might be that the",
			"bad guy let&#39;s say they break, I&#39;m going to use schwab.com as my example. So what if",
			"they break in to schwab.com and they sort of get all the passwords from inside of",
			"there and there are some technical details about how might that work, It&#39;s important",
			"that for that reason it is important that you do not reuse important passwords.",
			"There is you know, if, if you did reuse it then there&#39;s this other problem even if",
			"it&#39;s hard to guess where it could kind of still enough from you but essentially from",
			"someone else. So I don&#39;t really use important passwords. This does create a",
			"problem with that is really hard to remember and I guess what I&#39;ll do is I&#39;ll",
			"just write them down. Like you have a piece of paper somewhere, you know,",
			"somewhere obscuring your house and for the important ones just write them down I find",
			"to be adequate. And to realize again, it&#39;s not that there&#39;s, there&#39;s some bunch of",
			"you know, the CIA or something is trying to break in your account and hiring people",
			"to break in your house to get the passwords. It&#39;s more, there&#39;s just this",
			"mindless bulk - and in a way just very inexpensive -",
			"operation going on just trying to take advantage of common cases so I&#39;m not so",
			"worried about having those written down. Also if you were in the hospital or something,",
			"it might be helpful to [INAUDIBLE] to other people",
			"so that they could, they could get your",
			"password. Alright. So that&#39;s our, that&#39;s our different password, password problems."
		],
		"is_youtube": false
	},
	"video_031": {
		"section": "Week 6",
		"subsection": "Computer Security",
		"unit": "Computer Security 2",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/security+1b.mp4"
		],
		"video_duration": 614,
		"speech_period": [
			5.131, 5.149, 6.0, 5.051, 4.76, 4.529, 3.971, 3.97, 3.67, 7.0, 4.23, 4.22,
			3.53, 4.91, 4.849, 5.191, 3.339, 6.331, 6.069, 4.32, 4.0, 4.09, 3.281,
			5.579, 5.671, 3.699, 3.71, 3.652, 3.24, 3.83, 3.88, 4.72, 5.09, 4.62,
			3.61, 4.92, 5.79, 5.26, 5.85, 4.26, 4.63, 4.18, 2.3, 3.09, 3.17, 4.29,
			3.77, 3.58, 3.95, 4.27, 3.0, 4.31, 4.85, 5.67, 3.22, 3.83, 5.51, 4.33,
			5.18, 5.209, 2.78, 7.0, 3.891, 5.609, 3.81, 4.991, 5.379, 3.271, 3.799,
			2.69, 5.81, 3.15, 5.211, 3.729, 3.81, 4.53, 3.92, 4.571, 5.66, 3.569,
			3.25, 4.95, 7.0, 5.611, 7.0, 4.21, 7.0, 4.53, 7.0, 3.891, 2.12, 5.559,
			7.0, 3.321, 4.669, 5.84, 4.64, 4.14, 4.1, 3.97, 5.6, 4.601, 6.559, 4.28,
			3.47, 5.52, 5.4, 4.41, 4.551, 6.609, 3.47, 5.201, 2.78, 5.011, 4.3, 4.89,
			3.511, 6.06, 4.409, 3.57, 4.491, 3.6, 4.31, 4.669, 3.641, 4.02, 3.079,
			5.401, 4.299, 6.281, 4.06, 4.589, 5.921, 1.1
		],
		"transcript_en": [
			"So the second class of attack I&#39;m talking about here is called phishing And it&#39;s",
			"spelled with a ph, phishing And the idea here with phishing is that. You are the",
			"fish. So the bad guy is putting out this bait and trying to trick you into",
			"revealing most commonly your password or, or something that the, the bad guy wants.",
			"So no doubt you have received many e-mails that claim to be from eBay or PayPal or",
			"you know, anything to do with money were really those are fishing attempts whose",
			"trying to trick you of giving up your password. The e-mail might say something",
			"provocative to try and get you to click. It might say oh, fraud emergency click now",
			"or whatever. Something to try and get you to react in a moment, So, I&#39;ll scroll down",
			"here and show you. This is this is an example Of a phishing e-mail I got And it,",
			"I guess the thing about phishing e-mails is they, they look realistic. So this is a",
			"forgery of an e-mail that claims to be from me based so that they can get the",
			"art, you know, the logo and the text and of course that&#39;s very easy for them to",
			"copy it so it, it&#39;s looks always done perfectly but it might look really correct",
			"And the trick here is really the links. So, if you look out, you know, there is a",
			"link here and a link here, there&#39;s also links in this thing And If I click any of",
			"those, this is just a picture of the e-mail But, if I were to click one of",
			"those, the trick is It does not lead to a page that&#39;s actually an eBay page. It",
			"leads to a fake eBay page, a phishing page with a, with in prompt for me with a user",
			"name and password and the idea is that fake phishing page, the bad guys using",
			"that just to get my password for me. So it&#39;s, it&#39;s a forgery. They put up a",
			"forgery, a, a phishing site that looks like eBay and try tricking me to typing my",
			"password into it. So, if you want to sort of isolate down to just the case, think",
			"about when you&#39;re typing in your password. You want to look. Look wait, who am I",
			"typing that to? That&#39;s the case you want to think about. I should point out And",
			"sort of things what I&#39;m saying about bulk. Notice the two, two member of eBay like",
			"they haven&#39;t bothered to use my right name or my right e-mail address. I mean, it",
			"looks wrong but anywa y, it&#39;s just, its&#39; just the most [inaudible] thing and bulk",
			"sending out millions and millions of copies [inaudible] question, I mean it,",
			"it. I mean, it&#39;s tough because eBay doesn&#39;t in fact sent e-mail to its users",
			"and so if, if you&#39;re receiving an e-mail puts you in a tough spot where you know,",
			"you&#39;re going to try to distinguish the good ones from the bad ones. There&#39;s a in",
			"this case, it&#39;s an e-mail. There&#39;s a very similar idea of just a website that&#39;s",
			"maybe it&#39;s just a fishing website and then the bad guy might just try and send the",
			"URLs to that website and put in blogs or whatever and just you know, send idea.",
			"Trying to get people to go to the to the, the bad side. So, I&#39;ll talk about how to",
			"avoid this problem in a second. There&#39;s a funny analogy to this, which is the",
			"phishing which is a crime. Which I guess has happened more probably but I first",
			"read about it where some criminals. They went to a bank, it was a long weekend and",
			"so they got some plywood and some screens and keyboards or whatever, and they put up",
			"a fake ATM machine outside of a bank and they put a sign on it that said oh, you",
			"know, partner does under construction And so then, what would happen is, people",
			"would come up to it. They would think it was a real ATM machine, they would put",
			"their card in that would say type in your PIN and they would type in their pin and",
			"then it would wait a second and it would say oh, network down try again later. Now",
			"really what was happening is the machine was just recording their card details and",
			"their PIN number. Exactly like a phishing site and it&#39;d trick them to putting their",
			"PIN number and then the criminals went and try to drain their accounts and since it&#39;s",
			"a long weekend, they had a few days to try and get money out before Monday and people",
			"came back to bank and realized what was going on. So I do Google searched",
			"preparing for this. Apparently, this is actually goes on to the state where people",
			"set a sort of fake ATMs at different places just you know, it&#39;s the same crime.",
			"So, it is searching that&#39;s sort of the real world analogy to the phishing e-mails",
			"and the phishing sites. Alright, so how do you avoid these? So the first thing is, if",
			"you received an e-mail or you&#39;re looking at a blog post or something where sort of,",
			"you know, content really could be from anybody, you want to suspicious of URLs in",
			"there. And in particular, if you ever get to a point where the, it&#39;s prompting you",
			"for a password, you want to think about, wait, what page is that? Is that really is",
			"that really eBay? Sometimes the URL they come up with might be www.ebay.badguy.ru.",
			"So, if you certainly look at the URL from left to right, it looks like eBay. It&#39;s",
			"only if you really look at the entire thing you could say, hey, wait a minute,",
			"that&#39;s not eBay. So scrutinizing URL is one possible thing to do And actually I",
			"will give you an example that so here in this other tab so you know [inaudible]",
			"because I may count there so when I say look at UL what I mean is. Look up here",
			"Right? I, I, I see the page down here and it&#39;s asking me for whatever but if I want",
			"to know wait, whose asking me then you could look up here. It&#39;s also the case to",
			"that because financial sites are just attacked so regularly, the browsers and",
			"the sites themselves have come up with some extra stuff with those. Firefox is",
			"putting the sort of green marking here saying hey, this is, here&#39;s a good",
			"corporate name of that and here&#39;s the country. So it gives me a little bit more",
			"visual queue like who am I talking to here. Now it&#39;s tough because like the bad",
			"guys they don&#39;t need, they just need to succeed one percent at a time and of",
			"course You could, anyone could try to pay attention by it&#39;s you know, hard every",
			"time to, to always be paying attention. So, remember nothing else, I&#39;d say,",
			"whenever you type, asked to type in a password, always pause like, wait a",
			"minute, well am I typing this too? So another thing that you can do which is",
			"even simpler is if you ever get an e-mail or something that says you need to log in",
			"to eBay right now and fix something, you just go to the browser and just don&#39;t cl",
			"ick on the link. Just go to the browser and just type in www, eBay.com and that",
			"way you&#39;re not subject to the bad guys trying to like sort of trick you like to",
			"click over to the wrong URL, alright. Right, you just type eBay it&#39;s going to go",
			"the right one so that&#39;s why [inaudible] actually because it&#39;s a very simple to",
			"follow if you&#39;re unsure. Alright so, as I, I&#39;ll scroll down in a second. The other",
			"thing I&#39;m going to talk about here is normally at the very left of URL it says",
			"HTTP but there&#39;s a variant HTTPS, the secure one And so, usually the information",
			"is sensitive in some way it&#39;s been using HTTPS and then you&#39;ll see the screen next.",
			"I&#39;ll talk about that in a sec. Alright, so actually that&#39;s one of our topic here. So,",
			"https adds some, some security features that are attractive for iii.com And",
			"actually, it does two things. To secure variant HTTPS verifies that it really is",
			"[inaudible] or whatever on the other end And there&#39;s some technical measures you",
			"can make there where [inaudible] have the file certificate and do some other",
			"paperwork so that, that can be verified for Hats. So, that&#39;s good. That helps with",
			"anti-phishing. The other thing that HTTPS does is it encrypts And so the packets",
			"that are going to be sent from my browser over to schwab.com and back and forth,",
			"whatever both ways they&#39;re in, HTTPS provide encryption. U, so, I don&#39;t think I",
			"have talked about encryption up to now But, what encryption does Is it scrambles",
			"the data And it in one end, you know what, in my browser, it&#39;s going to scramble the",
			"data and then put in on the wire And the result is if a bad guy intercepts the",
			"data, he&#39;s just going to [inaudible] them. They can&#39;t read it and they can&#39;t forget",
			"you know, put stuff into the conversation and likewise for the packets coming back",
			"with my data. So you may remember from the networking section and talk about how on",
			"Internet or WiFi, when my computer broadcasts a packet, its broadcast for",
			"everybody around me can just see it. And so and after question would be so if I&#39;m",
			"on my computer and I&#39;m going to log in t o, I&#39;m going to type my password to",
			"swipe.com, is that password just going to be visible to everybody. Can [inaudible]",
			"feed me or if they are listening and could they just see it And so the [inaudible].",
			"So, I did this an experiment actually so what I did. There&#39;s a picture of it so I",
			"went to Starbucks. There was like, and I just logged into their free Wi-Fi And so I",
			"just got my coffee here, I&#39;m sitting and then, and there must have been at least 50",
			"other people around there and like 48 of them have laptops and I&#39;m sure. Many of",
			"those, probably multiple of those laptops have some kind of malware that have broken",
			"into the laptop and was like messing around and the bad guys famously are very",
			"interested in financial sites so they might have been kind of sniff around",
			"before trying to detect a log in to [inaudible] or something. So, I, I went to",
			"Starbucks, I did this and I typed in my password and I hit return And I, like that",
			"was fine, like it didn&#39;t caused me problems. The reason is HTTPS. That if you",
			"look at the Schwab [inaudible] just small here but when I went to the Schwab page,",
			"it was an HTTPS. Connection and so that packet went on in my computer here when I",
			"typed in my password in here returned, it was being encrypted and then the packet",
			"was sent out. So, even though all the people around me, they&#39;re, you know,",
			"they&#39;re one or two. Their computers could have been intercepting with packets that I",
			"am sending and they could look at them but because they were encrypted, it would just",
			"look like yours. They could, you know, see my password is. So, in fact, I did this",
			"and. You know, it&#39;s always hard to know that you haven&#39;t been hacked but, yeah, my",
			"account still has money in it whatever, you know, technically yes, that&#39;s, that&#39;s",
			"a finding too. So, anyway, that sort of, you know, demonstrates what is, what is",
			"[inaudible] me. Why how would that help you. Another thing I should point out is",
			"if my laptop have Malware on it like somehow earlier, my machine have been",
			"compromised and the bad guy have controlled my machine, then H TTPS would",
			"not help. Right, the, the so Malware on your, if it gets on your machine, it could",
			"observe what you&#39;re typing and keep logs and send information and stuff, whatever",
			"you like, your, your [inaudible] needs to wipe the machine. But in terms of putting",
			"some packets out there, HTTPS is a good solution. Alright. So, that was the second",
			"types of attacks."
		],
		"is_youtube": false
	},
	"video_032": {
		"section": "Week 6",
		"subsection": "Computer Security",
		"unit": "Computer Security 3",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/security+1c.mp4"
		],
		"video_duration": 614,
		"speech_period": [
			4.411, 3.54, 4.109, 4.08, 6.14, 4.05, 2.87, 5.031, 6.169, 3.61, 3.991,
			4.309, 3.54, 6.541, 5.809, 4.231, 6.689, 6.261, 3.949, 3.04, 3.281, 2.869,
			5.21, 4.35, 3.47, 3.521, 4.6, 7.0, 3.071, 4.311, 5.51, 5.74, 3.28, 5.95,
			6.67, 3.95, 4.72, 4.62, 6.41, 3.09, 2.94, 3.89, 4.88, 5.87, 5.26, 4.38,
			4.74, 3.9, 2.79, 5.78, 3.57, 5.35, 5.0, 3.76, 3.57, 3.19, 6.52, 4.68,
			3.329, 5.551, 2.479, 4.591, 3.039, 4.25, 2.731, 4.85, 5.579, 5.03, 5.641,
			4.19, 4.329, 4.47, 3.78, 7.0, 7.0, 4.87, 6.701, 5.28, 4.82, 2.849, 4.32,
			4.91, 4.141, 3.829, 4.47, 4.451, 3.22, 5.729, 7.0, 5.071, 5.199, 4.22,
			5.17, 5.09, 3.78, 3.38, 3.881, 3.679, 6.47, 4.94, 3.99, 4.0, 5.04, 2.87,
			3.68, 3.621, 4.389, 4.731, 3.62, 4.709, 5.261, 4.98, 5.371, 6.321, 3.58,
			5.88, 3.85, 2.95, 5.21, 2.34, 2.82, 6.41, 4.25, 7.0, 2.25, 4.64, 5.79,
			4.6, 5.43, 4.18, 2.63, 5.8, 4.0, 3.75, 0.25
		],
		"transcript_en": [
			"So now I&#39;ll talk about this big third category so I&#39;ll just put",
			"under the term Malware. Malware just means basically, you know, software just trying",
			"to do something bad to you. So, I&#39;m lumping, I&#39;m doing this very broadly, I&#39;m",
			"lumping viruses and Trojans and worms all on this category and we&#39;ll just talk about",
			"broadly. So, the question I want you to think about is suppose a bad guy or you",
			"know, so you don&#39;t know, sends a file to you and you&#39;re going to download it on to",
			"your computer and I want to think about your, or I want to look at how you might",
			"feel about that file. So, one example is, so maybe it&#39;s just a plain text file and",
			"you double click it and its text and you look at it. Or maybe it&#39;s a JPEG file An",
			"image, a bunch of bytes get copied in the computer, you double click and you, you",
			"look at it. And I will tell you these two cases that&#39;s, that&#39;s fine. Even if it&#39;s a",
			"bad guy, the bad guy just can send you a rude picture or a bad portrait or whatever",
			"but it&#39;s just not going to compromise your machine. It&#39;s, it&#39;s just, it&#39;s passive,",
			"it&#39;s just data, you&#39;re just looking at it. So, the scary case is if the bad guys sent",
			"you a .EXE, a program. Now, .EXE is just a Windows convention for having files or",
			"programs to be named in different ways but I&#39;m just going to use EXE for sort of my",
			"[inaudible]. So the way it works is. Well, let&#39;s get to the punchline. So, the EXE",
			"file is very bad If the bad guy can. Write a program and send it to you and get you",
			"to download it on to your computer and then run it. Now, my castle model is",
			"broken. They&#39;ve gotten in the walls and they can do almost anything they want. To",
			"think about this is what supposed the bad guy was literally sitting in, in front of",
			"your computer and clicking on the hard drive and looking for stuff there, they",
			"could just, they could do something bad. So the program is actually very similar",
			"because the bad guy could write the program so that the program. Looks at your",
			"files and delete things or mails or whatever. Whatever does the bad guy wanted",
			"to do, they could just put it in the program and then they send the program to",
			"you, you double click the program and then just do whatever that guy wanted. So, that",
			"is the key bad case. A program written by the bad guy but running on your computer",
			"And so later on I&#39;ll talk about different things the bad guy might do but they&#39;re",
			"also getting back to this. The bad guy is trying to get. Their code, their bad",
			"program onto your computer and get you to run it. Or put another way, this sort of",
			"the key distinction between passive things like the text for the JPEG versus program",
			"like those, you know, those are two titles or is the active program content, that&#39;s",
			"the scary one. So obviously something with a name.EXE and Windows say, we&#39;ll okay,",
			"that&#39;s obviously a program. Unfortunately, So things like the doc, the Microsoft.DOC",
			"format Would you think that this is kind of passive? But actually there is, there",
			"are coding features in there And so, something like a .DOC can act like a",
			"program, And in one time, this is a huge source of problem if you look for the term",
			"macro virus. So, What you&#39;ll notice now is if you get a .doc and have some code in",
			"it, what most programs will do is if you double click it, it&#39;ll put on a warning",
			"that says, hey, this has code in it, are you sure you want to run it And so that&#39;s,",
			"that&#39;s getting it in this case that what has a bad guy crafted a .doc with some bad",
			"code in it and try to take advantage of you. Alright, So, I want to talk about how",
			"it is the bad guys could get their program on your computer and get you to run it. So",
			"One common technique; is called a Trojan, and this referring to the story of the",
			"Trojan War. So, idea is the bad guys has their program and it&#39;s g onna do something",
			"bad to your computer but they just disguise it. So you know a simple example",
			"of maybe they can call it, JustinBeiberJPEG.EXE. So, it&#39;s trying to",
			"look like oh, just a picture of a celebrity but really, when it&#39;s double",
			"clicked, it&#39;s a program And here I, I use .EXE but really there are, there are many",
			"different file extensions or ways that something could be disguised so it&#39;s,",
			"casually it looks like an image but really it&#39;s a program. Actually an ironically, a",
			"common way to do a Trojan is to claim to be anti-virus software. You could advert,",
			"they could advertise it or whatever, oh, here is this awesome you know, free for",
			"this week anti-virus program. And it might actually look like its anti-virus. It",
			"might put up a fake screen where it pretends to be scanning or whatever but",
			"really, it&#39;s just a Trojan and it&#39;s just doing something awful to your computer. So",
			"I guess the key thing here is to just be common sense of when a program written by",
			"someone you are not really sure who it is, you&#39;re copy it onto your computer and",
			"running it What you might do is just the name of the, the, or where it&#39;s from or",
			"who claims to write it, you just sort of Google it and just sort of be, my",
			"expectation is that if something is a Trojan and it&#39;s out there within a day,",
			"it&#39;s going to get figure out to what is going on and that sorts are [inaudible]",
			"about it. And so if I Google it and say, you know, they&#39;re complaining one another.",
			"Well, that&#39;s probably okay or obviously if you&#39;re, if you&#39;re downloading this from a",
			"well-known. You know, you got the so-called reputable site, you might feel",
			"okay about it. All righty So that&#39;s one Trojan Horse, that&#39;s one way. The",
			"executable can get in there. There&#39;s another way. That is a little more",
			"complicated and a little more scary. It was called the vulnerability. So, supposed",
			"I mean use the Flash, the Adobe Flash format. So, example is actually in the",
			"last year that&#39;s been a, it turns that&#39;s [inaudible] problems. So, suppose there is",
			"a bug in the Flash Display program. So, Flash is an animation format and it&#39;s",
			"called [inaudible] display Flash animations. And there might be a bug in",
			"the Flash Animation Program. So, that if the bad guy craft a very specific sort of",
			"animation. The animation will essentially. Crash or corrupt the display program in",
			"such a way that it opens up the computer so it&#39;s so the bad guy can get in. So it&#39;s",
			"a very, tragically bad class of in the Flash animation The Flash animation",
			"program. So, what&#39;s scary about this case is all the bad guy needs to do is craft",
			"this sort of attack animation that&#39;s going to take advantage of this vulnerability",
			"and then just spread around. Maybe they could e-mail it to like you know, a",
			"million people specially like spam or they could put it on some website somewhere and",
			"then put out a lot of on Twitter, whatever a lot of sort of provocative like oh hey,",
			"you gotta look at this type messages to sort of drive people to try and look at",
			"the site and if they just look at the site. And there, they have the a",
			"vulnerable software in their computer and just looking at the page might be enough",
			"to get the Malware onto our computer. So I regard this is the most scary case because",
			"you know as a user you don&#39;t have to get visiting sites but geez, that&#39;s something",
			"we do all the time. So it doesn&#39;t take much so that&#39;s that bad news. The good",
			"news is that. The, by far, the most common way that this is exploited by the bad guys",
			"is there&#39;s some vulnerability in Flash software and Adobe figures this out and",
			"within, we say a month, they update a new version that fixes it. And then it might",
			"be six months or a year later, the most common attacks out there are dealing with",
			"vulnerability actually in some cases, it hasn&#39;t been fixed for years. So Users who",
			"have up to date software are immune But to the bad guys, the way that is work out as",
			"practical matter, is there just enough systems out there which are running",
			"software which is just been out of date for years and so they still have this",
			"vulnerability and so then the bad guys get on to that system. Again, it has a quality",
			"that maybe eight percent systems there are, are fixed but some bad guys twenty",
			"percent like hey, that&#39;s plenty. So, the, the cure for, for this attack actually is",
			"pretty simple which is you want to have. Your Internet facing software, you really",
			"want to have it auto update. Just have it to be on the most current version. All the",
			"browser vendors have figured this out so they intend to default towards. Just",
			"updating automatically and so the, it&#39;s the things on your computer which are",
			"interacting with Internet directly are the ones that are subject to this kind of",
			"vulnerability so that&#39;s the case where you, where you want to, you want to take",
			"care about. Also, this is the side that shows how, I don&#39;t want to pick on Adobe",
			"here but just it turns out we&#39;ve had a bad experience with them just a year or so.",
			"The show is having a propriety format controlled by this one company is not a",
			"very good architecture because it meant that if you are on a Linux machine or Mac",
			"or something where Adobe, well you are dependent on how motivated on top of it",
			"was Adobe to push out effects on your platform and if Adobe was a little bit.",
			"That&#39;s awkward [laugh] to have some other vendor be kind of be controlling the",
			"[inaudible]. So I think I&#39;m interested for This is maybe one more reason HTML5 is",
			"actually going to take over. Okay. So, you know I&#39;ve just talked about a lot of",
			"vulnerabilities. I think that creates this atmosphere like, you know nothing is safe",
			"and really it&#39;s not true. I surf the Internet all the time like everybody else.",
			"I don&#39;t have any, any virus software on my, on my machine. I haven&#39;t had any",
			"problems. It does help that I don&#39;t use my software and my software is very big",
			"target so, maybe that will help a little bit. But I don&#39;t think weird,",
			"extraordinary measures are required to use the Internet, that&#39;s pretty much",
			"[inaudible]. So, I&#39;m just going to recap what I think are the things are important",
			"to get right. Okay, number one, we had the password attack you just need to not have",
			"a lame password. I don&#39;t think you have to have super awesome mega complicated",
			"password. Just not lame and overuse password. We have the phishing attack",
			"where you&#39;re going to get an e-mail or something that&#39;s going to try to trick you",
			"to log in. On this case you want to look at the URL where you&#39;re trying to log in",
			"so be careful or if you want to be very simple you can just type [inaudible] or",
			"whatever yourself in the browser so then you&#39;re, you&#39;re, you should be getting the",
			"right time. Finally, we had the, the Malware attack case where it&#39;s taking",
			"advantage of a bug in the software in the computer and really, all you need to do or",
			"the, the, the simplest case is just to make sure that you&#39;re an Internet phasing",
			"software is set to be to auto update. So the bug fixes, you get on your computer",
			"and so then like months later, when the bad guys try to use it like, you&#39;re",
			"already protected. That&#39;s all there is to it. All right. So, let&#39;s stay safe out",
			"there."
		],
		"is_youtube": false
	},
	"video_033": {
		"section": "Week 6",
		"subsection": "Conclusions",
		"unit": "Final Conclusions",
		"video_sources": [
			"https://s3-us-west-1.amazonaws.com/prod-edx/CS101/Videos/6+-+5+-+Conclusions+(14+mins).mp4"
		],
		"video_duration": 871,
		"speech_period": [
			5.52, 3.8, 5.63, 3.429, 4.541, 4.479, 4.901, 3.389, 4.3, 7.0, 6.46, 4.509,
			3.851, 4.58, 4.92, 4.18, 3.88, 2.91, 4.13, 4.32, 3.19, 5.07, 5.479, 4.621,
			5.049, 5.241, 6.829, 2.841, 5.411, 5.5, 5.48, 5.369, 5.801, 3.92, 5.12,
			3.99, 4.88, 2.899, 4.521, 3.649, 3.631, 5.47, 4.42, 6.72, 4.179, 5.061,
			4.98, 3.72, 3.86, 4.53, 4.91, 5.159, 3.92, 4.64, 5.131, 4.34, 3.16, 4.19,
			5.89, 4.17, 5.44, 5.63, 3.5, 2.77, 4.04, 5.87, 4.12, 3.66, 5.22, 5.25,
			3.52, 3.83, 5.01, 3.69, 2.3, 4.74, 3.59, 4.93, 4.15, 4.74, 4.92, 3.56,
			2.83, 4.59, 3.3, 3.39, 7.0, 3.41, 5.19, 4.77, 4.85, 3.3, 4.35, 6.26, 3.04,
			4.05, 3.51, 5.7, 4.66, 3.15, 4.03, 6.03, 4.13, 4.88, 4.49, 7.0, 3.82,
			4.78, 4.39, 4.48, 6.81, 2.29, 2.95, 2.19, 3.75, 3.24, 3.411, 3.96, 4.32,
			4.82, 3.88, 3.42, 7.0, 5.75, 4.32, 2.83, 4.95, 4.86, 4.72, 3.76, 3.53,
			2.46, 4.79, 4.13, 4.4, 2.66, 4.62, 2.71, 4.6, 5.47, 5.83, 7.0, 5.18, 5.18,
			3.96, 6.07, 4.09, 5.18, 4.44, 3.3, 3.43, 3.94, 4.66, 3.29, 3.51, 3.62,
			5.3, 3.1, 3.84, 5.91, 4.96, 7.0, 2.98, 4.3, 7.0, 3.59, 4.84, 2.94, 4.37,
			3.98, 3.99, 6.07, 4.68, 2.89, 6.41, 6.32, 4.32, 4.83, 2.21, 4.75, 5.39,
			4.799, 4.021, 6.88, 3.06, 4.13, 4.62, 3.72, 4.509, 5.021, 3.99, 4.32,
			4.26, 1.639
		],
		"transcript_en": [
			"Alright, welcome to the last CS101 Lecture Session. There&#39;s not going to be exercises",
			"for this section. I&#39;m just going to try in, I don&#39;t know, summarize what it all",
			"means and talk about some next steps. So, for CS101, I took the strategy of just",
			"jumping right in with code really and we got into the detail of codes and played",
			"with the code and my plan was that as you played with code and have bugs and",
			"experimented that you would gradually just come to see what some of the features are",
			"of the computer. So, I hope that works. Today I&#39;m going to step back and talk a",
			"little bit about what it means and [inaudible] and things so first thing I",
			"want to talk about is this word algorithm. I may have used here and there. Algorithm",
			"actually it&#39;s named after a Baghdad astronomer Al-Khwarizmi. Some of his work",
			"ends up in the word algebra so he&#39;s rather influential. So the given algorithm Refers",
			"to the steps to take to get something done. So, not just saying well I want this",
			"script to be you know blue. That&#39;s just saying what the goal is. The algorithm is",
			"really figuring out something to describe one step sort of. Now it&#39;s not the same as",
			"syntax. Syntax is really a computer language feature so algorithms I would say",
			"capture really human, human creativity of how I might going to solve something And",
			"really, for CS101, very often for the exercises are in lecture examples. I&#39;ve",
			"been describing an algorithm. Oh, take the picks and do this and do that, whatever",
			"describing the, describe is going to be And then I&#39;ve left it to you to, to then",
			"phrase into code and that, that&#39;s just a totally classic computer system way to",
			"work. You have human, you have the idea, unless you get phrased in the code. I&#39;ll",
			"have other bunch of examples sort of. Hit that pattern. So this is an example, I",
			"won&#39;t go to the details exactly but here&#39;s the code from the Monkey Moon example and",
			"so we had the strategy of like computing average and then trying and find the blue",
			"background behind the monkey and then copy the red, green, and blue pixels that is",
			"over. So such thin g is that, that&#39;s the idea which was pretty complicated and you",
			"know effective and then here it is expressed into code And party, I mean,",
			"it&#39;s a little bit of amazing that we did and my code is fairly complicated, right?",
			"So, at least a couple of weeks ago, you didn&#39;t, you didn&#39;t understand this so it",
			"also shows the gap where we had this plan, what we&#39;re going to do but then look at",
			"the individual steps in the code. Pixel dot got red. You know, average times",
			"you&#39;re pointing on too. The building blocks that the computer has are really",
			"pretty simple and I just get that. There&#39;s no insight, it&#39;s just mechanical and then",
			"in a way, they get what a computer programmer does. I&#39;ve taken an idea that&#39;s",
			"interesting and valuable and sort of phrase it down to the computer, break it",
			"down into the little mechanical steps that the computer can do to sort of build up",
			"the program that we like one And that&#39;s. That&#39;s a key example. That is what, that&#39;s",
			"what the modern world looks like in terms of the computers, computers doing some",
			"usual stuff. So, as long as I was talking about code, you know, having an algorithm",
			"for phrasing them to code, I also thought I could revisit the word bug. I&#39;m sure",
			"this is a word you&#39;ve all heard at one time or another. Here&#39;s a little example",
			"of a bug where I, I have to [inaudible] over the image. And then here I&#39;ve",
			"mentioned I&#39;m trying to change the image to gray. So, I could help the line of",
			"average equal pixels to get red plus get green plus get blue/3. The problem here",
			"This code does something. It just doesn&#39;t compute the averages I intended. The",
			"problem here is that the slash three only applies to get blue. We would need to put",
			"[inaudible] in here to make it work right. So the results is that was [inaudible] and",
			"so the numbers going to come up like 450, just way too big and so setting it in to",
			"the image makes the image come out almost near white. This is just an example of a",
			"bug where there was intent, well here&#39;s the other thing that I might want to do.",
			"But the code I typed in Said something else. It, it said something but it had",
			"steps the computer could follow but it wasn&#39;t the ones I intended. And that&#39;s.",
			"That&#39;s very often what bugs looks like and I&#39;m sure you&#39;ve have run in the bugs all",
			"the time. So there&#39;s a little insight of how, where the gap was between the intent",
			"of the programmer and running out the steps for the, the computer actually do so",
			"this sort connection I&#39;m talking about is at the very start of the class I made this",
			"kind of a provocative claim well you know computer is to powerful plus two. Computer",
			"is so stupid and limited and I stand out of that I think because you have seen",
			"[inaudible] limitations and yet. That was very useful we have e-mail and the",
			"Internet and computer games. All of these are phenomenally valuable awesome useful",
			"stuff so how that works? And I guess ultimately the answer is humans, That a",
			"human programmer had a creative, an idea of like here&#39;s what I&#39;m going to do and",
			"this is going to be great and that&#39;s really where, that&#39;s what computer",
			"programming are, that&#39;s what computer programmers are and that&#39;s where computer",
			"science is about and then it gets broken under these steps with the computer can",
			"actually do it. So I just have some, some examples here. Grab some of theses from",
			"Stanford so these are examples where you have the computer installing these",
			"mechanical stuff between something [inaudible] it&#39;s kind of professional. So",
			"Daphne [inaudible] at Stanford has this awesome research on grading cancer cells.",
			"So basically, you have a [inaudible] dish with some sample cells in it. And you show",
			"a computer an image of it and then the computer is going to eventually, she",
			"trains the computer to do great, so something that normal humans do that&#39;s",
			"actually pretty difficult and humans have a tough time doing a good job out of it.",
			"And so, but when I get that, this looks like a little bit like our image code.",
			"It&#39;s not that you just say that the computer, hey, I want you to grade this.",
			"Really, you know, the computer just has. Values, you know, bunch of numbers and can",
			"do less than and gr eater than, you know, loops are those building blocks and so the",
			"[inaudible] ingenuity to phrase up an algorithm for the computer using it&#39;s",
			"simple [inaudible] to do something profoundly useful like [inaudible]. I&#39;ll,",
			"I&#39;m just putting links here. If you want to visit the document then you could try",
			"this up. Another example of this just sort of amazing is there&#39;s a treatment for",
			"certain forms of deafness called the cochlear implant and this is a little bit",
			"of controversy about the deaf community about if this is a good idea or not but it",
			"is amazing. Other works is there is a microphone that takes in sounds and the",
			"sound waive is kind of like we saw in the analog and digital lectures are processed",
			"by a computer and eventually ultimately ending up going into wires that go",
			"directly in to the, the sense organ in the head and so. It&#39;s, it&#39;s possible to give,",
			"not exactly hearing but sort of hearing for someone who is potentially completely",
			"deaf before. So there&#39;s, I gotta say, a fairly amazing video Youtube video clip",
			"here of the baby hearing their mother&#39;s voice for the first time. And so it&#39;s,",
			"it&#39;s what&#39;s saying, future is about that. I gotta say, if I was an engineer who had",
			"anything to do with this project, I would very proud. Like that is a, it&#39;s such a",
			"vivid example of the technology really changing someone&#39;s life Last example.",
			"Also, a part from Stanford is this idea of self-driving car. So this involves, the",
			"car has all sorts of cameras and range finders on it and it&#39;s sort of, I&#39;ll put",
			"it in quote. It&#39;s Kind of seeing surrounding and trying to understand what",
			"the obstacles and pedestrians, whatever are and then making decision in real time",
			"like it has to decide right now what to do. That&#39;s profoundly a hard problem. But",
			"so Sebastian&#39;s run at Stanford and now we can do this in Google he has made a lot of",
			"partners with this and I gotta say, I&#39;m sort of a national optimist but I think",
			"this is all going to happen. I think it&#39;s going to happen because although the",
			"technological challenges are enormous, ultimately it will sa ve time And as",
			"society becomes more wealthy, time is just something everyone values. I think that&#39;s",
			"going to provide a lot of pressure to make, make this work so I&#39;ll be, I&#39;ll be",
			"interested to deliver long enough to see that working. All right So I want to talk",
			"a little bit about you know post C101, things you might want to think about. So",
			"Most people are not going to be computer programmers, That&#39;s fun we need more but",
			"life certainly is not for everyone. So I think there is kind of a skill to just",
			"working with computers. Computers obviously have the sort of mechanical,",
			"slightly fragile and I think that just have to be just so way that are. And my",
			"hope is that, with CS101, you&#39;ve seen how that is at times and in different ways",
			"that you, it&#39;s [inaudible] you a little bit of confidence and a little bit of",
			"patience. I think sometimes, people [inaudible] something in the computer and",
			"I click the button and it doesn&#39;t do what it&#39;s supposed to. And there&#39;s, there&#39;s",
			"sort of stuck of well what I do know. And I think they can get past that stuff",
			"whereas now, I think you&#39;ve seen the, the kind of the mechanical quality of the",
			"computer. My hope is to have a little patience. So, okay, well, we&#39;re not doing",
			"what it&#39;s supposed to, let me read the docs again, there&#39;s probably some little.",
			"Dumb thing right I&#39;m missing semi colon or whatever. Some little detail that computer",
			"is going to get trip by and so I think there is a skill to no getting derailed",
			"when a computer messes up like that and I&#39;d like to thank that CS1 on help. I&#39;ll",
			"give you what skill a little bit. It&#39;s certainly a very handy life skill since",
			"computers are everywhere. So finally let me list of. Classes where thing, things",
			"you might want to study after CS101, I have bad news about this. There is not a",
			"class which I think is really a good fit to just be right after CS101 there is just",
			"one that I know of so I&#39;m not going to recommend the specific one but there&#39;s a",
			"lot of research and activity in that area. Someday day maybe I&#39;ll create one but I&#39;m",
			"done yeah. So I&#39;m just going to mention things that you could look at sort of",
			"Poseus point of view. So one thing I&#39;ll mention is spread sheet. Spreadsheets are",
			"very commonly used to organize data or do computations or whatever; you probably,",
			"probably heard them. So the next time you see a problem where someone says oh hey,",
			"we could do a spreadsheet for this I&#39;d say, you might want you know, you could",
			"consider. You might want to take a shot of that. The sort of &quot;programming in",
			"spreadsheets&quot; is not that different from what we&#39;ve done. Microsoft Excel is a",
			"super popular spreadsheet but it&#39;s not free. The Google Docs spreadsheet is free",
			"and actually it uses JavaScript which is the language we&#39;ve been using so. Is just",
			"so I guess have a question of, of confidence of being open like, be open to",
			"reading the docs and reading some examples I&#39;m trying to use them specially I think",
			"would not be much a lot of them from what we&#39;ve done and they&#39;re very common. Very",
			"commonly used for, for problems, for problems like that. So another next step",
			"is to take a sort of your general college introduction to [inaudible] course. A lot",
			"of colleges just have this and I think some high schools to. So Cs101 is not a",
			"general programming course. I had the analogy somewhere that it&#39;s as if there is",
			"this island and it has. Hundred miles of trails on it which represent all the",
			"different types of program you might want to do and a way when a time with CS101 is",
			"I&#39;ve, I have very carefully chosen fifteen miles of trail. So, I&#39;ve showed you, you",
			"have seen real programming issues. You definitely have the sense of what bugs",
			"are, what those are and those are absolutely vital core programming and of",
			"course, you, you have done them [inaudible]. However There is the 85 other",
			"miles all sorts of stuff. I didn&#39;t talk about it. I sort of constructed my",
			"examples and the way the lectures work to just carefully use the things I talked",
			"about and not trying to get distracted by all of the stuff I didn&#39;t talked about. So",
			"you just know. That&#39;s kind of CS101 leave you versus the regular program and c",
			"ourse. In a way you&#39;ve been a nice head start. You&#39;ve seen all these computer",
			"stuff. You have seen loops or whatever setting. You have got a bit of a tail end.",
			"Going to it, general programming course You would expect it to move faster than",
			"CS101. I was pretty, I tried to keep CS101 at a pretty measured hay anybody can do",
			"this. I don&#39;t want to be able to, stressful experience. So you, you would",
			"expect a bump up in the speed but certainly something I&#39;m sure many of you",
			"would enjoy doing. So something about I&#39;m just going to mention a couple other, a",
			"sort of specific type of programming that people talked about. So HTML five or first",
			"to web page programming that&#39;s done with HTML, Javascript and CSS. We&#39;ve done",
			"JavaScript in CS101 but I gotta tell you, the JavaScript for web pages is going to",
			"look more complicated, have more going out. We, we do this very stripped down",
			"very focused type of JavaScript. So, for lot of these kind of topics that I",
			"mentioned here. A, the [inaudible] college students when we think about it is that",
			"you take the General Programming course to just sort of get a general loop statement",
			"sort of experience to have a sort of generic ability and then you make the",
			"specialized and learn about web pages or something. It happens when programming is",
			"not that hard and so it&#39;s possible to just to skip in the web portal in like just",
			"have a HTML five or whatever. Of course and just sort of just learn the Javascript",
			"in the contents to that. So. Other than that, I&#39;ve gotten questions about sort of",
			"various areas and I, I, I find it hard to identify anyone in particular I say, yeah,",
			"there&#39;s phone programming, game programming, finance programming and",
			"science programming, that, that, that. What I can tell you is. It&#39;s a huge field.",
			"There&#39;s at you know, science, air dynamics, finance, I mean, any, anything",
			"you could mention. There&#39;s, there&#39;s computers going on and generally, it&#39;s",
			"regard to there&#39;s tends to be a shortage of people and so if you are interested",
			"about computer, you know, if you learn about computers and y ou want to work",
			"with, anyways, there&#39;s a good chance that you could. There is demand for people who",
			"know that stuff. So I guess I have to sort of summarize the, the course here so I",
			"might claim at the very start of the class was the CS1, CS101 teaches the essential",
			"qualities of computers by playing with code. You&#39;ve certainly played with a lot",
			"of code at this point so I hope that sort of holds up my fear Is that people go",
			"through life. They use computers all the time but they see the computers are sort",
			"of opaque and not comprehensive but something they could never understand and",
			"I hope I hope I have put that down. That you can sort of see through the other side",
			"and appreciate oh The computer is working this way and then I can know this sort of",
			"thing, Whatever so just sort of pretty in context of how computers work in your",
			"life. So as I said before I also hope that, with that knowledge CS101 gives",
			"everyone a little bit of confidence and maybe a little bit of patients to work",
			"with their computers and kind of get them, get computers to work for them. They are,",
			"as what I&#39;ve said they are stupid mechanical but. They&#39;re also incredible",
			"useful. Alright, take care."
		],
		"is_youtube": false
	}
}
