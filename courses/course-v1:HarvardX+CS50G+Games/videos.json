{
	"video_001": {
		"section": "CS50G 2020",
		"subsection": "Introduction",
		"unit": "Introduction",
		"video_sources": [
			"https://edx-video.net/aa99908d-5ce0-4edf-83cc-2b57212d6956-mp4_720p.mp4",
			"https://edx-video.net/aa99908d-5ce0-4edf-83cc-2b57212d6956.m3u8"
		],
		"video_duration": 56,
		"speech_period": [
			0.342, 0.708, 2.37, 3.61, 4.67, 2.73, 2.46, 3.33, 3.43, 2.36, 2.88, 3.9,
			2.449, 1.791, 3.62, 2.88, 2.07, 2.97, 2.44, 2.48, 2.387, 0.5
		],
		"transcript_en": [
			"",
			"COLTON OGDEN: Hi.",
			"My name is Colton Ogden, and I am the course instructor",
			"for GD50, which is CS50's Introduction to Game Development.",
			"CS50 is to game programming what CS50 is to general-purpose programming",
			"and problem solving, ultimately a jumping-off point for students",
			"that might have a little bit of programming experience,",
			"but who haven't necessarily gotten their hands dirty with game programming yet.",
			"GD50 adopts a case study style approach whereby week by week,",
			"we'll look at a specific game, and we'll analyze it,",
			"figuring out what the parts do and how they form a playable whole.",
			"We'll look at games like Pong, Breakout, Super Mario Bros., Legend",
			"of Zelda, Portal, and many more.",
			"For the first three quarters of the course,",
			"students will use Lua and LOVE 2D, a 2D game development framework,",
			"and then transition in the latter quarter to C# in Unity,",
			"a very popular modern game engine.",
			"Ultimately, lots of programming, lots of ideas, and lots of fun",
			"await students interested in the course.",
			"My name is Colton Ogden, and this is GD50.",
			"[MUSIC PLAYING]",
			""
		],
		"is_youtube": false
	},
	"video_002": {
		"section": "CS50G 2020",
		"subsection": "Pong",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000700/HarvardXCS50G-V000700.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000700_DTH.mp4"
		],
		"video_duration": 5822,
		"speech_period": [
			1.964, 14.648, 0.958, 2.77, 2.48, 2.34, 3.0, 1.89, 2.639, 1.411, 1.624,
			3.151, 1.375, 1.98, 3.857, 2.833, 3.42, 3.24, 2.31, 3.66, 3.4, 2.916,
			2.474, 2.07, 2.94, 1.86, 2.49, 2.04, 1.86, 1.708, 1.802, 2.1, 3.099,
			1.291, 1.85, 1.92, 2.61, 2.624, 2.596, 2.4, 2.37, 1.35, 3.24, 3.61, 2.94,
			3.291, 2.999, 2.5, 3.14, 1.29, 2.55, 2.14, 2.502, 1.958, 4.03, 1.54, 2.74,
			3.12, 1.61, 4.39, 6.2, 4.0, 3.0, 4.2, 1.89, 2.55, 2.26, 2.447, 1.833,
			4.11, 2.25, 4.207, 2.333, 1.749, 2.001, 1.83, 1.26, 3.03, 2.76, 3.42,
			3.48, 4.11, 3.15, 4.334, 2.666, 3.35, 3.0, 2.94, 3.0, 2.219, 2.541, 2.86,
			2.699, 4.498, 2.583, 2.34, 1.74, 3.54, 6.3, 2.04, 3.9, 1.38, 3.757, 2.333,
			1.96, 2.87, 2.61, 3.06, 1.62, 4.23, 2.237, 2.833, 3.29, 4.744, 1.916,
			1.29, 3.699, 3.291, 2.875, 2.375, 3.18, 4.56, 3.51, 3.22, 2.96, 2.88,
			2.79, 3.24, 2.91, 2.13, 2.709, 1.041, 3.57, 5.22, 3.93, 1.44, 2.249,
			3.181, 4.05, 3.624, 2.916, 1.38, 1.6, 2.1, 2.63, 2.7, 2.57, 2.11, 3.78,
			5.16, 4.23, 3.697, 1.583, 3.3, 0.72, 2.58, 1.2, 4.23, 3.78, 2.766, 2.124,
			2.71, 2.21, 2.67, 3.21, 5.88, 1.59, 2.76, 3.48, 5.31, 4.23, 2.46, 5.19,
			3.54, 3.37, 4.17, 1.56, 2.1, 3.26, 2.31, 2.67, 2.67, 4.05, 3.39, 4.44,
			4.23, 2.97, 2.82, 2.31, 2.22, 3.84, 4.8, 4.83, 0.93, 3.16, 4.522, 1.708,
			2.041, 3.629, 4.15, 3.032, 2.208, 0.97, 0.9, 2.36, 3.09, 4.02, 2.55, 1.95,
			2.95, 3.352, 2.458, 1.75, 4.99, 1.37, 4.41, 1.65, 2.63, 2.74, 2.676,
			2.124, 3.041, 1.459, 3.12, 2.82, 1.95, 1.26, 2.52, 3.287, 2.083, 2.7,
			4.17, 4.71, 2.58, 4.229, 2.791, 4.62, 4.29, 1.18, 2.45, 4.46, 1.9, 2.34,
			2.37, 2.82, 3.06, 4.44, 2.49, 2.76, 2.58, 1.999, 3.041, 3.09, 2.88, 4.71,
			3.42, 0.99, 1.86, 2.58, 4.56, 3.42, 2.73, 2.01, 3.46, 3.02, 4.44, 2.95,
			2.72, 2.4, 3.06, 3.75, 4.65, 5.22, 1.41, 6.6, 1.75, 3.74, 6.72, 3.989,
			1.291, 3.03, 3.3, 4.29, 1.459, 1.749, 2.442, 2.93, 2.61, 3.93, 4.77, 1.56,
			1.958, 2.572, 2.68, 5.09, 2.61, 2.14, 3.11, 3.27, 4.95, 3.42, 0.53, 3.18,
			3.07, 2.64, 2.15, 4.19, 2.297, 1.833, 3.27, 3.58, 2.15, 2.444, 2.166, 4.2,
			4.26, 4.89, 3.99, 1.65, 3.09, 2.52, 3.63, 4.62, 1.17, 2.37, 2.4, 4.876,
			2.624, 1.791, 2.429, 3.26, 6.699, 2.291, 2.13, 3.96, 4.71, 2.61, 2.22,
			4.12, 5.77, 3.64, 3.21, 2.64, 2.1, 1.833, 2.187, 3.54, 1.5, 3.47, 4.82,
			4.85, 2.199, 4.071, 3.9, 1.65, 3.06, 3.64, 0.5, 3.782, 1.708, 2.32, 1.61,
			3.57, 3.33, 3.96, 2.55, 3.11, 3.73, 3.13, 2.0, 3.69, 4.026, 2.874, 1.81,
			2.458, 1.152, 5.05, 1.8, 3.42, 2.73, 3.06, 4.11, 3.66, 4.21, 4.32, 2.69,
			3.13, 2.33, 3.15, 3.6, 3.73, 3.02, 3.23, 4.24, 3.42, 2.88, 2.176, 1.874,
			5.34, 2.73, 4.83, 1.74, 3.662, 2.458, 4.36, 1.71, 1.85, 2.29, 3.1, 4.02,
			3.46, 3.83, 1.5, 2.04, 3.25, 2.58, 2.0, 3.0, 3.22, 3.29, 3.07, 1.52, 2.79,
			3.06, 4.22, 3.902, 1.958, 2.041, 3.519, 3.49, 2.62, 2.11, 2.19, 3.08,
			4.029, 1.791, 1.65, 6.51, 3.8, 5.48, 3.58, 2.64, 2.56, 3.47, 1.75, 5.58,
			2.52, 2.6, 1.89, 2.42, 4.33, 6.0, 5.01, 3.72, 2.02, 4.82, 4.71, 2.64,
			4.59, 3.57, 3.27, 4.01, 2.86, 3.87, 3.9, 2.945, 5.065, 4.44, 4.47, 2.1,
			1.53, 4.5, 2.389, 1.541, 2.79, 3.93, 3.6, 3.67, 4.69, 2.68, 3.45, 2.97,
			3.936, 2.124, 1.81, 5.75, 1.95, 4.3, 3.14, 3.24, 1.32, 3.87, 5.16, 4.31,
			4.76, 1.64, 4.11, 0.5, 1.42, 4.08, 2.25, 3.3, 1.83, 4.04, 1.72, 3.06,
			2.959, 1.291, 3.46, 4.83, 5.65, 4.37, 2.34, 3.48, 4.32, 2.0, 2.98, 4.53,
			4.56, 2.61, 5.28, 4.11, 3.96, 0.67, 2.81, 5.01, 5.25, 2.626, 2.624, 2.932,
			2.708, 2.102, 1.708, 3.51, 4.08, 3.52, 3.47, 2.94, 1.87, 2.82, 3.56, 3.84,
			1.539, 2.041, 4.11, 4.46, 1.38, 1.5, 5.91, 4.2, 3.12, 0.9, 3.41, 3.91,
			4.98, 2.49, 2.13, 3.54, 3.34, 5.33, 2.502, 1.458, 3.0, 8.16, 4.677, 1.833,
			1.65, 3.78, 2.61, 2.61, 3.51, 3.6, 5.13, 4.83, 3.99, 3.03, 1.96, 3.78,
			1.62, 2.6, 2.11, 3.012, 2.458, 3.7, 1.38, 3.15, 2.01, 2.22, 2.25, 1.916,
			2.614, 4.96, 3.75, 4.25, 3.109, 2.291, 2.5, 3.32, 2.147, 2.833, 1.541,
			2.149, 5.23, 0.5, 1.78, 0.9, 4.247, 2.083, 2.882, 2.458, 3.725, 2.125,
			2.34, 3.42, 3.69, 2.287, 3.083, 4.74, 2.56, 3.05, 4.08, 1.56, 2.76, 4.21,
			3.62, 3.019, 2.041, 1.96, 3.39, 2.43, 2.94, 2.01, 4.18, 5.45, 1.95, 1.92,
			5.37, 2.55, 3.66, 1.53, 2.43, 5.34, 3.517, 2.333, 2.93, 3.25, 1.17, 3.63,
			3.03, 3.12, 1.92, 2.457, 2.583, 2.37, 2.61, 3.9, 3.51, 4.02, 2.54, 3.25,
			4.2, 1.82, 2.41, 4.68, 3.27, 2.22, 1.86, 3.02, 3.61, 5.38, 1.41, 3.474,
			1.916, 1.74, 1.889, 3.011, 4.39, 1.69, 2.799, 2.541, 5.67, 5.43, 2.94,
			5.245, 3.125, 2.52, 2.01, 2.19, 1.74, 3.75, 2.3, 1.75, 5.25, 3.22, 4.74,
			6.37, 3.73, 3.84, 3.42, 3.18, 2.99, 2.26, 1.32, 3.45, 5.37, 4.36, 1.634,
			2.916, 2.694, 2.166, 2.77, 4.46, 3.66, 1.612, 1.958, 2.07, 2.52, 3.09,
			2.37, 2.16, 2.16, 3.54, 3.48, 3.48, 1.18, 2.406, 2.874, 1.62, 1.53, 3.11,
			3.4, 4.37, 3.63, 4.05, 3.57, 3.39, 3.27, 2.94, 5.3, 6.7, 2.845, 2.375,
			1.749, 3.308, 2.083, 5.16, 2.92, 3.2, 2.1, 3.22, 4.805, 1.875, 3.66, 3.3,
			2.45, 5.06, 2.34, 2.206, 3.814, 2.09, 2.86, 5.73, 4.08, 3.399, 1.791,
			4.627, 2.34, 2.333, 3.93, 6.06, 1.56, 3.0, 2.38, 3.5, 2.19, 3.54, 2.256,
			2.374, 3.17, 3.27, 4.74, 4.54, 2.12, 3.6, 2.572, 1.958, 1.89, 2.37, 4.772,
			2.708, 2.9, 3.57, 1.2, 2.28, 3.287, 2.833, 2.82, 1.51, 1.1, 1.958, 3.352,
			4.47, 2.79, 2.954, 3.166, 1.26, 5.82, 3.54, 2.08, 2.66, 3.051, 1.749,
			3.002, 1.958, 3.07, 1.25, 2.416, 2.104, 2.61, 3.73, 3.43, 2.5, 1.77, 4.26,
			4.59, 2.59, 2.39, 4.08, 2.97, 2.629, 3.291, 4.37, 1.47, 3.24, 4.08, 2.82,
			3.96, 2.79, 2.67, 3.96, 3.3, 2.91, 7.37, 1.39, 4.68, 2.37, 3.45, 8.55,
			1.68, 4.11, 3.09, 3.18, 3.897, 2.583, 3.39, 2.29, 3.39, 2.43, 2.64, 4.62,
			3.0, 3.11, 2.84, 3.41, 5.13, 4.5, 1.8, 4.02, 1.5, 3.96, 4.35, 2.1, 1.997,
			2.333, 1.28, 2.7, 2.43, 2.647, 2.833, 1.12, 2.87, 2.6, 3.66, 4.14, 2.34,
			1.65, 4.05, 2.14, 1.28, 1.03, 3.17, 7.2, 0.91, 1.067, 1.833, 4.17, 3.51,
			2.83, 1.49, 2.13, 4.71, 5.76, 2.49, 3.07, 3.626, 2.874, 2.61, 2.844,
			2.916, 2.46, 2.25, 3.33, 4.38, 4.11, 2.37, 5.56, 2.99, 1.5, 3.48, 2.62,
			3.77, 1.5, 2.58, 2.43, 3.681, 3.249, 1.75, 2.81, 1.08, 3.12, 2.61, 4.03,
			3.23, 4.377, 1.833, 4.92, 2.61, 2.85, 4.067, 2.833, 3.72, 3.27, 3.03,
			1.215, 2.515, 1.995, 2.685, 2.21, 6.391, 2.749, 3.96, 4.32, 5.67, 6.22,
			6.02, 3.28, 4.05, 1.65, 2.91, 4.59, 4.29, 3.24, 5.1, 3.84, 1.19, 5.189,
			2.291, 2.29, 2.984, 2.886, 3.54, 1.89, 4.59, 1.83, 2.85, 2.88, 2.25, 3.03,
			3.46, 3.71, 1.59, 4.38, 2.73, 1.68, 2.8, 3.92, 5.28, 1.4, 1.06, 1.18,
			2.69, 4.38, 0.68, 1.24, 1.74, 2.64, 3.84, 3.45, 4.98, 2.64, 3.54, 1.59,
			3.49, 1.43, 2.25, 1.98, 3.45, 3.99, 2.88, 2.31, 3.12, 4.38, 1.74, 5.49,
			3.99, 3.51, 3.81, 3.24, 2.37, 3.54, 2.025, 2.745, 2.01, 3.9, 3.6, 4.05,
			2.68, 4.61, 4.38, 2.19, 3.06, 4.34, 3.25, 3.19, 2.45, 1.59, 2.922, 2.958,
			1.8, 6.92, 2.7, 6.81, 4.71, 4.47, 2.19, 2.91, 2.9, 2.395, 1.785, 3.9,
			5.94, 0.95, 2.69, 4.65, 2.33, 5.92, 2.505, 1.625, 3.21, 2.61, 3.06, 6.13,
			2.78, 4.95, 2.25, 2.672, 2.708, 3.32, 3.84, 1.91, 2.77, 2.437, 2.333,
			3.81, 4.02, 3.57, 2.865, 2.625, 2.34, 3.81, 2.64, 2.85, 3.84, 2.79, 2.25,
			3.3, 4.56, 2.71, 0.65, 2.88, 5.506, 2.504, 4.62, 4.14, 5.46, 2.54, 1.791,
			4.429, 3.67, 3.129, 0.791, 2.97, 5.81, 3.58, 1.54, 0.5, 4.26, 2.41, 4.117,
			1.583, 3.38, 4.26, 2.34, 4.68, 3.52, 2.25, 1.916, 1.554, 2.22, 4.16, 4.59,
			3.44, 4.36, 2.27, 3.14, 2.17, 10.04, 5.04, 2.79, 4.68, 1.25, 3.59, 2.84,
			3.99, 5.1, 5.49, 2.56, 5.345, 2.625, 1.53, 3.72, 5.34, 3.89, 2.89, 3.31,
			2.39, 1.833, 1.779, 1.708, 1.61, 3.722, 1.708, 3.82, 3.95, 2.277, 1.833,
			2.67, 6.921, 0.749, 4.06, 3.03, 3.36, 2.064, 3.796, 2.57, 7.71, 5.4,
			4.374, 2.916, 2.43, 2.34, 5.85, 3.322, 1.458, 3.42, 3.74, 4.69, 5.78,
			2.22, 6.09, 3.15, 2.19, 3.36, 2.04, 4.33, 3.5, 3.39, 4.11, 2.79, 3.55,
			2.81, 9.9, 5.4, 5.97, 5.22, 4.74, 5.85, 3.62, 1.52, 1.56, 2.28, 11.54,
			3.1, 2.384, 2.166, 6.22, 2.67, 2.28, 2.19, 3.2, 7.06, 4.38, 3.03, 3.37,
			1.94, 5.94, 4.12, 1.1, 2.69, 2.8, 4.29, 2.395, 1.625, 1.32, 1.8, 3.78,
			3.01, 2.36, 4.56, 5.16, 3.3, 2.766, 2.964, 4.88, 5.79, 2.75, 2.44, 3.78,
			3.84, 6.75, 3.1, 4.73, 1.837, 2.333, 4.442, 1.708, 4.83, 2.46, 5.04, 2.29,
			3.11, 2.79, 3.39, 1.77, 2.97, 2.46, 5.047, 1.958, 4.395, 4.455, 4.245,
			2.79, 4.07, 2.98, 3.66, 2.49, 2.411, 2.749, 1.13, 2.23, 3.59, 1.75, 2.82,
			1.374, 1.356, 2.306, 3.124, 4.8, 2.82, 4.191, 1.749, 4.68, 2.34, 4.5,
			2.67, 3.18, 3.84, 3.18, 3.3, 3.47, 3.7, 1.657, 3.083, 2.49, 3.72, 2.25,
			2.785, 3.125, 2.4, 3.63, 5.55, 2.88, 2.25, 7.05, 1.47, 3.12, 2.85, 3.0,
			3.39, 2.581, 0.999, 4.399, 2.441, 3.08, 5.8, 1.73, 2.083, 2.597, 1.87,
			3.529, 2.25, 0.881, 1.73, 1.958, 3.412, 1.0, 1.65, 3.14, 3.389, 5.281,
			3.059, 2.834, 2.916, 4.33, 0.5, 3.601, 2.97, 2.55, 1.81, 2.762, 2.208,
			3.357, 1.833, 4.079, 2.171, 1.783, 3.607, 3.39, 4.39, 4.67, 2.25, 2.89,
			3.05, 5.01, 2.01, 2.279, 2.041, 2.791, 2.909, 2.041, 1.679, 2.64, 2.927,
			2.833, 4.63, 0.5, 2.61, 2.15, 4.09, 3.18, 3.93, 2.07, 1.35, 1.26, 2.73,
			3.13, 3.41, 3.57, 3.31, 2.72, 1.59, 2.43, 3.16, 10.66, 4.04, 2.61, 1.791,
			3.159, 1.98, 3.51, 6.93, 0.5, 4.09, 3.014, 1.666, 5.73, 3.166, 1.874,
			1.62, 2.11, 3.24, 5.1, 1.67, 3.558, 1.061, 2.541, 2.515, 1.419, 1.946,
			2.7, 4.02, 2.43, 2.82, 4.36, 5.022, 0.708, 2.58, 1.8, 4.5, 3.45, 1.9,
			3.47, 2.46, 3.81, 5.4, 1.41, 2.8, 1.94, 1.56, 1.74, 1.86, 2.25, 6.87,
			3.26, 1.88, 2.947, 2.083, 1.458, 3.432, 1.975, 1.625, 1.53, 4.32, 2.31,
			1.648, 4.676, 2.916, 2.78, 2.97, 3.03, 3.157, 1.333, 4.3, 3.51, 2.01,
			3.39, 3.33, 4.32, 3.18, 3.99, 6.6, 3.45, 4.02, 3.03, 2.43, 3.38, 1.14,
			1.87, 4.21, 5.42, 1.31, 3.16, 2.85, 1.92, 5.29, 2.99, 3.25, 2.15, 3.174,
			2.166, 5.44, 1.58, 3.81, 4.41, 3.88, 2.68, 3.04, 4.5, 3.19, 2.458, 3.352,
			4.26, 3.51, 2.04, 1.79, 2.56, 2.76, 2.35, 5.37, 1.58, 3.78, 2.19, 2.4,
			3.04, 3.26, 1.89, 2.79, 3.2, 1.0, 1.66, 3.92, 3.68, 1.404, 3.746, 1.4,
			3.85, 5.484, 2.166, 3.73, 1.02, 2.91, 4.71, 4.68, 3.69, 3.18, 2.49, 1.23,
			2.37, 2.009, 2.041, 4.5, 1.98, 2.97, 5.7, 3.09, 6.68, 3.22, 3.55, 2.84,
			2.94, 0.75, 4.83, 3.6, 3.06, 4.09, 2.78, 5.17, 3.02, 2.48, 2.56, 3.03,
			3.69, 4.11, 3.046, 0.5, 5.904, 4.92, 3.03, 3.03, 2.1, 2.88, 1.59, 2.97,
			3.12, 1.67, 2.23, 3.91, 2.666, 2.195, 1.249, 0.78, 5.94, 3.13, 0.736,
			1.984, 3.12, 3.33, 2.64, 3.12, 1.9, 4.343, 1.754, 0.833, 1.251, 1.799,
			0.81, 2.197, 2.333, 5.1, 6.03, 13.79, 5.034, 2.666, 1.59, 2.75, 2.23,
			2.79, 3.46, 3.582, 1.208, 4.74, 2.83, 3.68, 3.51, 2.28, 3.75, 4.5, 4.5,
			4.27, 4.64, 4.23, 2.46, 2.17, 3.14, 2.01, 3.3, 4.11, 2.01, 4.62, 2.097,
			1.833, 2.7, 2.07, 1.63, 2.07, 3.89, 4.22, 2.92, 2.26, 5.33, 4.629, 1.791,
			2.65, 3.14, 6.51, 1.68, 1.59, 2.55, 4.23, 2.0, 2.59, 2.84, 4.21, 4.82,
			0.5, 3.16, 2.82, 0.68, 2.59, 2.38, 1.23, 3.84, 2.37, 4.47, 2.16, 3.3,
			4.02, 3.48, 1.704, 2.916, 2.82, 1.91, 1.84, 3.162, 2.958, 0.749, 5.671,
			2.55, 0.72, 2.04, 2.56, 2.99, 0.99, 2.459, 2.582, 1.379, 3.76, 4.78, 2.05,
			3.45, 2.16, 4.27, 4.16, 3.28, 2.36, 2.91, 2.73, 1.585, 1.625, 4.65, 2.059,
			3.041, 3.51, 2.97, 2.57, 7.58, 2.06, 1.56, 3.54, 3.12, 2.58, 5.479, 1.541,
			2.37, 1.557, 3.083, 1.924, 4.816, 4.82, 3.4, 4.32, 4.06, 3.5, 3.15, 5.015,
			2.875, 1.56, 3.51, 2.43, 2.58, 3.45, 2.49, 1.92, 2.98, 1.951, 2.374,
			4.665, 5.432, 2.208, 2.74, 4.44, 3.42, 3.21, 1.81, 3.53, 3.78, 3.27, 4.92,
			1.95, 4.18, 4.28, 5.13, 2.87, 1.75, 2.44, 2.6, 3.16, 0.92, 3.124, 1.916,
			2.541, 3.369, 1.11, 2.43, 3.937, 2.333, 3.3, 3.212, 1.708, 2.73, 2.49,
			2.599, 3.041, 2.71, 4.37, 4.98, 0.99, 5.55, 3.78, 6.72, 4.51, 4.22, 3.36,
			2.96, 2.27, 4.46, 3.12, 2.52, 3.63, 3.93, 2.64, 4.29, 2.16, 3.69, 6.316,
			2.295, 1.749, 2.54, 3.28, 2.06, 3.82, 2.6, 2.62, 4.97, 5.28, 2.672, 2.458,
			1.41, 4.282, 2.208, 1.34, 1.041, 1.975, 1.874, 3.69, 4.71, 3.31, 4.49,
			2.43, 2.92, 4.91, 1.89, 2.8, 5.24, 3.66, 2.49, 2.115, 4.755, 2.01, 3.54,
			1.83, 2.791, 5.339, 3.85, 3.83, 2.61, 2.06, 2.77, 2.82, 4.77, 9.44, 3.682,
			1.458, 2.374, 2.816, 5.9, 2.76, 4.65, 1.89, 3.126, 2.124, 1.833, 3.657,
			2.61, 2.43, 2.166, 3.504, 3.84, 2.04, 3.18, 2.98, 4.42, 4.9, 2.88, 4.71,
			5.14, 2.18, 3.971, 0.499, 2.49, 1.89, 1.041, 5.709, 3.36, 2.73, 1.97,
			1.95, 4.43, 3.954, 1.166, 2.97, 1.8, 0.5, 0.25, 2.3, 1.22, 1.166, 3.114,
			2.81, 3.91, 1.38, 2.297, 0.5
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"DAVID MALAN: All right.",
			"Welcome to Introduction to Game Development.",
			"My name is David Malan, and this is Colton Ogden.",
			"And this is a class that assumes only a class like CS50,",
			"which is the colleges and the extension schools introduction to computer",
			"science but more generally we just assume",
			"that you have prior programming experience in most any language",
			"and therefore have some comfort with some",
			"of the basic constructs of programming.",
			"But we assume no background in Lua or Lab 2D or any of the frameworks",
			"that we'll be using in the class.",
			"All of that lies ahead.",
			"So, if you're like me, you probably grew up with video games of some sort.",
			"And when you maybe started programming, the programming environments",
			"were perhaps very text based, black and white terminal window, and the like.",
			"And maybe you did something graphical with a language like scratch or Alice",
			"or beyond, or if you're in the world of the web,",
			"you've made more graphical applications of some sort, but still pretty static.",
			"The sort of content comes on the screen, then the content changes, and so forth.",
			"And it's a little less obvious if you're a little newer to programming",
			"how you go about creating some of those games",
			"from yesteryear with which you all grew up,",
			"where there's a lot more animation, there's a lot more asynchronicity,",
			"lots of things happening at the same time.",
			"A lot of events happening, and you all NOT--",
			"not only want to capture this interactivity,",
			"but also want to respond to events that are",
			"happening, especially if you have players",
			"elsewhere next to you or online.",
			"And so the way the course will be structured",
			"is through a narrative of these various games, many of which",
			"you might have played yourself.",
			"But over the course of the semester, we dive",
			"into the context of each of these games and look",
			"at some of the underlying principles, the constructs via which",
			"they were built up, and really use them as a point of departure",
			"for talking about those various capabilities",
			"that you might integrate into your own games.",
			"And then punctuating the semester, ultimately,",
			"will be a number of milestones.",
			"Some in the form of smaller assignments that are meant to reinforce just some",
			"of the more recent material and sort of set you up for success when the course",
			"is deeper and more hands on projects. , Because indeed,",
			"the project is where you'll build or extend some of your own games.",
			"And then the class itself will culminate at the very end of the semester",
			"with your very own final project, an opportunity to propose,",
			"to design, and implement a game that somehow or other draws",
			"upon the course's lessons.",
			"So that when you walk out of here in just a few months' time,",
			"you've not only played your fair share of games,",
			"but have actually built several of your own.",
			"So without further ado, allow me to turn things",
			"over to Colton for a look and a stroll through yesteryear's Pong.",
			"COLTON OGDEN: Thanks, David.",
			"I'm very excited to begin teaching you guys this course",
			"because game development was actually what got me",
			"into programming in the first place.",
			"I remember back in 2006 or 2007 buying this book here,",
			"3D Game Programming All In One, which was a look through 3D game programming.",
			"And it was a monolithic text in the context of a game engine",
			"that was popular in the late 2000s called Torque.",
			"It's not as in vogue these days, but it at the time was pretty popular,",
			"and it used a language called TorqueScript.",
			"And I remember reading through this book and seeing all this code,",
			"and I had never seen like source code at all before,",
			"or had ever been introduced to programming.",
			"And, frankly, I found it quite intimidating,",
			"because I was looking at all the syntax that I didn't understand,",
			"and I didn't know anything about game development.",
			"I had always played games growing up and been fascinated by it,",
			"but as I started getting more comfortable with computers",
			"and I started to get more curious about it",
			"and realized that it was a major profession,",
			"I started to dive a little deeper.",
			"This was my first foray.",
			"And after spending a little bit of time away from it",
			"after looking through the source code for a TorqueScript, which",
			"was rather arcane, a lot of percent symbols and dollar signs",
			"are the weird things that I just hadn't gotten my mind around.",
			"I went back to it, started to really learn the basics of programming",
			"and other languages, like Python and c and c++,",
			"and I grew to really like programming and computer science a lot.",
			"And here's just an image of what Torque looked like at the time.",
			"It was really the sort of predecessor to Unity nowadays.",
			"Although, in my opinion, Unity does things a lot better.",
			"It was more accessible, it uses languages that are more in vogue",
			"and popular and used by other people already in other domains.",
			"",
			"And so we'll be covering Unity at the tail end of the course.",
			"So we'll be covering predominantly 2D game development.",
			"But the topics that we'll be covering today",
			"as we get started in the context of Pong are these bullet points here.",
			"Lua, which will be the language that we're using predominately",
			"throughout the course, which is a dynamic scripting language very",
			"similar to Python and JavaScript.",
			"We'll be covering LOVE 2D as our primary game framework, which",
			"is a runtime and a framework which exposes all of its methods",
			"for drawing, audio, input, etc.",
			"via Lua, so that it's very easy to write code very quickly,",
			"but get very good results.",
			"And the documentation for their framework is superb, in my opinion.",
			"Today we'll be talking about a few just basic principles",
			"as we get our feet wet with game development.",
			"Things like drawing shapes, drawing text,",
			"these are both very big aspects of Pong, which",
			"is just a very simple game based on shapes and text",
			"moving around the screen.",
			"We'll be talking about Delta Time and Velocity, which Delta Time is probably",
			"arguably one of the most important variables",
			"that we keep track of in any game framework or engine, which is just",
			"the amount of time that's elapsed since the last frame of execution",
			"in our game, measured in LOVE 2D in terms of seconds, fractions of seconds.",
			"We'll be talking about game state, because you",
			"can have a state in your game.",
			"You can be at the title screen, you can be playing, you can be in a menu.",
			"This will, obviously, be very important because you want different update logic",
			"and rendering logic depending on what state you're in.",
			"We'll be talking about basic object oriented programming,",
			"for those who might be unfamiliar coming from C.",
			"It's basically a way of encapsulating our data, any of our game objects,",
			"in such a way that the variables that are relevant to them",
			"are put together, along with functions that will operate on that data.",
			"So instead of having like 20 different variables for all",
			"these different objects that you have to keep track of in your code,",
			"each individual object can keep track of all its own information,",
			"like its position, or anything else that's relevant to it.",
			"We'll be talking about hit boxes today, predominantly,",
			"in the context of box collision, because we'll",
			"be talking about Pong, which is just paddles and a ball.",
			"Those are all rectangles.",
			"And they'll be colliding with what's called axis aligned bound--",
			"axis aligned bounding boxes, which makes calculating whether two boxes collided",
			"very simple, as opposed to calculating rotated hit boxes,",
			"which is a bit more complicated.",
			"And then, lastly, we'll polish off with sound effects,",
			"because adding that polished layer, in my opinion, is important",
			"and it ties it all together and makes it feel like a more cohesive whole.",
			"So two important things that we'll need to do when we're following along",
			"with the examples, which I'll show you a link to the repo in a moment,",
			"is getting LOVE 2D installed.",
			"It's a very simple process.",
			"The first link here is just a download link.",
			"So it's available for all major operating systems.",
			"So Linux, Mac, and Windows.",
			"And then the Getting Started link down here below",
			"will give you some tips as to how to get started,",
			"actually running it on your machine on Mac, iAlias,",
			"the actual runtime executable within the app that it comes with.",
			"So in my bash profiles that I can easily just type love space",
			"dot in any directory that has a main dot Lua file,",
			"and I can run it anywhere very simply.",
			"And there are similar instructions located on the page for other operating",
			"systems.",
			"And this is the repo here, which has all of the source code",
			"that we'll be using today.",
			"And I've structured it in a series of 13 different subrepos",
			"so that you can follow along and we can build upon Pong starting from scratch,",
			"going all the way to a fully implemented game.",
			"So the first thing we'll talk about is what Lua is.",
			"We'll be using Lua for about 75% of the course.",
			"It's a very popular dynamic scripting language.",
			"Portuguese for moon, and it was invented in the early 90s",
			"as primarily a config language and a runtime language",
			"for compiled code bases to save time on adding code to those code bases",
			"and recompiling them.",
			"A lot faster and a lot easier, especially in the context",
			"of the 90s when computers were much slower, to expose",
			"the core functionality of your application to Lua so that you can just",
			"run it dynamically and then interact with your compiled code on the fly,",
			"rather than having to recompile and wait minutes,",
			"potentially hours, just to get some new behavior.",
			"It's a language that's focused around the concept of a table.",
			"Almost everything in Lua aside from basic variables, are tables.",
			"A table is essentially a dictionary in Python or an object in JavaScript.",
			"Very similar.",
			"Intent, for embedded use in larger applications,",
			"and the very nature of Lua intended to be",
			"used in the context of these large applications",
			"meant that it was perfect for interacting with game engines.",
			"Because game engines are a perfect example of code bases",
			"that are traditionally compiled code for speed purposes.",
			"But it can be very cumbersome to have to add minor functionality,",
			"and then recompile it and potentially have your whole studio take hours.",
			"So we'll be using Lua and a compiled game framework, LOVE 2D,",
			"to allow us to rapidly develop.",
			"It's similar to JavaScript and Python.",
			"A little bit more so to JavaScript.",
			"And it's very excellent because it was initially",
			"intended as a config language, and a-- just sort of a glue layer.",
			"It's very good for storing data and code together, almost one in the same.",
			"So LOVE 2D is a fast 2D game develop--",
			"development framework.",
			"It's compiled in C++ and it runs very efficiently.",
			"Because it's so simple, despite the fact that we're running it in Lua,",
			"and as modules for basically anything you",
			"would need in the context of 2D game development.",
			"Only 2D game development officially, although some people I know",
			"are working on slight little 3D experiments, but nothing official yet.",
			"But it has graphics, keyboard input, math, basically, anything",
			"you could want in the context of 2D game development.",
			"It's completely free.",
			"It's portable.",
			"You can even run it on mobile and also the web.",
			"And it's excellent for prototyping, even if you don't necessarily",
			"want to publish a game in LOVE 2D, it's great and easy and fast just",
			"to whip something up in LOVE 2D, and then port",
			"that over to whatever framework or engine",
			"you might be using in the real world.",
			"So before we get into looking at some actual concrete code,",
			"I think the most fundamental thing we should take a look at",
			"is what a game loop is.",
			"So a game, fundamentally, is just an infinite loop, like a while true or a",
			"while one.",
			"Only in this case, every iteration of that loop we're doing a set of steps",
			"back to back over and over again.",
			"We're processing input so we're seeing, has the user pressed",
			"a key on the keyboard, have they touched their joystick,",
			"have they moved the mouse, clicked the mouse.",
			"If they have, we need to feed that into our update.",
			"We need to keep track of that, and then change anything in our game state",
			"that relies upon that input.",
			"So we should move our paddles, we should detect collision,",
			"we should register all of this, and then whatever has updated,",
			"we want to rerender that.",
			"We want to render it--",
			"render where it's changed so that we have the--",
			"we see on our screen, visually, that things have actually",
			"changed in our game world and we interact with it,",
			"and we get a sense that we're using something,",
			"interacting with something dynamic.",
			"And in the context of 2D games, the most fundamental way of looking at the world",
			"is via the 2D coordinate system, which is just simply",
			"as we learned in geometry in high school, x and y-axis.",
			"In this case, it's slightly different than what we typically learn.",
			"In high school, we tend to learn that the xy origins, sort of bottom left,",
			"y positive goes up, negative goes down, positive x goes right,",
			"and negative x goes left.",
			"But in this case, we're actually starting in the top left,",
			"and then it goes y positive down, y negative up, x positive right,",
			"x negative left.",
			"And everything that we want to draw in our game",
			"needs to have an x and y-coordinate to draw in order",
			"for it to be visually seen on the screen.",
			"So today's goal, we're going to start a fairly low level",
			"and work our way up through examples today and in future classes.",
			"Our first game is arguably one of the simplest,",
			"but also, one of the most famous games of all time, Pong,",
			"which was released in 1972.",
			"And the gist of Pong is you have a paddle",
			"on the left side of the screen, a paddle on the right side of the screen,",
			"whoever scores 10 points by getting the ball past their opponent's paddle",
			"onto the edge of the screen, wins.",
			"And so today in our lecture, the scope is we want to, first and foremost,",
			"draw shapes to the screen, because that's how we get our ball and-- ball",
			"and paddles rendering.",
			"And those are just simply rectangles.",
			"We want to control the 2D position of these paddles,",
			"because we want them to move up and down and want the ball to also move.",
			"We want to detect collision between the paddles and the ball,",
			"because that's how we get the ball to deflect off the paddles,",
			"and to deflect off the ceiling and the floor.",
			"And, also, how we detect whether it's gone beyond the edges of the screen,",
			"such that one player scores a point.",
			"And then we want to add sound effects for sort of a feedback",
			"and sort of put ourselves into the game a little bit more.",
			"And then scorekeeping, because ultimately the purpose of the game",
			"is to beat your opponent, so you want a way",
			"to see who has scored 10 points first.",
			"And so we're going to look through a set of examples now in the repo.",
			"If we look at Pong Zero, I've set this to be called, The Day Zero Update.",
			"It's a trend among many games to have the games release major content",
			"updates as the x update.",
			"So just to be cute, I think we'll call each individual example here,",
			"The Something Update.",
			"And so I'm going to go into the Pong Zero",
			"Repo of the directory, the GitHub repo.",
			"And if we're looking at Pong Zero here, we can see it",
			"says here, The Day Zero Update.",
			"I've commented everything fairly heavily so that we can--",
			"if you're reading the code, you can sort of get a sense of what's going on.",
			"At line 23, we're going to start off by just declaring",
			"a window width and a window height.",
			"And these are just constant variables that",
			"will be accessible throughout the rest of our application.",
			"So I'm just setting 1280 by 720 as an arbitrary resolution.",
			"It doesn't matter too much.",
			"An important thing that we need to look at here is that line 29,",
			"we're using a function called love.load, and I'm actually",
			"going to go back to the slides here.",
			"We're going to look at a few functions, and I'm",
			"going to go over them and just sort of tell you",
			"what they do before we look at the code in too much detail.",
			"So love.load is just a function that-- given to us by LOVE, LOVE 2D,",
			"and we overwrite it.",
			"We give it behavior, we tell it what to do.",
			"And LOVE 2D is going to look at it in our main.lua file.",
			"If we're looking at Pong Zero, you'll see it just has a main.lua file.",
			"LOVE 2D expects just a main.lua file, and will run the main.lua file,",
			"and you can reference any other file within the directory from that main.lua",
			"file.",
			"It's our bootstrap, effectively.",
			"We're going to override love.load with whatever",
			"we want to execute at the very beginning of our application.",
			"It's just a startup function.",
			"We can also define all that behavior outside of the function above it,",
			"but it's good practice to find it within love.load",
			"so that someone reading your code will know,",
			"OK, this is where all the startup code takes place.",
			"Love.update(dt) is a very important function.",
			"This function takes in a variable called (dt).",
			"Love passes it in a function.",
			"You're going to overwrite it with your own behavior,",
			"and Love is going to execute this every frame, passing it in delta time,",
			"and you can use delta time (dt) in that function",
			"to change your application based upon how much time has passed.",
			"(dt) will always be a fraction of a second, potentially more,",
			"depending on how slow your computer is.",
			"But, typically, one-sixtieth of a second.",
			"And you can scale anything in your game by that amount",
			"to get even behavior across all frame rates.",
			"Love.draw is the other big function amongst--",
			"between update and draw.",
			"Two of the two, arguably, most important functions.",
			"Love.draw is the function that we're going",
			"to define that has all of our drawing behavior, our rendering behavior in it.",
			"And that's where we can draw our paddles, we can draw our ball.",
			"And then update is where we can like change",
			"the paddles position and so forth.",
			"Two more important functions we'll take a look at in the first example.",
			"Love.graphics.printf is the LOVE 2D analog of printf and C. The difference",
			"being that this printf lets us actually draw physically",
			"onto the screen versus a console.",
			"We give it a text as a string, and an x and a y-coordinate and, optionally,",
			"a width and an align, and it'll will draw the text at xy,",
			"but it will also take into consideration the width,",
			"and it'll also take in consideration the align.",
			"The with is how much to align it, and the align is the mode of alignment.",
			"So if we say x is zero width, our window width, and then we say align center,",
			"it's going to go between zero and our window width and center align it.",
			"So that'll have the effect of center aligning our text.",
			"But we can just as easily say, right, and it will right",
			"align it between those two and have the effect",
			"of rendering the screen-- rendering the text",
			"along the right edge of the screen.",
			"And then lastly, love.window.setmode takes a width and a height",
			"and some optional parameters.",
			"Those parameters being things like V sync and full screen,",
			"and will actually set up our window and get it rendering onto the screen.",
			"And so if we go back to our source code here, it-- at line 29,",
			"we're overwriting love.load.",
			"We're passing in love.window.setmode, window width and window",
			"height, which recall we defined up above as 1280 by 720.",
			"We're passing in a table.",
			"This is the syntax for a table, these curly brackets.",
			"And the way that we define keys and values is just with an equal sign",
			"therein.",
			"So full screen gets false, resizeable gets false, V sync gets true.",
			"So it's going to not be full screen, it's",
			"going to be a not resizeable but it is going to be",
			"synced to our monitor's refresh rate.",
			"And that's where V sync is, short for vertical sync.",
			"And then on line 40, we're overwriting love.draw,",
			"and this has the love.graphics.printf function, they're in,",
			"and we're saying-- we're passing in the string, hello, Pong.",
			"We're starting it at x zero, we're setting it",
			"at y window height divided by 2, minus 6.",
			"Because the default font size in LOVE 2D is 12 pixels tall.",
			"So we're shifting it up by six so it's perfectly",
			"centered vertically in the screen.",
			"And then we're setting the alignment amount, the width, to window width",
			"so that it's going to align it within the entire width of our window.",
			"And now we're setting it to center alignment.",
			"So it's going to be center aligned within our entire window",
			"starting at x zero.",
			"And so if we go to Pong zero, and then we actually run it,",
			"it has the effect of doing this.",
			"We're just rendering in our default font, default size,",
			"hello, Pong, right in the middle of the screen.",
			"So not a terribly exciting example, but it",
			"is showcasing the most important functions of LOVE 2D,",
			"so that we can get started with slightly more interesting examples.",
			"So, our first content update, is the Low-Res Update.",
			"So we're developing Pong and Pong is an old game.",
			"It doesn't look like the example that we just looked",
			"at where the font is fairly high res.",
			"We want something that looks a little more retro.",
			"So what we want to do is get our resolution",
			"looking like it's from a game released in 1972.",
			"So what we're going to do is look at a few more important functions here.",
			"So Pong One has these functions.",
			"So love.graphics.setDefaultFilter.",
			"This function, the purpose of that, is every time",
			"we have a font or an image in our application,",
			"it's going to be applied a filter by default.",
			"So it's going to by default a bilinear filter.",
			"So what's going to happen, the effect of that",
			"is, basically, whenever we magnify or downscale a texture,",
			"it's going to think that-- it's going to assume",
			"that we want it to be slightly blurred so as to not look too pixilated.",
			"Which is good in certain contexts.",
			"For higher res 2D game development, that's good, but as we're going to see,",
			"that's not particularly good in the context of retro games.",
			"Retro games have a very 2D, crisp, pixilated aesthetic,",
			"and we want to preserve that.",
			"And so this lets us set a default filter.",
			"We'll see that in usage shortly.",
			"Another important-- very important function which is the input phase",
			"of our game loop that we saw earlier, love.keypressed(key) is what's going",
			"to allow us to start interacting with that aspect of our game.",
			"So love.keypressed(key) is a callback function that LOVE expects in main.lua.",
			"We're going to overwrite it.",
			"It gets passed in a key, and this function",
			"gets called every time by LOVE 2D whenever we press a key.",
			"It'll detect a key pressed, and it will call this function.",
			"Whatever we've defined in here, it will call it,",
			"and we can set it to take in certain keys",
			"and perform certain operations on that input and it will get a string.",
			"So if we say-- if we press the escape key,",
			"key is going to be equal to the string escape in that function,",
			"and we have access to that.",
			"And another important function, love.event.quit.",
			"This has just a very simple effect of quitting the application,",
			"though we can call it in the code as opposed to doing it ourselves.",
			"And so here's an example of what texture filtering looks like.",
			"Point filtering is the same as nearest neighbor",
			"filtering, which is what we're going to be using.",
			"Bilinear filtering is shown on the right, where it looks pretty blurry.",
			"That's what LOVE 2D applies by default to both fonts and to textures.",
			"",
			"And we'll see that in an example.",
			"I can actually run it in two different styles.",
			"So if you go to Pong One in the repo, and then we run it,",
			"we see here, hello, Pong is now blown up.",
			"And we'll look at some more code, actually,",
			"to see as to why it's blown up.",
			"But if we go back to our code, let me pull up Pong One.",
			"",
			"Go to main.lua, and then I'm going to explain this in just a second,",
			"but let me comment this out and we'll see the difference here.",
			"You can see it looks a lot blurrier.",
			"And that's the default texture filtering taking place.",
			"It applies, like I said, not only to textures but also to fonts.",
			"And that's not the aesthetic we want.",
			"So let's look at Pong One in detail, starting at the top.",
			"On line 28, we're acquiring a library.",
			"This is how you get a library in your LOVE 2D",
			"application, or your LOVE application.",
			"Just equals require and the name of the library.",
			"Push is what we're going to be using to take our 1280 by 720 window",
			"and turn it into a virtual resolution window at 432 by 243.",
			"We can start to think of our game in terms of a more low res feel,",
			"and think about it in 432 by 243 pixels, but still render it",
			"in a window that's arbitrarily sized.",
			"In this case, we're preserving the 1280 by 720 window that we saw before.",
			"If you go to our love.load function, we see this being used on line 47.",
			"Instead of love.window.setmode, we're now",
			"using push setup screen, the push libraries setup screen function,",
			"where it takes a virtual width, a virtual height, our regular window",
			"width and our window height, and then the same table as before.",
			"And this has the effect of setting up a window that's",
			"got our concrete dimensions of 1280 by 720,",
			"but a virtual resolution of 432 by 243.",
			"And so now, when it renders, as we'll see shortly, as--",
			"well, as we already did see, actually, it's magnified.",
			"It has the effect of giving us a lower resolution.",
			"And in line--on line 58, if we look at the love.keypressed function,",
			"we've put in there, if the key equals the string escape,",
			"then love.event.quit.",
			"So now we have input handling.",
			"We've overridden love.keypressed(key), which LOVE 2D is going to look",
			"for in our application, and then call as needed.",
			"And then we're just looking in there.",
			"If the key is escape, then love.event.quit.",
			"And if I run the application, I can now press escape on my keyboard",
			"and just quit it and not have to command quit or click",
			"the X on a Windows application.",
			"And we've changed one more thing, also, in the love.draw function on line 70.",
			"We're using the push library now.",
			"We need to-- it functions sort of as a state machine in that we",
			"set it to start rendering at a virtual resolution with push",
			"apply start, and then push apply end, and then anything in between,",
			"this is very similar actually to how Open Go works.",
			"We won't go into too much detail.",
			"But this is very similar in spirit to how much of Open Go programming works.",
			"Push apply start, push apply end.",
			"Between that, whatever we call, is going to render at this virtual resolution.",
			"And so we are calling the same love.graphics.print(f) function,",
			"hello Pong Zero, virtual high divided by two minus six.",
			"Same parameters.",
			"And it has the effect of rendering everything that's still got",
			"the old aliasing going on the skin--",
			"texture filtering going on as the effect of giving us our magnified text.",
			"So same text, same size, but now our window of rendering is much smaller.",
			"So--",
			"Any questions so far on how any of this works?",
			"OK.",
			"Awesome.",
			"So we've gotten text right into the screen, but we're nowhere close to Pong",
			"yet, so the first big thing, I think, that's",
			"going to get us closer in that direction is what we're",
			"going to call the rectangle update.",
			"So some important functions that we should look at.",
			"Love.graphics.newFont.",
			"The default font, I believe, is Arial.",
			"We don't want Arial in our application, because we want something",
			"that looks a little more retro.",
			"We want something that looks more relevant.",
			"Love.graphics.newFont will basically take a path to a font file",
			"that we have in our folder, which if you're in the Pong 2 folder,",
			"you'll see a font.ttf file, and a size.",
			"Because every font object that we instantiate",
			"needs to have a size, because the font objects are immutable.",
			"Once constructed, they cannot be changed so they need to be allocated on a size",
			"by size basis.",
			"Love.graphics.setFont will take whatever font",
			"object we've acquired from this function call, and we can set it here",
			"and it'll set the active font in LOVE 2D to be that font.",
			"Love is a state machine in the same sense",
			"as before, in that it will have an active font at any one time,",
			"and whatever print functions you call, will use the currently active font.",
			"And that also applies to whatever color you might want to render to the screen,",
			"whatever.",
			"If you have a font and you want to maybe render it in red,",
			"you need a set LOVE 2D's active color to red as well.",
			"Love.graphics.clear is a function that takes an RGBA quadruple,",
			"and will flush the screen in that color.",
			"It just has a simple effect of wiping the screen in that color.",
			"Useful for drawing just flat color backgrounds.",
			"And then the last function, probably the most important function,",
			"is love.graphics.rectangle.",
			"And this is the first function that we'll",
			"see that actually ends up drawing something beyond text to the screen.",
			"It takes it a mode, which can be fill or line, an x and a y",
			"and a width and a height, and it'll draw a rectangle in that mode.",
			"So either filled, so a filled rectangle, or a line rectangle.",
			"It'll take-- it'll draw it at xy with the width and the height",
			"that we pass in.",
			"So let's go ahead and take a look at Pong 2",
			"where we can see this actually implemented.",
			"So Pong 2, we have our font.ttf in there that I've included.",
			"And then a main.lua.",
			"And by the way, I forgot to mention last example,",
			"push the library that we required is also just in the same directory.",
			"And you can just do require as long as the file is there within the directory,",
			"it will just load it.",
			"You don't have to specify .lua.",
			"It assumes when you require some string, that it follows with the .lua suffix.",
			"So we're here looking at main.lua in Pong 2, the rectangle update.",
			"So on line 28 to 34, it's all the same stuff.",
			"We're acquiring push.",
			"We have our width and height virtually and physically.",
			"In our love.load function, we are on line 43",
			"declaring small font to be a love.graphics.newFont,",
			"giving it the path font.ttf because it's right there",
			"in the same directory at size eight.",
			"And this is going to create a font object, small font, that we can then",
			"set as the active font as needed.",
			"So if we go down to line 78 in the same directory,",
			"we see we're calling love.graphics.clear,",
			"and so we're passing it in a color.",
			"I sampled some images of Pong on Google Images",
			"and saw a background gray that I liked, so 40, 45, 52, RGB, and then 255 just",
			"means completely opaque, so no transparency, the alpha component.",
			"And then we're doing the same print.function",
			"as we did before on line 81.",
			"Below that on line 89 down through 95, we're actually",
			"calling love.graphics.rectangle.",
			"And these are drawing the two paddles and then the ball.",
			"So, note, love.graphics.rectangle fill mode,",
			"because we want the paddles to be completely filled, as is the ball.",
			"We're giving it an xy of 1030 and a width height of 520.",
			"And on 992, we're-- and that'll have the effect of drawing it a little bit",
			"shifted from the top left corner, five pixels wide, 20 pixels tall.",
			"On line 92, we're doing the same thing, except we're",
			"going virtual width minus 10.",
			"So it's going to go to the right edge of our screen, virtual width minus 10.",
			"So 432 minus 10.",
			"So 422.",
			"And then virtual height minus 50.",
			"So it's going to be slightly--",
			"it's going to be slightly up from the bottom of the screen.",
			"So we have our top left paddle and our bottom right paddle.",
			"And then the ball is dead center.",
			"So we're sitting-- doing another graphics-- rectangle call.",
			"Virtual width minus two divided by two.",
			"So right in the middle, minus two, because our ball",
			"is going to be two pixels wide by two pixels tall.",
			"And same thing with virtual height, minus two.",
			"Our virtual height divided by two, minus two.",
			"So I'm going to go ahead and CD into the Pong 2 directory and run it.",
			"And that has the effect of we have our new font here in the middle.",
			"So it looks nice and retro, much more so than the Arial font as before.",
			"We have a rectangle here, five pixels wide by 20 pixels tall.",
			"A ball in the middle, which is four pixels wide by four",
			"pixels tall, and then a paddle on the bottom right,",
			"which is the same dimensions as the paddle on the left.",
			"So it looks very similar to Pong.",
			"It's not interactive at all, but we sort of getting the feel of what",
			"we want our application to look like.",
			"We have it mostly sketched out.",
			"So any questions so far as to how this works?",
			"OK.",
			"Awesome.",
			"So Pong 3.",
			"So currently we have no interactivity with our application,",
			"and we want to be able to move the paddles around.",
			"We don't want to just be looking at an-- at an image the whole time.",
			"So the paddle update is going to solve this problem for us.",
			"We're going to actually get our first sort of-- beyond pressing escape",
			"to quit the application, we're going to get a sense",
			"of interacting with it dynamically.",
			"So the important function that we're going to look at in this example",
			"is love.keyboard.isDownsomekey.",
			"And this is true-- this is a Boolean function.",
			"It just returns true or false depending on whether the key that we pass in",
			"as a string is currently pressed down on this frame.",
			"So it just returns true or false.",
			"And so let's go ahead and take a look at the demo.",
			"We're going to go ahead and pull up Pong 3.",
			"The main.lua, they're in.",
			"",
			"Notice that line 37 if you're looking in Pong 3 we, have a new constant",
			"we've defined called paddle speed, which gets the value 200.",
			"And this is just an arbitrary value that I found was a good speed.",
			"But this is how fast our paddle is going to move.",
			"We're going to scale it by delta time, so we're",
			"going to multiply it by how many seconds have passed.",
			"Typically, a fraction of a second since the last frame.",
			"And this is going to, therefore, move the same distance",
			"over time depending on whether your computer is",
			"running at 10 frames per second or 60 frames per second.",
			"So if we go down here to line 63, I've also set up two new variables.",
			"Player one score and player two score.",
			"Those are both initialized at zero.",
			"We're going to add in this example, also, some rendering of the score.",
			"And notice here on line 49, I've also added",
			"a new font, which showcases how you need to separate fonts based on their size",
			"because they're immutable objects.",
			"Score font gets love.graphics.newFont.",
			"Same exact font file, but it's 32 pixels large because the font-- or the score",
			"when rendered in Pong is pretty large in the middle of the screen.",
			"And so we're creating-- we have two different fonts now.",
			"One for rendering our message, one for rendering our score.",
			"And it's just going to render these two variables, player one score and player",
			"two score.",
			"And then we've also initialized our y values",
			"for the rectangles, the paddles on the left and the right.",
			"We need to keep track of their y position, because paddles in Pong",
			"can only move up or down.",
			"So player 1Y gets the same value it did before when",
			"we initialized the rectangle, when we drew it onto the screen.",
			"It's going to start at y 30, so pretty high up.",
			"And player 2y is going to start pretty low, virtual height",
			"minus 50, which is 432 minus 50.",
			"And so in love.update, which is our first actual use of the update",
			"function on line 75 with the (dt) parameter that gets passed in.",
			"Note, remember that LOVE 2D will pass that in for us,",
			"but we need to give it-- we need to define the behavior inside of it.",
			"We're using love.keyboard.isDown, and we're passing in the string w",
			"and s for this first block.",
			"This first block here is player one's movement.",
			"So, traditionally, on computer WASD is to move--",
			"and this example, we're going to allow ourselves to move both paddles,",
			"so we're going to use w and s for the left paddle,",
			"and up or down for the right paddle.",
			"So if love.keyboard.isDown w, which means--",
			"or we've currently pressing the W key, player 1y",
			"is going to get itself, plus negative paddle speed times delta time.",
			"So it's going to move up.",
			"It's going to take negative paddle speed, multiply it by delta time,",
			"and add that onto our y value, which will have",
			"the effect of shifting our paddle up.",
			"And it's the opposite for--",
			"on line 82 for-- if we're pressing the s key.",
			"We need to increase the y by positive paddle speed, because recall,",
			"y-axis movement is--",
			"up is negative, down is positive.",
			"We're doing the exact same thing with the paddle on the right",
			"except we're using up and down as the strings into love.keyboard.isDown.",
			"And then down below here, we are rendering in addition",
			"to what we rendered before, also, the score now.",
			"So on line 125, note that we're calling love.graphics.setFont, scoreFont,",
			"because if we don't call this, it will use just whatever the last font was,",
			"which by default is the eight pixel font because we set that",
			"up top in our program.",
			"We want to set it to the score font, and then we",
			"want to call love.graphics.print.",
			"In this case, I'm just printing them in concrete places not, using printf.",
			"Virtual width divided by two minus 50.",
			"So no matter how we scale our window, it's",
			"always going to be 50 pixels to the left of the center of the window,",
			"and the 30 pixels to the right of the center of the window",
			"if we're rendering the player two score.",
			"And so if we go into Pong 3 and we run it, it looks the same as before.",
			"Note, that we do have a score now in the middle of the screen, zero and zero.",
			"But, more importantly, we can move our paddles up and down.",
			"But there's one problem, and that's I can move beyond the edge of the screen,",
			"which is not behavior that we want in our application.",
			"So we have some interactivity, it's moving along,",
			"but we still have a long way to go, unfortunately.",
			"Or fortunately.",
			"So let's go ahead and look at the ball update.",
			"So we have paddles, they can move, they can move beyond the edge of the screen,",
			"but we don't have a ball that-- it just sits in the middle of the screen.",
			"And that's not what we're looking for.",
			"We want to have a ball that we can actually bounce between the paddles",
			"so we can get an actual game going beyond just moving paddles.",
			"So a few important functions we're going to look at.",
			"We're going to get our first look here at random.",
			"So in games, random number generation is a very common thing",
			"so that we get unpredictability and variability between different instances",
			"of our game.",
			"An important function that just belongs to Lua.",
			"It's not a LOVE 2D thing, it's just a Lua thing.",
			"Math.random seed numb.",
			"So many of you have probably heard of like seed,",
			"like a random number generator, seed, and that just",
			"means a random number generator.",
			"Because it's pseudo random, it needs some sort",
			"of starting value to base all of its random numbers off of.",
			"It takes a starting number, it performs some mathematical operation",
			"on that number to derive new random values that we can then",
			"use in our game engine.",
			"But if we give it the same number every single time,",
			"it's just going to give us the same random numbers every single time,",
			"which means it's not going to be random at all.",
			"It's going to be very consistent.",
			"So we need a way to seed our random number generator,",
			"give it a different initial value or seed,",
			"and we're going to do that with the function math.randomseed somenumb.",
			"OS.time is an important function in the context of this,",
			"because a very common way of getting a different number every time",
			"you run your application is passing it in whatever the current time is",
			"in seconds, because usually it's a very large number that",
			"is going to be different every single time you run your game, no matter what.",
			"Because it's based upon, in the context of most engines,",
			"in the context of Lua, what's called Unix Epoch time, which is zero",
			"zero UTC January 1st, 1970, which is some huge number nine or 10 digits long",
			"that changes every single second.",
			"And then in order to actually take advantage of all this,",
			"we need a function to get a random number,",
			"and so we do that with math.random, which takes a min and a max,",
			"although you don't need to technically pass a min,",
			"it'll just implicitly deuse min as one if you don't pass it a min.",
			"And it'll return a value inclusively within that range.",
			"So if you say math.random one, 50, it'll give us",
			"a random inclusively between 1 and 50.",
			"And if we just say math.random 50, it'll do the same exact thing.",
			"It'll say-- it'll assume rmin is one and give us a value between one and 50.",
			"And then two important mathematical functions",
			"that are very basic but helpful in the context of games almost everywhere,",
			"it's just math.min, which returns the lesser of two values,",
			"and math.max which turns the greater of two values.",
			"And we'll see this in the context of clamping values to some range.",
			"So let's go ahead and take a look at a demo here.",
			"So I'm going to go ahead and open up Pong 4.",
			"",
			"And going to look at main.lua they're in.",
			"",
			"So here on line 47, we see we're calling the math.random seedfunction as before.",
			"And note that we're passing in OS.time, another function call,",
			"because OS.time is going to be different every time we run our application.",
			"So we're seeding our application every time",
			"we run it based on whatever the current second is relative to zero, zero, zero,",
			"zero, zero, zero, January 1st, 1970.",
			"Which is going to be different every single time we run.",
			"Assuming we don't run it within the same second.",
			"And then if we go down to line 71 and seven-- or, sorry, 67 and 68,",
			"we now have--",
			"we're giving a starting value to our ball,",
			"because we want to actually start manipulating our ball.",
			"So we give it an X and a Y. So we're setting it right to the center again",
			"but, now, we're defining a variable for it",
			"instead of just rendering it statically with our love.graphics.rectangle",
			"function, because we want this to change over time.",
			"We want to start letting our ball move around the screen.",
			"So these x and y variables are going to start changing now,",
			"and they're going to change relative to its current velocity.",
			"And its velocity is going to be stored in ball dx and ball dy.",
			"dx and dy are common shorthands for delta x and delta y,",
			"which is how you represent velocity.",
			"So what we're going to do, effectively, is take whatever our delta x and delta",
			"y are and add them onto our ball frame by frame,",
			"and that's going to have the effect of updating",
			"our ball's position by some value.",
			"And separating the delta x and the delta y",
			"will allow us to have different angles, different trajectories for our ball.",
			"And then another thing that we're also doing in this application,",
			"we're starting with the concept of a game state.",
			"Because now we can have a starting state, and what we're going to have",
			"is a play state.",
			"And so all we're going to do here in this example",
			"and in this application is start state as a string.",
			"In future examples, we're going to use what's called a state machine",
			"and actually separate out different states into their own--",
			"into their own modules.",
			"But in the context of this game, we're just",
			"going to use a simple string just to illustrate",
			"how it works, and we're going to say our first state, when we start the game,",
			"should be the start string in the start state.",
			"And so here on line 86, what we're going to do",
			"is solve a problem that we had in the last example, which was,",
			"the paddles could move beyond the edges of the screen, which is not behavior",
			"that we should permit.",
			"So we're going to call math.max on zero, and the same operation",
			"we were doing before, and that will have the effect of returning whichever",
			"of those two values is greater.",
			"So if the value is--",
			"if we're adding negative paddle speed to our y value",
			"and it goes into the negative range, which",
			"means it's beyond the top edge of the screen,",
			"zero is going to be the greater of those values",
			"and so it will always be zero in that case. math.max returns",
			"the greater of the two values.",
			"So it'll have the effect of clamping it such that it never",
			"goes above the top edge.",
			"The inverse is true for line 96, where we",
			"call math.min on virtual height minus 20,",
			"and player 1.y plus paddle speed.delta-- times delta time.",
			"And this will have the same effect, it will return whichever",
			"of these two values is lesser.",
			"In which case, if we've gone above virtual height minus 20, which",
			"is down at the bottom of the screen shifted by the size of our paddle,",
			"it's going to set it to virtual height minus 20.",
			"So we never go below that point.",
			"And we're doing the same thing for player two, exact same logic.",
			"And then if we're in the play state, we're",
			"going to actually update our ball's position.",
			"So we're in the-- if we're in the start state, ball's not going to move at all.",
			"But if we're in the play state, we want ball x to equal ball x plus ball",
			"x times delta time.",
			"And note that there is no shorthand in Lua",
			"for adding the value to itself, which is why we're calling ball",
			"x equals ball x, plus ball x times delta time,",
			"instead of just saying ball x plus equals ball x times delta time.",
			"Just a language decision that they made.",
			"But if we're in the play state, this will",
			"have the effect of scaling whatever our current ball's velocity is and--",
			"times delta time, so it stays frame rate independent.",
			"And then adding it to ball x and ball y, which will shift it.",
			"And we get this actually working down here in line 170--",
			"174.",
			"We're now-- instead of just rendering flat numbers to the screen,",
			"we're actually using ball x and ball y to render.",
			"And if we're in the play state, those will get updated.",
			"But if we go back up to line 127, now, we're in the love.keypressed function,",
			"so we're starting on line 120.",
			"Before we just had the if key equals escape, then love.event.quit.",
			"But now on line 127, we're going to check",
			"to see if the key is equal to enter or return,",
			"and then we're going to use that as our way of just testing state changes.",
			"So we're going to say if the game state is equal to the start,",
			"once you press entered, the game state should be equal to play.",
			"Otherwise, set it back to start.",
			"And we set it back to start, we're going to re-initialize our x",
			"and y to be in the center, virtual width divided by two",
			"minus two, virtual height divided by two minus two,",
			"and we're going to give it an initial random starting velocity again.",
			"And note here, this math.random two equal--",
			"is equal to one, and 100, or negative 100.",
			"It's just Lua's way of doing a ternary operation.",
			"So in C, you will often have like--",
			"you would be something like math.random two equals one,",
			"and you would have a question mark, 100 colon, negative 100.",
			"It's the same exact thing, but Lua doesn't",
			"have that sort of shorthand for a ternary operation, so we do it with",
			"and and or.",
			"We use logical operations instead to do the same thing.",
			"And note here we're also showcasing that math.random can take",
			"either one argument or two arguments.",
			"In this case, we're saying math.random two,",
			"which means it will give us a value between one and two.",
			"So a 50-50.",
			"And then if we do negative 50-50, that means",
			"we'll get a value between negative 50 and 50.",
			"So a range of 100, effectively.",
			"And so what that has the effect of doing, if we run our application,",
			"we go into Pong 4.",
			"",
			"We're in the start state so now we're rendering--",
			"if we're in the start state, it's set to render that message.",
			"If we press Enter, the ball gets a random veloc-- it's actually",
			"applying the velocity frame by frame.",
			"It's updating in the update method.",
			"If we press Enter again, it gets reset and we're back in the start state.",
			"So we do it again, it's getting a random value.",
			"Do it again, random value.",
			"Random value.",
			"So every time we're getting a different random ball value.",
			"But what happens if we try to actually run it, or try to interact with it?",
			"Nothing.",
			"Goes straight through.",
			"So we're missing a key piece, even though we",
			"have the core components of our game engine implemented,",
			"we don't have any concrete game play, nothing's interacting.",
			"And that's a major piece that we need to look at.",
			"And so the next--",
			"before we actually start doing that, though, we're",
			"going to take a look at the class update, Pong 5.",
			"And so in order to get into more of a-- in order",
			"to scale our code more effectively, we need",
			"to start looking in terms of classes.",
			"And instead of having an x and a y for our ball, an x and a y for our paddle,",
			"a delta x, a delta y for our ball, all these different variables that",
			"are sort of all over the place starting to bloat our code,",
			"before we get too crazy with it, we should think about",
			"how can we put this data altogether so that we can just think in terms",
			"of our paddles or our ball object.",
			"And so we use what's called a class.",
			"If unfamiliar, a class is simply a way of taking all these variables that",
			"we've been using thus far, but putting them together in a container such that",
			"we can just say, paddle.x or paddle--",
			"you know, in this case, car.",
			"If we have a function called drive car, now we can just say, car.drive instead.",
			"We don't have to have functions that are separate from our values,",
			"that-- we can put them all together.",
			"We can ask what's our car's current mileage instead",
			"of having all these different variables all over the place.",
			"So the classes are effectively blueprints.",
			"Use it-- you define a class.",
			"You say, OK, my car class is going to have",
			"a-- it's going to have a mileage variable,",
			"it's going to have a paint variable, it's going to have a make and a model,",
			"it's going to have all these things, and it's going to maintain its own state.",
			"It's going to maintain all of that for us.",
			"",
			"as seen here.",
			"And, typically, these are what are called fields.",
			"And then we'll have methods as well.",
			"Functions that, instead of being like completely separate from this data,",
			"a car now basically owns its own functions.",
			"It has its own method called drive, or turn, or honk, et cetera,",
			"and we don't need to have a function called,",
			"like, turn car, or honk car, et cetera.",
			"And then this class is effectively a blueprint.",
			"Well, we'll see shortly how to define a class,",
			"but in order to actually have like one paddle that has its own set of data,",
			"and another paddle that has its own set of data, we need to define--",
			"we need to instantiate, create objects from this class.",
			"Basically, use this class as a blueprint, but take it to a factory",
			"and create concrete cars from the blueprint.",
			"And those are objects.",
			"",
			"And so as seen here, our paddles and ball",
			"are perfect simple use cases for doing this.",
			"So let's go ahead and take a look at Pong 5.",
			"",
			"So in Pong 5, immediately, if you look at the directory structure,",
			"you can see that we've added a ball.lua and a paddle.lua.",
			"And it's tradition in most languages that have object oriented programming,",
			"as it's called, to capitalize class names just so you can differentiate",
			"classes, for example, from concrete objects or variables or functions.",
			"So if you go to our main.lua, on line 35,",
			"we're requiring a library, called class, which",
			"is what's going to allow us to actually create these classes.",
			"Because classes are not native--",
			"they are in a sense a native Lua feature,",
			"but Lua's way of doing object oriented programming is a little bit convoluted.",
			"Some folks have kindly put together a library that makes it a lot simpler,",
			"and a lot more closely related to other languages that do object oriented",
			"programming more predominantly, like Java or C#, or even Python,",
			"allow us to use the keyword class in a way that's very similar to those",
			"libraries.",
			"On line 39 and 43, we're acquiring our own code, paddle and ball,",
			"and we're going to take a look at those right now so we",
			"can see what a class looks like.",
			"So I'm going to go ahead and open up a--",
			"",
			"the ball file, ball.lua.",
			"And we can see here all we need to do just",
			"to create a ball class is, using our class library, ball gets class,",
			"and then curly brackets like that.",
			"And so now we have a class object, a class table,",
			"effectively, because everything in Lua is a table.",
			"But we can think about it in terms of objects.",
			"We have a class object called ball, and then we",
			"can start to define functions that belong to this class.",
			"So we're going to define what's called a constructor, or an init function",
			"in this case, an initializer.",
			"And it's going to allow us to initialize our ball with whatever we want.",
			"In this case, we want to start our ball off with an x and a y",
			"and a width and a height.",
			"And notice within here we have a word called self.",
			"Self and this are common words in object oriented programming languages",
			"that mean whatever object we're creating with this class is going to be self.",
			"So we'll see that--",
			"we'll see that shortly.",
			"Self.x gets x.",
			"So whatever concrete object we create using this call,",
			"this init call, set its x to this x, set its y to the y, set its width,",
			"set its height.",
			"That specific object.",
			"Self.",
			"And then we're doing the same thing for delta y and delta x,",
			"only that we are setting those two random values just as we did before.",
			"Self.dy, self.dx.",
			"That belongs to whatever specific object gets instantiated using this init call",
			"as we'll see in the code.",
			"We're defining just a reset function here just to make it easy.",
			"Before we had a--",
			"several lines of code that set our ball to the middle of the screen",
			"and gave it a random velocity.",
			"We're doing that now, and this is a good way of sort",
			"of refactoring out groups of logic.",
			"We're creating a function called reset that just does that all in one function",
			"call, and we just call that within our main function, condensing our code.",
			"And then notice we have an update and a render function now.",
			"And we are going to call these from our own update",
			"and our own draw function such that every object",
			"that we want in our game, every entity, and we'll build upon this game",
			"by game in the future.",
			"We'll just call update and render on everything from our main.lua,",
			"and defer all of that to each individual class and objects",
			"so we don't have to have a main.lua that's like 800 lines of code.",
			"We just break out all of the updates that are pertinent to the ball here,",
			"and all the render code that's pertinent to the ball here,",
			"call each individual balls update and render,",
			"and save ourselves a lot of time in refactoring.",
			"We're doing the same thing if we look at paddle.",
			"",
			"Paddle's a class, as well.",
			"It gets the reason the class library.",
			"Same exact sort of thing here, xy with height, and a dy.",
			"In this case, we're just initialising that to zero so that we're not moving.",
			"And then we're calling the update function here.",
			"So if our dy is less than zero, we're using the math.max function as before,",
			"with the top edge of the screen, and then whatever our y plus our current dy",
			"is, so delta y.",
			"And then here, self.y gets math.min, virtual height",
			"minus self.height, self.y plus self.dy times delta time.",
			"So that's the clamping behavior that we saw before with the paddles, only now,",
			"we took it from main and we put it in our update function",
			"so each paddle calls its update, and we take some lines",
			"of code out of our main file.",
			"And then it has its own render function here, same as the paddle.",
			"The render function for the paddle and the render function for the ball",
			"are effectively the same.",
			"And so if we go to our main, we-- we're acquiring the paddle",
			"and we're acquiring ball so that we can use them.",
			"So if we go down to line 79, instead of initializing our ball dx or ball dy,",
			"ball x, ball y, paddle y, player 1y, player 2y,",
			"now, we have player one is simply paddle 10, 35, 20.",
			"And player two is a paddle, virtual width minus 10,",
			"virtual height minus 30, 520.",
			"Ball is a ball, virtual width divided by two minus two,",
			"virtual height minus two, minus two, [? five by ?] two",
			"minus two, four and four.",
			"So those paddles now have control over their own x and y, their own width",
			"and height, and the battle-- or the ball has its own control over the xy width",
			"and height.",
			"And the self applies to this object.",
			"This is whatever self was in our constructor that we saw before.",
			"So even now we can just call-- so we can simply",
			"say player 1.x player 1.width, player 1.y, and everything is contained.",
			"We don't need a million variables to keep track",
			"of all the things going on in our game.",
			"And this is going to be especially important as we scale, and we have--",
			"maybe we have 100 things on the screen at one time.",
			"We don't want 100 times x variables where",
			"x is, however many properties that thing has that we need to keep track of.",
			"It's all the same logic except, now, we're",
			"calling player one update and player two update in our update function,",
			"instead of having all that logic therein,",
			"where they're moving and then keeping track of whether",
			"or not they're going past the top and bottom edges of the screen.",
			"And then if game state is play, we're now just calling ball update.",
			"And these are all getting passed in delta time.",
			"And then same thing here.",
			"Instead of having all that logic for restating the ball",
			"as one block of code, we took it out, we refactored it,",
			"we put it into our ball class, and now all we have to do",
			"is just one line of code, ball or reset.",
			"And then here down on line 169 in our draw function,",
			"we just have player one render, player two render, ball render.",
			"And later on as we scale and we make games",
			"that have a lot more things on the screen, a lot more entities,",
			"we can just do these renders in a loop.",
			"We can just say for each entity in our screen, just render it.",
			"For each entity in our screen, just update it.",
			"We can condense thousands-- hundreds of lines of code",
			"into just a few lines of code by deferring update logic",
			"and rendering logic to each individual entity,",
			"thanks to object oriented programming.",
			"And so that's how we're going to refactor using classes.",
			"So any questions on how any of that works so far?",
			"",
			"Cool.",
			"This is a good point, I think, to take a five minute break.",
			"And once we come back, we'll talk about how to look at frames per second.",
			"All right.",
			"So we're going to take a minute just to look at something kind of small,",
			"but often it's the case where in games if we",
			"want to make sure that we are performing like our applications performing well,",
			"we want to-- some way to monitor our frames per second.",
			"And so I figured I would just take a second",
			"to illustrate this quickly so that we can use this in the future.",
			"The two functions that are going to be important for us here--",
			"well, the first of these is just a little small cosmetic addition",
			"to the application.",
			"It's just love.window.setTitle.",
			"Title, so far our application, I'm not entirely sure what the--",
			"it says by default, I think it says--",
			"what does it say-- untitled.",
			"Yeah.",
			"So that's not-- it's a layer of lack of polish, more or less.",
			"And it'd be nice just to solve that problem quickly.",
			"So we're going to call a function called love.window.setTitle, some string,",
			"which will solve that problem quickly.",
			"We can make it look as if we have that detail down.",
			"And then the thing that's actually going to let us determine whether or not",
			"we are running well or we're running very poorly",
			"is a function called love.timer.getframespersecond.getFPS,",
			"which is something that LOVE graciously gives us for free",
			"and allows us to very easily slap it wherever we want.",
			"We can print it to the console, or we can just",
			"draw it straight to our application.",
			"In this case, we're going to do the latter.",
			"So I'm going to go ahead and go into LOVE--",
			"or Pong 6 in our main.",
			"If we go ahead and look at line--",
			"",
			"where is it-- line 64.",
			"love.window.setTitlePong, just quick and easy.",
			"Now, our window header is set appropriately,",
			"and if we go down to line 198, here I've decided",
			"to sort of split out this in a separate function,",
			"called display FPS on line 198.",
			"And the function is defined on line 207, so a function display FPS,",
			"takes no parameters.",
			"Its only goal is to just draw our current FPS to the screen.",
			"So we're going to set our current font to a small font.",
			"We're going to set our color-- so this is what I alluded to before in that we",
			"can set LOVE's rendering color to some RGBA quadruple,",
			"and anything that we draw beyond that point will then be drawn at--",
			"it'll be drawn into whatever that color is.",
			"So, in this case, we're giving it red of zero, 255 on the green, zero blue, 255",
			"fully opaque, which has the effect of setting our color to just",
			"completely green.",
			"And then love.graphics.print, our current FPS--",
			"string, and then our current FPS here, which is love.timer.getFPS.",
			"But it's going to return that as a number, and by default,",
			"Lua does not allow you to concatenate strings and numbers,",
			"so we're going to concatenate here with this ..operator,",
			"which is the way of doing string concatenation in Lua.",
			"We're going to call the two string function.",
			"So we're going to take in love.timer.FPS,",
			"we're going to make it a string, and then",
			"we're going to concatenate it here.",
			"And then we're going to call love.graphics.print on that value,",
			"and then we're going to put it at 10, 10.",
			"So shift it just a little bit from the top left edge of the screen.",
			"So that's going to have the effect of the go to Pong 6, and we run it.",
			"We can see now it starts at zero and 52 because it",
			"has to gather a few frames of data before it",
			"has a number we can actually use.",
			"But we see there FPS at 60, and so our game runs, otherwise, just the same.",
			"Completely random.",
			"A little bit broken, but that's OK, we'll fix it up.",
			"But currently we have a problem, and that's",
			"that our ball is just going straight through our paddles.",
			"So how can we fix this problem?",
			"",
			"We need some way of detecting collision.",
			"So in 2D games, generally, there's a concept of aa bb collision detection.",
			"And what this is is axis aligned bounding box collision detection, which",
			"means that we have bounding boxes, just rectangles, quads,",
			"which have an x and a y and a width and a height which are nonrotated.",
			"So they're completely aligned with our axes.",
			"They're completely parallel perpendicular.",
			"So the only way that we can get this easy math, the aa bb collision",
			"detection working is if we have no rotation of our boxes.",
			"They have to be completely aligned.",
			"But if they are, we have a very simple algorithm,",
			"which is we're just making sure that no edges of our boxes",
			"are outside the opposite edges of our-- of the other rectangle.",
			"So if we have one rectangle-- and I'll illustrate this on the screen here.",
			"We have two rectangles.",
			"If this top edge is below this edge, we know",
			"no matter what, they're not going to inter-- they're not intersecting.",
			"There is no way it can because it's below here.",
			"So no matter where it is on the x and the y, if it's below here,",
			"it's not a collision.",
			"If this edge is on this side of this rectangle,",
			"we know, as well, there's no way those two boxes can overlap.",
			"And it applies to every edge as long as it is the opposite edge.",
			"So if this edge is below this one, if this edge is above this one,",
			"if this edge is on the right, and this edge is on the left,",
			"it means that no matter what, those boxes aren't colliding.",
			"So we can simply do four conditions.",
			"We can say, if rec1.x is not greater than rec 2.x, plus rec2.width,",
			"and rec1.x plus rec1.width is not less than rec2.x,",
			"so if the two edges are not beyond their opposite edges, same thing with the y,",
			"and the y plus rec1.height, we know that we have a collision.",
			"We know that because we haven't fulfilled any of those criteria.",
			"But we know that if that's not true, if the--",
			"one of the edges is not beyond the opposite edge, then it's--",
			"we do have a collision.",
			"So it is going to be true.",
			"So we'll see that here in our code.",
			"The go to Pongs 7, at line 113, we have a function",
			"that we're calling called ball collides.",
			"Our ball class has a function called collides.",
			"So let's go ahead and take a look at our ball class.",
			"",
			"And in this case, we've defined our function such",
			"that it takes in a paddle parameter, so it's",
			"going to compare against another rectangle that",
			"has an xy and a width and a height.",
			"And we're saying that if rx is greater than the paddle x, plus the paddle",
			"width, which means if rx is greater than the right edge.",
			"So if our top left is greater than the--",
			"or just our left-- is greater than the right edge,",
			"we know that we can't collide.",
			"Same thing if it's greater than the other rectangles,",
			"self.x plus self.width.",
			"No, sorry.",
			"In that case, if the paddle's x is--",
			"it basically the same operation but from the paddle's perspective.",
			"If the paddle is greater than the rectangle on the right side,",
			"if it's farther along the right side past the right edge,",
			"we know that there can be no collision.",
			"It's just impossible.",
			"Same thing with y.",
			"If the y-- self.y, so this ball is y--",
			"is greater than the paddle's y, plus the paddle height.",
			"So if it's below the edge of the paddle, because we're",
			"taking the height into consideration, or if the paddle's y is greater",
			"than this ball's y plus self.height, then we",
			"know that that also can't be a collision.",
			"But if that's not true, then we need to return true.",
			"",
			"And so if we go back to our main-- no, that's the wrong main.",
			"We go back to main.lua here.",
			"We're calling ball.collides.",
			"So if we're in our game state, if we're in our-- sorry,",
			"if we're in our play state, if game state is equal to play,",
			"if the ball collides with player one, so player one is the left paddle.",
			"So if there's a collision detected, the ball.dx and dx is our x velocity.",
			"So it's whatever direction it's moving on the x-axis.",
			"So it's going to be moving to the left if it's gone--",
			"if we detected a collision.",
			"And it doesn't matter whether it's moving left or right,",
			"but we needed-- what we need to do is set it to its negative value.",
			"Because if it's moving left and we said--",
			"let's say it's moving left at its negative 20 pixels and we set to 20,",
			"the dx is now 20, it's going to start moving to the right.",
			"It's going to have the effect of inverting its x velocity",
			"and, therefore, reversing its direction.",
			"But what we're also doing here with times 1.03",
			"is we're multiplying a little bit just to speed up the game.",
			"Because we don't want the game to into perpetuity just have the same velocity.",
			"It's not going to ramp up the excitement.",
			"We want to keep things going, we want to get some momentum going,",
			"so what we're going to do is call ball.dx",
			"equals its negative value times a scaler that we've determined arbitrarily.",
			"In this case, I've decided it should be point--",
			"1.03 so it'll increase it by 3% every time.",
			"And then in the event that we have a--",
			"our ball-- because it's getting added, its x velocity is getting",
			"added each frame to its position, we want",
			"to make sure that it's not like inside of our paddle.",
			"Because it is possible that it could shift a certain number of pixels",
			"to the left, or to the right, because the same operation applies.",
			"Such that the two are sort of like on top of each other.",
			"We want to re-- we want to shift it, we want to reset it.",
			"So what we're going to do-- because it'll detect another collision",
			"immediately if that's the case.",
			"If it, on the next frame, it's within that paddle,",
			"it's going to say that it's still colliding with that paddle",
			"so it's going to shift its velocity again.",
			"And it's going to have the effect of it infinitely sort of bouncing",
			"back and forth within the paddle.",
			"We don't want that to happen.",
			"So if we detect a collision, we want to shift it.",
			"We want to make sure it's completely outside of the paddle's collision box.",
			"So we're saying ball.x gets player one.x, plus five.",
			"Plus five because that's the width of the paddle.",
			"So that has the effect of just once you detect a collision, negative set--",
			"x velocity to negative, and then instantly",
			"shift it right on the right edge of the left paddle.",
			"And we're doing the same thing here.",
			"If ball collides a play or two, we're doing the-- we're negating or inverting",
			"its x velocity.",
			"And then-- this is the same exact operation,",
			"but since it's based on the-- the left top left corner,",
			"we can't minus it by five, that wouldn't make sense.",
			"We're going to minus it by four because that's the width of the ball.",
			"So if we minused it by five, we would have one pixel of space.",
			"We plussed it by five on this example, because we're",
			"coming in from the right side.",
			"We want to just make sure that it's right on the right edge of the paddle,",
			"so we're setting it to player one.x.",
			"And in this case, we're using the minus four",
			"because that's the width of the ball.",
			"So we want to shift it to the left, the width of the ball,",
			"and that will have the effect of the right paddle, if there is a collision,",
			"it'll just get shifted over, and the right-- the ball",
			"will be touching the paddle right on their two edges.",
			"Here on line 118, we're solving the problem we had before of what",
			"happens when the--",
			"oh, sorry, that's actually not what I was thinking of.",
			"This is the-- if there's a collision, then we want the ball's y velocity",
			"to randomize every time.",
			"So this has the effect of when we're playing the game",
			"and we've detected a collision between the two paddles,",
			"we don't want the same angle back and forth every time",
			"because then the game will just infinitely take place the exact same--",
			"the same angle will just keep happening over and over again.",
			"We don't that to happen.",
			"We want some variability in terms of how the ball bounces off the paddle.",
			"So what this does is, still within the condition,",
			"if the ball collides with player one, we're",
			"going to, say, if the y velocity of the ball is negative,",
			"then we want to keep it going negative.",
			"We still want the ball-- like if the ball's coming",
			"at a sort of an upward angle and it bounces off the paddle,",
			"we want the x velocity to shift.",
			"We want it to go to opposite direction, but we want the ball to keep going up.",
			"We don't want the ball to like bounce back down, which",
			"wouldn't make any sense.",
			"We don't want to negate the y velocity.",
			"So we're going to keep the y velocity negative,",
			"we're going to set it to a negative value between 10 and 150.",
			"And it's just arbitrary.",
			"You can set that to whatever you want.",
			"And then we're going to do the same thing if the y velocity is positive.",
			"We want the ball to--",
			"we want the ball to go in the positive direction if it's already coming down.",
			"So we're doing the exact same thing here.",
			"It's the same logic in the player two instance.",
			"And then this was what I thought I was looking at before for a second,",
			"but this is how we fix the issue of the upper and lower boundary of the screen.",
			"Right.",
			"Because it's one thing to solve the fact that we have the paddles",
			"now deflecting the ball, but we don't want the ball",
			"to infinitely go above the top edge of the screen,",
			"or the bottom edge of the screen.",
			"So this is just a simple if condition.",
			"We're just saying if the ball's less than or equal to",
			"zero, which means if the ball's at the top edge of the screen,",
			"just set it to zero, so make sure it doesn't",
			"go above the edge of the screen, and then negate its wide velocity,",
			"so it's instantly going to start going downwards.",
			"Yes.",
			"AUDIENCE: This question is about Pong 7, line 113.",
			"Couldn't the shifting of the balls dx and y",
			"be done in the ball collides function, if there is a collision?",
			"COLTON OGDEN: The shifting of the ball's function if ball collide-- no,",
			"collides the ball-- the collides function",
			"is a-- it just returns true or false.",
			"So it would be--",
			"I mean, I think you probably could refactor it out that way,",
			"but the purpose of collides isn't to have",
			"any sort of side effects like that.",
			"Its only purpose is just to return true or false.",
			"Because we can do any-- we could have any sort of behavior we want.",
			"In a collides function, we may not necessarily want to shift the ball",
			"or do anything, we might just want it return true",
			"and print something to the console.",
			"So, in terms of, I think, in an engineering perspective,",
			"it makes more sense just to have a simple true or false function,",
			"and then determine how you want that to actually influence your game",
			"state inside your main function, or inside some other function.",
			"OK.",
			"",
			"And so, Yeah, we went down here.",
			"The top edge of the screen, and then bottom edge of the screen.",
			"If the ball.y, it's same exact thing, just the bottom edge of the screen.",
			"If the ball.y is greater than or equal to virtual height minus four,",
			"and we're doing virtual high minus four, why?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Exactly.",
			"So we want to make sure that we write-- as soon as we--",
			"the bottom edge of the ball touches the bottom of the screen,",
			"we want to detect a collision, then we want to say ball.y, the--",
			"gets virtual height minus four in case it overshot the bottom edge",
			"based on how much time has elapsed and how much the velocity is,",
			"you want to instantly put it right up so that it's at the edge",
			"so it's a clean bounce.",
			"And then we want to negate the y velocity just the same",
			"as we did up above.",
			"And so if we run our program here, Pong 7, looks the same,",
			"but now the ball's bouncing.",
			"And note that it got a neg-- it got a random-- it",
			"looks like it's going below the bottom edge",
			"because the monitor is currently at 720 and that's the window resolution,",
			"but it is bouncing off the bottom edge as well.",
			"And the angle, if you'll note, is a little bit different every time,",
			"because we are giving it a random y velocity, a y--",
			"yeah.",
			"And then that's influencing-- oh, I messed up.",
			"I wanted to illustrate the speed increase.",
			"It's going to take a little bit of time.",
			"But every time it detects a collision, it is going to be scaling its--",
			"the x velocity by 1.03.",
			"So it's going to make it a little bit faster.",
			"Now, currently, the y angle's a bit steep,",
			"so it's going to take forever to illustrate that.",
			"But we'll see that in a later example.",
			"So we have the basics of our game.",
			"But how are we keeping score?",
			"What's the determining factor for how we keep score in Pong?",
			"Left or right.",
			"As long as it goes past the left or right edge of the screen.",
			"So what do we need to thereby do?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: We do need a counter, and we",
			"need to also monitor whether the ball has",
			"collided with the left or the right boundary of the screen.",
			"And then have that increment that counter.",
			"So we're going to go ahead and take a look at Pong 8",
			"to see how this is implemented.",
			"We have here on line 88 and 89 some counter variables, player one score,",
			"player two score.",
			"We've had those for a long time, but we haven't used them.",
			"We've only used them to draw to the screen.",
			"We're actually going to now increment them, and show them as scorekeeping",
			"variables in our code here.",
			"I thought I had implemented it in Pong 8,",
			"but I think I might have left out the actual incrementing of the score.",
			"But this is the logic that's pertinent to that example.",
			"So if ball.x is less than zero, which just",
			"means if we've gone past the left edge of the screen,",
			"ignore serving player for now.",
			"The important thing is now we are doing player two score,",
			"gets player twp score, plus one.",
			"Just a simple increment.",
			"And then we're resetting the ball.",
			"Same thing for here.",
			"If the ball.x is greater than virtual width,",
			"so pass the right edge of the screen, and actually it could be ver--",
			"if ball x plus four is greater than virtual width,",
			"then and it will have the same effect.",
			"But, actually, no, because we want to make sure",
			"that we don't see the ball at all when they score.",
			"So, yeah, this is actually correct.",
			"If ball.x is greater than virtual width, then serving player gets two,",
			"player one score is player one score plus one.",
			"And then we're going to reset the ball.",
			"Serving player.",
			"So now what we need to talk about is the idea of serving.",
			"So when we start up the game--",
			"so let's go ahead and take a look at--",
			"",
			"we're going to go to Pong now so we're going to go straight to Pong 9,",
			"and then we need to take a look at what a state machine is.",
			"So currently in the game, we've talked about state a little bit.",
			"We've had the start state, which means the game is ready for us",
			"to just press Enter and then the ball will go off in a random direction.",
			"And then we have the play state.",
			"And the play state is set to our paddles interacting with the ball,",
			"and then keeping track of score, basically.",
			"A state machine is very important.",
			"It's a ubiquitous concept in game development.",
			"It just means, how can we monitor what state we're in",
			"and what transitions take place between those states to bring out new states.",
			"And each individual state has its own logic.",
			"And by breaking out the logic of these states separately,",
			"we can scale our code much bigger and not have monolithic code for--",
			"this particular diagram is an example of what you might have as a state",
			"machine for a character like Mario where you have a ducking state, a release",
			"state which takes the down-- the in-- like the input of down.",
			"So if we're releasing down, it'll become standing.",
			"So ducking state, the transition is release the down key,",
			"he becomes standing.",
			"Standing key, press the down key.",
			"He becomes ducking, these are states and transitions.",
			"These individual states are the overall representation of his behavior",
			"at large, basically.",
			"And the same logic applies to our game.",
			"We have a play state, we have a serve state.",
			"We want to have maybe a game over state.",
			"If someone scores 10 points, then it should say, oh, the winner is x.",
			"And you can define any arbitrary number of states, it--",
			"which depends upon your model, whatever game you want to develop.",
			"For example, like Super Mario has a title screen,",
			"maybe your game has like a high score state.",
			"You want to display all the high scores in your game",
			"and we'll actually show that in a lecture next week.",
			"But this is what a state machine is.",
			"It's just a-- it can be in any one particular state at one time,",
			"and the transitions are what allow you to go in between your states.",
			"And each state does have transitions in and out of other states.",
			"And we're going to use this in Pong 9.",
			"So beyond illustrating the score, we're going",
			"to start keeping track of more than just the start and the play state.",
			"We're actually going to start modeling the serve state.",
			"And so let me go ahead and illustrate what this looks like.",
			"",
			"So if we're here, I just pressed Enter.",
			"We started at the start state as normal, but I pressed Enter",
			"and now it says player one serve.",
			"So we're actually serving.",
			"And so if I press Enter again as it instructs me,",
			"player one is on the left, the ball should move to the right.",
			"Which it does.",
			"So I'm going to go ahead and lose on purpose as player two.",
			"And now it's player two's serve.",
			"So whichever character, whichever player loses should get to serve again.",
			"And so now if I press Enter, note when we",
			"were player one, the ball moved to the right.",
			"So for player two, the ball moves to the left.",
			"So we have now a little bit more interaction.",
			"We have different states.",
			"We start off the game, and then we serve, and we play.",
			"So when the ball's live, when we're actually doing this,",
			"we're in the play state.",
			"Now we're in the serve state.",
			"So what's the transition between the--",
			"sort of the play state and the serve state?",
			"What's the transition there?",
			"",
			"We score a point.",
			"So if we are looking at our state diagram and we're in the play state,",
			"the transition to the serve state is x player scores a point.",
			"And then if we're in the serve state, the transition",
			"is someone presses enter.",
			"Enter key gets pressed.",
			"And so that's how we want to think about our games",
			"if we have a bunch of different sets of, sort of logic,",
			"that we can sort of take out of our game and think about conceptually,",
			"it allows us to break our game up into a bunch of different modes and states,",
			"and not really get overburdened by all these variables",
			"that maybe need to keep track of-- or what state are we in?",
			"Like what are all these variables doing?",
			"And we'll see how we can break this out in a more",
			"modular fashion in future weeks.",
			"Note that right now, currently all we're doing is",
			"we're setting a state variable to some string here,",
			"and just doing if conditions on it, which",
			"works fantastically for small examples.",
			"So if, like, for example, if we're in the update function and game state--",
			"see, over here we're saying if the game state is set to serve,",
			"then we're initializing all of the variables.",
			"And if the game state is play, then we need",
			"to actually perform our logic here.",
			"So if the-- if we're in play, this is going to get called,",
			"each frame, and we're going to say, if ball collides with player one,",
			"do all this stuff.",
			"And then this allows us to sort of think of our game.",
			"It's almost like having separate update functions within our update function.",
			"And we'll actually see how we can take these out of one update",
			"function in future weeks with a actual state machine class",
			"and implement things a little bit more abstractly.",
			"But suffice to say, now, whenever we want to like, for example,",
			"make a transition, if someone scores here,",
			"like if we're going to the left side of the screen,",
			"it's ball x is less than zero.",
			"All we have to do is just set this state to serve",
			"and our update function is then going to update appropriately.",
			"So any questions on how sort of state machines or the state",
			"works here in the context of Pong?",
			"Yes.",
			"AUDIENCE: So the state machine is the relationship to the state",
			"or is the container of the states?",
			"COLTON OGDEN: The state machine is sort of a--",
			"the overall conceptual look at what your different states",
			"are and their transitions, yes.",
			"And in future weeks we're not implementing a state machine",
			"object or a class here.",
			"But in future weeks, we will see the state machine class",
			"that manages transitions between different states in a more",
			"modular and clean fashion.",
			"All we're doing here is our state machine",
			"is just if statements and saying if the state is equal to this, then do this.",
			"And then change the state to some value.",
			"AUDIENCE: So the state machine is a concept?",
			"COLTON OGDEN: It is a concept.",
			"Yeah.",
			"But we will see an implementation of a state machine as an object next week.",
			"Any more questions?",
			"OK.",
			"Cool.",
			"So currently we have scoring.",
			"As we saw, the player one score and player two score are getting",
			"incremented now and, therefore, getting rendered to the screen",
			"whenever we go to the left or the right edge.",
			"So we're keeping track of score.",
			"But what do we need now in order for someone to win?",
			"AUDIENCE: [INAUDIBLE].",
			"COLTON OGDEN: Sorry?",
			"AUDIENCE: [INAUDIBLE].",
			"COLTON OGDEN: Yes it does.",
			"Exactly.",
			"So it's actually quite simple.",
			"All we need to really do is just an if statement, right?",
			"If someone's score is equal to some value, 10, then some player has won.",
			"So if we look at player-- if you look at Pong 10, we go to main,",
			"and go to here, line 174, and also line 160,",
			"we can see that all it literally is is in our logic",
			"from before, where we're just testing to see whether the ball is",
			"gone beyond the left or the right edge.",
			"Because this is effectively where you need to do your check anyway",
			"to see whether someone scored a point.",
			"So all we're doing is adding logic to that part of the program",
			"and saying after we increment their score.",
			"If it's equal to 10 we're setting a value called the winning player.",
			"We're going to set it to two.",
			"So if the ball.x is less than zero, then that means that player one got",
			"scored on because it went pass the left edge of the screen.",
			"Therefore, player two score should go up.",
			"And, therefore, the winning player should be, too, if the player two or--",
			"two score is equal to 10.",
			"And in this case, see, we're here, we're setting a new state done,",
			"and then if that's not the case, or if their score is still less than 10,",
			"we should still-- we should set it back to serve, and then reset the ball.",
			"And so if we go to our update function, here--",
			"actually, we're doing it in our update phase.",
			"So, currently, if it's the done state, the ball gets reset",
			"but no update is being applied to the ball in that case.",
			"We still have scores 10.",
			"It'll still render the score, so score whoever's got 10",
			"and it'll show the other player's score.",
			"And the actual logic that applies here, whenever",
			"we want to break out of that state, is in our love.keypressed key function.",
			"We see you're on line 227.",
			"If game state is equal to done, which we set it to before,",
			"and this will only execute if they've pressed",
			"Enter or return, so it's effectively waiting",
			"for them to press Enter or Return.",
			"You want to set game save back to serve.",
			"We want to reset the ball.",
			"We want to initialize those scores back to zero.",
			"So we're setting up a brand new game, effectively.",
			"If the winning player is one, then we'll give serving player to two",
			"so that they have the advantage on the next game,",
			"and then otherwise set it to one.",
			"And if we go down to our render function, so down to line 275,",
			"if we're in the done state, then we should render to the screen player",
			"and then winning player, because, remember,",
			"we set winning player to one or two, depending on whether--",
			"depending on who won and who scored the tenth point.",
			"We'll say player one or two wins, and we'll just render that and then",
			"press Enter to restart after that.",
			"And that's the logic for that.",
			"And we can see this in playoffs.",
			"If it's too slow, we might not have to go through an entire run.",
			"But I sped up the--",
			"whoops-- I want to actually get the ball back.",
			"I set up the speed so it's-- we're in the serve state,",
			"we're in the play state, it's up-- the ball bounced back.",
			"It's going to be a bit tedious, but suffice to say, it's a big payoff.",
			"Don't worry.",
			"",
			"Should have set the speed a little faster.",
			"Almost there.",
			"",
			"It's getting tense.",
			"And player one wins.",
			"So there we-- we're also setting the font to a larger size, and in the code",
			"I create a new font object that's basically",
			"between the small font and the score font, which is a large font.",
			"So 16 size font.",
			"And so player one wins, and that's really all it boils down to.",
			"Just keeping track of your counter and just making sure that when you do",
			"hit 10 in your logic for detecting the screen collisions,",
			"that you set the state to done.",
			"And if the state is done, then you just need to monitor keyboard input",
			"and see whenever someone presses enter.",
			"Someone press Enter in our love.keypressed,",
			"it does the-- it has the effect of setting",
			"player-- it's player two serve because player one won so that's only fair.",
			"We're going to press Enter to serve and then we begin a brand new game.",
			"And that's simple.",
			"So now we have an infinitely playable game with a bunch of simple states.",
			"We're missing a very important detail, though, in my opinion,",
			"and that's sound.",
			"Currently, our game is just very--",
			"it's great, the gameplay all works.",
			"Everything is working fine, but just missing a little polish.",
			"And so what we're going to do is we're going",
			"to start adding audio to the game, which is, in my opinion,",
			"one of the more fun things to add because it also means you're",
			"close to the end of your project.",
			"Love.audio.newsource is a function we're going to look at here.",
			"All this is going to do is take a path and then optionally a type.",
			"And this path is going to be to a sound file,",
			"and it's going to create an audio object that you can play back",
			"at any point in your application.",
			"So what we're going to effectively do is just whenever a collision happens,",
			"depending on what type of collision it is, we'll just play a particular sound.",
			"And a program that I really like to use for all of this,",
			"and I-- what I encourage you guys to download",
			"if you want to start tinkering with your own sounds for your project,",
			"is a program called bfxr.",
			"It's free on Windows and Mac.",
			"I'm not sure if they have a Linux port.",
			"They might have a Linux port of a similar program called sfxr",
			"which is what this is based off of.",
			"But what this allows you to do is just generate a bunch of random sounds.",
			"And I can illustrate that shortly for you.",
			"If you would like to grab it, it's on bfxr.net.",
			"It's a super quick download and--",
			"here, I'll actually-- I'll demonstrate it just so we can see how it plays out.",
			"So this is the interface.",
			"Make sure I have some audio.",
			"And then there is a lot of different presets here.",
			"So there's pickup slash coin, laser slash shoot.",
			"It's meant for sort of like small games like this,",
			"like implementing on the fly prototype audio type stuff.",
			"But you can see, it just implements--",
			"I'll turn that down, it's a little loud.",
			"It-- we have power-ups, for example.",
			"So every time I click on this, it's going to give us a random power-up so.",
			"[COMPUTER SOUND EFFECTS]",
			"",
			"And then randomized, you get all sorts of weird nasty stuff.",
			"And then-- the stuff that we'll use is blip slash select.",
			"Most of the things in our in like interfaces and games like Pong you",
			"just want simple sounds like this.",
			"So I've already done the work of generating a few sounds",
			"that I thought fit pretty well.",
			"I'll go ahead and show you the code first in Pong 11.",
			"If we go to-- if you'll see-- if you look at the directory structure,",
			"you'll see we have a sounds folder.",
			"In the sounds folder, I've created three sounds, paddle hit, which",
			"is anytime the paddle hits the ball.",
			"Score, which is when any-- anytime the ball",
			"goes past the left or the right boundary of the screen.",
			"And then wall hit, so any time the ball touches",
			"the top or the bottom of the screen.",
			"And so the logic of this is extremely simple.",
			"All we need to do is whenever--",
			"we already have it implemented, so all we need to do is--",
			"",
			"oh, first thing, I should say, and this is a good illustration of a table.",
			"And we'll start to see this a lot more in the future.",
			"We didn't really use tables much in this lecture,",
			"but the table is Lua's like sort of be all, end all, data structure.",
			"It's the dictionary-- Python dictionary, JavaScript object.",
			"It's an array, it's everything that you need for anything",
			"beyond simple variables in Lua.",
			"It's what everything, even like classes in other libraries are made out of.",
			"In this case, we're just initializing a table here called sounds,",
			"and we're passing in three keys so it takes-- it can take in key value pairs,",
			"or you can just give it a list of values and it will create indices for them",
			"implicitly.",
			"Here, we're just passing in like you would do in Python or JavaScript.",
			"Paddle hit, and note that it does need these square brackets in order",
			"to initialize key value pairs in a table like-- in this format here.",
			"Paddle hit gets love.audio.newsource.",
			"And in this case, it just takes in a path,",
			"so sounds slash paddle head dot wave.",
			"And we're giving it the key word-- or the string static,",
			"which is the type of asset it is--",
			"it's stored as.",
			"So you can have either static or stream audio assets.",
			"So if they're static, they're loaded in memory",
			"and they're kept in memory for the execution of your program.",
			"If they're stream, then they're loaded on the fly as needed",
			"by your game engine.",
			"And streamed audio assets can be helpful if you",
			"have a huge game with a ton of sounds and a long like large audio files.",
			"You don't want to keep all those in memory, necessarily,",
			"because that could take up many, many, many megs or gigs of audio.",
			"And if you're sort of loading assets on the fly,",
			"if you have dynamic loading in your game,",
			"then that's another thing you should take into consideration.",
			"In this case, these are very tiny sound files,",
			"because they're like-- like a fraction of a second long.",
			"So we're just setting them all to static so they get preserved in memory,",
			"and we're just loading all three of them into this table.",
			"And if we want to refer to these later on, all we need to do is sounds--",
			"we can either reference sounds.paddlehit, like that,",
			"if we wanted to.",
			"Because by default, Lua just gives you a dot keyword, sort of the way JavaScript",
			"does its objects, with the same name as the key that you passed in,",
			"or you can do it the Pythonic way, which is, without the dot, sorry--",
			"with just square brackets and now have the same of-- those two are equivalent.",
			"It won't work, though, if you decided to put a space in your key,",
			"it will, I believe, it will--",
			"just won't work at all, but it may inject an underscore.",
			"I'll have to test it out and find out.",
			"But, generally, it's not best practice to use dot",
			"when you already have the keys lined up like this, anyway.",
			"And what you can do with strings that you",
			"can't do with dot using the dot notation,",
			"is dynamically generate a lookup of your table with you--",
			"which you can do with strings, which you-- yeah,",
			"because you can't in a four loop do four something in table,",
			"and then table dot something, that just won't work.",
			"But you can do for everything in your table",
			"and then look up the key as that value, that iterated value in your table.",
			"We'll see examples of that in future lectures.",
			"But that's just something to keep in mind.",
			"So we have our table here, a sounds table.",
			"Oh, and-- and we have our sounds ready, they're loaded in memory.",
			"All we need to do now is wherever we have",
			"anything that, like any collision in our code, we just do this.",
			"It's as simple as the table.",
			"At the key that we want, colon, which is Lua's",
			"way of calling a function of a class or a table.",
			"Colon play, and the play function is part of the new source audio",
			"object in LOVE that we created in the table,",
			"and that will just have the effect of just playing it once.",
			"You can set it to looping.",
			"You can say the sounds paddle hit, set looping to true,",
			"and it will just infinitely play over and over again,",
			"which we wouldn't want for a sound like this.",
			"It would sound obnoxious.",
			"But if you have a music track, for example,",
			"in a level, or something like that, you would",
			"want set looping to be true so that when it finally ends,",
			"your user isn't just playing a game in silence.",
			"So we're doing it with paddle hit, we're doing it with wall hit as well.",
			"So I've named them appropriately so that it's easy to infer where",
			"and for what purpose the sound files are used.",
			"So whenever they're at the upper or lower boundaries, play the wall",
			"hit sound, and then whenever the ball reaches",
			"the left or the right edge of the screen,",
			"just play the score sound effect.",
			"And so if we play our game, and this is always one of my more favorite parts",
			"is playing the game with audio because it just makes",
			"such a difference, in my opinion.",
			"We get sound effects.",
			"It's a little thing, and it's very easy, but it adds-- it adds so much flavor.",
			"And then (explosion), and there we go.",
			"And then our game is practically implemented at this point.",
			"There's just one more example that I would",
			"like to show you guys, a small example, because all of the examples",
			"thus far have had the resize equal-- resizable equals false.",
			"Sort of key in the push setup screen initializer,",
			"and in case you want to have a game where you can resize your window,",
			"all we need to do is call a function called love.resize,",
			"which takes a width and a height.",
			"And what we're going to end up doing with that,",
			"specifically, for our use case, because we're using push,",
			"we're going to go to Pong 12.",
			"And then if we go to main.lua we see here on line 85,",
			"I've changed resizable to equal true now so that it will actually",
			"allow us to resize the application.",
			"If that's false, you won't even be able to click and drag",
			"the bottom corner of the screen, it just won't let you do it.",
			"And then all you have to do is call love.resizewidthheight,",
			"and then pass in push resize with height.",
			"Because push underneath the hood takes a texture and renders to it,",
			"and then upscaled it to fill your window,",
			"and so it needs to know what your current window dimensions are so",
			"that it can upscale it to fit the right dimensions.",
			"And push also adds things like letterboxing,",
			"which is convenient if you want to maintain the exact same aspect ratio.",
			"And in a game where maybe you have the UI that's",
			"driven by the size of your application, this function",
			"will be important because then you can resize your--",
			"you can resize and reposition your UI elements appropriately.",
			"Because if your game is small, maybe you want certain parts of UI",
			"to be invisible, or in a different location",
			"altogether, just so that you don't take up a ton of screen space,",
			"and just to accommodate all possible users of your application.",
			"But that has the effect now of-- if we go into Pong 12",
			"and then run it, actually, might not even be able to use the but-- yeah,",
			"I can just do this now.",
			"I can resize it, and it'll maintain the virtual width and height",
			"that we set it to before, because that's like first and foremost",
			"what push will do and it'll letterbox no matter",
			"what size your application is to make sure that it maintains that aspect",
			"ratio.",
			"So if you're beyond that aspect ratio vertically or horizontally,",
			"you'll get the appropriate letterboxing for it.",
			"So it's super convenient.",
			"You don't have to worry about your users getting super distorted aspect ratios,",
			"because they are using some sort of unforeseen resolution.",
			"That will always maintain it even if it's super tiny",
			"because their monitor is super thin.",
			"It will always maintain the aspect ratio.",
			"But that's pretty much it for Pong, actually.",
			"We have a complete game, start to finish, and if you have any questions,",
			"I'd be happy to answer them.",
			"",
			"Any questions?",
			"Cool.",
			"All right.",
			"Well, I'm excited to teach the rest of this course to you guys.",
			"We've only scratched the surface.",
			"We have a lot more to cover.",
			"Next week, we'll actually be covering Flappy Bird",
			"so we'll get some nice colorful graphics, which",
			"is a stark difference to our black and white aesthetics today.",
			"But that's it for Pong.",
			"So thanks for coming.",
			""
		],
		"is_youtube": false
	},
	"video_003": {
		"section": "CS50G 2020",
		"subsection": "Flappy Bird",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000200/HarvardXCS50G-V000200.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000200_DTH.mp4"
		],
		"video_duration": 7523,
		"speech_period": [
			16.66, 1.34, 3.74, 2.74, 3.33, 2.92, 1.91, 2.37, 4.53, 3.6, 0.72, 2.67,
			3.51, 0.785, 1.735, 2.61, 2.52, 2.55, 2.67, 2.579, 5.221, 3.81, 3.13,
			2.21, 1.994, 2.916, 2.95, 4.47, 2.776, 1.874, 3.06, 4.74, 2.104, 2.666,
			3.63, 2.13, 2.7, 2.34, 2.49, 3.0, 3.9, 2.46, 2.95, 5.06, 1.89, 2.409,
			1.791, 5.25, 3.03, 2.26, 2.47, 1.75, 2.041, 3.929, 1.83, 1.08, 2.67, 1.71,
			3.18, 2.46, 3.51, 1.58, 2.719, 1.791, 3.249, 1.641, 2.76, 3.15, 3.6, 1.62,
			1.566, 1.374, 1.35, 2.416, 1.154, 3.36, 2.49, 2.64, 3.85, 3.77, 2.25,
			3.72, 3.54, 2.67, 2.11, 2.207, 1.833, 2.01, 2.91, 2.88, 2.609, 4.861,
			1.35, 3.96, 4.32, 2.61, 1.96, 1.34, 3.73, 2.36, 3.57, 5.04, 3.75, 2.97,
			1.89, 1.708, 2.002, 1.15, 3.06, 2.46, 3.484, 2.791, 5.395, 2.19, 4.86,
			4.08, 3.93, 1.6, 2.69, 5.102, 3.028, 4.14, 2.49, 3.52, 7.16, 3.45, 2.246,
			2.374, 1.99, 3.74, 3.06, 3.75, 2.28, 3.305, 1.625, 4.301, 1.749, 1.966,
			2.874, 2.67, 2.145, 3.365, 3.69, 2.775, 1.605, 5.49, 2.439, 2.541, 2.1,
			4.27, 5.06, 1.95, 3.52, 3.92, 6.15, 6.02, 4.27, 3.57, 6.71, 4.06, 3.45,
			5.57, 2.07, 6.92, 3.86, 1.52, 5.049, 3.071, 3.87, 2.4, 4.495, 1.625,
			1.833, 3.927, 2.767, 2.333, 2.4, 2.43, 5.687, 3.083, 3.29, 5.99, 2.94,
			1.245, 3.615, 5.01, 2.37, 2.55, 3.28, 2.75, 2.68, 2.82, 2.67, 2.91, 2.97,
			2.141, 2.709, 5.17, 5.75, 5.2, 5.51, 4.13, 2.95, 2.37, 3.57, 3.51, 3.04,
			2.24, 3.18, 2.43, 4.24, 3.32, 2.02, 2.15, 2.43, 2.52, 2.1, 4.536, 2.124,
			3.88, 1.27, 4.767, 2.083, 1.58, 1.88, 5.467, 1.583, 0.96, 4.7, 3.81, 2.52,
			1.81, 3.8, 2.52, 3.42, 4.5, 4.08, 3.75, 2.342, 1.708, 2.52, 2.67, 2.34,
			2.61, 2.166, 2.404, 3.13, 3.11, 4.1, 2.28, 3.609, 1.791, 5.64, 0.81, 3.36,
			3.87, 4.47, 1.56, 3.72, 1.77, 2.48, 1.708, 5.622, 3.72, 7.26, 2.065,
			1.625, 1.86, 4.98, 2.304, 2.166, 2.742, 0.708, 0.541, 1.999, 3.08, 0.98,
			1.787, 2.333, 1.415, 2.846, 1.311, 1.058, 0.916, 1.626, 1.976, 1.482,
			2.52, 3.39, 3.33, 4.439, 1.291, 1.99, 2.15, 4.074, 2.916, 2.67, 1.76,
			4.69, 3.465, 2.43, 2.005, 2.52, 0.87, 1.43, 1.31, 2.51, 3.21, 2.39, 2.625,
			2.275, 2.14, 1.18, 2.77, 2.542, 1.708, 3.63, 5.46, 3.21, 3.54, 2.76, 1.17,
			4.5, 1.42, 3.905, 3.697, 2.708, 4.39, 1.79, 1.17, 3.99, 2.75, 5.59, 1.93,
			3.44, 2.04, 2.697, 1.083, 3.39, 0.84, 2.97, 4.17, 2.55, 5.52, 4.949,
			3.161, 6.21, 3.2, 3.455, 3.254, 0.791, 4.57, 2.592, 2.208, 3.26, 1.95,
			2.16, 3.4, 3.5, 4.77, 2.77, 1.82, 2.49, 1.89, 1.8, 2.311, 2.249, 4.05,
			3.49, 2.0, 1.89, 1.98, 2.999, 2.821, 4.41, 1.33, 2.07, 2.28, 6.221, 2.649,
			3.84, 1.99, 2.541, 5.169, 11.24, 3.49, 2.06, 1.92, 2.0, 4.72, 4.2, 2.19,
			1.21, 2.45, 0.752, 2.458, 2.57, 4.45, 5.94, 1.76, 3.061, 1.249, 1.34,
			1.92, 1.83, 3.99, 4.92, 4.59, 1.967, 1.313, 1.708, 2.453, 0.749, 1.524,
			2.166, 4.17, 4.11, 3.99, 3.72, 3.99, 2.186, 1.124, 3.17, 1.58, 3.207,
			2.833, 1.99, 2.69, 3.0, 3.45, 2.97, 3.085, 10.041, 1.874, 5.9, 1.895,
			2.985, 3.38, 1.02, 1.65, 3.66, 5.13, 4.84, 6.29, 7.05, 2.01, 2.64, 3.55,
			4.71, 9.98, 6.57, 1.38, 3.37, 2.03, 3.704, 2.416, 4.86, 4.29, 2.29, 2.15,
			3.02, 3.43, 1.47, 2.208, 3.162, 2.9, 2.762, 1.958, 1.875, 2.625, 1.294,
			1.916, 5.662, 2.946, 5.392, 0.5, 3.437, 1.493, 1.33, 1.774, 2.166, 3.02,
			5.06, 9.28, 1.81, 2.206, 2.374, 3.36, 4.52, 2.14, 3.022, 1.708, 2.447,
			1.833, 1.73, 3.0, 4.59, 3.01, 3.77, 3.96, 3.54, 2.97, 3.68, 3.13, 4.72,
			1.416, 2.541, 0.983, 0.81, 0.96, 1.11, 0.958, 3.402, 3.41, 1.23, 3.112,
			1.208, 4.23, 1.83, 1.71, 3.03, 2.89, 2.425, 5.587, 1.958, 2.76, 4.08,
			5.91, 3.21, 2.79, 4.205, 2.875, 4.496, 5.424, 5.0, 1.68, 3.09, 3.42, 1.23,
			3.924, 2.416, 1.916, 2.364, 2.01, 4.74, 4.26, 2.73, 7.152, 3.158, 3.49,
			1.59, 3.76, 2.39, 3.669, 1.791, 2.794, 1.916, 3.25, 2.46, 3.5, 3.6, 3.087,
			1.833, 4.2, 2.642, 2.458, 1.367, 2.583, 1.791, 2.089, 4.89, 3.45, 4.52,
			3.58, 1.915, 3.125, 2.1, 4.015, 3.125, 0.87, 3.15, 1.68, 3.28, 2.75, 3.15,
			3.78, 3.42, 3.11, 5.26, 4.29, 3.7, 3.15, 2.45, 1.72, 1.29, 4.48, 3.58,
			2.52, 2.99, 3.57, 4.06, 2.18, 4.75, 3.1, 2.75, 3.71, 3.01, 3.67, 2.69,
			4.17, 4.43, 2.74, 1.83, 3.21, 3.24, 3.0, 5.48, 3.73, 6.12, 4.11, 2.41,
			4.41, 3.2, 3.21, 3.886, 1.874, 2.34, 5.7, 1.57, 4.19, 2.82, 1.156, 1.874,
			3.39, 1.979, 2.041, 2.13, 4.5, 2.4, 2.94, 4.394, 2.416, 1.68, 4.17, 4.26,
			5.1, 10.616, 2.304, 4.292, 1.958, 3.03, 2.112, 2.208, 5.58, 3.3, 2.38,
			2.132, 1.708, 2.416, 1.084, 2.34, 2.79, 2.01, 4.32, 3.04, 4.49, 1.8,
			2.735, 4.735, 4.2, 1.65, 4.667, 2.833, 1.56, 2.38, 2.436, 1.124, 2.0,
			1.833, 1.924, 1.333, 2.72, 2.659, 3.011, 3.33, 4.409, 3.181, 4.56, 5.46,
			2.38, 9.53, 2.34, 2.22, 2.79, 1.65, 3.06, 3.51, 1.41, 2.62, 9.61, 2.39,
			12.09, 4.29, 3.65, 1.06, 3.54, 3.14, 4.341, 0.499, 7.49, 2.482, 1.583,
			2.755, 5.64, 2.25, 2.73, 0.99, 2.64, 0.83, 1.06, 4.2, 1.86, 3.66, 1.44,
			2.1, 2.61, 5.43, 3.63, 4.957, 1.833, 2.25, 2.76, 1.71, 5.178, 3.342, 1.98,
			2.04, 3.6, 9.33, 4.59, 4.38, 4.3, 2.91, 3.99, 3.15, 3.16, 0.98, 7.06,
			17.051, 1.749, 8.76, 1.89, 3.166, 5.144, 2.78, 3.94, 5.15, 5.17, 5.19,
			1.92, 4.92, 3.39, 4.5, 1.92, 2.08, 3.05, 4.32, 5.04, 1.24, 1.291, 2.325,
			1.624, 1.78, 2.734, 3.166, 0.5, 2.77, 4.8, 1.92, 4.06, 1.79, 2.07, 2.13,
			2.0, 1.749, 1.381, 4.17, 4.35, 1.83, 1.5, 3.51, 5.04, 3.84, 8.26, 2.09,
			2.49, 3.75, 1.756, 2.624, 2.25, 3.54, 3.06, 5.12, 6.23, 2.36, 5.94, 3.63,
			3.72, 1.749, 1.041, 1.17, 3.06, 1.41, 4.5, 4.62, 1.93, 2.3, 2.31, 2.16,
			5.25, 2.85, 3.041, 3.709, 2.49, 1.56, 3.33, 1.14, 2.55, 6.06, 1.98, 3.24,
			5.43, 2.67, 4.53, 3.06, 2.44, 3.2, 4.62, 2.76, 2.58, 3.77, 3.51, 0.95,
			2.41, 2.49, 3.311, 1.999, 4.2, 1.859, 2.041, 4.562, 2.458, 3.482, 2.458,
			2.67, 2.3, 1.89, 2.68, 1.5, 3.72, 3.15, 2.222, 1.708, 4.24, 5.69, 1.722,
			1.458, 9.21, 2.125, 6.825, 5.58, 3.27, 3.66, 7.21, 3.81, 3.77, 2.34, 2.49,
			3.09, 3.94, 2.42, 2.96, 5.86, 3.91, 11.57, 3.77, 3.94, 1.0, 5.255, 1.425,
			4.08, 2.17, 1.46, 4.71, 2.82, 4.14, 3.25, 0.92, 1.79, 1.57, 2.115, 4.285,
			4.94, 3.48, 4.65, 3.66, 4.47, 8.22, 3.96, 3.72, 3.0, 2.07, 1.56, 1.96,
			2.63, 5.74, 5.72, 5.52, 4.77, 1.83, 4.68, 3.9, 3.22, 2.72, 2.31, 3.24,
			2.79, 3.94, 3.05, 2.79, 3.24, 2.1, 1.38, 2.4, 3.84, 3.6, 3.3, 5.52, 4.38,
			4.68, 1.94, 7.21, 4.89, 4.08, 2.469, 1.791, 4.38, 3.195, 3.545, 2.5, 5.86,
			4.51, 1.86, 3.285, 1.875, 4.74, 3.51, 3.42, 4.05, 1.942, 1.958, 2.44,
			2.99, 4.83, 2.67, 4.89, 4.65, 4.3, 3.74, 2.7, 4.942, 2.678, 3.602, 1.708,
			5.07, 10.23, 2.01, 3.45, 2.01, 7.77, 3.9, 7.11, 4.39, 2.32, 2.53, 2.95,
			2.389, 0.791, 1.74, 2.47, 2.85, 3.78, 3.557, 1.083, 1.1, 3.46, 3.262,
			4.478, 1.92, 1.996, 1.124, 3.42, 2.34, 2.82, 3.21, 4.27, 1.61, 4.892,
			1.958, 5.42, 4.53, 3.576, 6.544, 3.13, 6.81, 1.8, 6.034, 1.916, 1.23,
			2.28, 1.17, 5.25, 2.28, 3.159, 2.541, 3.72, 2.91, 5.14, 4.7, 3.47, 5.665,
			4.515, 5.43, 1.635, 1.625, 0.86, 1.07, 2.34, 9.25, 3.69, 2.79, 3.12, 3.7,
			0.5, 3.0, 3.97, 4.49, 2.76, 3.6, 1.682, 2.708, 3.8, 7.14, 2.91, 10.28,
			4.25, 2.215, 1.875, 2.78, 4.74, 3.39, 1.27, 2.51, 4.35, 2.52, 1.38, 1.62,
			2.49, 4.14, 2.702, 2.458, 2.76, 4.18, 2.47, 3.37, 2.17, 2.041, 4.849,
			2.944, 1.916, 1.35, 3.9, 7.14, 4.17, 3.84, 1.44, 3.69, 6.51, 1.17, 1.8,
			4.62, 1.167, 1.833, 4.35, 5.025, 3.045, 1.86, 1.38, 1.709, 2.915, 1.436,
			3.12, 6.85, 6.23, 1.865, 2.275, 2.16, 3.1, 1.5, 2.27, 2.7, 2.67, 2.23,
			3.98, 2.362, 3.928, 2.91, 2.88, 3.18, 3.06, 4.65, 1.95, 1.587, 2.583,
			3.96, 2.76, 4.11, 1.95, 2.565, 1.185, 1.56, 1.87, 2.056, 4.349, 0.875,
			3.01, 5.74, 3.63, 2.37, 2.499, 1.291, 3.08, 2.88, 4.02, 2.91, 2.75, 3.544,
			1.416, 4.63, 2.46, 2.79, 4.01, 6.25, 4.16, 3.584, 2.666, 3.86, 1.56,
			3.122, 0.898, 1.25, 5.38, 1.965, 2.85, 2.505, 2.82, 0.51, 4.77, 2.28,
			3.46, 3.62, 5.4, 13.27, 0.73, 4.42, 1.27, 2.954, 0.791, 4.765, 3.36, 2.13,
			2.86, 2.69, 2.52, 4.41, 9.42, 2.5, 1.64, 8.87, 3.16, 3.05, 2.28, 2.78,
			1.464, 0.976, 4.78, 5.085, 1.155, 3.49, 2.34, 3.23, 2.7, 2.82, 2.16, 3.97,
			2.93, 5.11, 2.87, 4.08, 6.42, 4.98, 5.04, 2.869, 3.041, 1.208, 3.592, 3.2,
			2.8, 2.75, 3.97, 1.4, 2.29, 4.26, 2.75, 2.85, 1.458, 2.562, 5.61, 2.154,
			1.416, 2.01, 4.56, 4.05, 5.415, 3.735, 1.97, 2.41, 2.31, 2.62, 1.95, 4.41,
			2.69, 4.98, 2.19, 5.04, 2.88, 3.7, 1.92, 10.68, 6.12, 3.39, 2.625, 1.215,
			1.625, 2.915, 1.032, 1.958, 7.08, 4.65, 2.887, 2.333, 1.38, 3.52, 4.61,
			8.46, 3.26, 3.61, 3.07, 3.08, 4.17, 3.68, 3.59, 2.44, 3.614, 1.166, 2.962,
			2.098, 3.49, 2.72, 3.9, 2.94, 1.17, 2.64, 3.57, 6.27, 1.86, 3.48, 2.097,
			1.833, 3.89, 4.474, 5.586, 9.8, 3.079, 1.791, 2.925, 2.125, 3.79, 2.399,
			2.551, 4.42, 9.77, 3.0, 2.62, 3.07, 1.75, 4.44, 2.159, 2.041, 2.4, 3.491,
			5.549, 1.68, 1.51, 5.08, 4.651, 3.519, 3.09, 1.65, 4.24, 2.15, 5.52, 4.36,
			3.59, 3.15, 2.88, 2.61, 4.47, 3.81, 2.447, 2.083, 5.85, 4.56, 2.454,
			2.916, 2.94, 3.21, 1.95, 3.03, 2.31, 1.02, 3.03, 12.88, 2.43, 1.75, 2.3,
			3.63, 3.374, 1.541, 4.585, 5.95, 3.21, 2.94, 2.85, 3.58, 2.827, 1.333,
			1.22, 3.46, 1.86, 3.09, 4.53, 3.97, 3.56, 3.69, 0.936, 2.874, 2.82, 1.26,
			4.62, 1.89, 7.18, 4.14, 3.4, 2.94, 3.26, 1.2, 1.35, 4.19, 3.15, 2.25,
			3.36, 3.78, 5.1, 3.0, 2.7, 1.92, 3.93, 2.43, 2.97, 3.561, 1.749, 6.93,
			3.39, 3.49, 3.26, 3.0, 2.97, 4.46, 2.5, 1.99, 4.35, 3.9, 3.51, 1.22, 5.73,
			2.43, 1.62, 2.91, 2.15, 3.94, 3.96, 1.65, 3.619, 2.291, 3.51, 2.88, 2.25,
			4.2, 3.75, 2.88, 3.63, 2.61, 2.43, 7.17, 5.12, 2.11, 2.43, 3.69, 3.44,
			4.78, 2.61, 4.13, 2.06, 3.17, 2.46, 2.91, 7.65, 1.2, 3.31, 3.56, 4.076,
			5.044, 4.56, 2.82, 3.29, 9.46, 5.07, 2.61, 3.24, 3.39, 1.77, 2.82, 4.68,
			3.33, 2.79, 4.84, 2.84, 3.57, 6.42, 0.9, 4.38, 1.95, 2.1, 3.03, 2.88,
			2.43, 3.21, 3.15, 2.99, 2.06, 3.77, 3.31, 4.01, 5.13, 2.74, 4.97, 3.06,
			4.41, 3.54, 3.42, 4.11, 3.96, 3.79, 2.11, 2.05, 3.81, 3.09, 4.5, 2.355,
			3.115, 6.53, 5.73, 1.92, 4.36, 4.1, 2.82, 3.9, 5.58, 5.19, 2.08, 1.64,
			2.422, 1.958, 2.799, 1.791, 1.9, 2.95, 1.9, 2.01, 1.98, 4.02, 3.99, 2.025,
			2.565, 3.929, 1.041, 1.48, 3.51, 2.22, 1.565, 1.375, 2.71, 3.92, 2.25,
			1.98, 2.1, 2.79, 1.594, 1.916, 3.39, 1.41, 3.49, 5.45, 4.17, 0.8, 3.46,
			2.53, 1.77, 3.56, 2.97, 2.1, 2.4, 1.29, 1.56, 1.86, 4.02, 3.13, 2.16,
			3.23, 2.19, 3.51, 2.1, 3.24, 5.22, 2.76, 2.58, 2.77, 1.88, 2.38, 1.383,
			4.167, 5.26, 3.51, 2.13, 4.95, 6.78, 4.62, 3.93, 1.65, 3.42, 7.2, 3.48,
			1.59, 2.52, 5.89, 3.74, 6.89, 2.612, 1.958, 3.39, 7.92, 3.87, 6.67, 4.86,
			6.925, 3.156, 5.649, 3.182, 1.708, 3.84, 3.55, 2.75, 3.66, 7.23, 6.06,
			4.77, 2.83, 2.0, 3.06, 4.44, 2.79, 1.89, 4.86, 3.65, 3.4, 3.51, 4.02,
			6.75, 3.452, 1.708, 4.12, 3.26, 2.72, 2.77, 5.16, 5.97, 4.74, 1.74, 2.55,
			2.34, 6.83, 5.86, 3.57, 4.68, 3.99, 2.37, 8.49, 2.64, 6.52, 3.59, 2.01,
			3.52, 3.74, 3.64, 2.54, 3.47, 4.08, 5.8, 6.0, 2.31, 1.62, 1.11, 2.52,
			3.96, 2.19, 4.29, 6.27, 1.21, 3.86, 3.75, 4.44, 3.82, 3.56, 6.87, 5.76,
			1.77, 4.02, 5.87, 4.414, 2.166, 2.27, 2.71, 3.655, 2.097, 2.708, 2.73,
			4.59, 1.1, 4.372, 2.598, 1.92, 2.37, 2.34, 1.17, 1.81, 2.63, 4.03, 2.48,
			4.18, 1.98, 1.41, 7.7, 2.37, 1.83, 5.23, 2.36, 5.34, 4.65, 1.5, 3.06,
			1.98, 3.05, 2.26, 4.142, 0.958, 3.03, 2.31, 3.63, 2.7, 4.23, 4.18, 3.95,
			2.36, 3.58, 6.06, 2.58, 2.58, 2.84, 8.26, 3.15, 2.94, 3.3, 4.95, 3.42,
			2.31, 4.68, 2.1, 4.77, 0.8, 1.419, 2.041, 4.14, 3.09, 3.943, 5.347, 3.73,
			4.08, 3.269, 2.291, 5.72, 4.63, 3.09, 2.46, 5.85, 2.35, 2.03, 2.01, 2.291,
			3.849, 4.78, 2.97, 2.099, 2.041, 3.16, 6.32, 4.564, 2.375, 1.208, 2.503,
			3.15, 2.333, 3.397, 1.58, 2.41, 3.392, 0.958, 3.27, 3.82, 2.72, 5.38,
			5.91, 6.67, 3.26, 3.36, 5.47, 3.45, 1.77, 4.61, 2.64, 2.597, 2.083, 2.579,
			0.666, 2.434, 2.541, 2.7, 8.37, 2.141, 2.749, 2.49, 2.61, 3.09, 1.68,
			0.767, 2.083, 3.43, 4.88, 3.41, 3.64, 4.5, 1.17, 5.28, 1.62, 5.334, 3.166,
			3.83, 4.11, 3.03, 3.0, 0.887, 2.833, 4.8, 2.46, 4.09, 2.96, 1.23, 3.37,
			1.5, 3.53, 2.61, 2.47, 3.9, 7.15, 3.6, 3.39, 3.57, 2.13, 2.3, 2.83, 1.02,
			3.93, 0.92, 1.63, 5.037, 1.833, 6.12, 4.56, 1.62, 1.764, 1.416, 1.74,
			2.19, 2.1, 3.67, 4.285, 1.125, 3.21, 6.615, 5.715, 2.94, 2.359, 1.541,
			2.08, 1.58, 3.242, 1.708, 4.11, 4.26, 3.93, 1.71, 3.72, 2.97, 2.76, 3.63,
			3.16, 1.43, 4.74, 2.55, 2.99, 2.89, 3.64, 3.11, 4.11, 3.24, 1.62, 2.171,
			1.249, 3.561, 2.249, 3.67, 2.1, 2.805, 4.365, 2.094, 2.166, 2.37, 3.132,
			2.208, 3.192, 2.208, 2.32, 2.333, 3.807, 2.61, 2.497, 5.363, 3.18, 2.85,
			4.5, 3.18, 2.66, 4.03, 2.97, 5.85, 1.68, 3.6, 4.68, 5.05, 5.431, 1.473,
			4.426, 2.775, 5.065, 4.11, 5.85, 2.95, 2.824, 1.916, 0.754, 1.916, 3.05,
			3.0, 2.16, 5.04, 3.37, 3.277, 2.083, 2.499, 4.881, 3.42, 2.77, 0.92, 1.29,
			4.02, 1.9, 5.27, 4.2, 3.96, 1.3, 1.75, 3.049, 1.791, 2.55, 2.88, 3.18,
			3.45, 2.95, 1.96, 0.7, 3.27, 4.96, 3.02, 1.34, 3.32, 3.437, 1.833, 2.16,
			2.26, 4.322, 2.208, 1.89, 3.66, 4.32, 4.14, 2.1, 1.708, 3.362, 3.96, 2.25,
			1.67, 2.94, 4.03, 8.13, 3.36, 2.32, 2.71, 3.49, 2.55, 2.64, 1.58, 3.67,
			2.73, 1.32, 3.554, 3.166, 2.16, 2.73, 1.64, 3.354, 2.416, 1.92, 1.62, 2.0,
			2.05, 3.083, 1.447, 4.77, 3.72, 3.42, 2.58, 3.18, 3.87, 2.97, 1.68, 4.83,
			3.122, 1.708, 7.17, 2.914, 1.916, 1.541, 3.139, 2.25, 2.43, 5.18, 2.56,
			4.01, 2.49, 4.69, 7.02, 4.43, 2.82, 6.18, 2.71, 4.667, 1.833, 2.07, 4.33,
			3.4, 3.94, 1.77, 3.42, 1.8, 2.124, 3.426, 2.55, 1.96, 3.62, 3.15, 3.51,
			3.87, 2.255, 2.125, 3.4, 2.81, 3.28, 2.78, 3.33, 3.93, 3.72, 4.29, 2.01,
			4.29, 1.29, 3.9, 2.43, 3.51, 4.6, 1.31, 3.93, 2.16, 3.27, 1.71, 4.05,
			3.22, 3.68, 1.56, 4.05, 2.57, 6.73, 2.99, 2.11, 3.18, 4.1, 3.37, 1.65,
			3.2, 3.921, 0.499, 1.56, 3.4, 2.87, 1.625, 0.999, 3.376, 2.52, 4.066,
			2.624, 5.44, 5.42, 4.54, 2.822, 1.708, 4.34, 2.799, 1.791, 3.446, 2.374,
			4.11, 2.43, 7.8, 3.45, 2.49, 3.03, 3.03, 1.41, 1.541, 3.379, 3.71, 4.61,
			1.26, 2.73, 3.34, 1.88, 4.23, 3.48, 5.43, 3.882, 1.833, 5.535, 1.4, 3.251,
			2.249, 2.226, 1.374, 1.95, 3.75, 4.61, 2.32, 3.34, 5.03, 3.72, 2.13, 6.99,
			5.46, 3.27, 3.73, 7.32, 3.83, 3.36, 3.84, 7.98, 1.626, 1.874, 3.42, 3.85,
			2.55, 1.845, 1.125, 5.55, 7.15, 4.25, 1.13, 2.47, 2.55, 3.107, 2.833,
			3.99, 6.06, 3.3, 2.37, 3.047, 1.833, 2.93, 3.35, 2.57, 3.46, 2.97, 3.76,
			2.15, 2.91, 2.31, 3.33, 2.55, 3.45, 3.72, 2.91, 2.1, 2.85, 3.816, 2.074,
			3.455, 2.462, 2.833, 3.51, 2.73, 3.9, 3.15, 1.66, 4.67, 2.73, 6.84, 2.0,
			3.96, 6.06, 3.31, 0.99, 4.07, 2.46, 4.74, 1.85, 2.092, 1.958, 4.16, 2.48,
			3.0, 3.24, 4.309, 3.041, 1.24, 8.33, 1.95, 2.7, 1.54, 3.47, 2.64, 1.32,
			4.41, 1.5, 3.49, 2.43, 1.67, 3.3, 3.81, 2.91, 2.64, 2.342, 1.708, 3.3,
			2.458, 2.672, 2.55, 1.1, 4.69, 1.005, 4.699, 1.166, 3.54, 5.49, 3.06,
			5.64, 4.59, 1.469, 1.791, 3.43, 4.38, 2.95, 5.13, 2.06, 3.21, 3.96, 2.626,
			2.124, 0.86, 4.11, 6.09, 3.9, 2.19, 1.65, 1.93, 3.71, 1.74, 2.04, 2.79,
			1.905, 6.105, 3.06, 1.38, 2.04, 3.0, 3.27, 4.17, 1.85, 3.4, 5.44, 1.37,
			2.91, 4.14, 3.54, 4.38, 3.68, 2.44, 5.52, 1.53, 3.06, 3.27, 2.82, 3.12,
			2.1, 3.917, 2.833, 5.5, 0.77, 3.18, 3.42, 0.96, 0.71, 3.808, 1.002, 4.125,
			3.197, 1.398, 1.35, 0.91, 3.31, 0.672, 3.788, 4.92, 3.26, 1.93, 2.752,
			2.708, 1.02, 2.34, 4.32, 2.97, 3.96, 7.17, 2.01, 2.77, 1.22, 4.77, 2.34,
			1.129, 2.041, 3.662, 1.958, 3.18, 2.31, 3.42, 1.434, 2.916, 3.87, 2.61,
			2.79, 3.222, 1.458, 2.19, 4.23, 2.64, 3.09, 3.51, 2.61, 1.45, 2.97, 2.3,
			1.95, 1.17, 1.5, 1.791, 3.369, 2.31, 2.82, 2.91, 3.87, 2.672, 2.458, 2.58,
			3.0, 4.53, 2.55, 3.27, 2.164, 1.166, 1.85, 1.744
		],
		"transcript_en": [
			"",
			"COLTON OGDEN: Hi, everybody.",
			"My name is Colton Ogden, and this is GD50 lecture one,",
			"and today we'll be covering Flappy Bird.",
			"So last year or last week, sorry, we covered Pong,",
			"which was just basic shapes and colors.",
			"Today we'll actually be diving into sprites.",
			"As we can see here, we've got some pipes, and a bird,",
			"and we're covering a few other concepts such as gravity, and more.",
			"Today, the topics that we'll be covering are in a nutshell, images and sprites,",
			"as I just said.",
			"So loading images from memory from our hard drive,",
			"and actually drawing them to the screen instead of just rectangles,",
			"and whatnot.",
			"We'll be covering infinite scrolling.",
			"So seeing things like-- and if you've played the game,",
			"pipes are infinitely going from right to left.",
			"How to actually get that going infinitely so that we're not",
			"using up also infinite memory.",
			"We'll be discussing how games, and in the similar vein,",
			"are illusions in the sense that a lot of the perceived vastness and perceived",
			"complexity of games is often just due to camera trickery,",
			"and more because of limited hardware.",
			"We'll be covering procedural generation, which",
			"ties also into infinite scrolling.",
			"Procedure generation is a topic that I am actually very interested in,",
			"and will be touching on it throughout the course in several locations.",
			"But in the context of today's lecture, we'll be using it for the pipes",
			"because the pipes, they spawn from right to left in Flappy Bird",
			"as you're infinitely going through the level,",
			"but they can spawn at various heights, and the gaps",
			"are shifting as a result of that, therefore creating this infinite level.",
			"We'll be talking more in detail on state machines.",
			"So last week we covered state machines in a very abstract sense.",
			"We used just basically a string as a variable, and then used if conditions.",
			"Today we'll be actually using a state machine",
			"class replete with various methods that allow",
			"us to transition in and out of these states very",
			"cleanly, and allow us to break out all of this logic",
			"that we previously had in our update and render functions,",
			"and then put them separately into their own state classes.",
			"And then lastly, we'll also be touching on mouse input.",
			"And a point that I forgot to mention here,",
			"whoops, is also we'll be talking about music, which is just basically",
			"sound, which we did last week.",
			"But we'll add that as a polishing touch.",
			"If you guys want to download the demo code.",
			"We have a repo up right now on GitHub/games50/fiftybirds.",
			"It's our take on Flappy Bird.",
			"A couple of things, I've been asked a couple of times",
			"whether we have reading materials for the course.",
			"And there are no formal reading materials,",
			"but there are a couple of resources that I really",
			"enjoyed reading, especially as I was getting more into Lua and Love2D.",
			"They are two books.",
			"One is an online book.",
			"Actually, they're both online books, but the latter of which",
			"has a physical form as well.",
			"The first of these is How to Make an RPG by Dan Schoeller, which",
			"is actually completely written in Lua.",
			"He uses a custom game engine very similar to Love2D,",
			"but it's handwritten by him.",
			"But a lot of the same ideas apply, and it's a great opportunity.",
			"It's how I cut my teeth on Lua, and I would",
			"encourage you to take a look at that if that's something you're interested in,",
			"or if you like RPGs.",
			"And then also Game Programming Patterns by Robert Nystrom",
			"is a very great general purpose game development",
			"book that talks about a lot of the sort of more abstract high level concepts",
			"with large scale game development.",
			"But beyond that, no formal reading.",
			"Those aren't from reading either.",
			"Those are just if you're curious, and you",
			"want to read some resources that I found very interesting.",
			"Feel free to do so.",
			"Today's goal is to implement what looks like this.",
			"This is our version of Flappy Bird.",
			"We didn't use the same exact sprites for copyright purposes,",
			"but we note that we have a bird in the middle of the screen.",
			"This bird, on click, or on spacebar, will jump up and down,",
			"and your goal is to prevent the bird from touching",
			"either the pipes or the ground itself.",
			"Every time you make it past a pair of pipes, you will score a point.",
			"As soon as you touch a pipe or hit the ground, the game is over,",
			"and that's that.",
			"So today we'll be covering--",
			"I'll be doing a little bit more live coding.",
			"So the very first example that I want to cover",
			"is the day zero update for Flappy Bird.",
			"And a important function that is going to be probably",
			"the most noticeable, the most visibly obvious function we'll",
			"be using throughout this lecture, is love.graphics.newImage,",
			"which takes a path.",
			"This function, all it does is load a image file from your disk.",
			"You specify it as a string, and you can then use it as an object,",
			"and draw anywhere you want at an xy coordinate,",
			"and we'll see this in practice here.",
			"So I'm going to go ahead.",
			"If you're looking in the repo, all of these examples are covered--",
			"0 through 12.",
			"I'm going to start from scratch in a new folder that I've created.",
			"I'm going to create a brand new main.lua, completely fresh.",
			"And the first thing I want to do is because we",
			"are going to use a virtual resolution just like we did last week,",
			"so that we have a more rhetoric, I'm going",
			"to go ahead and require the push library.",
			"So push equals require.",
			"Push just like that.",
			"I've pre put push.lua into this directory.",
			"It'll just load by default in the same directory--",
			"the current working directory of your script when you run Love.",
			"The next thing I'm going to do, I'm going to define some constants.",
			"So window with should be 1280, and then window height is going to be 720.",
			"Those are our physical window dimensions,",
			"but then we also need a virtual width, and we're going to use 512 by 288.",
			"This is a resolution that I found worked pretty well for the assets we'll",
			"be using today, but you can make this most anything you want to as long",
			"as it's somewhere in that range.",
			"It is a 16 by 9 resolution as well, so that it fits comfortably",
			"on modern wide screen 16 by 9 monitors.",
			"What we're going to do is the first goal that we have today",
			"is to draw two images to the screen.",
			"We want a foreground and a background because notice,",
			"if we go back to the slides, we can see in the very background",
			"we have a hill landscape, and then on the bottom we have a ground.",
			"The two of those are going to eventually scroll at different rates.",
			"It's going to be called parallax scrolling, but just",
			"for our very first example, we want something very basic.",
			"I just want to draw two images to the screen.",
			"So we're going to go ahead and do that here by setting a local variable.",
			"Remember, local means that it's just defined to the scope that",
			"it's in, rather than being global, which means we cannot access this variable",
			"outside of this file.",
			"Local background gets love.graphics.newImage,",
			"the function that we just talked about.",
			"Let me go ahead and hide this inspector here so we can have more room code.",
			"And then it's just going to take a string.",
			"So background.png.",
			"And I realize I actually didn't include those files in the directory.",
			"So I'm going to need to do that as well.",
			"Same thing for the ground, exact same function,",
			"love.graphics.newImage except ground.png.",
			"And before I forget, let's go ahead, and do that right now.",
			"I have the files here.",
			"So ground and background.",
			"We're going to copy those from the distro repo into my bird0 directory",
			"that I'm currently developing in right now.",
			"And as soon as we're done with that, we're going to go ahead,",
			"and we're going to define love.load, which",
			"is the function Love2D calls at the beginning of your program execution.",
			"In there, because we don't want these images to look blurry",
			"when they get loaded and upscaled, we want",
			"to go ahead and set our default filter to nearest on min and mag,",
			"which means on upscale and downscale, apply nearest neighbor filtering, which",
			"means no blurriness, no interpolation of the pixels.",
			"And then one thing that is just a small little touch,",
			"love.window.setTitle fifty bird because it's GD50,",
			"and then we're going to go ahead and set up our screen here",
			"with our virtual width, virtual height, window width, window height.",
			"It's getting a bit long, and then it takes in the table.",
			"Recall tables, just take in keys like so.",
			"Unlike in Python where you might use a colon, we use an equal sign in Love,",
			"or in Lua, I should say.",
			"Resizable to true, and that is the end of our load function.",
			"Now, does anybody recall how if we want to resize--",
			"so notice I set resizable to true.",
			"Do we know how we can send a message to push to resize our screen for us?",
			"",
			"So Love2D to defines a function called love.resize,",
			"which takes in a width and a height.",
			"And in there, all we're going to do is defer that call to push.",
			"Recall the exact same function on push.",
			"It takes a width and a height, and that will",
			"take care of dynamically rescaling the canvas it uses internally.",
			"It renders to a texture, and it's going to render to the texture",
			"that we set as the virtual width and the virtual height,",
			"and it's going to scale it to fit our screen.",
			"And it needs to know our physical screen dimensions",
			"so that it can actually properly scale that internal canvas appropriately.",
			"Does anybody remember the function that we use to get input from the user?",
			"",
			"So function.love.keyPressed, recall, takes in a key.",
			"Love is going to call this automatically every time we press a key,",
			"and that's going to be--",
			"and we're going to have access to that key, and we can do any sort of logic",
			"that we want on that key, using that key,",
			"and we're just going to call love.event.quit",
			"because I don't like to press Command Q or click the red x.",
			"I just want to hit escape, be done with it.",
			"And then what's our render-- what's Love's render function called?",
			"",
			"it's called love.draw.",
			"So call love.draw.",
			"And then because we're using push, does anybody",
			"remember what we need to actually do to get push to render",
			"our screen to a virtual resolution?",
			"",
			"So recall that there's actually two ways we can do it.",
			"We can call push start and push finish, which we didn't cover last week.",
			"Or we can call-- and that's actually the new de facto way to do it.",
			"Or we can do push apply start, which is the deprecated way to do it.",
			"But starting from here on out, we're going to call push start",
			"and push finish.",
			"And then last, we have our images.",
			"We've allocated them as objects up here.",
			"We have a background and a ground.",
			"All we need to do now is just draw them to the screen.",
			"So this is a new function.",
			"Or it's actually not a new function.",
			"It is a new function, actually.",
			"Love.graphics.rectangle is what we used last week for all of the draw calls.",
			"In this case, we want to draw an image object,",
			"a texture object that we have in memory.",
			"So we're going to call love.graphics.draw,",
			"and it takes a drawable, which means anything",
			"that Love has defined as something that can be drawn.",
			"In this case, images are drawables.",
			"They can be drawn, and they can be drawn at any given position that you specify.",
			"So if you wanted to draw it at the top left corner,",
			"we would just say love.graphics.drawBackground at 0,0,",
			"and it has that effect.",
			"And we're going to the exact same thing with our ground.",
			"The only difference being that obviously, we don't",
			"want to draw at the top of corner.",
			"We want to draw at the bottom of the screen.",
			"So we just call virtual height minus 16, which",
			"happens to be the height of our image.",
			"So if you run this--",
			"I'm going to go ahead, and make sure I'm in the right directory.",
			"I'm not in the right directory, so I'm going to go into a directory I wrote,",
			"fifty bird scratch.",
			"Go into bird0.",
			"And if I run this, I should theoretically have just two images",
			"layered on top of each other, which I do not.",
			"",
			"So we just make sure that it gets saved.",
			"Remember to always save your work, and there you go.",
			"So all we're doing now, it looks infinitely better than last week",
			"already, but it's very simple, very few lines of code.",
			"All the effort that we've put into it has",
			"been in our sprite editor of choice, and you",
			"can use most any application you want to do this sort of stuff.",
			"I use a program called Aseprite, I like a lot,",
			"but you could do this in Gimp, which is free, you could do it in Photoshop,",
			"you could do it in Microsoft Paint if you wanted to.",
			"",
			"Godspeed if you do.",
			"But yeah, so that's as simple as it is just to draw images to the screen.",
			"So we've already made quite a lot of progress in a very short period of time",
			"in terms of the visual aspect of our game.",
			"But it's not interesting to look at beyond the initial sort of honeymoon",
			"period of now we have colors on the screen.",
			"We want to actually get scrolling because the game, recall, is",
			"a scrolling game.",
			"And actually, would anybody be willing to volunteer",
			"to come up, and play Flappy Bird just so we can see it live on the stage?",
			"",
			"David, you want to come up and play?",
			"Does someone volunteer?",
			"Stephen, you want to come up and play?",
			"STEPHEN: Sure.",
			"COLTON OGDEN: Thank you for volunteering.",
			"",
			"I guarantee you're better at this game than I am.",
			"I'm going to go ahead and cd into bird12 in the directory, which is",
			"the final version of the game complete.",
			"So I'm going to go ahead and hit Enter.",
			"[VIDEO GAME MUSIC PLAYING]",
			"So already, we can see the parallax scrolling",
			"that I referred to before, which is the floor",
			"and the background are scrolling at different rates,",
			"and we'll see this very shortly in the next example.",
			"We have a prompt.",
			"We have text.",
			"We've already used this before with the font.",
			"So go ahead, if you press Enter, you're going to get a count down.",
			"So space is to jump.",
			"[BEEPING]",
			"So we have our bird jumping in the middle of the screen.",
			"We have a score at the top.",
			"The goal is to avoid hitting the pipes.",
			"[CRASH]",
			"OK, a score of one.",
			"You want to try again?",
			"Go ahead.",
			"[BEEPING]",
			"",
			"So it keeps track of his position, and every time",
			"he gets past the right edge of a pair of pipes, as you can see,",
			"that's when he gets a point.",
			"So if you recall from last week, what do we think is--",
			"what's detecting the collision?",
			"If we remember last week, what's the term?",
			"Anybody remember?",
			"Axis aligned bound aabb collision detection, axis-aligned bounding box.",
			"It's the same thing that we did with Pong, except now we're doing it--",
			"we have graphics, but it's the same exact concept.",
			"We're just using rectangles.",
			"And when one rectangle overlaps with another rectangle, we trigger death.",
			"",
			"So one last iteration I think, and then we'll.",
			"[CRASH]",
			"We'll let you try one more time.",
			"Go ahead.",
			"I'll give it a shot.",
			"I'm going to lose on purpose.",
			"OK, here we go.",
			"To be unfair, I got plenty of practice when I was developing this,",
			"but we'll see if that actually holds true here.",
			"",
			"So notice also, the pipes--",
			"the procedure generation that I-- oh, I lost.",
			"Three points.",
			"Let me explain a little bit more, while I do one more iteration.",
			"But the pipes themselves, every time we start,",
			"they're spawning at a different location.",
			"This is proceeded generation in pretty much the most simplest",
			"way possible, and notice that the pipes are shifting gradually.",
			"So this is sort of the make up of our level,",
			"and it's just generating bit by bit do to some simple algorithm",
			"that we have that just says hey, spawn another pipe here, shift it",
			"by some amount.",
			"And this very simple approach allows us to have an infinite level over and over",
			"again, and it's very efficient.",
			"We only ever have as many pipes on the screen, and as we'll see soon--",
			"we'll only have as many pipes in memory as we can see on the screen",
			"at one time, despite the fact that this level could theoretically",
			"go on infinitely, and so it's very cost efficient.",
			"So bird1 is the example.",
			"It's the parallax update.",
			"So parallax scrolling is an important concept in 2D",
			"and also 3D, but 2D game development.",
			"It refers to the illusion of movement given two frames of reference",
			"that are moving at different rates.",
			"So if you're driving on the highway, and you see a fence next to you,",
			"and you see mountains in the distance, you're",
			"observing parallax scroll by seeing how fast the fence moves",
			"relative to the mountains.",
			"The mountains are going to move a lot more slowly than the fences right",
			"next to you.",
			"And we accomplish the same exact illusion in our game",
			"by using this sort of graphical illusion.",
			"And so I'm going to go ahead in my directory",
			"here, in bird1, which is an unpopulated--",
			"it's populated with the contents of bird0, the complete contents of bird0.",
			"The version that you'll see will have all of the code,",
			"but I'm going to go ahead, and if we run bird0 in that directory.",
			"So I think right now I'm still in the full distro.",
			"So let me go ahead, go into fifty bird scratch again.",
			"",
			"Whoops, where am I?",
			"",
			"And then I'm going to go into bird1, and run it,",
			"and I get the exact same image that we had last time.",
			"So everything is there from before, just two images, nothing moving,",
			"no parallax that we can observe.",
			"I'm going to go ahead, and start implementing",
			"the basics of this parallax.",
			"So if I go ahead in my main.",
			"So I'm going to go down here to where we have our background.",
			"So we need a couple of new things.",
			"So along with our background image, we need",
			"to keep track of how much it's scrolled because we're",
			"going to need to start drawing this image to the screen,",
			"but if we're going to scroll it, that means",
			"that we need to shift its x offset.",
			"Instead of drawing it at 0,0, if we want it to scroll,",
			"we have to draw it at some negative value instead.",
			"Over time, this will have the effect of it moving right to left.",
			"So I'm going to go ahead, and keep track--",
			"I'm going to use a variable to keep track of the scroll",
			"now, for both of these images, and we're just",
			"going to call them backgroundScroll and groundScroll, and set them to 0.",
			"So this is going to have the effect of no x offset.",
			"So I could use this variable right now in this draw call down here,",
			"which I'm actually going to do.",
			"I'm going to go ahead, and go to--",
			"I'm just going to find out if that is correct.",
			"I'm going to go ahead and set that to negative backgroundScroll.",
			"",
			"And here, I'm going to set this to negative groundScroll.",
			"So this is not going to change anything yet.",
			"It's going to be the exact same thing because they're both 0.",
			"They were 0 before, but we're going to change them over time.",
			"And in order to do this, I'm going to go ahead, and go into up here.",
			"One thing before we do that actually, we need to set a speed for this.",
			"This is going to happen over time, but since they",
			"need to occur at different rates, the background",
			"needs to go at a slower rate than the foreground",
			"so that we do get this parallax effect, we need to separate speed variables.",
			"Generally, the norm for something that is not going to change",
			"is to write it in caps with underscores.",
			"This is constant notation.",
			"This is frequently seen in most programming languages.",
			"We'll use it here.",
			"I'm going to set a variable called BACKGROUND_SCROLL_SPEED,",
			"and I'm just going to set that to 30.",
			"I'm going to do the same thing, GROUND_SCROLL_SPEED.",
			"Does this need to be higher or lower than the BACKGROUND_SCROLL_SPEED?",
			"The ground is going to move--",
			"so the background needs to move slower than the ground does.",
			"So this is going to be higher.",
			"So we're just going to set it to 60.",
			"You can set it to whatever you want to get the effect that you want,",
			"but this will already be quite noticeable.",
			"The ground is going to move twice as fast as the background.",
			"And so what we're going to do also is if we",
			"just-- so what's going to happen if we just let our image scroll infinitely?",
			"What's going to happen at a certain point?",
			"AUDIENCE: Run out of image?",
			"COLTON OGDEN: It's going run at an image.",
			"So how do we fix this problem?",
			"AUDIENCE: Loop it.",
			"COLTON OGDEN: Loop it, exactly.",
			"So we're going to go ahead, and set a looping point.",
			"So another constant background looping point,",
			"and we're going to set this to 413, which you kind of have",
			"to look at your image, and determine-- you sort of have to set your images up,",
			"if you want to achieve this effect, by having them be a looping image.",
			"So have either two copies of the exact same thing that's your screen width,",
			"or just copy the same chunk over, and over again.",
			"There's many ways to do it.",
			"In this case, the looping point of the image of our background",
			"is 413 on the x-axis.",
			"So we're going to set that to 413.",
			"And then we're going to go ahead-- the next step is we actually have",
			"to start changing the value values.",
			"So in our update function, which is where",
			"this is going to happen, I'm going to go ahead,",
			"and define love.update, which recall, Love2D will call for you,",
			"but you must define it yourself.",
			"I'm going to go ahead, and set backgroundScroll too.",
			"",
			"So what this is going to do, backgroundScroll",
			"gets backgroundScroll to itself plus the speed we set before times delta time.",
			"So it stays frame rate independent.",
			"",
			"That will have the effect of adding the speed to our image,",
			"but we need to reset it.",
			"We need to actually perform the reset.",
			"And to do that, we'll just be using Modulus, which recall",
			"from languages like C, simply divides--",
			"basically, sets that value to the remainder of that division.",
			"So in this case-- so 10 modulo 5 would be 0,",
			"but 10 modulo 9 would be 1, effectively, because we have 0",
			"left over once we divide 10 by 5.",
			"We have 1 left over once we divide 10 by 9.",
			"",
			"So I apologize if that concept is not new.",
			"But we're going to do the same exact thing for our ground,",
			"only we're going to modulo by our virtual width in this case.",
			"I did not set a looping point.",
			"I do in later examples, but our ground image is very--",
			"it's consistent enough such that you don't even",
			"notice it when it loops without just using the virtual with.",
			"So we're just going to use the virtual width in that case.",
			"It's very patterned, and very small.",
			"And aside from that, we already have the background scrolls here",
			"in our draw functions.",
			"So when we run this code, we should theoretically",
			"have scrolling background.",
			"AUDIENCE: So does it even just have to be twice the width",
			"or something so they don't run out?",
			"COLTON OGDEN: They do, at least twice the width, yes.",
			"There's ways you could effectively tile your image,",
			"and do it that way to save memory on texture size.",
			"If you have maybe something that's a quarter of the screen size",
			"that you want to loop over, and over again, you",
			"don't want to have that as one big image,",
			"you'll just draw four copies of that image to fill your screen,",
			"and then to shift all of them.",
			"Maybe five, actually, so you have a little bit",
			"beyond the edge of the screen, and then just put all of them back to 0.",
			"AUDIENCE: So the bottom one, the ground is--",
			"you wouldn't know if you just restarted showing the image with the larger",
			"background.",
			"You wouldn't have to worry about the mountain getting cut in half",
			"when you replaced the right--",
			"COLTON OGDEN: Exactly.",
			"So we could actually--",
			"I could show you right now what that will look like.",
			"So if we just take out the looping point here,",
			"or we set it to some value that's completely inaccurate like 270,",
			"and then we run it, after a while it should just cut.",
			"Yeah, right there.",
			"AUDIENCE: So are you drawing it twice, really?",
			"Like one after another one when it runs out or something?",
			"COLTON OGDEN: No, the image is so wide that it always will fill the screen,",
			"even after it's been set back to-- even after it's gone past the looping point.",
			"I forget how large the texture is.",
			"It is 1157 pixels wide.",
			"So it's more than twice the screen width.",
			"Actually, I think it is exactly twice the screen width.",
			"No, it's not exactly twice the screen width,",
			"but it's more than twice the screen width",
			"so that when the amount-- the 413 pixels has elapsed,",
			"it's still plenty past the right edge of the screen, and the looping part,",
			"it'll be the exact same appearance on the texture,",
			"but it's completely been shifted back to the right.",
			"The 0,0 of our image is now at 0,0 in our screen space.",
			"AUDIENCE: So the looping is just reloading [INAUDIBLE]??",
			"COLTON OGDEN: Your image is here, moving, and then just instantly",
			"back to the beginning, and then moving back to--",
			"the setting it back to 0 or technically, how many",
			"pixels it's gone past the edge of the screen because using modulo.",
			"AUDIENCE: So it's just one image.",
			"It's like you just instantaneously flip it at the right time.",
			"COLTON OGDEN: Yeah.",
			"It's a translation.",
			"It's an instant translation.",
			"It takes place over one frame.",
			"So you don't notice it.",
			"Your human eye can't see it because it literally happens in one frame.",
			"The image data is the exact same at those two points",
			"because we have a texture.",
			"We've pre-created a texture that has the exact same data",
			"so that you have that effect.",
			"You have to have a texture that allows you to do this, or smartly",
			"draw four of the same images.",
			"Keep track of all four of them--",
			"or actually, eight of them-- so you can move them to the left,",
			"and then shift them all back to the right.",
			"AUDIENCE: I assume when we do Super Mario Bros.,",
			"we're going to have multiple images that get stacked one after another.",
			"COLTON OGDEN: When we get to Super Mario Bros.,",
			"we'll be talking about a concept called tile mapping, which",
			"is where we take a sprite sheet, and then you basically chop it up",
			"into pieces, have a map that is basically numerical so that a brick is",
			"value one, and then you look through this giant two dimensional array",
			"that you have, and then go over it, iterate over it,",
			"and then draw a tile at an offset based on your index into that map.",
			"So it's a little bit more complicated, and actually a lot more memory",
			"efficient, but slightly different implementation.",
			"",
			"OK, so we have parallax scrolling now.",
			"I want to take a moment to--",
			"because we've touched on--",
			"this is a very introductory way of demonstrating that games are illusions,",
			"by using parallax scrolling.",
			"All we've done, really, is just set two things to scroll at different rates,",
			"and this has made us feel like we have depth in our scene,",
			"but all we're doing, we have two images, we're",
			"scrolling them at different rates.",
			"But this is a common theme in game development,",
			"is trying to devise a scene that maybe is very elaborate,",
			"but doing it on very resource intensive devices like your iPhone,",
			"or like an old console like the Nintendo 64.",
			"These illusions are all over the place, and a YouTube channel",
			"that I recently found that I really like is",
			"it's called-- the name of the channel is She Says, but the actual show that they",
			"have is called Boundary Break.",
			"And what they do is they take a camera that",
			"goes beyond what the game developers allowed it to do,",
			"which they basically hack the game camera so you can see in places where",
			"you weren't supposed to see before, and you",
			"can see a lot of really cool trickery.",
			"I'm about to show you a couple of video clips,",
			"but here's the YouTube URL if you're curious to see the exact video.",
			"It's about a 33 minute video.",
			"It's on Zelda, Ocarina of Time for the N64.",
			"And I extracted a couple of particularly noteworthy clips",
			"that I thought were kind of interesting, and also humorous.",
			"I'm going to go ahead and show the clip now.",
			"So if we could dim the lights, I'll go ahead and start.",
			"This is the first example.",
			"SPEAKER 1: OK, so there's a lot to talk about with the shop",
			"owners in the Ocarina of Time.",
			"So I'm going to just condense it down to the most interesting,",
			"and the first one we're going to talk about",
			"is the bizarre shop owner in Hyrule.",
			"Now, in Majora's Mask, the very same character is actually shown with legs,",
			"but in Ocarina of Time, he did not have those.",
			"In fact, he looks extremely hilarious without his legs.",
			"",
			"COLTON OGDEN: So this is a--",
			"does anybody have an instinct as to why they might have done this this way?",
			"AUDIENCE: You're not going to see it anyway.",
			"COLTON OGDEN: Exactly, and beyond that, also just saving on memory.",
			"Not having to load a character model-- the vertices and textures associated",
			"with it--",
			"on such a memory constrained device like the N64.",
			"I forget how much memory it had.",
			"Like four megabytes of memory, I think less than that.",
			"And so they are obviously cutting however many corners they could.",
			"In this case, by literally using the illusion",
			"of looking-- not the illusion, but just the fact that you only could see over",
			"the counter, and giving you the illusion that there's a fully living,",
			"talking shop keeper there, but it's just half a model.",
			"And other example here is more to show how Ocarina of Time",
			"used the N64's limited memory to give you",
			"the sense of being in a very large level when you might not actually have been.",
			"So if we could dim the lights one time, we'll go ahead and show this.",
			"SPEAKER 1: So this one was apparently a hot suggestion,",
			"[CHUCKLES]",
			"",
			"which is free camera on Death Mountain, including our friend, Big Goran.",
			"The smoke halo looks sort of weird against the black sky,",
			"and here you can see Nintendo fooled us.",
			"It's not full mountain, only the cliff face is actually rendered,",
			"and that's the path leading towards the Fire Temple.",
			"And if we zoom out, we can see the scale of the whole mop.",
			"Bigger than I thought it would be actually.",
			"The battle music's not quite fitting for an epic panning shot, though.",
			"COLTON OGDEN: Same idea here, really, just limited memory space.",
			"So let's load you know as much as we could possibly ever",
			"see from the perspective of the camera of Link,",
			"and it's actually very similar to how, I guess, people",
			"create stages in real life to make you feel as if you're in a--",
			"when you go to a play, feel like you're actually in a scene.",
			"But they've clearly cut as many corners as possible, but it works.",
			"In the game, you can't tell, and that's very common in game development.",
			"If you're trying to achieve a particularly grand effect,",
			"it's something to think about is how can I",
			"make it seem like I'm doing something, but I'm actually not.",
			"How can I make it seem like I'm a bird flying through an infinite series",
			"of levels, but I'm actually not.",
			"We have a lot of more of that to show coming up soon.",
			"So far we have our background, but we don't",
			"have the title character of our game, and in this case, fifty bird.",
			"So I'm going to go ahead, and illustrate how we can get a bird actually",
			"rendering on the screen.",
			"So I'm going to go ahead into my bird2 directory here, that I've created.",
			"And note again, bird2 in your directory if you've loaded the code,",
			"is going to have the complete implementation.",
			"But in main, I'm going to do a couple of things.",
			"So actually, the first thing I'm going to do,",
			"we're going to-- notice that I've included--",
			"actually, I haven't included the class file.",
			"So I'm going to do that right now.",
			"So in bird1-- sorry, I'm going to take from bird3, the class.lua.",
			"I'm going to go ahead, and put it into bird2 because we're",
			"going to make a bird class.",
			"Recall, from last week, a class is just a way",
			"of taking several variables that we might once have had disparate from one",
			"another, putting them together in a package,",
			"putting functions associated with those variables",
			"together so that we can call--",
			"we can sort of think of our game world more abstractly, and more",
			"compartmentalized, and cleaner.",
			"So I'm going to go ahead-- and now I have in bird2, the class.lua.",
			"That's just the library we're using to get classes in Love2D in Lua.",
			"I'm going to go ahead, and I'm going to create a new file.",
			"This one's called bird.lua.",
			"So remember, the trend is for classes, capitalize them to differentiate them",
			"from functions and variables.",
			"This one I'm going to go ahead, and just go ahead and use my cheat sheet here.",
			"",
			"My sheets are sticking together.",
			"OK, so this bird class is actually fairly simple.",
			"Recall that all we have to do to create a class",
			"is just use the class library, the capital C with the brackets",
			"there to initialize it.",
			"We're going to go ahead and define our init function.",
			"So every class has an init function, which initializes the object",
			"that it's going to refer to later.",
			"In this case, we're going to need a few things.",
			"So we're going to need an image for our bird",
			"because we want it to draw to the screen,",
			"and so what we need to do, same thing that we did before--",
			"love.graphics.newImage.",
			"I'm going to go ahead, and hide this really fast.",
			"And then bird.png.",
			"Simple, easy.",
			"We want the width in the height of our bird.",
			"So I'm going to go ahead, and set that too.",
			"So every image has a set of functions associated",
			"with it that Love implements for us.",
			"The image that we get back from love.graphics.newImage",
			"is itself, sort of a class, which has a function called getwidth.",
			"So this will allow us to achieve the with, dynamically, of whatever",
			"class we--",
			"whatever image file we happen to allocate, and create an object from.",
			"And then we're going to go ahead and set our x and y because recall,",
			"we have to draw it somewhere.",
			"We want to draw our bird in the middle of the screen.",
			"So we're going to go ahead, and just calculate this",
			"based on our virtual width.",
			"So we're going to do VIRTUAL_WIDTH divided by 2.",
			"So it's halfway in the middle of the screen,",
			"but since it draws from the top left corner,",
			"we want to shift it to the left.",
			"So we're going to use our width that we just--",
			"",
			"instant error-- we just initialized from the image data,",
			"and then we're going to do a self.width divided by 2.",
			"So we're going to divide the width by 2, shift that to the left on our x-axis.",
			"That's going to put us in the middle, horizontally.",
			"Vertically, it's the exact same thing, except reusing height instead of width.",
			"And that's pretty much it, except for one the last bit here.",
			"We want to be able to render our bird, pretty important.",
			"So we're going to do love.graphics.draw our image, and then at self.x, self.y.",
			"And so this is all we really need just to get",
			"a very simple sprite onto the screen.",
			"Now, it's not going to do anything because this sort of lives",
			"in a vacuum at the moment.",
			"What we need to do is in our main file, we're",
			"going to require bird, which is going to actually put it into our--",
			"allow us to use it in our code.",
			"",
			"We're going to create a local bird variable.",
			"We're just going to call it bird.",
			"We're going to, after that, simply render to the screen like that,",
			"and if all is done and well, and if I'm in the right directory--",
			"",
			"it did not work.",
			"",
			"Make sure you save your work, again.",
			"Oh, I did not require class.",
			"My bad.",
			"So also, we need to do this since we added that to our directory.",
			"And I did not include the bird.png as well.",
			"So I'm going to go ahead, and do that.",
			"I'm going to borrow that from the next directory.",
			"That should be all we need to do, and attempt to call method.",
			"Render a null value.",
			"Interesting.",
			"Did I not save bird?",
			"I did not save bird.",
			"There we go.",
			"We did it.",
			"So not particularly interesting, but we're making steps.",
			"Remember to save your work.",
			"As we can see, I do not.",
			"But we're making progress.",
			"We have our entity that we will control.",
			"",
			"Visually, we're getting very close, but a lot of important details are missing.",
			"What should be the next step, do we think?",
			"",
			"AUDIENCE: Let's get him jumping and falling.",
			"COLTON OGDEN: Exactly, and we'll do that with the help",
			"of a notion that's common in platformers, and a lot of games,",
			"actually, but gravity.",
			"How do we think we can simulate gravity in the context of 2D game development?",
			"AUDIENCE: Just by default, falling at a constant rate.",
			"COLTON OGDEN: We could do that, certainly,",
			"and that's effectively what we will be doing.",
			"We'll be using something that we used last week, which",
			"was velocity, delta y, and applying that velocity to our birds y,",
			"frame by frame, and that will give it the illusion of falling.",
			"Now, falling at a constant rate isn't accurate to what gravity actually does.",
			"What we want to do, probably, is some gravity over and over again.",
			"Increment our gravity by some sort of constant value",
			"so that just like in real life, things fall faster, and faster,",
			"and then we want to add that to our y value.",
			"So I'm going to go ahead, and start implementing that now in bird3.",
			"Wrong repo.",
			"So bird3, we have everything that we had from before,",
			"except now, I'm going to go ahead, and in main.lua, in our update function,",
			"this is where we're actually going to want",
			"to perform the update logic for making the velocity apply to the bird.",
			"We're going to defer that to the bird class.",
			"We're going to assume that we have a method called update in our bird class,",
			"which we're going to implement shortly, and that's actually",
			"all we need to do in our main class.",
			"And the beauty of having classes that you can delegate all this work",
			"to, your main file, though it's still getting quite large-- it's 108 lines--",
			"it's not 200 , 300, 400, thousands of lines of code because we're able",
			"to break out this code, and encapsulate it elsewhere.",
			"So I'm going to remember to save it this time,",
			"and then I'm going to go into the bird.lua file",
			"in that directory, which is the same with comments",
			"because I loaded it from the official repo, the same bird code",
			"that we wrote before.",
			"I'm going to go ahead, and do a couple of things.",
			"So the first thing that I'm going to do is define a constant.",
			"So I mentioned gravity before.",
			"Gravity is going to be a constant value just like it is in real life.",
			"I'm going to define it to 20.",
			"It's just some arbitrary value.",
			"This is a value that I decided felt right,",
			"but you can tune this however you want.",
			"There's no right or wrong way to do it.",
			"The less the gravity is, the slower it'll fall,",
			"and the more you'll feel like you're sort of in outer space, or on the moon,",
			"or whatnot.",
			"",
			"We're going to also go ahead, and define--",
			"recall that we need some way to keep track",
			"of how our how our bird is falling.",
			"We want a velocity, a y velocity.",
			"This is going to update our position each frame,",
			"and it's going to make it feel like we're falling.",
			"So we're going to set our initial velocity to 0.",
			"The bird's just going to be in the middle.",
			"It's not going be falling yet.",
			"What we don't want to do is apply this velocity.",
			"So remember, in our main file we assumed that we had an update function,",
			"but we haven't actually implemented it yet.",
			"So we're going to do that right now.",
			"We're going to say birdupdate dt.",
			"We're going to pass it in the same dt that we use in our main file,",
			"and we're going to go ahead, and just say our velocity",
			"is equal to our current velocity plus gravity times delta time.",
			"We're just going to scale gravity by delta time.",
			"So it will move the same amount no matter",
			"whether we're running at 10 frames per second or 60 frames per second.",
			"And then we're going to go ahead--",
			"we have a velocity, but it's not actually changing our y value.",
			"The y value is what ultimately moves us on the screen.",
			"So we need to apply our new delta y to our y.",
			"So we're going to go ahead, and just do that.",
			"Self.y gets self.y way plus self dot delta y, dy.",
			"And so if I go back into bird3, assuming I saved everything,",
			"we should just fall straight to the screen, which we do.",
			"Not terribly useful, but notice it's slightly hard to tell, maybe,",
			"but it does move faster, and faster, frame by frame because that delta",
			"y is increasing as well as our y, and that delta y is getting",
			"applied to our y, frame by frame.",
			"I'll do it one more time.",
			"It's just funny to look at.",
			"All right, so we have basic gravity.",
			"Super basic computation.",
			"Just keep track of some gravity constant, delta y,",
			"increase that, and apply that to your y, and that gives you gravity.",
			"But Flappy Bird can jump.",
			"So we need to find a way to defy gravity.",
			"So we're going to do the-- in bird4, we're",
			"going to call this the anti-gravity update,",
			"and we're going to talk about how we can actually get that going.",
			"So I found this diagram, which I felt was pretty apt,",
			"and it also covers a few of the other concepts we're talking about today.",
			"But see here, this gravity, that's the constant we had just defined before,",
			"the 20 or whatever, and this gets applied",
			"at whatever value you want it to be.",
			"This gets applied frame by frame to your y.",
			"What we want is this.",
			"This vector here is jump velocity.",
			"We want some value to counteract this gravity that we've been accumulating.",
			"So how do we think we can go about doing this?",
			"",
			"We can set gravity to some, perhaps, negative value, a high value.",
			"And that will have the effect of frame by frame,",
			"if we go from some positive value, which is taking us down on the y-axis,",
			"and we go to a negative value, frame by frame,",
			"it's going to say-- let's say that we start at negative 5.",
			"We set it's velocity to negative 5 it's going",
			"to set y to negative-- it's going to set it to plus negative 5 pixels",
			"plus negative 4.9 pixels, 4.8 pixels.",
			"It's going to shoot us up pretty fast in a series of pixels,",
			"but since we're applying gravity frame by frame, this value",
			"that we set before, 20, it's going to have the effect--",
			"20 times delta time.",
			"So it gets, effectively, divided by 60.",
			"It's going to counteract this again.",
			"So we're going to shoot up pretty fast, but gravity",
			"is going to start taking hold immediately after,",
			"and we're going to start getting the effect of our bird jumping,",
			"and then falling down to the ground.",
			"A couple of other things that this diagram shows,",
			"which I thought were pretty cool, this pipe gap",
			"distance here, something that we'll be talking about pretty",
			"shortly because this needs to be defined so that we can offset our pipes.",
			"Pipe separation, it's another thing we'll be talking about.",
			"And also pipe width, which is just an intrinsic value",
			"characteristic of the pipe sprite we'll be using,",
			"but I thought it was very apt.",
			"NYU did a nice article, if you want to look",
			"at this, about exploring game space.",
			"They computationally determined what would make a Flappy Bird",
			"level difficult or not, and rated Flappy Bird levels that were dynamically",
			"generated based on some sort of scale.",
			"So if you're curious, it's in the slides,",
			"but I thought it was a cool find as I was putting together this lecture.",
			"So what we need to do is then, simply, add some negative value to gravity.",
			"Negative sort of anti-gravity.",
			"So we're going to go ahead do that.",
			"So in bird4 of the little mini repo that I have here,",
			"we're going to go ahead in main, first.",
			"",
			"One thing that we want to do is because another part of this",
			"is taking input from the user, being able to jump,",
			"we want to be able to detect whether they've pressed space.",
			"But if we want to detect input for every single entity that we ever--",
			"in an instance like this, it's not terribly important,",
			"but let's say we have 20 or 30 different kinds of entities,",
			"and they all have their own input handling,",
			"we don't want to clog our main with that, necessarily.",
			"So we can dedicate that--",
			"delegate that, I should say, to another section of the code.",
			"In this case, we can sort of put our birds input",
			"handling together with our bird class, right,",
			"and expound upon the model of the class, taking control of the code and data",
			"for that particular object in our scene.",
			"So what we're going to do is in our love.load,",
			"I'm going to go ahead, and do something here.",
			"I'm going to go ahead and set love.keyboard.keysPressed",
			"equals a table.",
			"And what I'm doing is just adding onto a table that Love defined.",
			"It's called love.keyboard.",
			"I'm adding my own value into it called keysPressed,",
			"and I'm assigning it to an empty table.",
			"So what we're going to do--",
			"this is now part of what Love gives us as part of its SDK,",
			"but it's something that we've created ourselves,",
			"and you can do this because in Lua, basically everything",
			"beyond basic variables are just tables, and you can manipulate tables",
			"however you want.",
			"In this case, love.keyboard is a table.",
			"I'm just adding a new key called keysPressed,",
			"and I'm assigning it to an empty table of my own.",
			"And we're going to see how this is actually used in just a moment.",
			"So I'm going to go ahead in our keyPressed function here--",
			"",
			"this function is called every time a user presses a key in the game,",
			"but I'm going to use it.",
			"Because it does that, I can go ahead, and just do something like this.",
			"Love.keyboard.keysPressed key gets true, and what that means is in this table",
			"that we've just defined, we've created ourselves, anytime the user",
			"presses any key, because love.keyPressed gets called for you,",
			"we can safely rest assured that this is going to get populated no matter",
			"what key they press because it's just something",
			"that Love2D takes care for you.",
			"But it's not getting stored until now.",
			"Now we're actually going to keep track of it",
			"in our own table for reasons that will become apparent very shortly.",
			"The next part of this code is defining a custom function.",
			"So the impetus for this is Love defines a couple of functions.",
			"It defines a function called love.keyboard.isdown,",
			"which takes in some key value, and you can",
			"use it to test for continuous input, which we did in the last lecture.",
			"We were saying hey, if up is down right now, or down is down,",
			"then we need to update our y velocity accordingly.",
			"But it doesn't have a mechanism like this for let's say,",
			"we want in some file other than main, to check",
			"for if a key was just pressed one time.",
			"It has this function, love.keyPressed, which takes a key,",
			"and that will trigger it, but we can't access this outside of this function",
			"because if we define this function in bird.lua,",
			"it's going to overwrite this implementation.",
			"And we don't necessarily want to have to worry about other files",
			"overwriting these functions because who knows--",
			"if you're on a team, especially, who knows",
			"who's overwritten love.keyPressed, and what module in,",
			"and what order does it get loaded in, and what functions actually valid.",
			"We're going to take care of this problem by giving ourselves the ability",
			"to test for whether a key has been pressed on the last frame",
			"by implementing a function that we are also adding to the keyboard namespace,",
			"the keyboard table ourselves, called wasPressed.",
			"And it's going to take a key, and all it's going to do",
			"is check that table that we created before.",
			"It's going to say if love.keyboard.keysPressed key, then",
			"return true, else return false.",
			"And you could actually just return love.keyboard.keysPressed key,",
			"and it will be the exact same thing.",
			"And so what this has the effect of doing is",
			"saying, OK, because on the update, which we're about to see--",
			"actually, I should probably do that before so this all gets tied together.",
			"",
			"At the end of love.update, we're going to do one last thing,",
			"and that's reset that table because we want to just check frame by frame.",
			"So we have a table, a global table, that we've created",
			"to check for whether a key is pressed.",
			"We have a callback function that Love2D gives us that allows us to do that.",
			"So every time a key gets pressed, we're going",
			"to just add that key to that table, and set it to true.",
			"Now, we can just simply query that table anytime we want to with this function",
			"that we've created called love.keyboard.wasPressed key, which",
			"means on the last frame, was that key pressed?",
			"Basically return whether it's true or false.",
			"Now, the only problem is we're not flushing it.",
			"We're not ever setting that to false.",
			"That's has the effect of if we just press all the keys on our keyboard,",
			"those will always be true until we re-initialize the table",
			"to some empty value, which is what we do here.",
			"On the update, which takes place after all inputs been detected,",
			"we're going to just set that table to an empty table again.",
			"And on the next frame, it's going to-- whatever keys we pressed, those",
			"will get set to true, and then we can just query that table here as needed,",
			"and any update henceforth.",
			"So does anybody have any questions as to how this is operating?",
			"",
			"And so the ultimate driving factor for us",
			"as to why we want to do this, why we want",
			"to put in the work to keep track of this global input table,",
			"is so that we can actually query input, single key input based in other files",
			"outside of main.lua because currently, all",
			"we can do to check for single key presses is look in main.lua,",
			"but that's not what we want to do.",
			"We're going to go ahead and go to our bird.lua, and in our update function,",
			"this is where we actually get to use our efforts,",
			"and say if love.keyboard.wasPressed space,",
			"which is the key that we want to actually allow us to jump,",
			"go ahead and set self dy to--",
			"what should we set self.dy to when we press spacebar?",
			"",
			"Should it be a positive or a negative value?",
			"AUDIENCE: Negative.",
			"COLTON OGDEN: A negative value.",
			"We'll set it to negative 5, and we should probably",
			"define this as an anti-gravity constant up here.",
			"But just for the sake of speed, we'll say self.dy gets negative 5.",
			"",
			"And I did say that, right?",
			"I did say that.",
			"I'm going to go ahead, and go into bird4.",
			"Go ahead and run this example.",
			"And look at that, we're jumping.",
			"But we can still fall through the ground,",
			"and we don't have any real game play.",
			"But we've come a long ways.",
			"Now we've taken single key input that we otherwise",
			"didn't have the ability to do in Love2D, and we've",
			"made it possible by just keeping track of our global input state,",
			"and flushing it every update.",
			"So does anybody have any questions as to how that works?",
			"OK.",
			"So the other big major visual component of Flappy Bird",
			"are these pipes that we see here on the screen.",
			"We have two pipes there, but the screen is filled with infinite pipes.",
			"So does anybody have any instinct as to how we can implement this?",
			"",
			"Well, we'll see before long, but suffice to say we'll need a new sprite.",
			"We'll need some sort of way of keeping track",
			"of when to spawn them because they'd sort of spawn after a period of time,",
			"and that will be our gap.",
			"And then what will happen if we just let it spawn forever and ever?",
			"AUDIENCE: You have to destroy them as they go?",
			"COLTON OGDEN: We do because if we don't do",
			"that, after a certain period of time, we're allocating memory",
			"for each of these pipes.",
			"Not a ton of memory, just essentially, an x, a y, a width, and a height.",
			"But because they all reference the same--",
			"they will reference the same sprite image, but given enough time,",
			"eventually you're going to allocate a certain number of bytes",
			"that will exceed your computer's memory, or the amount of allocated memory,",
			"and you'll either hang infinitely, or crash.",
			"And so we want to destroy them as they go as well.",
			"So we're going to go ahead, and look at the final live coded example",
			"just because from here on out, it's going to be a little bit much.",
			"I'm going to go ahead, and go to main.lua first.",
			"",
			"So just get my notes in order.",
			"The first thing that we want to do--",
			"oh, I'm actually in the wrong repo too.",
			"I apologize.",
			"I was in the distro repo.",
			"I want to be in the scratch repo.",
			"So I'm going to go ahead, go into main, and I'm going to require pipe.",
			"Now, we don't have a pipe yet, but this is a perfect example of how",
			"we can keep abstracting our game.",
			"We have a bird class, but we should also probably",
			"have a pipe class because a pipe is a distinct type of entity in our game",
			"world.",
			"We can model it as a unit, we can give it functions,",
			"we can give it data, and think about it in terms of it being a pipe,",
			"not being a set of xy, width, height, et cetera.",
			"Whatever data you want to ascribe to it, we",
			"can abstract that out, and think in more abstract terms, which will",
			"allow us to scale a little bit better.",
			"So we're going to go ahead, and assume that we have a pipe class.",
			"I'm going to go ahead, and add it to our folder here right now.",
			"So do a new file, pipe.lua, and I'm going",
			"to go ahead, and reference to notes here for just a second.",
			"",
			"So the pipe class is actually quite simple,",
			"just like the bird class was initially.",
			"We don't need to keep track of a lot of data,",
			"but we do want to keep track of a few things.",
			"So the bird-- there's only ever going to be one bird out",
			"at once, but with the pipes, we're going to be spawning them over,",
			"and over again.",
			"And so if we allocate them--",
			"for each pipe that we instantiate, if we allocate a new image,",
			"this is probably not super efficient, right?",
			"We're using the same exact data.",
			"We have a bunch of pipes.",
			"We only really need one sprite.",
			"So outside of the init function-- so just below where",
			"we're declaring that pipe is a class, we're",
			"going to go ahead and create a local variable that is still",
			"scoped to this file, but there's only ever going",
			"to be one copy of this object.",
			"We're going to go ahead and call it--",
			"say that we have pipe.png in this folder,",
			"and this is separated out from the functions",
			"that we're going to be defining in here, but this",
			"has the effect of creating a semi global graphics object,",
			"even though it's contained within this class file.",
			"It's not accessible outside of this class file",
			"because we don't need it to be.",
			"But it's also not being instantiated every single time because recall,",
			"if we look at bird.lua here, we're just setting it",
			"as self.image gets love.graphics.newImage bird.png.",
			"This will have the effect of allocating a new image every time",
			"we create a bird object.",
			"But we only ever create one bird object, so it's not really an important design",
			"consideration for us to say, maybe we should create a semi global image up",
			"here.",
			"It's not important in this context.",
			"Probably good style to do so anyway for larger projects, but just",
			"a consideration for here.",
			"Not really something we need to worry about.",
			"But yes, definitely try to take an asset,",
			"and reference it rather than allocate it as many times as possible.",
			"",
			"We want our pipes to scroll.",
			"So we need some sort of value.",
			"Just like we did with the backgrounds, we",
			"need some value that keeps track of whether these pipes are scrolling,",
			"and it can be a constant value.",
			"We're going to directly call it negative 60 this time,",
			"and not negate it when we add it to our position later on.",
			"So PIPE_SCROLL negative 60, we can just add it directly to our x, or to our--",
			"yeah, in this case, just to our x, and it",
			"will have the-- times delta time, of course,",
			"and that will have the effect of shifting",
			"it left because it's a negative number.",
			"We'll define the init function here.",
			"So pipe init.",
			"Within the init function, we're going to do a couple of things.",
			"So it's x.",
			"Where should the x be?",
			"What should the x be set to, let's say, if we want the pipe to spawn",
			"beyond the right edge of the screen?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Virtual width, and you could also",
			"say virtual width plus some number if you wanted to.",
			"Because it's set to 0,0, it's going to have",
			"the-- you won't see it on the frame that it gets instantiated,",
			"but yes, virtual width or virtual width plus some constant value, or some",
			"value that you've allocated ahead of time.",
			"We'll just set it to virtual width.",
			"So as soon as the pipe gets initialized, it will be invisible,",
			"but it's going to be right on the right edge of the screen.",
			"What about our y value?",
			"First of all, let's take a look at what the image looks like so we can see.",
			"It's going to be in our--",
			"I don't think I have the actual image in that directory.",
			"So I'm going to come here.",
			"I'm going to grab the pipe.",
			"This is what the pipe looks like.",
			"Let's see if I can expand it a little bit.",
			"",
			"So it's kind of tall.",
			"Where should we probably place it if we wanted",
			"it to look similar to Flappy Bird?",
			"Probably towards the lower end of the screen.",
			"We can get fancy with it too, and we can even maybe",
			"make it randomized just like Flappy Bird.",
			"So we'll go ahead, and do that.",
			"I'm going to go ahead, and copy this, and put it into our scratch folder",
			"here.",
			"Back in the init function, I'm going to go ahead, and set self.y too.",
			"Because we want to talk about procedural generation,",
			"this will be sort of our first foray into how we randomize this.",
			"We'll be using the function that we used last week,",
			"and this is a ubiquitous function.",
			"You'll see this everywhere in any framework or game engine you use--",
			"math.random.",
			"We want it to be the lower half of the screen.",
			"So let's say virtual height divided by 4 is the upper bound, and maybe",
			"virtual height minus 10 as the upper bound.",
			"So that will have the effect of setting it to roughly a quarter of the screen.",
			"Sorry, virtual height divided by 4 is towards the top end of the screen,",
			"and then virtual height minus 10 is the lower end of the screen.",
			"So it's actually going to cover anywhere from the first quarter below that, down",
			"to about 10 pixels from the bottom.",
			"AUDIENCE: Do you have to set the random seed in this [INAUDIBLE]",
			"or do you do it main?",
			"COLTON OGDEN: I do it in main.",
			"So in this file, I am not sure if I did it for this demonstration.",
			"It is definitely set in the repo.",
			"",
			"I don't think I set it in this example, but yes, you",
			"would set the random seed here if you wanted it to run every time.",
			"Sorry.",
			"And the question was should we set the random seed in the bird file,",
			"or should we set it in main.lua?",
			"Typically, you want to set it at the top level of your application.",
			"So we're going to set it in--",
			"we're going to go ahead, and set it in main.",
			"And the function itself is here, and I think it's starting in bird6, onwards.",
			"So it will be--",
			"",
			"did I not set it?",
			"I may not have set the random seed until later in the repo.",
			"Let's check bird12.",
			"",
			"So yes, math.randomseed, and then seed by os.time,",
			"as we used last week in class.",
			"",
			"I'll set it here.",
			"Probably, we'll only run it once, but it'll have the effect.",
			"Now we can run it several times just to see the difference in the pipes.",
			"Let's go back to our pipe.lua here, and we have the x, we have the y.",
			"So those are set accordingly.",
			"We also want to set the width.",
			"Does anybody recall what the function is to get a width of a graphics object",
			"and the syntax for that?",
			"So we have our image up here, pipe image.",
			"It's love.graphic.newImage pipe.png.",
			"",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Exactly.",
			"So we're going to go ahead, and set this to PIPE_IMAGE colon getWidth,",
			"and that will become our new-- that will allow us to store our width for when",
			"we will use it later.",
			"",
			"And then we need a few other functions.",
			"So the pipe will spawn, but it won't move because we haven't",
			"applied any sort of scrolling to it.",
			"We have the scrolling variable up on line five,",
			"but we need to actually apply it to our pipe.",
			"So we're going to go ahead, and create an update function.",
			"And then in that update function, very similar to what",
			"we've seen before already, PIPE_SCROLL times delta time.",
			"And then lastly, we want to render our pipe.",
			"So we're going to go ahead, and call a function that we've seen already today,",
			"love.graphics.draw We're going to use the pipe image up above,",
			"and then we're going to go ahead, and use self.x,",
			"and self.y, and that's all we need for our pipe.",
			"And let me make sure that that's all we really need.",
			"So in main.lua-- we've got to go back to main.lua too because we actually",
			"have to start spawning pipes.",
			"",
			"So let's go ahead, and go to--",
			"let me pull up my code here one more time.",
			"",
			"In main-- so on line 59--",
			"sorry, you won't see it.",
			"You'll see it in line 59 in the actual distro code,",
			"but for me, it's going to be slightly different.",
			"We're going to go ahead, and create a new table",
			"to keep track of all the pipes that we want to spawn because we",
			"need a way to store them in memory.",
			"We can't just set one variable to--",
			"basically, almost like a dynamic array in this case, or a linked list rather.",
			"We're going to use this table just to hold them.",
			"We're not going to give them keys.",
			"We're just going to insert them like we would",
			"do with just a linked list like in Python, for example.",
			"We're going to go ahead, and what do we need",
			"to do if we want to have them spawn after a certain period of time?",
			"",
			"Probably want to have some sort of timer.",
			"We want to keep track of how much time has passed,",
			"and maybe have some sort of amount of time",
			"that's our trigger to spawn of a pipe.",
			"Let's say maybe 2 seconds.",
			"So if we set a timer to 0, it's just start just at 0,",
			"but we can add to this frame by frame.",
			"We can just increase this timer by delta time, whatever that is, frame by frame.",
			"It'll be about 1/60 of a second.",
			"So after 60 frames have passed, we'll get one second.",
			"After 120 frames have passed, we'll have two seconds.",
			"At that point, we can then decide OK, now it's time to spawn a new pipe.",
			"Let's go ahead and do that.",
			"So I'm going to go ahead, and in our update function,",
			"we want to handle the actual increasing of this timer.",
			"So it's as simple as--",
			"and I make sure that I called it spawnTimer.",
			"No, I just called it timer.",
			"Let's go ahead, and call it spawnTimer.",
			"Be a little more specific about what we want here.",
			"So our spawnTimer.",
			"And then we're going to go ahead in our update,",
			"and set spawnTimer equal to spawnTimer plus delta time.",
			"And then what we need to do is then check",
			"is our spawn timer greater than-- because it",
			"keeps track of time in seconds, delta time will give you",
			"a fractional amount in seconds.",
			"So it will be at 0.013, or something like that.",
			"We want to keep track of whether spawnTimer has gone past two, right?",
			"So if spawnTimer is greater than 2, we want to add a new pipe.",
			"Does anybody remember the function for how to add to a table in Lua?",
			"",
			"So it's table.insert.",
			"So table.insert will take in a table.",
			"So in this case, we want the pipes table that we allocated before.",
			"And then we're going to put in a new pipe object.",
			"This is how you instantiate an object for call, parentheses.",
			"That will have the effect of now our pipes",
			"table is going to-- every time we call this, it's going to get a new index.",
			"So it's going to start at 1.",
			"Lua tables are indexed at 1.",
			"The first time it happens, index1 is going",
			"to be equal to a new pipe object, which is going to start",
			"its xy at the edge of the screen.",
			"Then index2 will be the exact same thing, a new pipe that's",
			"at the edge of the screen, and so on, and so forth every time we",
			"call table.insert.",
			"",
			"Once our spawn Timer has exceeded 2, if we want this to not",
			"spawn a pipe every frame here after, which would quickly clog up our world,",
			"we want to reset our spawn timer to 0.",
			"So this will have the effect of now, it's going to wait another 2 seconds,",
			"and then this condition will be true again,",
			"and then we can add a new pipe to the scene.",
			"",
			"Let's go ahead and look at--",
			"we're going to need to add a new set of logic here.",
			"Actually, I'm going to put all of this above the bird.update,",
			"and then below that, I'm going to go ahead, and do--",
			"I'm not sure if we've covered this already.",
			"I don't think we have, but if we want to iterate over a table,",
			"there's a function that Lua gives you called pairs.",
			"It will give you all the key value pairs of a table",
			"that you can then use while you're iterating over it.",
			"Similar to enumerate in Python, if familiar,",
			"except this will actually give you the keys rather than just the indices.",
			"So we can do for k, pipe in pairs of pipes do some body of code,",
			"and then we have access to the key and the pipe within this.",
			"We can just iterate over it, and use it.",
			"So the first thing we want to do is we want to update our pipe.",
			"So for each pipe, update it.",
			"Give it the delta time of the current frame.",
			"And then what was the other important feature?",
			"So this will have the effect of scrolling it now.",
			"It's going to get its x shifted, but what",
			"was the other important thing we needed to do with every pipe in our scene?",
			"AUDIENCE: When x is less than 0, we have to [INAUDIBLE]",
			"COLTON OGDEN: Yes.",
			"That is exactly true.",
			"So what we're going to do is if pipe.x is less than--",
			"so if we did less than 0, what do we think would happen?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: We would see it instantly disappear because they're",
			"based on the top left coordinates.",
			"So what we need to do is keep track of its width.",
			"So what we'll do is we'll just say if pipe.x",
			"is less than negative pipe.width, which will allow the pipe",
			"to go all the way past the edge of the screen,",
			"we'll call a function called table.remove, which takes a table,",
			"in this case, pipes, and then it takes a key.",
			"And the key we have access to up above on line 124.",
			"We can just say k, and that will have the effect",
			"of removing that pipe from the scene.",
			"And then as soon as that's done, we're good to go.",
			"The last thing that we need to do is currently,",
			"we're not actually drawing the pipe to the screen.",
			"So down below in our render function, we're going to go ahead, and up above--",
			"before we do the ground, because if we do it normally--",
			"if we do it after we render the ground, the pipes",
			"are going look like they're just kind of layered on top of the ground.",
			"We want it to look as if they're sticking out from the ground.",
			"So what we want to do is have a correct render layer,",
			"a render draw order to the screen.",
			"We draw the background, we draw the pipes, then we draw the ground,",
			"and this will have the effect of looking as if the pipes are sticking out",
			"of the ground.",
			"So what we'll do is we'll do the exact same thing we just did up",
			"above by saying for k, pipe in pairs of pipes do pipe,",
			"and then the render function that we defined in pipe.",
			"And this will have the effect of iterating",
			"through all the pipes in our scene every draw call,",
			"and drawing them before it draws the ground, and before it draws the bird,",
			"and that should be all that we need to illustrate this example.",
			"Let me make sure everything is saved.",
			"I'm going to go ahead, and go into bird5.",
			"If I did everything correctly, this should, after a certain period of time,",
			"drop pipes to the screen that are scrolling, and they're randomized.",
			"Their y value is getting set to some value",
			"between the top quarter of the screen.",
			"So starting about right where Flappy Bird is right now, down",
			"about 10 pixels above the width of the screen, which actually,",
			"that looks like 10 pixels above.",
			"So that's a slight bug.",
			"It should probably be something along the lines of 30 or 40.",
			"We won't encounter that in the final distro",
			"because they're not set to spawn that low,",
			"but you can see how this is sort of the beginning of our procedural level",
			"generation system, and we have most all the components of our scene.",
			"Now, normally in Flappy Bird, we have two pipes.",
			"We have a pipe that's above, and then a pipe that's below,",
			"and they're in pairs.",
			"In the next example, we're actually going to start illustrating this.",
			"We're going to have pairs of pipes that are joined together,",
			"which scroll together.",
			"That once you fly through them, you score a point.",
			"But for now, we have all the pieces that we",
			"need in order to have the basic visual sense of the game completed.",
			"We're going to take like a five minute break now, and then once we come back,",
			"we'll actually dive into how we can get pairs of pipes into our scene,",
			"and start getting into scoring, and some other fun things like music.",
			"",
			"All right, welcome back.",
			"So the next part--",
			"so before we establish the bird, the background, the pipes,",
			"we have all the visual aspects of our game ready to go.",
			"The next important piece of the puzzle to really solve",
			"is how can we start scoring our game, and also how can we",
			"get the pipes matching the way that they're implemented in the actual game?",
			"Which, recall, they're normally in pairs, as illustrated here.",
			"And we also see on the right-hand side, as we've covered already so far,",
			"we have the spawn zone for our pipes, and on the left,",
			"we have what I've labeled the dead zone, where",
			"pipes are de-instantiated once they've gone",
			"past the negative width of themselves.",
			"But pipes come in pairs, they get shifted,",
			"and once the bird flies between these gaps,",
			"is ultimately when they've scored a point.",
			"And so we need a way to pair pipes together, and define this logic for how",
			"can we tell whether the bird has gone past the gap,",
			"and whether or not the pipes have been de-instantiated.",
			"So we're going to go ahead, and I'm going to probably",
			"stop live coding for the rest of the demonstrations",
			"because they're going to be a little bit more complex.",
			"But I believe my code editor is over here.",
			"I'm going to go ahead, and open up--",
			"oh, this is my other editor.",
			"So in the base repo now, we're going to go ahead, and look at the full example.",
			"So in bird6, which is the pipe pair update--",
			"our current subfolder that we're looking at--",
			"we're going to start in main.",
			"So on line 33 in main.",
			"We can see that we're acquiring pipe pair, which",
			"is a new class we're defining.",
			"We're taking the pipe that we had before,",
			"and we're creating a new composite class.",
			"So we're going to take a class that encapsulates two pipes together,",
			"a pair of pipes, and we're going to use this to think about our problem more",
			"abstractly than we already are.",
			"And this layering of abstractions is a very important concept",
			"in computer science, generally speaking, but especially",
			"in games where you might have objects that are composites of objects that",
			"are composites of objects, and these abstract hierarchies are",
			"sort of what keeps programmers sane when dealing",
			"with such large levels of-- when you have thousands of lines of code,",
			"it's sort of the only way you can really make sense of it.",
			"So on line 65, if we look--",
			"now, instead of a table that's called pipes, we've renamed it to pipe pairs.",
			"We're no longer going to store individual pipes in our scene.",
			"We're going to take these pipe pairs that we're",
			"going to create, and store them in our table as well as individual units.",
			"On line 71, we need a variable to keep track of the--",
			"we're calling it last y.",
			"The purpose of this variable is so that we",
			"can keep track of where the last set of pipes spawned their gap.",
			"Because if we made our gaps completely random,",
			"it will have the effect of not looking continuous for one,",
			"and also potentially being impossible to beat.",
			"We want some sort of smooth contour to our gaps",
			"so that we can fly through them reasonably,",
			"and that it looks as if it was almost pre-made, and smooth.",
			"So we're going to keep track of a variable called last y.",
			"We're going to start it off at negative pipe height.",
			"So up past the top of the screen, plus some sort of value between 1 and 80",
			"and 20.",
			"It's going to be roughly towards the top of the screen.",
			"And this is important because the last y is",
			"going to be-- we're going to end up flipping our sprite.",
			"A flip on the y-axis has the result of the sprite looking",
			"as if it's gone its whole height above where its actual y is,",
			"and we'll see in more detail, shortly, why",
			"this ends up working the way it does.",
			"We're going to go down to line 132, and in our condition,",
			"if our spawnTimer is greater than 2, what we're going to do",
			"is this is where we spawned our pipes before,",
			"but now we're spawning pairs of pipes.",
			"So we're going to set a local variable y.",
			"It's going to be--",
			"this is the clamp operation that we talked about last week",
			"using math.max and math.min to apply some sort of operation.",
			"In this case, we're going to add a random value between negative 20",
			"and 20 to whatever our last y value was, which",
			"is going to shift the gap effectively by negative 20 or 20 pixels.",
			"We're going to clamp it between negative pipe height plus 10.",
			"So about 10 pixels from the top of the screen,",
			"and then we're going to set the upper bound to virtual height minus 90",
			"minus pipe height.",
			"And this minus pipe light is only because we're doing a flip operation",
			"on our y-axis for our sprite.",
			"I'll go into it in a little bit more detail",
			"to try to make it clear as to why we're doing it,",
			"and maybe I'll take out some codes to illustrate what it looks",
			"like without that operation applied.",
			"But basically, it has the effect of 90 pixels from the bottom",
			"is where the gap could spawn.",
			"So basically, the pipe at the very bottom.",
			"Recall that this gap is where--",
			"this value is where the gap itself begins, not necessarily",
			"where the pipe starts.",
			"It'll be between negative pipe height plus 10.",
			"Basically, effectively, between 10 pixels from the top of the screen,",
			"between 90 pixels from the bottom of the screen,",
			"and then we're going to apply a random permutation of this value.",
			"We're going to add some value between negative 20 and 20,",
			"and that will give us a contour, and it'll be a randomized contour.",
			"",
			"Line 136, we have pipe pairs.",
			"Table insert into that instead of pipes, and we're just adding a new pipe pair,",
			"and we're setting it to the value y.",
			"And then the pipe pair takes in a y value,",
			"and that will be where the start of the gap is.",
			"And what this will have the effect of doing",
			"is it's going to flip a sprite above the gap",
			"so that we have a pipe right above where the gap starts, and then it's",
			"going to draw another pipe unflipped about 90 pixels below that,",
			"and that will be how it puts the two together.",
			"",
			"Line 144 is a loop that just updates our pairs instead of our pipes.",
			"So all we've done here is just renamed it from pipe to pair, and instead",
			"of pipes, we're using pipe pairs.",
			"We are doing the same exact thing here on line 153.",
			"We've done for k pair in pairs of pipe pairs.",
			"And then line 150--",
			"sorry, line 175 is where we are--",
			"sorry, 170 is where we are rendering each pair instead of each pipe.",
			"And so if we open up pipe pair here, we can take a look",
			"at this class from scratch.",
			"So it's a new class.",
			"We're going to set our gap height to 90 pixels,",
			"and so this is just some arbitrary value that I",
			"felt was a pretty fair value in terms of size,",
			"but you can tune this to whatever you want.",
			"You could set this to--",
			"if you want to be really cruel, you could set it to something like 50.",
			"Or if you wanted to be really generous to the player,",
			"you could set it to something like 150, and make",
			"it fairly easy for them to get through.",
			"Or as part of the assignment, you could randomize it",
			"so that it varies pair by pair, and you get more",
			"of an organic looking obstacle course.",
			"It's still shifted by negative 20 to 20 pixels,",
			"but now your gap varies, and you can also randomize the shift amount",
			"if you wanted to as well.",
			"Let's say you wanted--",
			"maybe you want the gaps to be up to 40 pixels",
			"difference instead of 20 pixels difference",
			"on negative and positive value.",
			"You could easily do that as well.",
			"",
			"On line 18 we're just setting our x to just like",
			"we did before, virtual width plus 32.",
			"So we're setting it to the--",
			"actually, before we just set it to virtual width.",
			"Now we're setting it to virtual width plus 32.",
			"Both are pretty much equal.",
			"This will just give it a little bit of a delay",
			"before it ends up going onto the screen, but you can effectively just",
			"do this, virtual width.",
			"",
			"On the next line, 24, this is where we sort of bundled together",
			"the pipes that we're going to end up actually rendering and updating",
			"to the screen.",
			"Instead of having just one pipe, a pipe pair is two pipes.",
			"We can easily put this together in a table.",
			"So we'll just create self.pipes.",
			"We'll set it to a table that has two keys, upper and lower,",
			"and the upper pipe is just a pipe.",
			"And notice one thing is different about pipe.",
			"Now, before, it took no arguments.",
			"It was just a regular pipe.",
			"Pipes had their own logic.",
			"They set their own x and y.",
			"They didn't need any sort of parametrization beyond that.",
			"It was all taken care of for them randomly.",
			"Now, they take a string.",
			"So this top string means that this would be a top pipe.",
			"So that means that if this pipe is a top pipe,",
			"there's probably going to be logic in pipe that now checks",
			"to see whether it's top or bottom.",
			"If it's top, then we need to render it upside down.",
			"We need to flip it along the y-axis, and then we're going to set it to self.y.",
			"",
			"And recall that we set self.y--",
			"we passed in self.y in main.",
			"Actually, I'm not sure if I touched on that.",
			"Let's go back to main here.",
			"So if we go to--",
			"",
			"I need to figure out where I actually instantiate the pipes.",
			"Here on line 136, after we've calculated where",
			"we want the gap to be for this pipe pair,",
			"we're going to go ahead, and insert into pipe pairs, a pipe pair at y.",
			"Y was the calculation between-- we basically took the last y value,",
			"the last gap that we instantiated, and then shifted it by some negative 20",
			"to 20 pixels randomly, and made sure it didn't go above or beyond--",
			"above or below the edges of the screen.",
			"",
			"Back in pipe pair, we're going to go ahead, and look at line 30.",
			"I'm sorry, actually let's take a look a little bit more closely here",
			"at line 26.",
			"So upper gets top and self.y.",
			"That's where the gap is, and the sprite is going to be flipped upon that value.",
			"The lower value is going to be a shift of that.",
			"So the lower sprite needs to spawn below the top pipe by the gap amount",
			"so that the two are top to bottom, but there",
			"needs to be that space between the two of them.",
			"So we need to take that pipe, shift it down, and then draw the next pipe.",
			"So we're going to take self.y plus pipe height plus gap height,",
			"and that'll have the effect-- remember, gap height was 90 pixels.",
			"The pipe height is a result of flipping the y-axis,",
			"and having to shift it down the actual position.",
			"So if we go back to line 30.",
			"",
			"This is an interesting illustration of what",
			"happens when you edit a table while you're iterating over a table,",
			"and I'll show you this in detail shortly.",
			"But basically, on line 30, we're setting a flag called remove to false.",
			"And what this is going to do is before we were just destroying the objects.",
			"Whenever it got past the edge of the screen, we just destroyed it.",
			"But if we're iterating over a table of values,",
			"let's say a table of pipe pairs, when you do a removal in most programming",
			"language-- in Lua, when you do a removal of a table value, and it's not indexed,",
			"or it's non-keyed, which means that it's indexed by numerical indices,",
			"this will shift every other value down.",
			"And so when you're iterating it, and you shift",
			"everything down, the value you are currently manipulating,",
			"let's say it's equal to 1, if you remove that value,",
			"you shift everything beyond it down by 1.",
			"But then you're going to increment up to 2,",
			"and you're skipping over what was previously just 2, and is now 1.",
			"So you're effectively skipping over one of your entries,",
			"and it has buggy behavior in a lot of scenarios.",
			"In this case, it causes the graphics to glitch a little bit",
			"because it doesn't apply a pixel shift on one frame,",
			"and so whenever a pipe gets removed-- and I can actually show this visually,",
			"the first pipe left after that pipe gets removed",
			"ends up moving a little bit to the right,",
			"and so you get weird pipes shifting to the left of the bird on each frame.",
			"So whenever you edit a table in place, make",
			"sure not to delete while you're iterating over it.",
			"It's going to cause buggy behavior.",
			"And like I said, I'll illustrate this for you very shortly.",
			"On line 36, we are performing the update logic.",
			"Now, a pipe pair has two pipes, each with their own render components,",
			"and their own positions.",
			"We're using the code that we wrote before for pipe,",
			"and we're going to try to expand upon it a little bit.",
			"So we still wanted to defer a lot of that code to the pipe class,",
			"and we want to update the pipes based on whether--",
			"We want to still keep track of their own x, and their render functions,",
			"and so we're going to see, basically, if our pipe pair",
			"x is greater than negative pipe width, which is the same exact logic that we",
			"were using before.",
			"Set our own x to that minus pipe speed times",
			"delta time, which is the same operation we were doing before.",
			"But we are also editing the x of our self.pipes lower and upper,",
			"and this will allow us to-- on line 46--",
			"render the pipes just as we were doing before",
			"because they're getting their x values updated just as they were before.",
			"So we're effectively deferring the render phase to our pipes,",
			"and not really needing to add any additional logic for that in our code.",
			"",
			"We've made changes to pipe.lua as well, so I'm",
			"going to go ahead, and open up pipe here.",
			"",
			"And we've set the height and width of it as contents here.",
			"So pipe height gets 288, and then happens",
			"to be about the size of the screen.",
			"Pipe width gets 70.",
			"",
			"On 31, we're sitting self.orientation gets orientation.",
			"Notice our init function, which was previously just",
			"empty, it took no parameters, now takes an orientation, and it takes a y value.",
			"The orientation is going to allow us to ask, basically, is our code",
			"a top or a bottom pipe?",
			"And if it's top pipe, we need to flip it, draw it, and shift it.",
			"If it's a bottom pipe, we're just going to draw it normal,",
			"and not perform any sort of fancy sprite flipping or anything like that.",
			"Down here in the render function is where this actually happens.",
			"So on line 39, we're drawing the pipe image as usual",
			"at x, but at y, because when you flip a sprite",
			"it ends up completely flipping the y-- it basically performs a mirror on it,",
			"but it not at 0,0.",
			"It basically shifts it up by pipe height amount.",
			"We need to keep track of that, and draw it at self.y plus pipe height.",
			"Because if we draw it at just self.y, because it's going to be mirrored,",
			"and it's going to get shifted by pipe height amount,",
			"it's going to be beyond the top edge of the screen.",
			"We need to account for that, account for the fact",
			"that we're flipping it on the y-axis, and bring it down.",
			"AUDIENCE: Where's the code where you flip it?",
			"COLTON OGDEN: The question is where is the code where we flip it.",
			"So that's actually here on this line.",
			"On this condition, we're saying if self.orientation is equal to top,",
			"then we want to--",
			"so the parameters here, I'll comment this just for clarification.",
			"AUDIENCE: So the draw function has a flip function?",
			"COLTON OGDEN: It does, I'll show you here.",
			"So this 0, we've added a few new parameters",
			"to our love.graphics.drawfunction.",
			"Zero is rotation.",
			"We're not going to rotate it at all.",
			"This is the scale on the x-axis.",
			"So x scale, and this is the scale on the y-axis.",
			"So if we apply a scale operation of one, it's",
			"the same thing as doing no scale at all.",
			"It's going to draw it on the x-axis.",
			"It's just going draw it normally.",
			"But if it's top, if this pipe has been set to an orientation of top,",
			"we're going to set the scale to negative 1.",
			"When you said a sprite--",
			"its scale factor to negative 1, it flips it along that axis, effectively.",
			"And so that's how you get mirroring.",
			"Most engines that allow you to apply scale operations to 2D textures or 2D",
			"sprites, a negative operation on an axis will mirror it on that axis,",
			"and so that's what we're doing here.",
			"So we're mirroring it if it's a top pipe,",
			"and we're also shifting its draw location",
			"as well because when we mirror it, it's going to--",
			"at 0,0 it's going to do the same-- it's going",
			"to basically draw the same exact thing, but mirrored on the y-axis.",
			"So it's going to need--",
			"if we want to draw at a given location, flipped--",
			"still draw it at 0,0, but have it be flipped,",
			"we need to account for that flip, and shift it downwards if that makes sense.",
			"",
			"So that's essentially all that's involved there.",
			"And I think that's pretty much all of the code.",
			"So we have our pipes now that are being flipped.",
			"If its a top pipe, it's going to get drawn shifted.",
			"It's going to have its other pipe shifted down by that amount,",
			"and its y-axis is going to be increased by the gap height",
			"so that it gets drawn 90 pixels, however many pixels you",
			"want to set below that pipe.",
			"So we're going to go into demonstrate this.",
			"Go up to fifty bird, the actual repo now, and the actual distro code.",
			"I'm going to go into bird6, and I'm going to run it.",
			"",
			"And now we have pipes that are actually rendering.",
			"But we're missing a couple of important things.",
			"Foremost, among them being that now we don't have collision detection yet.",
			"So we can just fly through this course infinitely,",
			"but notice that they're being shifted by a random value between negative 20",
			"and 20 pixels.",
			"It looks more or less like it's being generated with some sort of goal",
			"in mind.",
			"It's not haphazard.",
			"It's not all over the place, but you could easily",
			"find ways to tweak this such that maybe the gap height is",
			"some value between 60 and 120.",
			"And so you have easy and difficult pipes, or maybe you have--",
			"I think I'm so far below the screen that I can't even get back up anymore.",
			"Oh, OK, that's a physics error.",
			"When your value gets to a certain point, I think that's actually what it's doing",
			"is it's actually overflowing the value, and setting it to a negative.",
			"Or underflowing it, and setting it to a negative value,",
			"and then incrementing it because it's gotten so large.",
			"But you could easily modulate parameters such as the width between the pipes",
			"as you saw in the diagram before, or the height,",
			"or even the speed at which they move, and find",
			"ways to tune it to make game play that actually works for whatever goal",
			"you have in mind-- making it easier or more difficult.",
			"And that's actually a topic that they talked about in that article",
			"that I linked to before, where they generated levels",
			"programmatically, and then tested them programmatically",
			"to determine what makes level in Flappy Bird difficult or easy.",
			"And so basically, those are the parameters",
			"you need to way as you're thinking of procedural generation.",
			"And procedural generation, ultimately, is just",
			"taking values that you construct your scene with,",
			"and just finding ways to just manipulate them randomly.",
			"Math.random some value, and that's how you make random levels in a nutshell.",
			"Making good random levels is another question.",
			"AUDIENCE: This guy made a lot of money doing very little.",
			"COLTON OGDEN: He did, he did.",
			"There was a big controversy around this game back in 2013.",
			"AUDIENCE: He had like a nervous breakdown, too, right?",
			"COLTON OGDEN: I don't know if I read too much into that,",
			"but I was doing a little bit of research, and was reading about some",
			"of that stuff.",
			"I've got to give him props for banking on that.",
			"",
			"Now we have pipe pairs.",
			"That's arguably the most complex part of the program",
			"because going forward now, as we get into collision,",
			"and some more concepts, collision is actually something",
			"that we touched on last week, and it's all basically the same stuff.",
			"So if we go into bird7, the next iteration of our application.",
			"I'm going to go ahead, and open up main.lua,",
			"and then we're going to go to line 74.",
			"",
			"And in order to test collision, we don't have scoring in place yet,",
			"but we need some way to determine oh, we collided with a pipe.",
			"We need some sort of feedback.",
			"So what we're going to do is I've just decided we should just pause the game.",
			"So once we collide with a pipe, let's just pause instantly",
			"so we know immediately, oh, we collided with a pipe.",
			"So I'm going to set some variable called scrolling",
			"at the top of the program in main to true.",
			"We're scrolling.",
			"We're going to start scrolling, but when I",
			"don't want to scroll any more, when I want to pause the game,",
			"this should get set to false.",
			"So on line 120, if scrolling, then do all of this update logic",
			"that we did before.",
			"And then at the very end of that, we're resetting our input table.",
			"So we can still take input, but no updates",
			"will take place if scrolling is set to false.",
			"All of this stuff is within this if--",
			"excuse me, if scrolling, then.",
			"So very simple.",
			"We'll just encapsulate it all within some variable",
			"that we can turn on and off.",
			"And then on 152, within that chunk of code",
			"that is being contained within that if condition,",
			"we're just doing a very simple iteration.",
			"For each pipe, this should be for l pair in pairs of--",
			"oh no, sorry.",
			"For every pipe in the pairs of--",
			"it's a nested for loop in this case.",
			"So basically, within the loop that looks over every single pair, to update it,",
			"we're doing another loop that's looping through with the pipes in that pair.",
			"So it's only a loop of two iterations with the upper and the lower pipe.",
			"We could just also say if bird collides with upper--",
			"basically, if pair.upper or pair.lower, or pair.pipes",
			"to upper pair.pipes.lower, but this is a little cleaner.",
			"It's more scalable.",
			"We can add more pipes if we want to, even though it wouldn't happen.",
			"But for every pipe in pair.pipes, we have a function here that we",
			"haven't defined yet called bird:collides.",
			"So if bird collides pipe-- so it takes in a pipe.",
			"So it's going to return a true or false value, we know that--",
			"set scrolling to false.",
			"So we collide, scrolling set to false, update logic",
			"is going to get shut off completely.",
			"So we're going to have the effect of pausing the game.",
			"We're going to go into bird.lua right now,",
			"and we're going to actually see how we implement this,",
			"and it's going look very familiar to what we did last week.",
			"So in bird.lua, this function here, from 29 down to 45,",
			"it's just an aabb collision detection test that we did last week.",
			"We're just checking to make sure any edges are--",
			"right edge, make sure that is to the left",
			"of the right edge of the second box.",
			"Bottom edge of box one should be--",
			"or bottom edge of box one should be above bottom edge or top",
			"edge of box two.",
			"If all of these things hold true, then return true.",
			"Else, return false.",
			"That means we have a collision.",
			"And notice that I've shifted everything here by a couple of constant values.",
			"Does anybody have any instinct as to why I'm",
			"saying self.x plus 2 instead of just self.x self.width minus 4?",
			"Why we're checking for that offset for the bird in this case",
			"when it is compared with the pipe.",
			"AUDIENCE: It's half the size of the bird?",
			"COLTON OGDEN: It's not quite half.",
			"It's a few pixels smaller.",
			"Do we know why we want to do this?",
			"We're basically shrinking the box.",
			"Why would we want to shrink the box?",
			"AUDIENCE: There's a gap between the actual drawing [INAUDIBLE]",
			"COLTON OGDEN: So not quite.",
			"So there isn't an actual gap between the drawing.",
			"It's more a question of how much we want to frustrate our users.",
			"If we're pixel perfect colliding with the pipes, there's no give and take.",
			"It's like you collide, and even if-- it might even",
			"look as if you're not even colliding with the pipe,",
			"and you're still getting a collision.",
			"Your users are thinking, well, that's not fair.",
			"That's really harsh.",
			"We're shrinking our box so that even if they're just a pixel off,",
			"they'll still get a little bit of leeway,",
			"and it'll be a little bit less strict in terms of the collision,",
			"and this is a very common thing in games when you have characters whose sprites",
			"may not necessarily fill the entire box that you've allocated for them,",
			"even though you're doing box collision.",
			"Just give your users a couple of pixels deep, however many",
			"you want, and they can overlap with whatever",
			"they're colliding with just a tiny bit before it actually",
			"triggers a true on the collision, and it makes your game feel more forgiving,",
			"and then also more fun as a result of that.",
			"So that's why we have--",
			"instead of testing directly on x0 of that box, we're testing x plus 2,",
			"and then self.width minus 4 because when we shift,",
			"we add width to a plus 2 value, we need minus 4",
			"so that we get 2 off the right edge, and same thing",
			"goes for the height, and the y value.",
			"And so this just performs aabb collision detection.",
			"Expects a pipe, which means that we need to ensure",
			"that the pipe has an x and a y, a width and a height, which it does.",
			"Actually, just a constant here.",
			"We're just checking pipe width and pipe height.",
			"We probably shouldn't do that.",
			"It should be pipe.width, pipe.height in that case,",
			"because then this couldn't necessarily just be a pipe.",
			"It could be anything in our scene that has a xy, a width, and a height.",
			"It could be a general purpose collision.",
			"And actually, something you could also do if you wanted to is",
			"just write a function called collides that takes in two things",
			"that you know have bounding boxes, and will",
			"allow you to perform collision detection on anything",
			"in your scene between any two entities.",
			"That would be a more scalable way, I guess,",
			"of dealing with it, rather than necessarily having it",
			"specifically defined as birds and pipes being the colliders.",
			"But in this case, this is the only thing we're really",
			"colliding with, except for the ground.",
			"But when you collide with the ground, all you need to do",
			"is just check to see whether your y position plus your height",
			"has gone below the edge of the screen.",
			"So any questions as to how that?",
			"AUDIENCE: Why did you add 2n and subtract 4 instead of just subtract 2?",
			"COLTON OGDEN: So the question was why did we add 2 and subtract",
			"4 instead of just subtract 2?",
			"Because when you add a--",
			"because we're doing self.x plus 2, basically we're",
			"shifting the whole box, essentially, here in this part.",
			"So self.x plus 2 brings the beginning of the box",
			"that we're colliding with 2 pixels to the right.",
			"But if we just do 2 pixels minus 2, then the box's right edge",
			"is still the right edge of the box.",
			"We want it to be shifted inwards by 2 pixels.",
			"Because we've shifted at the start of our box, the x position, 2 pixels over,",
			"we need to shift it 4 pixels inwards because that",
			"will have the effect of our box being 2 pixels into the right edge.",
			"Does that make sense?",
			"",
			"OK, so I think that's everything for bird7.",
			"",
			"We're going to go ahead, and run bird7 now.",
			"And recall, if we hit a pipe, we should instantly pause.",
			"So bouncing, bouncing, bouncing.",
			"I'm going to go through one pair of pipes here,",
			"and then I'm going to hit this one on purpose.",
			"Oh, we paused.",
			"And notice that we had a little bit of leeway.",
			"We got a couple of pixels there just to give us-- in case we",
			"accidentally-- and also, it takes into consideration you could move,",
			"because of your velocity, a couple of pixels",
			"beyond necessarily the strict hard edge of what you're colliding with",
			"based on how many frames of passed.",
			"Basically, essentially what your velocity is, and what your position is.",
			"In this case, I think it looks like we're actually",
			"three or four pixels above the edge because our velocity was",
			"so high because we jumped, but as soon as it detected the collision, as",
			"soon as we were on that frame where our position was such",
			"that we did trigger true for our collision detection,",
			"it paused the game.",
			"Looping was set to false.",
			"We no longer ran any update logic, and this is our basic way",
			"of getting feedback about that.",
			"However, it's not particularly compelling, gameplay wise,",
			"and so we want to get into scoring.",
			"Before we get to scoring though, and also associated with that,",
			"different states of our game.",
			"So if we get into scoring, clearly we want",
			"to have a screen that tells us when we lost, and what our score was.",
			"We should also probably have a title screen",
			"because we're just jumping right into the gameplay.",
			"We want a screen that lets us play through the game,",
			"and as we'll see in a little bit, a screen that also gives us",
			"some time, once we start the game, to count down.",
			"Sort of say, oh, three, two, one, go, rather than just oh,",
			"go, and oh, I don't know what I'm doing.",
			"I'm bewildered.",
			"So this is a diagram that sort of models the state",
			"flow that we're going to be using in our program here, our game.",
			"We're going to assume that we start on some sort of title screen state.",
			"So going left to right.",
			"A title screen state will transition to the count down state,",
			"and then we can define, however we want, those transitions to be.",
			"In this case, let's just say we press Enter.",
			"The title screen state goes to countdown state.",
			"Once countdown state has--",
			"once the transition has triggered for that, we should go to the play state.",
			"And then once the transition triggers for play state,",
			"we're going to go down to the score state.",
			"And then score state should go back into countdown state, and this models",
			"our entire application's flow--",
			"top to bottom, left to right, chronologically.",
			"So let's go ahead, and take a look at some code",
			"as to how we're going to accomplish this.",
			"Last week, I alluded to taking us-- and actually earlier in lecture, us",
			"going from this string based approach, to keeping track of our state with if",
			"conditions, to a class based approach, and that's",
			"what we're going to illustrate today.",
			"So I'm going to go ahead, and open up bird8.",
			"And in bird8, I'm going to go ahead, and start with main.",
			"So in main, on line 36, we're acquiring a new class called state machine,",
			"and a few other classes that we're defining called bay state, play",
			"state, and title screen state.",
			"And these are the components of our state machine,",
			"and they've now, instead of being just blocks of code in our update function,",
			"they're separate blocks, separate modules that",
			"have their own logic, their own update and render logic,",
			"and we'll see that very shortly.",
			"On line 78, if we go down here--",
			"separate from that, I'm also instantiating a bunch of fonts.",
			"We did this last week.",
			"So love.graphics.newfont takes in a font file and then a size.",
			"I've created a few different fonts here because we have a few different ways",
			"of giving feedback to the user.",
			"We want a small font for displaying press Enter",
			"to a start, or something like that.",
			"We want a medium font to display the name of the game, perhaps.",
			"Or, I think actually, Flappy Font is responsible for that.",
			"Medium font, I think, was for score.",
			"Huge font for our countdown.",
			"We want a big font right in the middle of screen",
			"that says three, two, one, and then we start.",
			"And then we're just going to start off by setting it to Flappy Font, which",
			"is going to be our title font.",
			"So nothing really new, but the beginning of our UI, so to speak.",
			"On line 92, this is new, and actually this",
			"is a demonstration of a type of naming convention",
			"you'll see often in game code bases.",
			"We haven't used it yet, but we will start using it in the future.",
			"We prefix a global variable with a lower case g.",
			"This lets you know when you're digging through a bunch of files",
			"that oh, this is a global variable.",
			"OK, so I should probably know it's probably not defined in this module.",
			"Maybe it is, but I know it's global.",
			"Other things you might see are lower case",
			"m for member, which means that this is a member function, or a field of a class,",
			"and you can instantly see at a glance, and know",
			"OK, if I want to find the definition for this,",
			"it looks like it's a member function.",
			"So it's probably in this class, here at some line.",
			"You can easily find it.",
			"And so in future lectures, we'll be using",
			"more of this lowercase g for global variables that we use module to module.",
			"In this case, we're instantiating a StateMachine.",
			"So we're using the class that we will take a look at in a second.",
			"The StateMachine takes in a table with keys",
			"that map to functions that will return our states.",
			"So we can just call change some value, and it'll have in our state machine,",
			"it will basically reference that key in this table here,",
			"and it'll call that function based on-- it'll",
			"basically set the current state of that StateMachine to whatever state",
			"gets returned by the function at that key.",
			"So in this case, change is going to trigger return new TitleScreenState,",
			"and we're going to get-- the StateMachine is",
			"going to be set to the title screen, effectively,",
			"and we'll take a look at what the title screen looks like momentarily.",
			"On line 96, yeah, we're changing to title screen.",
			"On line 134, notice that we don't really have much update",
			"logic in this application anymore.",
			"We're still updating the scrolls because this is",
			"behavior we want across all our states.",
			"No matter what state we're in, we want to make sure",
			"that our background and our ground scroll so that we have movement.",
			"We don't need to duplicate this behavior state to state.",
			"This is a global feature of our game.",
			"So we're just keeping track of it here just as we would before,",
			"but anything else in our game that need to be updated",
			"can now be deferred to our StateMachine class.",
			"And when we call gStateMachine update delta time,",
			"it's going to look and see what's our current state,",
			"and it's going to update that state.",
			"And that's going to basically be that chunk, that if chunk",
			"do this logic that we were doing from before last week when",
			"we had a more primitive StateMachine.",
			"Line 46, same exact thing.",
			"Between the background and the ground, because those will always render scene",
			"to scene, we want to render our current active state",
			"using our StateMachine render function.",
			"And so let's go ahead, and just look briefly at our state machine library.",
			"It's a very simple code.",
			"It's actually taken from the book I alluded to earlier in the lecture--",
			"How to Make an RPG.",
			"They give you this state machine, which really cleanly, I think,",
			"handles state transition.",
			"Basically, it takes an init, and then a series of states.",
			"It has an empty class, or empty table.",
			"So all of these are just empty.",
			"",
			"If there is no-- this is a thing you can do",
			"in Lua, which just lets you initialize a variable if it's not",
			"given a value in your function.",
			"",
			"So self.states gets states or some value.",
			"Which means that if states is equal to a false value, it's equal to nothing,",
			"just set it to this empty table.",
			"So it's just a shorthand for instead of saying if states equals nothing,",
			"then set states to empty table.",
			"Self.current is just an empty class or empty state.",
			"So this is basically what a state is, it's just a set of methods--",
			"a render, update, enter, and exit function.",
			"That's a state, and then you define all of the behavior",
			"in each of these functions, and that compiles your state more or less.",
			"Our change function takes in a name, and then also some optional parameters",
			"that we can use to enter that state.",
			"",
			"When we change the state, or call the exit function of whatever state",
			"we're in.",
			"So exit that state.",
			"Maybe your function needs you to de-allocate some memory.",
			"Set the current equal to taking that name,",
			"and then call whatever functions there.",
			"So it's going to return.",
			"In that case, we saw earlier, it's going to return a new title screen state.",
			"So that's going to be what current is.",
			"With self.current, we're going to then enter that state machine.",
			"So we're going to call the Enter function that we defined there",
			"with whatever enter parameters we pass into change, which are optional.",
			"And then here, StateMachineUpdate just updates whatever the current state is,",
			"and render updates whatever the current state is as well.",
			"And so I'm going to start going a little bit quickly",
			"just because we're running short on time.",
			"BaseState, all it does is just implements empty methods",
			"so that you can just inherit this state, and you",
			"can choose which methods you want to define",
			"without throwing any errors because it blindly will call all these functions,",
			"not checking to see whether they're actually implemented.",
			"And so this is a way for you to just quickly avoid",
			"a lot of boilerplate code, essentially.",
			"The TitleScreenState here, this is your way of with the class library,",
			"just including everything that belongs to BaseState.",
			"So inheriting, if you're familiar with other languages",
			"that use inheritance-- take an object, copy",
			"everything from that object or that class, put it into this one,",
			"and then add new stuff to it.",
			"That's basically what inheritance is.",
			"We're inheriting from BaseState so it has all the functions BaseState has,",
			"and then on top of that, we're defining an update function.",
			"So if we press Enter or Return, change the global state machine",
			"to the play state.",
			"And then for the render, we're just going to render fifty bird,",
			"and press Enter halfway in the middle of the screen.",
			"And then the PlayState, essentially to some--",
			"basically, what the PlayState is is all of the code that we ran before, only",
			"now we're just putting it in the update function here,",
			"and the render function here, and making bird, pipe pairs, timer,",
			"and lastY member fields of this state object.",
			"So we'll go ahead, and run this really fast.",
			"",
			"This is our title screen state.",
			"So at the very beginning, we change to title screen state.",
			"All it does is render, and then the scrolling behavior",
			"is throughout all classes, all states.",
			"So we'll see that no matter what.",
			"Once you press Enter, it'll trigger change",
			"to play, which will return a play state, and then",
			"now we're back where we were before, and we're seeing the difference now",
			"in having a couple of different states.",
			"So quickly, I'll go through the score update.",
			"So this is a little bit more complicated than the last example.",
			"But to summarize, in bird--",
			"sorry, we're in bird9.",
			"So in bird9, if we go here, we're going to go to main.",
			"So notice that in main, down where we define our StateMachine,",
			"we're going to go ahead, and also note that we require a new score",
			"state because now we want to display a score screen.",
			"Down on line 96, score gets a function where we return a score state object.",
			"So now we can change to score, and it will return that state,",
			"and we can define all the behavior within ScoreState",
			"that we need to display a score.",
			"In PipePair, we have a new variable called self.scored.",
			"Set it to true or false.",
			"We're going to set it to true if the bird has",
			"gone past the right edge of the pair of pipes.",
			"That will have the effect of us scoring a point, effectively,",
			"because all we need to do is just make sure the birds got",
			"past that pair of pipes because otherwise it",
			"will have collided with it.",
			"If it does go past it, set it to true, and then add a point to our score.",
			"And in our play state, we can see that we've added a point.",
			"So if we go to our play state, 26 is where we actually",
			"keep track of our score.",
			"Self.score gets 0 in our play state.",
			"We're going to go ahead, and go down to line 56.",
			"So for every pair, if it's not been scored yet--",
			"because we don't need to calculate this if it's already been scored.",
			"We should ignore it in terms of scoring once it's been scored.",
			"If the x plus width is less than our bird.x,",
			"meaning our bird is beyond the right edge of the pair of pipes,",
			"increment our score, and set that pair to true.",
			"We will then thereafter, because of this condition, ignore it,",
			"and we're also going to increment our score.",
			"So it's going to be kept track of.",
			"On 83, notice that if we're colliding with a pipe,",
			"we should transition to our score state now.",
			"And we're also passing in score gets self.score as a table",
			"because remember, we can pass in parameters when we call change,",
			"and this will be passed into our enter function in our state,",
			"and then score is going to equal self.score.",
			"We'll have access to the score within that score state.",
			"We don't have to keep track of it as a global variable",
			"to see it in both locations.",
			"And on 93, the same exact thing.",
			"This is collision to check whether we've collided with the bottom of the screen.",
			"If our y is greater than virtual height minus 15, do the exact same thing.",
			"Transition to the score state, and pass it in our current score.",
			"So another death condition.",
			"And then 104, we're just going to set Flappy Font,",
			"and then we're going to render our score at the top left of the screen at 8,8,",
			"and that will have that effect.",
			"And so lastly, here, our scores state is pretty simple.",
			"",
			"All it is is we're going to get-- from those parameters we passed in",
			"by a change, self.score equals params.score.",
			"We're going to, when we press Enter, go back to play,",
			"and then we're going to render 'you lost', and the score,",
			"which we have access to-- self.score, and then press Enter to play again,",
			"changing fonts along the way.",
			"And so if we go back to bird9, and we run this,",
			"notice that now we have a score in the top left.",
			"And I'm going to get one point, and then die.",
			"Then we go to our score screen now.",
			"Remember, we passed score into it from our play state.",
			"We passed it in as parameters, and then we",
			"can press Enter again, go back to play state, and when we fall to the ground,",
			"we do it as well.",
			"So we've just taken a look at how to add scoring to our game,",
			"but what if we want to add a count down screen?",
			"Maybe we want the users to be prompted three, two, one before the actual game",
			"starts throwing pipes at them.",
			"Give them the time to sort of get acclimated.",
			"We're going to go ahead, and take a look at how",
			"we might do this using another state very similar to the last example.",
			"We're going to add a new state called CountdownState,",
			"which is shown here on line 38.",
			"We're also going to, down in our state machine,",
			"add a new key, which returns one of the new countdown states, just as before,",
			"and then we're going to go ahead, and take a look at our actual countdown",
			"state here.",
			"So in our CountdownState.lua, which is in our states folder, as the others,",
			"it inherits from BaseState.",
			"We have initialized a countdown time to 0.75.",
			"This time in seconds.",
			"One second is a little long, so I made it 0.75 seconds.",
			"We're going to initialize a count to three, and a timer to 0.",
			"The count's going to start.",
			"It's going to use a timer once the countdown time has elapsed,",
			"right here, as this logic shows.",
			"Increase the timer once the timer has gone past countdown time.",
			"We want to go ahead, and set it to--",
			"we're going to modulo by countdown time.",
			"So loop it back to 0 plus whatever amount beyond the countdown time",
			"we went so that we have a smooth track of time.",
			"We're going to set self.count minus itself",
			"by 1 so that we go three, two, one.",
			"And then if our count is 0, which means that we've",
			"gone all the way down in our count, we're",
			"going to go ahead and use our state machine, and change to the play state.",
			"And here, we're setting our font to a font that we've set--",
			"hugeFont-- and then we're just twostring,",
			"a little function that takes a string, or takes a number,",
			"converts to a string.",
			"We're displaying self.count at 0, 120, and then our--",
			"it's printf.",
			"So we're basically starting at 0, y 120, virtual width alignment,",
			"and then we're centering it.",
			"So the one last piece of that that we need to change",
			"is in our title screen state, instead of going straight to a play state",
			"here on line 15, we're going to a countdown state.",
			"And what this has the effect of doing, if we go into bird10,",
			"is when we press Enter, notice that we're going three, two, one,",
			"then going into our play state.",
			"Not just going straight into the play state",
			"as before, giving our user a little bit of time to catch their breath.",
			"And then if we die, we go to our score state, but once we press Enter,",
			"notice we're doing that as well.",
			"So in our score state, we also are changing to the countdown state.",
			"So that was how to make a countdown state.",
			"Probably my favorite part of many of these examples, and of this example",
			"as well, is adding audio to our application.",
			"Music and sound effects, which really ties everything together.",
			"So we're going to go ahead and take a look at this.",
			"It's very simple.",
			"Very similar to what we learned last week, even when we just did Pong.",
			"So in main.lua of bird11, which is what we're going to look at now,",
			"we're going to take a look at a table of sounds",
			"that we've initialized on line 88.",
			"We've given them all keys.",
			"Jump, explosion, hurt, score.",
			"These are all sound effects that I've generated with the BFX program",
			"that we used last week, if you recall.",
			"And then a music track that I found online",
			"on FreeSound, which is free to use.",
			"The link is here, if curious.",
			"It's just a nice, happy soundtrack that I found for this game.",
			"On line 99 to 100, we're going to do one additional step",
			"before we start the music.",
			"We're going to set looping on that to true",
			"because in games that are infinite like this,",
			"we don't want our music to just go, and then stop abruptly.",
			"We want to have it loop.",
			"Set looping to true.",
			"I actually begin the play of that music outside of any of our states",
			"because it's going to be a global music track, and then that's the music.",
			"We also need sound effects.",
			"",
			"If we look in our bird file here line 45, which",
			"is where we have the logic for jumping, we're",
			"also playing the jump sound effect that we've generated.",
			"Additionally, in our play state, if we take a look there,",
			"we can go ahead and see in our states folder here.",
			"Go to play state, and take a look at line 58.",
			"This is where we score a point.",
			"So we should play our score sound effects here, simply put.",
			"And then the same thing on line 80 to 81,",
			"collide, the sound effect here, which is we're actually",
			"layering two sounds on top of each other, which is a common thing",
			"to do in sound design, and game design.",
			"One sound, often, isn't all you need to accomplish a particular effect.",
			"So I have an explosion sound, which is kind of a white noise effect,",
			"and then a hurt sound effect, which is sort of like a downward sine wave",
			"type of sound.",
			"It would be the exact same here on 95 to 96.",
			"Once we put all these pieces together, we're going to run bird11.",
			"[MUSIC PLAYING]",
			"We get music.",
			"",
			"[BEEPING]",
			"We get a jump sound effect.",
			"And when we score a point,",
			"[DING]",
			"we get another sound effect.",
			"[CRASH]",
			"And then if we hit a pipe, notice that we have a sort of",
			"[MIMICS NOISE]",
			"and a white noise or an explosion effect layered together.",
			"So that sort of brings everything together, creatively and artistically.",
			"As an exercise to the viewer, in bird12--",
			"in the GitHub repo, we have some code that",
			"allows you to actually add mouse clicks to the Flappy Bird",
			"in order to make it a little bit more like the actual game, which",
			"was an iOS game.",
			"So it relied on taps.",
			"The function that you might want to use is love.mousepressed x, y, button,",
			"and I would encourage you to think about how we took input, and made",
			"it global in the context of a keyboard in one of our earlier examples",
			"so that we can call this was the mouse just pressed in our bird.lua file,",
			"as opposed to the main file.",
			"And so next time, we're going to be covering a few new concepts.",
			"Or sprite sheets.",
			"So taking a large file of images, and taking out chunks of that",
			"so we don't have to have a million graphic files.",
			"Procedural layouts.",
			"This will be in the context of the game Breakout.",
			"So we want to lay out all the bricks in our game, procedurally,",
			"in sort of the same way that we've procedurally",
			"created a pipe level in this game.",
			"We'll be talking about separate levels, and having",
			"them stored in memory as opposed to just one continuous level.",
			"We'll be talking about health.",
			"We'll be talking about particle systems, which is spawning little mini",
			"graphics to accomplish various effects that are otherwise difficult to capture",
			"in simple sprite animation.",
			"A little bit fancier collision detection based on input",
			"so that we can drive ball behavior the way we want to,",
			"and then also persistent save data.",
			"How can we take a high score, and not have",
			"it refresh to 0 every time we run the application, but rather save it to disk",
			"so that every time you run the program thereafter, we can see",
			"what we've gotten scored in days past.",
			"The first assignment, or other the second assignment, assignment one,",
			"is going to be a little bit more complicated than last weeks,",
			"but still fairly doable.",
			"Make pipe gaps slightly random, being the first component of this.",
			"So before, a pipe gap was set to a constant value.",
			"Maybe make it some sort of random value.",
			"Pipe intervals as well.",
			"So we're spawning every two seconds.",
			"Maybe we want to change that up, make pipes",
			"spawn a little differently, a little more sporadically.",
			"The more complicated aspect of this assignment",
			"is going to be awarding players a medal based on their performance.",
			"So have maybe a bronze, a silver, and a gold medal--",
			"an image that you display in the score screen in addition to just their score",
			"just to give them a little bit of personal feedback,",
			"and make them feel rewarded for their effort, and make them",
			"strive to get that last medal.",
			"And then lastly, you'll implement a pause feature, which we talked about",
			"in class, so that when you press, for example, the key p, the game will stop.",
			"But unlike that example, when we press p again,",
			"the game should resume just as it was in its prior state.",
			"So that will be it for Flappy Bird.",
			"I'll see you guys next time.",
			"Thanks a lot.",
			""
		],
		"is_youtube": false
	},
	"video_004": {
		"section": "CS50G 2020",
		"subsection": "Breakout",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000600/HarvardXCS50G-V000600.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000600_DTH.mp4"
		],
		"video_duration": 6739,
		"speech_period": [
			3.479, 13.52, 1.291, 2.24, 1.77, 2.925, 1.455, 4.02, 4.26, 2.19, 3.3,
			1.98, 5.61, 1.83, 1.41, 5.29, 2.69, 3.12, 2.539, 3.041, 2.64, 1.53, 3.24,
			3.84, 2.05, 4.73, 4.09, 0.5, 0.955, 2.375, 4.02, 3.09, 1.56, 3.1, 0.56,
			4.24, 5.03, 3.192, 2.208, 3.9, 2.29, 3.379, 3.841, 3.99, 1.2, 3.042,
			2.208, 3.291, 1.719, 1.17, 2.124, 1.346, 3.58, 3.376, 1.124, 1.29, 1.87,
			3.08, 3.0, 2.815, 1.125, 3.11, 3.6, 2.34, 3.0, 3.0, 4.47, 2.272, 1.958,
			4.62, 2.94, 4.08, 2.072, 1.708, 4.11, 3.51, 2.52, 4.32, 5.96, 2.051,
			1.499, 3.842, 0.708, 0.62, 0.35, 0.33, 0.63, 0.99, 2.13, 4.81, 2.242,
			1.708, 2.26, 1.61, 1.352, 2.208, 3.14, 1.91, 1.35, 1.65, 3.87, 3.09, 1.62,
			2.83, 2.78, 1.44, 2.31, 1.89, 3.36, 2.37, 3.39, 2.64, 0.69, 1.44, 1.45,
			6.01, 5.04, 1.86, 2.64, 4.65, 4.88, 2.39, 2.0, 2.34, 1.99, 1.23, 3.28,
			0.71, 1.2, 3.46, 1.94, 1.92, 4.91, 1.75, 2.37, 3.216, 3.124, 1.82, 2.083,
			3.187, 1.15, 0.54, 1.374, 3.166, 0.5, 0.499, 0.611, 1.24, 4.52, 4.41,
			6.09, 2.31, 2.13, 2.041, 2.739, 2.1, 2.55, 3.29, 1.47, 1.44, 1.11, 2.166,
			2.664, 2.49, 3.22, 3.47, 1.59, 2.01, 2.31, 2.16, 2.1, 2.43, 3.242, 2.458,
			2.37, 2.6, 3.52, 3.33, 2.7, 3.24, 2.306, 1.624, 2.166, 1.494, 2.041,
			2.189, 3.21, 2.76, 2.13, 1.86, 3.06, 1.98, 2.74, 1.708, 3.249, 2.083,
			1.666, 2.623, 3.841, 1.149, 3.891, 4.17, 4.74, 1.847, 2.083, 2.55, 1.86,
			2.694, 1.416, 1.07, 2.375, 2.375, 1.68, 3.99, 2.73, 2.01, 2.88, 3.33, 3.0,
			1.71, 3.041, 1.939, 2.46, 2.43, 1.98, 2.937, 1.833, 1.309, 0.791, 3.479,
			1.291, 1.02, 3.681, 2.749, 2.84, 2.54, 1.45, 1.77, 2.58, 2.76, 4.254,
			0.666, 1.2, 0.99, 2.76, 3.73, 2.84, 2.25, 4.5, 2.82, 0.9, 1.17, 1.74,
			2.31, 1.95, 3.42, 5.58, 3.879, 1.791, 1.958, 2.982, 1.54, 1.41, 1.53,
			3.75, 2.52, 1.41, 1.749, 1.071, 0.772, 1.208, 3.9, 4.05, 3.09, 2.66, 2.17,
			2.31, 4.53, 2.25, 1.791, 2.169, 2.34, 3.974, 2.416, 2.37, 2.039, 2.041,
			4.849, 2.291, 4.71, 3.21, 3.42, 3.39, 4.32, 3.78, 3.086, 3.124, 2.97,
			2.337, 2.583, 3.207, 2.583, 1.77, 2.101, 2.999, 0.96, 3.3, 1.791, 2.229,
			2.05, 2.78, 2.11, 2.72, 4.44, 1.56, 2.26, 2.54, 4.08, 3.99, 2.88, 2.19,
			1.101, 0.999, 3.76, 3.2, 2.58, 2.25, 4.83, 2.31, 3.41, 4.48, 3.33, 3.01,
			2.822, 2.208, 2.24, 1.03, 2.865, 3.465, 4.35, 1.92, 2.55, 2.19, 2.25,
			2.492, 1.708, 1.8, 3.27, 3.18, 3.422, 2.458, 3.22, 0.5, 3.219, 2.541,
			1.814, 0.916, 2.07, 4.05, 0.87, 5.69, 2.072, 2.458, 3.0, 1.406, 2.624,
			2.65, 3.07, 3.09, 4.05, 2.19, 2.25, 3.06, 2.982, 2.208, 1.419, 1.291,
			3.21, 3.74, 3.941, 1.249, 2.25, 3.18, 3.85, 3.45, 0.93, 5.03, 2.82, 3.81,
			3.96, 2.85, 2.88, 4.17, 1.649, 2.551, 2.83, 2.359, 2.911, 3.99, 4.41,
			3.39, 2.802, 2.208, 4.95, 4.32, 0.81, 4.49, 3.67, 2.64, 2.994, 1.416,
			4.89, 2.55, 4.26, 4.146, 5.31, 2.124, 4.11, 2.34, 4.317, 1.833, 1.583,
			3.787, 4.05, 4.08, 3.63, 3.0, 2.85, 3.0, 4.98, 1.41, 2.61, 1.98, 3.57,
			2.97, 4.02, 3.63, 3.54, 6.54, 2.82, 1.32, 4.37, 3.94, 3.7, 1.26, 1.26,
			4.67, 2.76, 2.64, 3.61, 2.1, 3.14, 3.63, 3.56, 1.0, 5.22, 2.65, 1.9, 3.22,
			1.75, 1.18, 3.8, 2.52, 3.6, 5.22, 1.74, 5.37, 2.46, 2.82, 2.49, 4.17,
			2.79, 2.26, 2.12, 2.23, 1.94, 5.48, 2.98, 3.84, 2.76, 1.49, 3.46, 1.26,
			5.19, 2.55, 5.22, 2.34, 7.77, 3.18, 4.98, 2.49, 4.11, 3.57, 5.11, 1.29,
			2.54, 1.72, 3.11, 1.89, 5.91, 1.93, 6.15, 1.5, 4.94, 2.58, 4.17, 3.63,
			4.56, 2.47, 3.59, 4.44, 3.679, 2.541, 1.85, 2.805, 2.265, 2.58, 5.07,
			2.97, 3.51, 2.61, 1.98, 1.17, 1.92, 6.9, 4.98, 4.92, 2.64, 4.272, 0.708,
			2.28, 2.37, 2.28, 3.81, 4.32, 4.86, 3.09, 4.32, 5.13, 4.62, 6.7, 2.75,
			3.32, 3.73, 3.27, 4.55, 3.28, 2.38, 7.08, 3.681, 2.499, 2.19, 3.42, 1.92,
			2.345, 1.375, 3.54, 5.79, 3.93, 5.31, 4.8, 3.57, 2.37, 3.01, 3.209, 1.541,
			3.54, 0.79, 3.33, 1.5, 4.14, 5.1, 1.766, 2.374, 2.399, 1.291, 2.77, 4.91,
			3.66, 3.06, 2.27, 1.96, 1.34, 4.23, 2.597, 0.833, 1.77, 4.05, 4.23, 1.791,
			2.499, 3.34, 5.18, 6.42, 6.48, 2.32, 8.64, 1.65, 2.42, 1.92, 4.21, 3.2,
			4.74, 4.5, 3.417, 2.333, 1.34, 2.18, 3.21, 2.38, 2.75, 2.64, 4.4, 0.94,
			0.29, 0.25, 1.71, 6.24, 4.35, 3.12, 3.45, 5.22, 2.67, 2.799, 1.791, 2.22,
			4.29, 2.13, 4.68, 2.01, 3.0, 2.94, 1.29, 2.916, 3.874, 3.07, 2.451, 2.249,
			2.76, 1.02, 2.155, 2.375, 2.86, 3.05, 5.04, 2.94, 5.7, 1.882, 1.958, 1.57,
			0.5, 2.73, 2.7, 2.7, 2.13, 5.35, 3.33, 1.74, 5.98, 1.24, 4.07, 7.86,
			2.666, 1.624, 2.166, 2.014, 5.03, 2.97, 2.43, 3.57, 4.54, 5.75, 2.17,
			4.04, 5.55, 3.69, 2.73, 0.75, 2.56, 2.18, 1.576, 1.874, 5.79, 1.59, 0.69,
			1.56, 1.59, 2.139, 1.041, 2.307, 1.833, 3.01, 1.96, 1.651, 1.749, 5.12,
			2.2, 1.62, 1.32, 3.98, 1.6, 1.35, 3.81, 3.57, 4.5, 2.44, 2.45, 3.03, 2.94,
			2.52, 1.89, 2.28, 1.71, 1.56, 2.97, 2.37, 1.74, 4.59, 2.16, 2.82, 2.381,
			0.499, 3.09, 3.58, 0.5, 1.05, 3.51, 1.54, 0.875, 2.415, 1.47, 3.78, 3.079,
			3.25, 3.031, 2.4, 3.66, 2.945, 2.875, 2.43, 3.4, 3.23, 1.38, 4.412, 1.708,
			4.72, 2.17, 1.18, 4.11, 3.41, 3.54, 3.19, 2.37, 5.19, 3.357, 2.208, 4.425,
			1.89, 7.44, 1.989, 1.791, 1.44, 2.58, 2.59, 2.36, 3.81, 3.48, 3.72, 0.99,
			1.83, 3.0, 3.42, 1.53, 2.64, 1.63, 1.94, 1.77, 2.16, 3.75, 3.06, 2.079,
			1.791, 3.69, 3.51, 4.21, 1.79, 0.72, 2.43, 3.151, 2.499, 2.916, 2.411,
			2.333, 3.016, 1.124, 2.73, 3.06, 3.101, 4.129, 1.75, 4.49, 3.73, 2.12,
			2.886, 9.518, 0.916, 1.083, 3.597, 4.202, 2.458, 1.63, 2.72, 4.2, 6.75,
			3.15, 4.65, 1.2, 2.512, 1.958, 1.92, 2.4, 3.471, 2.499, 3.09, 2.61, 4.32,
			3.379, 0.791, 4.63, 3.2, 0.9, 1.63, 4.97, 3.69, 3.21, 2.591, 0.499, 10.08,
			3.42, 4.44, 4.98, 1.29, 1.13, 4.33, 5.61, 4.26, 3.18, 4.38, 3.03, 2.02,
			1.52, 1.69, 4.34, 3.18, 5.98, 2.91, 4.4, 4.26, 2.58, 1.67, 2.89, 3.19,
			1.28, 1.41, 2.16, 1.707, 2.583, 1.601, 1.749, 3.97, 2.276, 2.374, 2.541,
			3.229, 4.84, 0.99, 2.55, 2.65, 1.64, 2.46, 2.384, 3.166, 2.55, 2.529,
			2.541, 1.708, 1.902, 0.5, 3.78, 2.46, 3.85, 3.06, 4.61, 1.72, 4.2, 2.43,
			2.04, 3.48, 3.93, 2.55, 3.45, 3.81, 4.6, 3.37, 3.52, 2.7, 2.73, 1.17,
			2.11, 7.73, 3.94, 4.04, 1.29, 2.28, 3.066, 2.124, 4.689, 2.041, 2.48,
			4.89, 2.99, 2.98, 1.659, 1.791, 2.291, 3.829, 4.08, 2.849, 0.791, 2.09,
			2.47, 4.38, 0.5, 3.27, 2.164, 1.166, 2.67, 5.04, 3.14, 4.64, 0.5, 2.485,
			1.125, 2.0, 2.55, 2.85, 4.56, 1.414, 1.916, 2.31, 1.36, 0.709, 3.166,
			2.235, 2.04, 2.67, 2.58, 3.66, 5.64, 1.21, 6.08, 3.33, 3.25, 4.19, 2.16,
			2.79, 3.47, 3.01, 4.17, 2.91, 3.51, 4.05, 4.02, 8.415, 1.875, 4.72, 1.61,
			4.86, 4.89, 3.0, 5.46, 2.61, 3.24, 3.409, 1.541, 3.39, 3.75, 2.22, 3.87,
			3.18, 1.5, 1.749, 1.951, 1.672, 1.708, 4.23, 4.89, 5.79, 2.67, 2.97, 3.4,
			3.32, 3.385, 5.765, 2.83, 1.71, 4.11, 3.12, 1.71, 2.4, 1.44, 1.541, 3.259,
			2.46, 4.05, 2.79, 4.14, 4.14, 5.09, 4.27, 2.4, 3.54, 3.66, 2.02, 5.3,
			2.52, 3.255, 1.875, 3.241, 2.999, 4.596, 2.874, 1.65, 6.63, 2.61, 1.53,
			2.124, 3.036, 3.54, 2.635, 2.375, 1.56, 2.19, 2.31, 2.1, 1.92, 2.73, 4.05,
			4.47, 3.78, 4.17, 3.592, 1.458, 3.0, 1.58, 9.13, 3.57, 4.26, 1.38, 3.06,
			2.64, 0.67, 1.894, 1.166, 2.68, 3.159, 1.291, 3.12, 3.93, 2.46, 3.15,
			1.59, 4.2, 2.14, 4.34, 3.6, 2.93, 2.44, 4.665, 2.295, 1.36, 2.75, 2.5,
			1.53, 2.99, 2.31, 4.8, 1.08, 3.88, 4.7, 3.18, 3.66, 2.46, 5.58, 1.68,
			2.042, 2.458, 1.958, 3.242, 2.69, 3.18, 6.51, 3.9, 2.71, 3.56, 2.73, 2.37,
			1.29, 2.21, 4.64, 2.3, 3.15, 4.53, 5.19, 3.42, 4.177, 1.583, 3.81, 1.83,
			2.46, 1.789, 2.291, 2.79, 1.77, 5.34, 2.72, 1.45, 1.86, 2.37, 3.47, 4.69,
			2.16, 2.314, 1.916, 2.16, 5.49, 2.88, 3.18, 2.82, 4.17, 4.35, 4.11, 5.74,
			1.4, 3.27, 3.15, 3.36, 1.98, 2.28, 7.02, 2.085, 3.595, 0.9, 2.01, 8.36,
			9.87, 4.8, 3.54, 2.916, 0.933, 1.791, 3.81, 3.72, 2.88, 6.38, 2.422,
			1.458, 3.63, 2.1, 2.64, 3.84, 4.32, 2.1, 3.27, 3.72, 4.08, 4.605, 2.665,
			2.04, 2.3, 1.07, 1.6, 2.49, 4.71, 4.05, 3.45, 1.67, 4.75, 3.18, 4.29, 2.1,
			2.88, 4.71, 2.5, 5.16, 1.37, 5.88, 3.78, 1.29, 1.26, 1.71, 2.225, 2.125,
			3.99, 7.29, 1.74, 5.85, 5.91, 5.52, 2.6, 4.87, 3.99, 1.83, 2.69, 0.966,
			2.374, 2.04, 3.3, 6.14, 4.06, 3.581, 1.249, 1.95, 4.23, 5.46, 5.43, 6.66,
			3.93, 2.97, 2.45, 2.44, 3.36, 2.25, 2.55, 5.55, 3.99, 3.69, 3.03, 2.76,
			3.36, 4.055, 2.875, 3.63, 0.96, 1.89, 1.89, 4.71, 3.63, 2.19, 4.59, 3.72,
			4.38, 2.9, 1.0, 2.437, 2.833, 4.6, 1.65, 4.11, 3.097, 1.833, 3.386, 2.124,
			2.041, 2.559, 2.03, 5.022, 0.708, 1.08, 3.36, 0.708, 1.242, 4.35, 2.22,
			3.3, 3.15, 5.7, 3.81, 0.5, 0.81, 3.355, 2.375, 1.59, 3.33, 2.79, 0.902,
			0.958, 3.32, 3.249, 3.747, 1.624, 2.5, 0.98, 1.56, 3.54, 6.83, 1.227,
			1.833, 2.82, 1.89, 1.98, 3.06, 2.71, 3.35, 0.99, 8.02, 2.18, 3.15, 3.66,
			1.75, 2.9, 2.91, 3.12, 1.71, 4.14, 1.68, 1.0, 3.192, 2.708, 4.5, 2.07,
			1.65, 1.65, 2.136, 2.874, 3.299, 2.791, 2.79, 3.6, 2.31, 1.83, 4.56, 3.0,
			3.61, 2.78, 3.48, 3.9, 1.11, 4.647, 1.833, 6.72, 3.57, 2.73, 2.534, 1.666,
			2.91, 5.76, 2.91, 11.93, 4.53, 3.93, 2.82, 2.19, 1.791, 2.649, 2.1, 2.97,
			3.27, 3.36, 3.24, 1.92, 2.184, 2.916, 1.53, 3.13, 2.749, 3.637, 2.874,
			3.93, 2.61, 5.38, 2.0, 1.92, 17.22, 3.032, 3.208, 2.61, 1.56, 3.06, 3.06,
			1.267, 3.083, 1.166, 2.254, 1.77, 2.88, 3.48, 4.8, 3.99, 4.44, 1.2, 2.4,
			0.69, 1.016, 0.874, 0.791, 5.598, 2.25, 1.591, 7.44, 2.94, 0.69, 1.125,
			3.285, 3.943, 1.552, 2.125, 1.375, 1.51, 2.995, 2.61, 3.6, 4.38, 1.74,
			2.01, 2.91, 3.63, 5.129, 2.231, 0.5, 1.109, 1.791, 1.999, 1.88, 5.566,
			3.825, 2.03, 1.84, 0.779, 3.321, 3.36, 9.48, 5.781, 1.749, 2.23, 5.3,
			5.31, 1.759, 1.541, 2.31, 1.36, 2.66, 3.21, 3.55, 1.28, 4.68, 4.11, 1.47,
			5.55, 3.209, 1.791, 1.57, 1.32, 1.92, 4.38, 1.86, 3.339, 2.791, 2.38,
			3.175, 2.055, 2.484, 1.416, 4.56, 1.729, 0.791, 2.7, 1.5, 3.3, 2.86, 1.01,
			1.71, 4.26, 1.41, 2.71, 1.89, 3.996, 1.124, 2.359, 2.291, 3.18, 5.26,
			4.19, 1.871, 2.749, 4.92, 7.05, 4.86, 4.44, 2.28, 0.79, 0.72, 2.06, 1.416,
			1.374, 2.73, 3.18, 2.67, 2.64, 3.87, 0.58, 4.56, 2.18, 4.98, 2.1, 1.65,
			2.97, 1.29, 5.85, 5.22, 1.68, 1.17, 1.44, 2.37, 2.49, 2.34, 2.67, 2.19,
			1.74, 1.95, 1.32, 2.16, 4.204, 2.166, 2.81, 2.279, 2.791, 1.23, 1.85,
			3.28, 3.72, 2.49, 2.94, 3.45, 2.464, 1.916, 2.32, 1.64, 1.47, 5.08, 0.5,
			14.87, 3.54, 4.02, 2.273, 1.541, 1.708, 2.368, 3.21, 2.67, 2.02, 2.557,
			2.083, 3.96, 4.112, 2.458, 2.499, 3.261, 1.77, 5.362, 2.708, 5.04, 6.48,
			3.36, 1.759, 1.541, 3.12, 2.38, 3.66, 0.5, 3.911, 0.499, 0.79, 6.02, 3.33,
			2.37, 1.89, 2.76, 3.75, 5.08, 4.64, 4.35, 4.74, 3.03, 3.72, 4.11, 2.26,
			8.174, 0.666, 2.92, 4.432, 2.258, 1.0, 10.891, 1.999, 6.371, 0.499, 2.06,
			1.14, 2.53, 3.12, 1.95, 4.56, 3.09, 2.53, 3.33, 2.57, 4.32, 3.91, 4.1,
			5.38, 7.07, 4.99, 4.55, 3.0, 1.42, 3.65, 2.97, 2.43, 4.163, 3.947, 5.75,
			3.21, 1.26, 2.07, 1.98, 3.2, 2.05, 1.47, 2.125, 2.375, 2.91, 3.39, 2.97,
			2.38, 4.54, 4.44, 3.98, 1.58, 1.84, 1.583, 2.182, 3.425, 1.627, 1.083,
			2.54, 2.37, 1.32, 2.97, 2.82, 1.95, 2.67, 2.132, 2.458, 2.43, 6.34, 2.09,
			2.58, 3.63, 1.48, 3.217, 2.083, 2.76, 2.97, 3.78, 4.294, 0.499, 7.076,
			0.791, 4.07, 2.91, 3.67, 1.13, 3.45, 4.29, 3.39, 3.0, 3.82, 1.64, 4.23,
			3.45, 2.97, 4.14, 2.53, 0.98, 4.91, 4.73, 2.19, 3.13, 2.6, 3.096, 2.874,
			2.34, 2.61, 2.07, 4.14, 5.13, 2.61, 3.06, 1.8, 4.29, 2.82, 2.04, 2.454,
			2.166, 3.45, 3.872, 1.708, 2.31, 4.2, 3.3, 4.29, 1.4, 3.4, 4.56, 2.005,
			0.875, 3.1, 5.42, 9.1, 3.86, 2.9, 2.19, 3.63, 2.7, 4.684, 2.465, 0.791,
			0.79, 3.54, 3.09, 3.18, 4.87, 2.0, 3.48, 1.44, 2.25, 3.24, 6.66, 7.11,
			2.55, 1.47, 1.541, 1.439, 1.85, 6.02, 1.25, 2.91, 2.97, 4.56, 2.61, 1.755,
			1.875, 1.89, 1.874, 1.936, 2.73, 1.997, 2.083, 3.124, 3.626, 2.52, 2.94,
			4.41, 1.77, 3.09, 4.087, 2.583, 4.25, 1.27, 3.394, 0.916, 1.752, 2.958,
			1.17, 2.49, 3.06, 4.17, 1.98, 3.24, 3.18, 2.64, 2.14, 2.27, 3.63, 1.97,
			5.596, 2.124, 3.21, 1.63, 1.89, 4.37, 4.15, 3.53, 3.52, 2.61, 4.05, 4.29,
			2.34, 2.97, 2.452, 4.248, 5.91, 2.76, 3.219, 5.845, 0.916, 5.76, 2.97,
			3.75, 5.41, 2.12, 2.246, 3.904, 1.157, 3.656, 1.908, 1.249, 3.083, 5.407,
			2.49, 1.81, 0.94, 4.36, 10.912, 1.958, 1.56, 2.61, 4.5, 1.77, 1.71, 3.78,
			3.54, 3.34, 3.07, 3.76, 0.6, 3.21, 1.51, 3.02, 2.49, 2.01, 5.01, 3.22,
			3.52, 2.192, 2.708, 2.05, 6.17, 4.18, 5.87, 4.23, 3.92, 2.21, 5.14, 4.66,
			1.63, 2.31, 0.5, 2.625, 1.749, 1.917, 2.166, 0.683, 0.5, 1.2, 0.75, 4.04,
			3.33, 5.07, 3.0, 3.0, 2.34, 3.12, 2.64, 2.76, 3.36, 1.52, 2.33, 1.48,
			2.999, 1.531, 1.65, 5.1, 7.26, 1.69, 0.5, 0.939, 1.041, 7.653, 2.887,
			1.98, 3.05, 4.25, 2.24, 0.73, 2.62, 0.5, 3.3, 3.15, 6.21, 5.13, 4.519,
			1.041, 5.4, 1.25, 3.84, 2.52, 6.27, 4.71, 3.39, 2.64, 2.16, 4.29, 3.93,
			4.27, 2.9, 1.68, 0.675, 2.615, 1.0, 3.92, 1.0, 2.22, 4.35, 1.68, 5.73,
			3.48, 4.05, 4.427, 2.833, 2.31, 4.83, 4.618, 3.152, 1.5, 1.249, 5.681,
			4.17, 2.25, 1.86, 2.94, 3.94, 4.092, 1.958, 2.67, 2.48, 1.209, 0.791,
			2.78, 2.1, 3.56, 2.87, 5.32, 1.16, 3.23, 2.27, 3.0, 1.06, 4.89, 0.66,
			3.69, 3.06, 2.1, 3.21, 3.11, 2.5, 2.79, 1.44, 2.34, 3.9, 1.92, 5.43, 0.51,
			0.96, 3.27, 2.94, 4.05, 3.57, 4.35, 4.005, 6.845, 0.57, 2.5, 2.96, 2.07,
			5.26, 4.58, 2.96, 5.49, 1.5, 4.191, 0.499, 1.25, 2.44, 1.509, 1.791, 2.01,
			2.43, 2.49, 2.67, 4.74, 3.03, 2.65, 3.415, 4.655, 3.045, 1.875, 5.7, 1.71,
			1.85, 3.642, 1.708, 3.365, 2.125, 1.53, 3.772, 3.098, 3.87, 2.4, 0.5,
			2.41, 3.3, 1.96, 2.87, 2.49, 2.28, 2.46, 1.96, 2.12, 2.324, 1.666, 1.32,
			4.32, 1.92, 7.56, 3.63, 2.73, 1.74, 2.34, 5.58, 2.87, 2.47, 2.81, 3.37,
			2.13, 2.59, 2.49, 3.29, 4.0, 5.014, 2.416, 2.22, 2.37, 1.17, 1.489, 0.791,
			2.82, 3.06, 3.39, 3.81, 3.1, 4.89, 4.19, 4.71, 2.31, 2.1, 2.02, 2.75,
			4.77, 1.14, 4.05, 4.38, 4.23, 7.196, 2.084, 4.29, 2.8, 13.416, 1.874,
			2.416, 3.044, 1.29, 1.14, 3.84, 9.96, 5.1, 2.61, 4.87, 2.48, 4.29, 5.61,
			2.95, 5.15, 8.222, 2.458, 3.24, 1.86, 5.486, 2.648, 0.916, 2.595, 1.937,
			0.958, 7.59, 1.02, 2.91, 5.7, 1.39, 0.89, 1.26, 3.81, 1.5, 1.56, 2.25,
			3.0, 4.44, 3.03, 4.33, 2.33, 4.47, 2.46, 3.558, 2.952, 2.878, 2.892, 6.91,
			0.75, 1.33, 2.27, 1.95, 1.87, 4.2, 3.83, 2.172, 2.958, 5.61, 8.64, 5.17,
			3.82, 3.24, 2.22, 2.762, 3.208, 2.97, 1.44, 3.45, 2.857, 2.333, 2.76,
			6.33, 5.52, 2.52, 4.77, 1.17, 1.89, 2.97, 2.91, 7.13, 5.05, 2.73, 3.33,
			2.208, 4.572, 2.07, 5.806, 1.124, 4.26, 4.74, 2.49, 1.95, 4.114, 2.666,
			1.56, 3.06, 1.74, 2.67, 4.42, 4.17, 3.83, 2.94, 6.21, 6.36, 3.57, 5.28,
			4.28, 1.25, 5.3, 4.35, 3.58, 1.19, 2.82, 5.34, 1.82, 2.958, 3.356, 1.916,
			3.0, 2.64, 2.537, 2.833, 1.708, 2.462, 1.94, 0.89, 2.25, 2.66, 0.93,
			3.979, 2.291, 3.0, 2.73, 2.34, 3.71, 3.25, 2.169, 1.791, 4.2, 3.45, 2.62,
			1.46, 3.0, 2.37, 3.0, 4.32, 3.99, 2.91, 3.356, 2.374, 2.749, 1.031, 3.51,
			2.07, 3.68, 2.71, 5.0, 4.79, 5.11, 1.14, 2.34, 3.0, 1.329, 1.041, 2.84,
			4.149, 2.791, 3.54, 2.49, 3.69, 2.25, 2.23, 1.833, 2.207, 2.955, 1.305,
			3.15, 3.51, 2.37, 2.37, 3.99, 7.42, 6.464, 2.166, 3.399, 1.791, 1.5, 3.06,
			2.25, 1.5, 1.85, 1.245
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: Hello, everybody.",
			"Welcome to GD50 Lecture 2.",
			"This is Breakout.",
			"And interestingly, CS50 has a history with Breakout,",
			"so I pulled this up today.",
			"This is Pset3 in 2015, 2014.",
			"It was an implementation of Breakout using the Stanford Portable",
			"Library, which was a sort of Java library",
			"that we were able to get C bindings for.",
			"And so students were able to actually implement",
			"a game what was at the time the CS50 appliance, which is a Linux distro.",
			"But suffice to say that was--",
			"oh, a funny story also.",
			"I happened to also write the lasers for this implementation back in the day.",
			"And I think that was one of the first bits of code",
			"I got my hands dirty with when working with CS50.",
			"So today in the context of Breakout, we'll",
			"be talking about a few different things that we haven't talked about yet.",
			"Sprite sheets being chief among them most likely.",
			"At least the most visibly so.",
			"So sprite sheets are simply a way of taking an image, a large image,",
			"and rather than splitting it, rather than loading individual images",
			"for all of your different things in the game,",
			"whether it's your aliens or your paddles or whatnot, you can put everything",
			"into one sheet and then just sort of index into that sheet using rectangles,",
			"quads.",
			"We'll talk about soon.",
			"Which will allow you to just draw a subset of that image,",
			"and therefore condense all of your artwork just into one piece, one file.",
			"We'll be talking a little bit more about procedural generation",
			"in the context of Breakout.",
			"And in this case, we'll be laying out all the bricks in the game world",
			"procedurally.",
			"So having instead of the same set of colors, in this case,",
			"the standard layout is to have a bunch of the same colored bricks row by row.",
			"We'll actually implement a dynamic generation approach",
			"and have a bunch of different cool layouts we'll see.",
			"And it's actually quite simple to achieve pretty believable results.",
			"We'll manage state a little bit better in this game.",
			"So before we sort of had a couple of global variables",
			"and we didn't really have the concept of a per state or a global state",
			"that we were cleanly sort of sharing between all of our states",
			"for our state machine.",
			"But to avoid having sort of like a polluted global name space",
			"and to just sort of keep things a little bit cleaner,",
			"we'll end up taking all of the important variables for our code like, you know,",
			"the player and any other entities.",
			"The bricks, the ball.",
			"And rather than keep them in our main [INAUDIBLE],,",
			"we'll end up shifting them.",
			"We'll sort of transfer them to and from the different states",
			"via the state machine's enter method.",
			"We'll actually have levels.",
			"So a progression system.",
			"So start at level one, go up.",
			"And then with each level, we'll implement a scale",
			"in terms of the generation of the bricks.",
			"So we'll get higher tiered bricks and more points as a result.",
			"We'll have a health system.",
			"So hearts, in a similar fashion to Legend of Zelda.",
			"Particle systems, which are a very important aesthetic component",
			"to 2D games and 3D games.",
			"Particle systems basically being a bunch of spawned images",
			"that you sort of cluster, you put into a little spawner,",
			"emit them in a certain way, and color them, perform math on them,",
			"and get sort of believable effects like fire and smoke",
			"and all these other things that would otherwise",
			"be not easy to do using simple animation,",
			"but trivial with a particle system.",
			"We'll do a little bit more complicated collision detection with our paddle",
			"and with our bricks than we did with Pong.",
			"And then we'll also talk lastly about how",
			"we can save data locally to our computer so that when we close the application",
			"and run it again, we end up having a persistent high score rather",
			"than just something that's volatile.",
			"So first though, I would like to demo today's finished game.",
			"So if anybody would like to demo from the audience, that would be nice.",
			"Go ahead and come up.",
			"I'll go ahead and cue it up for you.",
			"",
			"What's your name?",
			"JEREMY: Jeremy.",
			"COLTON OGDEN: Jeremy.",
			"Colton.",
			"JEREMY: Nice to meet you, Colton.",
			"COLTON OGDEN: Nice to meet you.",
			"So we're going to go ahead and run Breakout here.",
			"",
			"And so it uses the arrow keys.",
			"So if you go ahead and press up and down,",
			"you'll see you can move between the start and the high score screen.",
			"So they're two separate screens.",
			"So go ahead and--",
			"here we have when you start, you can choose a paddle.",
			"So rather than just the same old paddle every time, you get to select.",
			"And as you can see here, he chose green.",
			"So he gets the green paddle.",
			"These bricks all procedure generated.",
			"So if he runs the application, they'll be completely different.",
			"And as is the classic formula, the ball moves",
			"between the bricks and the paddle.",
			"When it hits a brick, if it's of a certain color,",
			"it'll either get destroyed-- in this case, if it's blue,",
			"it's the base color brick.",
			"So it's the lowest value.",
			"And if it's higher than blue, it'll end up",
			"going down a color depending on which color it is.",
			"I believe it goes blue, green, red, purple, yellow.",
			"So anything higher will get shifted down.",
			"And then the player amasses points, as you can see top right.",
			"Score.",
			"And notice also the three hearts.",
			"That will be the player's health.",
			"So if he were to lose on purpose possibly,",
			"we can see he gets another message that's saying press Enter to serve.",
			"His hearts have gone down by one.",
			"So now he's got two out of three health.",
			"And so eventually if he were to by chance lose completely--",
			"",
			"oh.",
			"That's honestly the most fun part about Breakout",
			"is just getting it caught in a bunch of stuff.",
			"But you can see we go to a Game Over screen.",
			"It shows your final score.",
			"And then you can press Enter and it will--",
			"oh.",
			"I must have had a bug.",
			"But that should take you back to the--",
			"if in the event that you have a high score,",
			"it'll take you to enter a high score.",
			"And if you don't have a high score, it'll take you back to the Start menu.",
			"So I made a couple of last minute changes.",
			"Unfortunately I must have left something in there.",
			"But that's Breakout in a nutshell.",
			"Our goal today will be to implement basically all the functionality we saw.",
			"Oh, we didn't take a look at the high score screen.",
			"So let's take a look at that really quick as well.",
			"So here at the title, you can see we have Start and High Scores.",
			"Oh, man.",
			"OK.",
			"I must have screwed something up.",
			"So I'm going want to go [INAUDIBLE] Breakout 12.",
			"OK.",
			"Sorry.",
			"I apologize.",
			"I'm going to fix that.",
			"But it should show this menu here where you will have a list of all your names",
			"that get loaded from a file and will output your score accordingly.",
			"And in the event that you get a new high score,",
			"you'll get to enter your name after that,",
			"and then it will end up saving it to another file.",
			"And when we get to that point I'll try and fix it",
			"so that we can actually see what it looks like.",
			"So let's go back to these slides here.",
			"So this is the overall state, flow of our game.",
			"So as you can see by me marking it out in a highlighted color,",
			"we start off in the StartState.",
			"And this is all stuff we've covered before.",
			"Just the state machine.",
			"It's a little bit more complicated than Flappy Bird.",
			"We have eight states as opposed to I think it",
			"was four or five in the last lecture.",
			"And the arrows illustrate which states can move in between other states.",
			"So as we saw, the StartState can move via the up and down arrows",
			"in the HighScoreState.",
			"It can move between the HighScoreState and back.",
			"So when you go into the HighScoreState, press Escape,",
			"go back to the StartState.",
			"The StartState also has an arrow branching off",
			"to the left going down to the PaddleSelectState",
			"where we saw the user is able to select a paddle to use.",
			"Once they've selected a paddle, we'll go to the ServeState.",
			"They'll be able to serve the ball at their leisure.",
			"And then it will go back and forth between the PlayState.",
			"So if they end up taking damage, the ball",
			"goes below the surface of the screen, they'll go back to the ServeState",
			"again so they can reorient themselves.",
			"If they're in the PlayState and they end up scoring,",
			"clearing the whole entire set of bricks, they'll",
			"actually get taken to the VictoryState.",
			"And the VictoryState is where we increment the level",
			"and we also regenerate the level.",
			"And the VictoryState goes back to the ServeState,",
			"and then we repeat that whole loop again.",
			"In the PlayState if they are to get a Game Over,",
			"they'll go to the GameOverState, it'll tell them their score,",
			"and then they'll go to the EnterHighScoreState",
			"depending on whether they have a high score.",
			"And if not, as seen by the arrow that goes up and to the left,",
			"they'll actually go back to the StartState.",
			"And then the EnterHighScoreState will also go back to the HighScoreState",
			"so that they can see once they've entered",
			"their high score, their score relative to the other scores in the list.",
			"So in Breakout0, which we're going to look at now,",
			"we're going to do some very basic stuff.",
			"So this is the Day 0 update as always.",
			"I'm in Breakout0 right now.",
			"Yes, I am.",
			"So what we're going to do is we're going to look at first thing here, line 27.",
			"So before what we were doing in our application",
			"is having basically a lot of files at the top level and sort of losing track",
			"of what we were doing potentially.",
			"Especially as you start adding more and more files",
			"and you've got like 50, 100 more files, that's",
			"something that's obviously not maintainable.",
			"So the solution there, just put them in folders",
			"and then keep track of everything.",
			"Keep them organized.",
			"And that's a major thing that we're going to start doing.",
			"And on top of that, we're also going to, in our code,",
			"keep things a little bit more modular.",
			"And that's why we have this file source slash dependencies,",
			"which we'll take a look at in a second.",
			"We've allocated a bunch of global tables here.",
			"So we're taking the design decision of even",
			"though I mentioned that we will be sort of taking a lot of the global variables",
			"out of our application assets, we're going to keep",
			"all of those in some global variables.",
			"And we'll see in the future how we can maybe implement a resource manager",
			"class that takes care of this for us.",
			"But for now, for simplicity's sake, in love.load,",
			"we're just going to have a few global tables that contain,",
			"in this case, global fonts.",
			"So by key, we can index small, medium, and large fonts,",
			"which are just new fonts at different sizes.",
			"8, 16, 32.",
			"And we're using it.",
			"We have a fonts folder now instead of just keeping it at the parent level.",
			"We're going to set it to small.",
			"We have global textures.",
			"So background, main, arrows, hearts, particle.",
			"So we have the background, which was the background of our screen.",
			"Main has all of our bricks, paddles, the balls, et cetera.",
			"Arrows are going to be for the paddle select screen.",
			"The two left and right arrows.",
			"Hearts are going to be for our health.",
			"And then particle is a single, small, tiny little texture",
			"that we'll use to spawn all the particles in our particle systems",
			"later on as we get towards the end of the demonstration.",
			"So this is push.",
			"We're setting it up just like normal.",
			"Nothing new there.",
			"Except the virtual width, virtual height, and all that stuff,",
			"those have been moved out, if we look into source in a constants file.",
			"So this file here, instead of having all the constants in main,",
			"it kind of makes sense just to take them out, put them",
			"in a file called constants.lua, and we can sort manage all that.",
			"We can know immediately when we're looking at capital window",
			"width, window height, et cetera.",
			"And these are all constants.",
			"If you have a constants file, we just can more easily",
			"track it rather than having to grab through all of our files",
			"to try and figure out what we were looking at.",
			"",
			"And the constants are used here in our set up screen as before.",
			"And then another sounds global table, just as before.",
			"We have a bunch of different sound effects.",
			"I've separated the music from the sound effects",
			"just so that we can see at a glance, oh, this is the music,",
			"these are the sound effects.",
			"Pretty straight forward.",
			"We have a state machine, as always.",
			"And we're just going to use a StartState for this demonstration.",
			"Setting it to Start.",
			"Love.resize, love.update.",
			"These are all functions we've seen before.",
			"Nothing too new.",
			"Love.keypress.",
			"We have a global input table.",
			"So as in the case of Flappy Bird, we can index into that input table anywhere",
			"in our application and call love.keyboard.wasPressed[key],",
			"which allows us to take input exclusively from main and use it",
			"in other modules.",
			"Here we're drawing the--",
			"so this is the actual rendering code.",
			"And we're doing this in our love.draw as opposed to a specific state",
			"because this is actually going to apply to all states.",
			"We're always going to have this background.",
			"So rather than duplicate it over and over again,",
			"in this instance, this minor bit of code,",
			"we're going to display the background behind all the states.",
			"So all the states are going to render over this background",
			"and make it seem a little more cohesive.",
			"We're going to draw at 0, 0 without rotation.",
			"And then this bit of math here, the virtual width",
			"divided by, and then background width minus one, end up being a scale factor",
			"so that we can always scale it to be our virtual width.",
			"Because the texture by default is some amount smaller than our actual window",
			"or our actual virtual width and height, but by dividing virtual width",
			"by whatever the background width of that image is by one,",
			"we'll get a scale factor because virtual width is larger than the image.",
			"We'll get a scale factor on X and Y that equates to it completely stretching",
			"to fill our virtual width and height.",
			"And recall that these two parameters are the scale on the X and the Y.",
			"So it's going to be some, like, one point something or two point something.",
			"Whatever it takes to end up filling the screen.",
			"And then lastly here, the new bit I implemented",
			"is just a display of frames per second function, which I think",
			"is kind of important generally, and it's very easy to do.",
			"I don't recall, I don't think we talked about it yet, but just",
			"love.timer.getFPS.",
			"And then I just draw in the top left in green",
			"so that we can see it throughout all of our iterations of the game, what",
			"are frames per second are.",
			"If you want to monitor without having to look through your terminal or anything",
			"like that, just displaying at the top, it's",
			"standard practice in a lot of games.",
			"If you've gone to the debug console or whatnot",
			"or sort of looked into some of the hacks,",
			"you'll see that in a lot of places.",
			"So I talked earlier about dependencies.lua.",
			"So this ties in as well to our effort to sort of modularize everything,",
			"keep everything organized.",
			"Instead of requiring everything at the top of main,",
			"let's just put it all in a file and then we'll",
			"know at a glance what we're requiring and we don't have to look through main",
			"and make main 100 lines, potentially a lot more than it needs to be.",
			"So requiring push, requiring class.",
			"Same as we've done before.",
			"Require source.constants.",
			"We have access to those.",
			"Require StateMachine, and then BaseState and StartState.",
			"So let's go ahead and take a look at our StartState.",
			"So I put states in a subfolder of source.",
			"This is another effort to sort of keep things modular.",
			"In this particular project, we won't have a lot of nested folders of code,",
			"but I decided to put the states in their own folder",
			"just so easily you can get access to all your states.",
			"So we'll look at StartState here on line 21.",
			"So recall in the StartState, we just had Breakout in the center of the screen",
			"and then we had Start Game and High Scores.",
			"So the user was able to highlight which state he wanted to look at.",
			"So we need to keep track of which one is highlighted.",
			"So all this variable's purpose is just to keep track.",
			"So one or two.",
			"One being Play Game, and two being High Scores.",
			"",
			"And then here if we press up and down, then we--",
			"because there's only two options effectively,",
			"you can just flip whatever highlight is with one or two.",
			"If you have a list of options that's more than two,",
			"you'll need to increment one until it gets to whatever",
			"X is, your number of list options.",
			"And then if you press down at that point,",
			"you should flip back up to the top.",
			"And the same holds true for whether you're at option one.",
			"You should go flip, rotate to the bottom of your list",
			"so that it looks as if you've gone all the way around.",
			"And-- then we're just playing a sound here when we do that.",
			"We have a love.keyboard.wasPressed[escape] call",
			"here.",
			"It's not global anymore because there are some states in our application",
			"where we might want to press Escape to actually go backwards,",
			"and we'll see that.",
			"And so rendering here.",
			"We render Breakout with a large font.",
			"Now that we can access G fonts at large key in the center of the screen,",
			"set medium font.",
			"And then we're going to render our two text fields one after the other.",
			"But if highlighted is equal to one, then we're",
			"going to set it to some blue color, which is one of three--",
			"255, 255, 255.",
			"And then render it.",
			"And then make sure to reset the color after that because recall",
			"love 2D is sort of like a state machine in its own right,",
			"where if you set the color to something, whatever you draw and render",
			"after that, be it images or text, will adopt that color.",
			"So having everything be 255, 255, 255, 255,",
			"which is pure white, completely opaque, has",
			"the effect of drawing everything completely opaque.",
			"But if you don't do that, your images or whatnot that you draw afterwards",
			"will be tinted or transparent, which you most of the time don't want.",
			"But you might sometimes want that, and we'll actually",
			"see that in the PaddleSelectState.",
			"And same thing holds true here.",
			"If highlighted is two, do the exact same thing.",
			"And so if we run this application, which is mainly",
			"just a subset of what we saw before, we can move up and down",
			"between Start and High Scores.",
			"But if we press Enter on any of them, nothing",
			"happens because we have no event handlers actually taking care of that.",
			"But we have the image scaled to the screen, we have Breakout in the middle,",
			"and we have our two menu options there.",
			"So Breakout1.",
			"So this is where we start to dive a little bit into sprite sheets, which",
			"is a major component of game development, 2D game",
			"development that we'll be looking at in the future and in this application.",
			"But a sprite sheet is just, ultimately, rather than have--",
			"I don't know how many images there are on this sprite sheet here.",
			"But however many of these files, just have",
			"one file put them all together, and then using rectangles, define",
			"where all the different sprites are.",
			"And then when we want to draw, use those rectangles",
			"and just tell love.graphics.draw, I want you",
			"to draw this texture, this sprite sheet, but I want",
			"you to draw just this section of it.",
			"You'd pass it in a quad, which is just simply rectangle with height, X and Y.",
			"And love 2D will know, OK, I'm going to draw the image, but only this bit.",
			"And it has the effect of looking as if you're only drawing tiny little images",
			"as opposed to one monstrous image.",
			"And the functions that are relevant for us to look at",
			"are love.graphics.newquad, which takes an X, Y, width, and a height.",
			"And also a dimensions object, which you get from an image.",
			"We'll see that.",
			"And all that basically is, I believe, is just an X, Y, width and height as well.",
			"Or just a width and a height, rather, from whatever image",
			"you want to create quads for.",
			"And then love.graphics.draw, we've already seen it,",
			"but this is a different signature.",
			"This has texture, quad, X, Y. Quad being the second argument.",
			"And when it takes in this quad, it knows to only draw",
			"that defined rectangle of image to the screen.",
			"And so we'll go ahead and take a look now at Breakout1.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: The question was, are there any tools",
			"so that we don't have to guess where the quad is when we're doing the sheet?",
			"Yes, there are a lot of the time.",
			"I looked and saw a couple, but I haven't tested them thoroughly myself.",
			"For simpler examples like this, it's usually",
			"easy enough to programmatically do it.",
			"But yeah, when you get into having giant sprite atlases where",
			"you have especially things that are not necessarily symmetrical",
			"or rectangular looking even though they still need to be defined rectangularly,",
			"it's often best to use a tool like that.",
			"There are, I do believe, I just haven't used them.",
			"I can bring it up in a future lecture so we can discuss.",
			"",
			"Any other questions before we carry into Breakout1?",
			"All right.",
			"So I'm going to go ahead and open up the very first thing",
			"we should look at on Breakout1.",
			"In the source directory, we have a new file.",
			"And from here on out, I'm going to assume,",
			"we're going to always assume that when we introduce a new file,",
			"we're going to include it in dependencies.lua.",
			"And so in this case, all we need to do is just say require source/util.",
			"And as you can see, we're also adding a PlayState to this demonstration.",
			"But from here on out, I won't make mention of us actually",
			"adding it to our project.",
			"So util.lua is the module that contains the code",
			"we're going to use to actually generate quads for a given sprite sheet.",
			"And this function, all it does, is it takes an atlas or sprite sheet--",
			"the names are synonymous.",
			"You'll hear them both.",
			"Or we pass it an Atlas, we pass it the width of the tile that we want",
			"and the height of the tile that we want.",
			"It's going to get the width and the height of the sheet here.",
			"So every image has a function called get width and get height,",
			"so we're just going to do that.",
			"And specifically the sheet width and sheet height",
			"are the width of the image divided by tile width and tile height.",
			"So we know how many times we need to iterate over the sprite sheet",
			"to generate a rectangle.",
			"We're dividing it up based on the size of our tiles.",
			"And then we just basically do a simple nested four loop here.",
			"We start a counter and a sprite sheet.",
			"This sprite sheet is going to be a table that holds all of our quads.",
			"We just say for Y, get zero.",
			"Sheet height minus one.",
			"So starting at the top left, going down.",
			"And starting at the top going down, and then x equals zero,",
			"starting at the left going right.",
			"At sprite sheet, sheet counter, which is one here because in lua,",
			"tables are one indexed.",
			"We're going to create a new quad at X times tile width, Y times tile width.",
			"Give it the width and the height of our tile.",
			"So just whatever we passed into our function signature.",
			"Here it will often be in this case be 16 by 32",
			"because that's the size of the bricks.",
			"And then we pass in the last parameter that we saw in the slide,",
			"which is atlas:getdimensions.",
			"And then we just increment our sheet counter here.",
			"And then at the end of this, when we're all done, we'll return this.",
			"We'll have a table of quads that we can then",
			"use that are in a sort of one, two, three, four, five, six, seven, eight.",
			"Well, I should say, one, two, three, four, five, six, seven, eight top",
			"left to bottom right of all the sprites in our sheet to make it",
			"super easy to look at.",
			"We have another function here.",
			"Lua doesn't by default, have a slice function, but we are just adding to it.",
			"Table.slice.",
			"It takes the table a first, the first entry in the table that we want,",
			"the last entry, and then the step between them.",
			"Just like Pythons slice function, it just iterates over the",
			"for loop, which is first till one.",
			"So one by default. Until the last or until whatever this sort of number sign",
			"is the size of a table, which I don't think we've introduced yet.",
			"But basically, if we pass in last, it'll stop there, otherwise just",
			"assume we want the whole entire table.",
			"And then this comma here at the end, which has step or one,",
			"you can pass in a step at the end of a for loop as a third argument,",
			"and that will be however much increments or decrements the loop that you're in.",
			"So by default, just one.",
			"We go one, then we go to two, then we go to three.",
			"But you can set it to negative one.",
			"And so if you say four i gets three to one minus one,",
			"you'll go three, two, one.",
			"And you can't do normally a step, which is what we do here.",
			"No, you can do a step, but you can't slice,",
			"which is why we have here sliced at number of slice plus one gets table i,",
			"and then eventually we return slice.",
			"So it just returns just a segment of whatever table we're in.",
			"And then the important function here that we're actually",
			"going to use in our application, we're going to generate quads paddles.",
			"And so this takes X and Y, 0 and 64.",
			"And if we look back at our paddles here, we",
			"can see that we have various different sizes.",
			"So we have a small one, a medium one, a large one, and then a really large one.",
			"So if we want to get every single paddle in our sprite sheet,",
			"small, medium, large, giant, notice that we have four blocks",
			"and within each of those blocks we have four different sizes.",
			"So we can just iterate over this four times",
			"and then just define whatever the size of this rect",
			"is, that rect, that rect, and that rect.",
			"And we'll see the math for it here.",
			"If I go zero to three, for i, get zero till three.",
			"We're going to go ahead because that will give us four.",
			"So that's how many times we want to iterate over the sprite sheet",
			"to get the separate quads.",
			"We'll get the smallest one.",
			"So quads counter.",
			"We initialize counter to one.",
			"Gets love.graphics, that new quad at X, Y, with the 32 and 16.",
			"Oh, and X and Y default at 0 and 64 here because the note--",
			"recall that these are all 16 tall here.",
			"So we're starting Y at 64 so that we start right here.",
			"And we're starting X at zero because it's on the left side.",
			"So we'll do that.",
			"We'll increment counter.",
			"Get it at 32 wide by 16 tall.",
			"Those are the actual dimensions of the smallest one.",
			"The same exact logic applies for medium and for large.",
			"Only that we're adding 32 and then we're making it size 64,",
			"and then we're adding 96 to X at size 96 because they're getting wider,",
			"but they're also offsetting more to the right.",
			"And then the last bit is pretty much the same thing as before, except now we're",
			"going Y plus 16 back to X because we've gone down a row in our sprite sheet",
			"The paddle width at that point is 128, but still 16 pixels.",
			"And then here at the bottom because we want to do this four times,",
			"we want to go through the chunks are effectively 32 pixels",
			"because we're going 16, 16, 16, 16.",
			"We're going to add 32 to Y and then go to the next set of four paddles.",
			"So this is how we're effectively getting all of the paddle sprites,",
			"and they;re going to be stored one through X where I believe X is 16.",
			"So we'll have 16 quads defined in our sprite sheet",
			"thereafter that we can then return.",
			"So I'm going to go back to main.lua now on line 64.",
			"Here we have a new global table called gframes.",
			"We'll be able to access this anywhere we want to draw stuff.",
			"And it's just the same thing that we just saw.",
			"Generate quads paddles, and we just pass it in our main texture.",
			"And our main texture is this.",
			"This is what our main texture looks like.",
			"And then we're going to index it.",
			"We're going to say it gets the key paddles,",
			"because in that particular table was just the quads for our paddles.",
			"So in the future, we just need to call love.graphics.drawtexture and then",
			"index into gframes paddles at whatever paddle we want.",
			"And that's how we can keep track of what we want to draw paddle wise.",
			"And in this particular demo we have a new paddle class",
			"because paddle is a thing in our game.",
			"We can represent it as sort of a class or an object.",
			"So we'll define a class for it.",
			"Everything is pretty simple thus far.",
			"Gets an X and a Y. Dx is zero with height.",
			"Skin.",
			"The skin is going to be what color it is.",
			"We need to keep track of that.",
			"And then the size, because size will be how we sort of offset",
			"into our paddles, our quads, because the sizes are small, medium, large, giant.",
			"One, two, three, four times four.",
			"So one, two, three, four for the first set and then five,",
			"six, seven, eight for the second set.",
			"Those are all sort of by color.",
			"So we can just multiply skin times--",
			"or we can multiply whatever our size is by skin",
			"and that will give us the current frame, the current quad that we want in order",
			"to draw to the screen.",
			"And then on line seven--",
			"so this is keyboard input here.",
			"Stuff that we've seen before.",
			"If we're pressing left or right, then the paddles should move.",
			"Dx should be set left or right.",
			"We want to clamp it.",
			"We saw this, we've seen this as well.",
			"Clamp the input to the left and the right side of the screen.",
			"If the dx is less than zero, do math.max and math.min otherwise",
			"if we're moving to the right.",
			"And then here, this is actually where we tie it all together",
			"and we actually use the quads to draw something onto the screen.",
			"So we're calling love.graphics.draw just our texture, our main texture.",
			"And then gframes at paddles at our current size, which is two.",
			"We want to by default have the medium size plus four times whatever",
			"our skin is, minus one.",
			"So if our skin is one, which is the blue skin, we won't add anything to it.",
			"It'll just be four times zero.",
			"But if we have the next one, it'll be two minus one,",
			"so we'll end up adding four to that.",
			"And because we're adding four to it times whatever that skin is,",
			"it will just basically put us four quads in,",
			"which is the next, the exact same paddle, but the next color.",
			"And then lastly what we'll look at here is the PlayState.",
			"So we had just the StartState before, but now we",
			"want to actually test to make sure we can draw a paddle,",
			"move it around the screen.",
			"So we're going to implement a simple PlayState here.",
			"So on line 20, we're just calling self.paddle gets paddle.",
			"We're initializing a new paddle object.",
			"And then we're keeping track of also this",
			"is a simple, like, pause demonstration.",
			"If self.paused, then-- actually yeah.",
			"Did I say self.paused?",
			"I did.",
			"OK.",
			"I just don't initialize it to anything.",
			"I should have set self.paused to false here.",
			"If self.paused, we're going to test to see whether we're pressing space,",
			"and if we are, unpause it.",
			"Otherwise, basically just do the same exact thing in reverse.",
			"If we press space, pause the game, play a sound, et cetera.",
			"Here on line 39, we're just going to call update on the paddle.",
			"Which, just remember, test for left or right input.",
			"Here we want to be able to escape the game,",
			"so we're going to have a handler for escape.",
			"Render the paddle on lines 47, which will do the love.graphics.draw",
			"with a quad as we saw before, but it'll use",
			"the skin and the size of that paddle to index into the quads tile sheet",
			"appropriately.",
			"And then here if we're paused, let's just draw",
			"some text in the middle of the screen that just says Pause.",
			"And we use the large font.",
			"So we can go ahead and demo this now and see everything come together.",
			"",
			"We have as before our StartState.",
			"But if we press Enter, now we go to our PlayState",
			"and we just have a paddle at the bottom of the screen.",
			"It's size two, skin one.",
			"Just the blue skin.",
			"And we can move it left or right like that.",
			"And if it hits the left side of the screen, it will stop.",
			"And if it hits the right side of the screen, it will stop as well.",
			"So we've made progress, but this is one of the fundamental things",
			"I'd like to showcase today is just, like, using quads and categorizing",
			"them, organizing them, and being able to draw",
			"your assets from a large compiled image rather than keep track",
			"of however many images it would take.",
			"And you have to name all of them and sort them.",
			"It would just be a big pain.",
			"So yeah.",
			"Definitely going forward when you have more than one sprite,",
			"you want to sort of put it together in one sheet,",
			"and that's how we can accomplish that.",
			"But we don't have bricks, and this is probably",
			"the other big main component of Breakout besides the paddle and the ball.",
			"We want to have bricks that we can actually hit and aim for on the screen.",
			"So this update will address that.",
			"So let's go ahead and take a look at Breakout2 in main.lua.",
			"I'm going to open it up here.",
			"",
			"On line 66, you can see we have a new table in our gframes.",
			"Because we had one just for paddles, we took out",
			"just the paddles from our sprite sheet.",
			"We're going to do the same thing for just the balls.",
			"So we're going to look at-- if we look here,",
			"we can see that the balls sort of come after all of the bricks here",
			"and they're just laid out in eight pixels wide by eight",
			"pixels tall increments here.",
			"So four pixels to one brick, four balls to one brick,",
			"two balls to one horizontally, and then two balls vertically.",
			"And so what we'll end up doing is just a simple function in our util",
			"that takes a look at that.",
			"So let's go ahead and take a look at our util.lua, which we've made changes to.",
			"",
			"And so what this is going to do is sort of do the same thing",
			"that we did before.",
			"It has to iterate.",
			"So notice we have two rows of balls.",
			"We have these four and we have these three.",
			"So we want to iterate four times.",
			"You want to find whatever the offset is here,",
			"the X and Y. So it looks like three times 32 and then three times 16.",
			"So 96 by--",
			"I can't do math.",
			"Whatever 16 times three is.",
			"And then we'll end up 48.",
			"And then we'll have--",
			"which is what we do here.",
			"So we have two iterations.",
			"So a four loop that goes from zero to three.",
			"So the top row, the four.",
			"We'll set a counter to one here.",
			"And notice also 96 and 48.",
			"That's the X and the Y that we're setting.",
			"That's where the offset is for the individual ball sprites.",
			"Quads at counter gets--",
			"and notice also quads is a table.",
			"We're going to return this.",
			"Quads at counter gets love.graphics.newquad at X, Y.",
			"Eight pixels wide, eight pixels tall.",
			"That's how large the balls are.",
			"And then we're going to add eight to it because we're going to the right.",
			"So this iteration just goes left to right.",
			"And then here we're going to do basically X being set to 96",
			"and then Y to 56.",
			"And then because we were editing X directly in here,",
			"we want to reset X back to 96, but then also add",
			"the eight pixels so that we have the start for the next row",
			"vertically, so at Y 56.",
			"Do the exact same thing here, but only do it",
			"three times because recall there is four balls on top",
			"and then three balls on bottom.",
			"And then return it at the very end.",
			"And so now we have just an individual table.",
			"We don't need to keep like one monstrous table of quads,",
			"which I find sort of disorganized.",
			"We can just have a table of frames for the paddles,",
			"and the balls, and the bricks as we'll see.",
			"",
			"Actually, I have it up here I think.",
			"Maybe not.",
			"",
			"So in ball-- oh, actually, hold on.",
			"Sorry.",
			"So we were looking at--",
			"",
			"I skipped over this one on accident.",
			"So the bounce update.",
			"So everything I just said is relevant, but I accidentally",
			"hit that right two times.",
			"We want to go to the bounce update because this is slightly simpler.",
			"So we were just talking about the ball, which is perfect.",
			"So we're going to take the ball and then we're going to add that to the scene,",
			"and we're just going to implement bouncing off the walls.",
			"So actually, pretty identical to the code",
			"we saw for Pong where you just detect whether the ball has",
			"gone past the left, right, or top edge of the screen.",
			"In this case, it will also allow us to go to the bottom of the screen",
			"and we'll also implement colliding with the paddle",
			"so then get a sense of the actual game play and what that feels like.",
			"So everything is currently current.",
			"So we're going to go--",
			"after talking about the function to actually get the individual ball",
			"quads out of the spreadsheet, we're going",
			"to look at the ball class which is going to allow us to spawn them in our scene.",
			"So a ball takes a width and height of eight.",
			"No velocity.",
			"But we're going to allow ourselves to initialize the ball with the skin,",
			"and we'll see this later just as a cutesy little thing to you",
			"use the actual individual sprites rather than just one constant sprite.",
			"We're just going to give it a random number between one and seven",
			"because there are seven quads.",
			"And then we'll just use gframes balls and math dot random number",
			"to get the actual ball spread that we want.",
			"And so we have a simple collides function within ball",
			"that would allow us to check to see whether we've collided with something",
			"that has a X, Y width and a height.",
			"So it's a simple A, B collision detection.",
			"And then here we have reset.",
			"Just resets it to the middle of the screen.",
			"Update applies velocity.",
			"Stuff we've already seen.",
			"This is where we actually implement bouncing off the walls.",
			"So if X is less than or equal to zero, greater than",
			"or equal to virtual width minus eight, or less than or equal to zero,",
			"this should be where we reverse the velocity.",
			"In the case of it bouncing off the left side, we want to reverse the X velocity",
			"but keep it going up.",
			"If it hits the top, then we want to reverse",
			"the Y velocity to keep it moving in whatever direction it was moving.",
			"And same thing with the right hand wall.",
			"And then play a wall hit sound.",
			"And we're incorporating the sounds sort of as we go today",
			"just because they're so simple.",
			"And it's also kind of nice just to have a little bit of feedback",
			"when you're actually endpoint of the game.",
			"And the exact same code is here for drawing.",
			"So we have main texture, but now we're using gframes balls,",
			"and then we're indexing that at self.skin.",
			"And recall that we just set self.skin in here.",
			"So all we need to do to just make it random",
			"is just wherever we create a new ball, just give it a math.random7,",
			"and then that will index into that quads table",
			"so we can draw a different ball texture each time.",
			"And so let's go ahead and see--",
			"oh, actually, no.",
			"And one last thing we need to look at is the PlayState",
			"has a little bit of new code as well.",
			"We're going to spawn a ball, so this is where we do it here.",
			"I'm not doing it random, but I could do it random here if I wanted to.",
			"I could math.random7, and every time we boot up",
			"the game it's going to be a different color because it's",
			"going to be a different skin.",
			"We need to update the ball.",
			"So on line 50 we just update it like we do the paddle.",
			"And then on line 52, we're just testing to see",
			"whether it collides with the paddle because we're using just simple A,",
			"A, B, B. If it collides with the paddle, we can assume it was coming down.",
			"We can just reverse as delta Y.",
			"Now, does anybody know what might be a current issue",
			"with the current implementation of this function?",
			"Particularly with this line.",
			"",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: It will.",
			"You're on the right track.",
			"The answer was, if the ball is coming from the side,",
			"it won't necessarily be bounced back up in the right Y direction.",
			"If it's coming from the side, it will always, in this case,",
			"be coming from up above.",
			"So it always still be reversing in the right delta Y.",
			"But what's going to happen if it comes in at an angle",
			"and then isn't basically reset?",
			"Like right now if it comes at an angle and it",
			"gets caught-- let's say it's like below the top edge of the paddle.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: You're going to get an infinite collision",
			"loop because we're not resetting it's position,",
			"we're only updating its velocity.",
			"If it comes in at the right angle from the side,",
			"it's going to get stuck inside the paddle",
			"and then it's going to cause a little bit of funky behavior.",
			"I'll try and see if I can make that happen in my demonstration here.",
			"But that's the gist of all of these updates.",
			"So if we go to Start, we can see immediately we have a ball.",
			"And when it hits the sides or the top, it bounces accordingly.",
			"It hits the paddle.",
			"So when it comes in from the top flush on the top, it flips the Y velocity.",
			"Let's see if I can get it at an angle here.",
			"There it is.",
			"It'll get stuck.",
			"And so whenever you sort of do A, A, B, B collision detection,",
			"just remember to always reset the position of whatever it",
			"is that collided that's moving so that it doesn't clip",
			"and get stuck inside of something else over and over again.",
			"Yes.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: The question is I'm always doing love space dot,",
			"and as opposed to just running things from using",
			"the complete path of whatever the file is, in order to do that-- so are you",
			"on a Mac or a Windows machine?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: So on a Windows machine it is a little trickier,",
			"but I've found a really nice sort of plug-in for VS Code.",
			"So if you're VS Code, which is the editor that I use, it has plug-ins",
			"and one of the plug-ins that you can download is for Love2D",
			"and it has a config where if you just press Alt L,",
			"it will run whatever directory you're currently in,",
			"whatever project you're currently in.",
			"It will call Love.",
			"It adds it to your path for you.",
			"So download the Love2D plug-in on VS code if you want that to work.",
			"I'm on a Mac, so I can edit what's called my batch profile,",
			"and alias Love to its complete path in my file system.",
			"And you can do the same thing with--",
			"I don't know how it would work with Windows in terms of aliasing,",
			"but it's essentially the same thing as typing out the entire path to Love,",
			"but only I'm changing it to another word.",
			"I'm changing it to Love.",
			"So I'm setting Love equals to application slash",
			"love.app/content/resources et cetera.",
			"So good question.",
			"I would download on Windows.",
			"I'm a big fan of VS Code and the Love2D plug-in.",
			"I would recommend looking into that.",
			"And I'm sure there are other plug-ins, and there's a page also",
			"on the website--",
			"I don't have a browser open at the moment.",
			"But on the wiki, you can look at the Getting Started page.",
			"I believe it's like love2d.com/wiki/gettingstarted.",
			"They have a bunch of instructions for different operating",
			"systems and different text editors that allow you to get sort",
			"of a more efficient workflow going.",
			"So any other questions?",
			"All right.",
			"So we did the bounce update.",
			"Now we can finally edit the bricks.",
			"Add in the bricks, I should say.",
			"So these are pretty simple.",
			"So we're going to take a look at it.",
			"And right now we're not going to do any sort of fancy procedural generation,",
			"we're just going to get some bricks on the screen.",
			"Just some easy bricks.",
			"Or rather, we will get some very basic procedural generation,",
			"but not to the level that we'll see soon.",
			"We'll see that very soon.",
			"OK.",
			"So I'm going to go into my main.lua here.",
			"I'm going to go into the Breakout3.",
			"",
			"And same thing that we did before on line 67,",
			"we just have a new bricks table in our gframes.",
			"And it just generate quads bricks.",
			"We call from util.lua, so we can look at that really quick as well.",
			"This one's actually really easy.",
			"Sourceutil.lua.",
			"Because they start at the very top of the screen,",
			"we can assume that-- we could effectively",
			"treat this whole thing as if it were just these",
			"and just generate quads at a constant width and height",
			"because, effectively, we only need a subset of the frames that's generating.",
			"Because it's generating them this way, top to bottom, left to right,",
			"we can just grab all the way up to here using",
			"table.slice, which we saw before, and not",
			"worry about indexing into any weird, like,",
			"having any constants X and Y that we need to index with in order",
			"to get an offset.",
			"We can just do a very simple--",
			"if we go down to line 57, generate quads bricks, it just does a table.slice.",
			"And so within that, we're going to generate quads atlas 32,16.",
			"So this is going to have the effect of dividing up our sprite sheet by 32",
			"by 16 pieces.",
			"It's going to generate all of these just fine,",
			"but then it's going to have quads here, here, here, here, here",
			"that don't line up with the quads that you see here",
			"because it's just blindly assuming that all of the sprites in that sheet",
			"are the same size because that's all we're doing.",
			"We're just calling generate quads, which if you recall,",
			"just generates a fixed size width and height throughout our entire atlas,",
			"which is great for a lot of sheets that are symmetrical,",
			"but there are cases where we have, like, for example here, where",
			"our spreadsheet is asymmetrical.",
			"We have paddles of differing sizes, we have",
			"the balls which are eight by eight, we have the bricks,",
			"we have the other power ups at the bottom.",
			"But the generate quads bricks takes in that table",
			"that we're generating, which is going to be a bunch of frames",
			"that we don't want.",
			"Many of them clipped, half clipped.",
			"And then we're just going to take it from one to 21.",
			"And when we do that, one to 21 is effectively-- that's how many of these",
			"there are.",
			"So 18 and then one, two, three.",
			"So from one to 21, all of those.",
			"That will be all the bricks.",
			"We can throw away all the rest of the quads",
			"and just blindly assume that they're all the same size.",
			"",
			"So any questions on how quads or how any of these tables are working?",
			"OK.",
			"",
			"So we're going to go ahead.",
			"We have a new class now, brick.lua.",
			"",
			"So simple building blocks.",
			"In brick.lua on line 30, we have a flag called in play.",
			"self.inplay gets true.",
			"And so we're just going to use this to render.",
			"We're just going to say, if it's in play, render it.",
			"If it's not, don't render it.",
			"It's that simple.",
			"That way we don't have to worry about object deallocation or anything fancy.",
			"We have all of our bricks and whether it's in play",
			"or not, render it or perform update logic.",
			"And if it's not in play, just pretend it doesn't exist.",
			"Just ignore it.",
			"We're only going to have like 30 or I don't know how many,",
			"13 max by four bricks in our scene at once, so worrying about freeing memory",
			"isn't really an issue.",
			"But if you have a million different things getting generated all the time,",
			"having simple in play is false might not always",
			"be viable because you need to store all that memory for all those objects.",
			"So just a shortcut here, but not necessarily best",
			"practice for very large games.",
			"But certainly great and simple for small games.",
			"",
			"On line 37, we define a function called brick hit.",
			"And all this does is just play a sound effect and set in play to false.",
			"And so all we're going to do is just check",
			"to see whether there's a collision and then just call this hit function,",
			"play a sound, and then just pretend it doesn't exist anymore.",
			"And then render, all render does is if it's in play, check the in play flag,",
			"draw main at bricks or using our bricks table here that we created.",
			"And then we're going to start at one and then",
			"we're going to index it based on our color minus one times four,",
			"and then we're going to add it's tier.",
			"So there are, if you recall, one, two, three, four,",
			"five colors and four tiers.",
			"And so what we're going to do is we're going to jump between the colors.",
			"So we'll go value one, value two, value three, value four, value five.",
			"That will be our first five or I guess six.",
			"That will be our first six bricks.",
			"And then we're going to go one, two, three-- or we're going to add,",
			"we're going to have a tier basically.",
			"It'll be one, two, three, or four.",
			"And if it's at tier one, then we can just add--",
			"basically to index into whatever tier we're on,",
			"we just need to add tier minus one to whatever our index is.",
			"So here if our tier is one, then we just want to render this block.",
			"We don't want to go to the next one.",
			"So we're just going to say tier minus one.",
			"We're going to add--",
			"so one minus one is zero.",
			"So we're going at zero to this, get this.",
			"But if tiers two, we'll add one, and two, and three.",
			"And then we just multiply whatever brick we want by our color.",
			"Multiply it by four to get an offset for whatever our actual color is.",
			"So we take our color, figure out where on the sheet it is,",
			"and then just add our tier to it in order to index",
			"into our spreadsheet accordingly.",
			"And so that's what the math here is doing.",
			"And if we go back to our PlayState--",
			"",
			"and I'm going to start moving a little bit faster",
			"just so we can keep caught up.",
			"But in our PlayState, one thing that we notice here,",
			"we have a new class called level maker that we're seeing,",
			"which was a function called createmap.",
			"We're going to take out all the logic for generating our levels",
			"and we're just going to put it in one place.",
			"We're going to call that level maker.",
			"Rather than in our different states that maybe",
			"generate the bricks like the PlayState or I",
			"guess it would be the ServeState, VictoryState,",
			"I guess, rather than generating all the bricks",
			"in that state within it's innate code, let's just make a level maker",
			"and we can just say, OK, set bricks to levelmaker.createmap,",
			"which will return a table of bricks.",
			"Same-- excuse me-- logic as we saw before.",
			"In this case, we're just going to iterate for k brick",
			"in pairs of self.bricks.",
			"If the brick's in play and it collides, if the ball collides with it,",
			"then hit it, which will set it not into play.",
			"So simple A, A, B, B.",
			"And then lastly, we have our render logic here,",
			"which is going to take that bricks table and just iterate over it.",
			"And the last thing we should probably look at",
			"is the actual level maker itself, which in this case is very simple,",
			"but we'll see it gets a little bit more complicated later when we do it.",
			"When we have a more elaborate procedural generation approach to our levels.",
			"But right now, we're just going to say set two random variables here.",
			"Number of rows and columns.",
			"And then for every row or for basically every row and every column,",
			"create a new brick.",
			"And then there's some math here.",
			"I'm going to kind of skim over it, but basically it",
			"calculates where the brick is and then gives us",
			"eight pixels of padding on either side.",
			"And then based on how many it is, it needs to center all",
			"the bricks and shift them by a certain amount to the left",
			"and then start drawing all of them.",
			"And that's essentially what this code does here.",
			"So calculate the center.",
			"I wrote it out in comments here, but I'm going",
			"just kind of glaze over it for now.",
			"But effectively, center all the bricks.",
			"Basically calculate what offset on the X-axis you need to put all of them",
			"so that they appear centered, and then you're going to draw them all out.",
			"And then that's it for the level maker class.",
			"So simply number of rows and columns, and then fill a table with bricks",
			"but set their X equal to however much we need to center all",
			"of them when they're all drawn out.",
			"So we need to figure, we need to basically take in our number of columns",
			"into account when we do that.",
			"And then if we go into Breakout3 and run that, we have bricks.",
			"They're getting collided with, and as soon as they get hit,",
			"collided are in play on each of those bricks gets set to false",
			"and they no longer get rendered.",
			"And they no longer get updated in terms of collision.",
			"Now, we still have the issue with the ball not getting reset.",
			"We'll fix that.",
			"That's an easy fix.",
			"But we're coming a long way.",
			"We have things moving at quite a pace.",
			"I'm going to go ahead and move to the next bit of code here.",
			"So this is another bit of code.",
			"I'm going to sort of glaze over a little bit of the details here.",
			"But at a high level what we need to do is it's one thing",
			"to detect that we've collided with a brick,",
			"but in Breakout, the ball bounces off of the brick",
			"depending on which side it hits.",
			"And we don't know this necessarily just based off of the collision.",
			"We just know whether the collision is true or not.",
			"We don't know where it came from and how much it collided with.",
			"And then we're also going to fix our paddles so that rather than-- because",
			"currently all it does is just negate whatever the Y velocity is,",
			"but we want to add a little bit more variety",
			"to how we end up sort of ricocheting the ball off the paddle when we play",
			"so that we can sort of strategize a little bit,",
			"give ourselves a little bit of game play.",
			"So if we are moving to the right and we hit the right edge of the puddle",
			"with the ball, it should probably go in a sharper direction.",
			"Same thing with the left side.",
			"And we can effectively do that by taking the middle,",
			"figuring out how far away from the center it is,",
			"and then just amplifying our delta X in the negative or positive direction",
			"based off of that.",
			"And that has the effect of causing that to happen.",
			"So here we can see we have the ball sort of coming at the paddle,",
			"and let's pretend that the paddle is moving to the left.",
			"In this case, however far away the ball is from the center,",
			"we want to scale that by some amount and then",
			"end up making that our negative delta X, because that's effectively",
			"how the game normally works.",
			"If you move the paddle to the left or the right,",
			"hit it on a corner or something, gives it that sharp angle.",
			"And that's effectively what the sharp angle is.",
			"It's just a strong delta X, and it gets amplified the larger this is.",
			"So just basically take this, multiply it by some amount,",
			"and then make it negative or positive on your dx.",
			"That's your sort of paddle collision V2.",
			"Brick collision is a little bit--",
			"it's pretty simple, but it's a little bit more complicated.",
			"Basically what we need to do is just check and see which edge of the ball",
			"isn't inside the brick.",
			"And so if the left edge of the-- and we can also sort of",
			"simplify this a little bit.",
			"If the left-- as you see here by the pseudocode--",
			"if the left edge of the ball is outside the brick and the dx is positive,",
			"then we can say, oh, we can basically assume",
			"we've come in from the left side, so we should probably",
			"go in the opposite Y direction on the left side.",
			"Or sorry, we should go in the same Y direction, but negate our delta",
			"X. Because we're coming in from the left,",
			"the left side is outside the brick, so bounce it back.",
			"And the same thing for the right edge.",
			"And we only do this test, the left edge of the ball, if dx is positive.",
			"Because if dx is negative, there's no way",
			"the ball's colliding with the left side of our brick.",
			"So we can shortcut that effectively.",
			"We do the same exact logic here, just on the right edge",
			"of the brick instead of the left edge.",
			"And then if none of those hold true, we're",
			"going to see if the top edge of the ball is above the top edge of the brick.",
			"And if that's the case, we know that we've hit from the top.",
			"We can trigger a top collision.",
			"And if none of those have held true, we know",
			"that we have had a collision of some kind,",
			"we can just register a bottom collision.",
			"And so this is a simple version of this sort",
			"of way of doing Breakout collision.",
			"It has a few faults when it comes to corners,",
			"sometimes corners can be a little bit finicky,",
			"but I would say it works 99% of the time.",
			"For a much more robust and a better example, I would look at this URL",
			"here because he also goes into a full sort of breakdown",
			"of how he would implement arkanoid, which is the same thing effectively",
			"as Breakout if you just want an alternative look at it.",
			"But basically, his solution involved taking how much the X and the Y",
			"differed on different points of the bricks relative to the ball.",
			"And I believe he also kept the ball as an actual ball with a center point,",
			"even though he rendered it as a rectangle.",
			"So it's a little bit more robust.",
			"I decided to implement it a simpler way, which I'll showcase,",
			"which is the way that I demonstrated because it worked well",
			"and it wasn't too much code to sort of look over.",
			"But I do encourage you to take a look at that.",
			"We're going to look at our PlayState now in Breakout4.",
			"",
			"And in our PlayState, we're going to see--",
			"",
			"sorry.",
			"Line 65.",
			"So this is the actual paddle code for influencing the ball's delta X.",
			"So basically, if the ball.x is less than the paddle.x plus it's width divided",
			"by two, so basically on the left side of the paddle,",
			"and the paddle's delta X is less than zero, which means it's moving left--",
			"because we don't really want to necessarily influence it if we're just",
			"standing still--",
			"we're going to do what I described earlier.",
			"We're going to give it some scaler, like some start off value.",
			"In this case, negative 50 is just sort of seeding this, giving it",
			"some sort of initial value.",
			"And then we're just going to subtract the ball's X from the middle point.",
			"This being the middle point of the paddle",
			"And then just multiply it by eight.",
			"So whatever the difference is between the ball's X and the middle",
			"of the paddle, multiply it by eight.",
			"Add it to negative 50 and then negate that.",
			"Also negate that whole value so that the whole entire value becomes negative.",
			"And we, therefore, get a sharper delta X depending on which angle",
			"it's coming at, and also how fast--",
			"or not how fast, but whether or not we are moving left.",
			"And it's the exact same thing on the right side.",
			"Only because we're taking this math, this self.paddle.x",
			"plus self.paddle.width divided by two minus the ball.x,",
			"the ball.x isn't going to be greater than that point.",
			"So this value is actually going to be negative.",
			"So we're going to just make it positive with math.abs.",
			"So absolute value.",
			"Just a lua function.",
			"So the absolute value of the difference between the ball's",
			"X and the middle point times eight, add it to 50,",
			"and that'll give us a positive value that scales depending on whether or not",
			"we've hit the middle of the, we've hit the right edge of the paddle",
			"and are moving to the right.",
			"And so that's, in a nutshell, how we get that collision to work with the paddle",
			"and how we can tweak delta X to be scaled a little bit more",
			"than just a constant, you know, negative or whatever",
			"it's current X was, but negative dy.",
			"A little bit more complicated.",
			"And then the actual collision code for the bricks",
			"themselves is going to take place in a for loop here.",
			"So if it's in play, if the ball collides with it, hit it.",
			"So I added plus two.",
			"So the gist of the math is if ball.x is less than brick.x",
			"and the ball is moving to the right, self.ball.dx is greater than zero,",
			"then flip it's X velocity.",
			"So bounce it to the left.",
			"That's what this check is.",
			"But it plays a little bit rough with corners",
			"because you could theoretically get into a position",
			"where you come in at an angle and it's intersecting",
			"with the paddle in two positions, both on top and the left",
			"or on bottom and the left.",
			"So in that case, adding two sort of prioritizes the Y being hit.",
			"So it basically takes the check from the exposition of the ball to the X plus 2.",
			"And so it ends up fixing the corners a little bit, but the gist of it",
			"is just check to see if the ball.x is less than the brick.x.",
			"And if it is and we've detected a collision, we can bounce it.",
			"There are some subtle corner case bugs without adding this plus two,",
			"so we add that.",
			"And then flip the velocity here.",
			"Oh, this shift here.",
			"This is what we were talking about earlier with make sure",
			"when you do a collision, shift whatever is",
			"moving outside the boundaries of whatever you're colliding with.",
			"So self.ball.x gets brick.x minus eight because the ball is eight pixels wide.",
			"It should actually be self.ball.width for a better style,",
			"but that's essentially what it translates out to.",
			"Same thing for the right edge.",
			"The plus six because it's on the right side.",
			"So it's effectively the same thing as minus two if we're on the left side.",
			"Just a sort of fixes corners, weird issues with corners.",
			"But check in to see if basically the ball plus its height minus two",
			"is greater than the brick plus X plus brick.width, which it means,",
			"oh, we've collided with the right edge of the screen, of the brick.",
			"And then if the Y is less than the brick.y,",
			"then we've collided with the top of the brick,",
			"and otherwise, we've collided with the bottom.",
			"And with the top and the bottom, just do the same thing we did with delta X,",
			"but do it with delta Y, but you're still resetting it.",
			"So ball.y gets brick.y minus eight.",
			"Ball.y gets brick.y plus 16 because the paddle or the individual bricks",
			"are 16 pixels tall.",
			"That's the gist of the collision detection.",
			"And then if we actually-- oh, and one other thing that I ended up",
			"putting here just to make it a little bit more interesting,",
			"and this also ties into more complicated collision detection.",
			"If your velocity is too fast, a lot of the time it'll skip through objects,",
			"and then that causes a lot of problems with these collision detection",
			"functions that normally are very sort of mathematically correct",
			"and they work well.",
			"They don't work well when it skips over what",
			"you're trying to actually collide with.",
			"So a solution to that, which was beyond the scope of this example but something",
			"we're thinking about, is perhaps stepping backwards a certain amount",
			"of time, a certain amount of pixels.",
			"Perhaps maybe start at where you where your ball was on one particular,",
			"on the last frame, and then just add its width and height to itself",
			"until it collides with something, until it reaches whatever its current delta X",
			"or delta Y plus its position is.",
			"That's one way to do it.",
			"Sort of just adding a bunch of invisible--",
			"whatever you're colliding with or whatever you're using to collide--",
			"add a bunch of invisible those to bridge the gap and check into if any of those",
			"hold true for a collision.",
			"A little bit more computationally expensive, but a lot more accurate",
			"in terms of the physics.",
			"And aside from that, everything is the same.",
			"So if you look at the code in Breakout4--",
			"and I'm going to go a little bit faster henceforth.",
			"That's probably the meatiest part of the program.",
			"",
			"We get collisions.",
			"And then I'll try and get a strong angle so I can demo the--",
			"that didn't work.",
			"That actually gave a weaker angle.",
			"So if you do this and you do it close to the center, it has the opposite effect.",
			"But there you go.",
			"That's a sharper angle.",
			"So now you can actually influence the ball in a little bit more",
			"of a personable way.",
			"You know, not just have it be a flat delta Y gets negative--",
			"or get negative delta Y effectively.",
			"So any questions on sort of how the gist of all of that works?",
			"",
			"OK.",
			"Perfect.",
			"So now we're going to get into a little bit more of some fun stuff.",
			"We'll do a couple more examples, then we'll take a break.",
			"So this is the hearts update.",
			"So notice that the very top of the screen, as I've demonstrated in these",
			"slides, we have just a few hearts.",
			"One of them is empty.",
			"We showed this earlier.",
			"And then we have a game over screen, which is our final score.",
			"So I'm going to go ahead and we're just going to look at the code a little bit",
			"faster now since a lot of the stuff is fairly straightforward.",
			"I'm going to go ahead and open up the--",
			"I'm going to make sure I'm in the right folder first of all.",
			"Breakout5.",
			"And then in the--",
			"",
			"so one other thing we're going to start doing is--",
			"I mentioned this earlier.",
			"And it's going to be it's going to hold true",
			"for any of the sort of state transformations",
			"that take place going forward.",
			"Rather than keep global variables, we're going",
			"to sort of do away with that idea outside of the asset tables",
			"that we have just because those are kind of an exception",
			"and they could reasonably be put into a separate class called the resource",
			"manager.",
			"We're going to start passing in what is basically our current app state,",
			"or at least the variables that make sense.",
			"And this is a common paradigm in web development with React as well.",
			"But basically, everything that we need to be preserve state to state,",
			"rather than just keeping global variables,",
			"let's pass them between the states because the state machine allows",
			"us to do that in the change function.",
			"And then whatever that state is in it's enter function,",
			"it'll have access to that and it can just",
			"set those values to self dot whatever and use them.",
			"But we no longer have global variables.",
			"We're just saying, here.",
			"Here's the values that are important for you to continue on.",
			"And then that state will take its values and go to the next state",
			"and say, oh, OK, here are the values that you need to function.",
			"Like the serve, play, and all those states",
			"that have the core game play involved will probably",
			"need to maintain a reference to like the paddle,",
			"and to the score, the amount of health we have.",
			"But when we get to the end, for example, and then we no longer really",
			"need a paddle, we no longer really need bricks or anything like that,",
			"we just need to know what our high score is so that we can enter it",
			"into our high score list, all we really need",
			"to do is just pass in the high score state entry or just our high score,",
			"and that's it.",
			"So it encapsulates all of our data.",
			"And at a glance, we can sort of see what we need to pass between the states",
			"and what's going to be relevant at a glance as well.",
			"It just clean things up quite a bit.",
			"So that's what we're doing now on line 35.",
			"And henceforth, we will do this in every state as we see,",
			"but I'm going to sort of glaze over it in the future.",
			"We have a ServeState now.",
			"So a ServeState, this is very identical to what we did in Pong.",
			"So we just wait for the user to press Space.",
			"They can move around and then when they do press Enter,",
			"basically the ball starts moving.",
			"And then we change the PlayState here using",
			"the current values that are necessary.",
			"Paddle, bricks, health, score, and ball.",
			"Those are basically the fundamental variables",
			"that we need in order to keep track of our GameState.",
			"So we have a ServeState, it will wait for us to press Enter.",
			"And then our main.lua, we have a new hearts table.",
			"And then on line 208, because we're going",
			"to need the ability to render health and render our score across several states,",
			"Play, Serve, Victory, Game Over--",
			"actually not Game Over, but the three before that.",
			"We don't want to duplicate those behaviors,",
			"so I'm just calling a function called Render Health, which",
			"just takes in whatever health is and then",
			"we just set an X to virtual width minus 100.",
			"And then for however many health we have, draw a heart",
			"from the hearts sprite sheet, which I separated the hearts out",
			"into a smaller image so you can just split them on like eight by eight",
			"or whatever it is.",
			"But just draw those and then add 11 to X,",
			"and just keep going until we've drawn out however many hearts we have.",
			"That will draw full hearts.",
			"And then three minus health will give us however many health we're missing.",
			"So if we took a point of damage, this is going to be equal to one.",
			"So then it'll draw one empty heart after that or it'll draw two empty hearts.",
			"So draw however many full hearts we have, then draw the empty hearts.",
			"And those are two separate sprites that we get from the image.",
			"And that will have the effect of drawing our health.",
			"And then our score is simply, it takes a score variable that we pass into here.",
			"And also note that the render health [INAUDIBLE]",
			"and health variable and pass into it here.",
			"And so in our PlayState, we are calling both of these functions on line 135.",
			"Well, on line 135, we are calculating whether we",
			"go below the edge of the screen, which is another important part of the game.",
			"Obviously, we need to detect when we've lost health.",
			"So it's as simple as this.",
			"If it's greater than the virtual height, decrement health by one.",
			"If it's equal to zero, change to Game Over.",
			"Else change to the ServeState.",
			"And note that we're passing in all these variables to and from our states.",
			"The ones that are important.",
			"Game Over just needs score, but Serve needs whatever",
			"variables we were already using.",
			"",
			"And then down here we're calling render score and render health,",
			"and then the GameOverState is simply--",
			"because it takes in score from the parameters list,",
			"just wait for keyboard input to go back to the start and then render game over,",
			"here's your score.",
			"It's self.score, and then that's it.",
			"Very simple.",
			"Very simple state.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Sure.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: The question was, do any of these states",
			"have access to their parent file?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Is everything in main.lua global functions?",
			"Yes.",
			"Functions that you declare.",
			"Anything that's basically not specified as local that you define in main.lua",
			"will be accessible anywhere in your application, including functions.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: You don't have to-- the question was,",
			"do you have to declare as public?",
			"No, there is no notion of public.",
			"In lua, anything that does not have a local specifier",
			"is assumed global, even if it's in a nested scope.",
			"So you could have a for loop, you could have several nested for loops",
			"and declare some variable without local, that variable can be accessed anywhere",
			"above it or outside of it.",
			"So it's pretty important to use local variables",
			"when you're not explicitly allocating something as global",
			"just to avoid the bug of for nested loops",
			"and you have some variable name like hello and you use it somewhere else.",
			"Good questions though.",
			"So yeah.",
			"We have a bunch of states now.",
			"We have a GameOverState, a PlayState, we're",
			"rendering our score, rendering our health.",
			"If we go and take a look at Breakout5--",
			"",
			"is it a different window?",
			"There we go.",
			"We can see hearts at the top.",
			"Score zero.",
			"",
			"Oh, and I forgot to mention the part where we actually add score now.",
			"So the bricks themselves in their on hit, or I should say in the PlayState,",
			"on line 81 when we detect a hit, we're just adding 10 to the score for now.",
			"But later on, we'll do a calculation where",
			"we take tier and color into consideration",
			"and then perform arithmetic on that to get our total score for each ball hit.",
			"But yeah, we have our health, we have our score.",
			"And then once we take enough damage, we'll",
			"end up going to the Game Over screen.",
			"The Game Over screen will go back to our Start screen.",
			"So making progress.",
			"And then probably my favorite of the updates",
			"before we take a short break is the pretty colors update.",
			"So what this does is clearly we can have--",
			"we've updated our level maker.",
			"So rather than just having a bunch of very static bricks,",
			"we end up doing a little bit more complicated procedural generation.",
			"It's not complicated though.",
			"Just in levelmaker.lua in Breakout6, we have a few different constants here.",
			"So solid, alternate, skip, or none.",
			"Actually, I don't think I use skip or none.",
			"Just solid or alternate basically.",
			"We have flags now.",
			"So number of columns.",
			"And we ensure that it's odd because even columns with generating patterns",
			"leads to asymmetry.",
			"So make sure the number of columns is odd.",
			"Generate the highest tier and the highest color based on our level.",
			"So in this case, we'll go no higher of a tier",
			"than three because we have no higher tiers than three.",
			"It goes zero, one, two, three.",
			"And then whatever our level divided by five is,",
			"and it would just take math.floor.",
			"Math.floor takes in basically performing division and then truncating",
			"the decimal point.",
			"Well, not division.",
			"It just literally truncates the decimal point off of a number.",
			"So a level divided by five.",
			"Whatever that is before the decimal point.",
			"Level modular five plus three for the highest color.",
			"So we'll cycle.",
			"We'll go over and over again.",
			"Go highest color one, two, three, four, five, and then we'll go to a new tier",
			"with level divided by 5.",
			"So basically, every five levels will increment in tier,",
			"and then we'll start back at blue.",
			"And then we go on, and on, and on like that for every number of rows.",
			"So basically I have a few--",
			"I'm going to sort of glaze over this a little bit",
			"just because we're probably going to run short on time.",
			"But we have basically two flags.",
			"Whether we're skipping bricks in this row or alternating bricks color wise.",
			"And if we do, we need to set a color for it and a tier.",
			"And then we basically just say, you know,",
			"the same sort of logic that we had before we generated random rows",
			"and columns, but if we have the alternate flag on,",
			"then as we can see in some of these photos here, here we have skip is true.",
			"So the color for that row is set to the blue, but skip is true,",
			"so every other brick is just going to skip that iteration of the loop.",
			"Same thing here, only it's offset by one.",
			"Same thing here.",
			"Same thing here.",
			"So this is kind of a nice little pattern.",
			"And in each of these cases--",
			"actually not each of these cases.",
			"Notice this third one, it also set alternate to true.",
			"So it goes green, purple, green, purple, green, purple.",
			"And so the logic there is if alternate is true, then",
			"just flip the color every iteration.",
			"If skip is true, don't generate a brick every other iteration, and so on",
			"and so forth.",
			"And then if you have solid or if you don't have alternate equals true,",
			"then you have a solid brick like these blue ones.",
			"And if you have alternate but no skip, you get this sort of pattern",
			"where you have green, purple, green, purple.",
			"You know, any random color.",
			"And then also the number of columns is random.",
			"So it can go--",
			"here we have 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 but on this very bottom one,",
			"we have that minus two it looks like because it can only go that wide.",
			"And in those here too.",
			"Smaller size.",
			"That one there's no spacing.",
			"So these are very simple concepts.",
			"Like should we skip a block this iteration?",
			"Should we alternate the colors?",
			"And when you put them all together, it produces",
			"things that look as if they were almost handcrafted.",
			"Like this could be made by somebody.",
			"Like, that looks like it was made by somebody.",
			"Pretty much every iteration of this.",
			"I mean, even that, that looks like a shape almost.",
			"Its just very simple but the results are pretty awesome in my opinion.",
			"And so that's just the gist behind what we're doing.",
			"We're just setting flags and just saying, you know,",
			"if we're skipping this turn and just every iteration,",
			"every time we lay out a brick and we spawn a new brick on this row,",
			"just do or don't.",
			"Just make it's color--",
			"pick two colors if we're alternating and then set",
			"its color to whatever the off color is that we're alternating.",
			"And if we're skipping and alternating, then",
			"we're just doing whenever we're on a brick that we're actually laying",
			"is when we change the color, the alternate color.",
			"And so like I said, I won't go into too much detail.",
			"Happy to talk about the generator after class.",
			"But just because we're running short on time,",
			"sort of going to wave my hands over it.",
			"But that's it in a nutshell.",
			"So any questions before we take a break for five minutes?",
			"Yes?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: The question is, in an instance with this programming",
			"if the ball were so fast that it we're actually inside the brick,",
			"would it what?",
			"AUDIENCE: Would it still bounce back?",
			"COLTON OGDEN: Would it still bounce back?",
			"The answer is no, it wouldn't.",
			"This implementation doesn't take into consideration velocity",
			"that goes too fast.",
			"Mainly to-- for two reasons.",
			"One, it's non-trivial to implement, and two,",
			"it's an interesting thing to look at, and observe,",
			"and be conscious of as you go forward in implementing your own games.",
			"The current code, if it gets clipped inside of the brick,",
			"it will have no edges that are peaking outside of the brick",
			"and therefore, it will default to the final condition, which",
			"is the last else clause, which puts it below the brick.",
			"So it'll just go below the brick.",
			"It'll almost be as if it came in from the underside and bounced out.",
			"But like I alluded to earlier, if you want to implement something",
			"like this yourself, you would have to slice up frame X and frame X plus one",
			"into the size of the ball if the delta is so wide",
			"that it either goes inside of a brick or it goes outside of a brick,",
			"or if it skips a brick.",
			"And this sort of solves that problem.",
			"It solves both of those problems, but it's a little more",
			"than we can cover in this example.",
			"Any other questions?",
			"All right.",
			"Let's take five and get back to it.",
			"All right.",
			"And we're back.",
			"So the next step is we have basically a layout dynamically",
			"generated of interesting bricks now, but we haven't really",
			"implemented scoring any of these.",
			"We just have score gets score plus 10, which",
			"isn't really particularly interesting.",
			"So Breakout7 is what I call the tier update, which",
			"should allow us to hit blocks that are a higher tier than just base blue.",
			"And if they are of a higher color than base blue, they should go down a color.",
			"So the hierarchy was, if we look back, blue",
			"goes to green goes to red goes to purple goes to gold.",
			"And if something is a higher tier, it goes",
			"to the next color below it but at that same tier,",
			"unless it happens to be like blue and gray, in which case",
			"it'll go back to blue.",
			"So how might we implement scoring based on this system?",
			"What do we need?",
			"What pieces do we need?",
			"What pieces do we already have that we can use to make this happen?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: I'm sorry?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: So the answer was the brick index.",
			"So yes, the brick skin and color are the pieces.",
			"Yes.",
			"So those are fields of brick.",
			"So if we open up--",
			"I'm going to go up to Breakout7.",
			"And I'm going to start probably deferring a lot of this code",
			"to future reading.",
			"But in brick here, the tier and the color--",
			"sorry, not skin, but skin is for the paddle.",
			"But the brick has a tier and it has a color.",
			"And so we need to perform some arithmetic on that here.",
			"And that's essentially what lines 44 through 58 is.",
			"So basically-- oh, I apologize.",
			"That's not actually where the arithmetic is.",
			"44, that does compute, but this is the bit of code",
			"that computes how we can actually go backwards if we make a collision.",
			"So if we collide with a brick and it's of a higher tier than one",
			"and it's a higher color than blue, it should be brought back one step.",
			"But if it happens to be blue, in which case self.color gets one",
			"because blue is one, then it should just be removed from play",
			"just like we've done before.",
			"Only now, we're also taking in tier and color.",
			"So we're decrementing tier based on what index we're at",
			"and we're decrementing color.",
			"And then this actually gets used in our PlayState.",
			"",
			"If we go to line 81, which previously just",
			"had self.score gets self.score plus one, there's a little bit of math here.",
			"It's very simple though.",
			"Just brick.tier times 200.",
			"So make the tiers worth 100.",
			"Plus brick.color times 25.",
			"And so if tier is zero, if it's a base then we're",
			"just not going to get that 200 bonus.",
			"But the first tier, everything is going to be worth",
			"25 times whatever its color is.",
			"So one, two, three, four, five.",
			"And then add 200 plus the brick.color for when",
			"we get to the next set of bricks.",
			"And so the result of this is--",
			"",
			"I believe this is GUI Breakout7.",
			"",
			"And then if we hit a brick--",
			"since this one is blue, it should disappear.",
			"And we're playing a new sound as well.",
			"New, like, death sound just to make it clear.",
			"",
			"But notice they change colors.",
			"So that's all we're doing.",
			"We're just taking their tier or their color",
			"and just performing a simple decrement on it.",
			"Looping back.",
			"In the event that we go down a tier, we should loop back up",
			"to the highest color of the lower tier.",
			"So I'll let you look at the code for that",
			"if you want to sort of get a more low level understanding of it,",
			"but that's the sort of high level understanding.",
			"The next big concept that I'd like to introduce you guys to",
			"is a particle system.",
			"And so particle systems are fairly omnipresent in video games,",
			"I would say, because they make effects that",
			"or otherwise difficult to do with simple sprite",
			"editing achievable very easily and realistically.",
			"Just like fire, for example.",
			"Things that are very organic, and flowy, and have a lot going on",
			"are often better represented with particle systems",
			"than they are with simple sprite animation.",
			"So does anybody know how we might be able to--",
			"how a particle system might work underneath the hood?",
			"I think I alluded to it previously.",
			"Yes.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yeah.",
			"So what he said was in order to make fire,",
			"for example, just spawn a bunch of particles",
			"close to the center of wherever your fire is spawning and then outside of it",
			"spawn fewer.",
			"That is absolutely a way to get fire to work,",
			"and also taking into consideration the travel of your particles.",
			"For example, you might spawn a ton of fire particles really densely,",
			"but then maybe they have some logic that makes them go upwards.",
			"Maybe they have a negative delta Y and then some sort of acceleration",
			"so they've sort of trail off.",
			"And then maybe sort of how to get a more realistic fire",
			"look, they travel sort of upwards and then fade away.",
			"So the way fire works, sort of thinking of things",
			"in terms of particles like that, you can achieve a lot of effects.",
			"How might we implement, like, smoke, for example?",
			"Same system.",
			"",
			"So we could have maybe a timer in our particle effect,",
			"or even a transition because in particle systems,",
			"often you have the ability to transition colors between particles.",
			"Let's say you start off red, go to yellow,",
			"and then maybe your particle system transitions to gray or brown.",
			"And then over time, your particles are going up, they're dissipating.",
			"And they're also turning dark, they're turning brown,",
			"it sort of gives you the illusion of fire.",
			"And we won't be doing anything necessarily as",
			"complex as this in our code here, but in Breakout8, we",
			"will be using Love's sort of integrated particle system which is just",
			"love.graphics.newparticlesystem.",
			"And it takes in a texture because all particle systems need some sort",
			"of texture as their foundation.",
			"And then it needs the number of particles that it could maximally emit.",
			"And so each individual particle system can emit up",
			"to a certain instance of particles.",
			"And in the number, and speed, and whatnot of all",
			"those particles is ultimately the determining factor",
			"for how you can get an illusion.",
			"Back to last week's lecture, illusions, like, it's not fire, it's not smoke,",
			"it's just a bunch of particles responding",
			"with colors and acceleration and stuff.",
			"But there's a lot of functions that particle system gives you in Love2D,",
			"so I encourage you to look at that link just to explore some of them.",
			"Love2d.org/wiki/particlesystem.",
			"We'll be using a few of them.",
			"Here I'm going to just briefly show you.",
			"So each individual brick when it gets hit",
			"is going to need a particle system of its own.",
			"Because our goal is--",
			"I'll run the code for you so you can see it.",
			"So if you go to Breakout8 and then you run it,",
			"we have a little bit of particles you saw there at the very end.",
			"The blue you were probably able to see a little bit better.",
			"And then one last time.",
			"So it spawns a bunch of little particles.",
			"So can anyone tell me how they think the particles are",
			"behaving sort of in a nutshell?",
			"What the logic is for the particles?",
			"AUDIENCE: [INAUDIBLE] slightly random.",
			"COLTON OGDEN: Yeah.",
			"Slightly random.",
			"And if you look at it, you'll also notice that they tend to go downwards.",
			"",
			"So knowing that, we can probably just assume",
			"that they have an acceleration that tends towards positive Y.",
			"And that's essentially all we really need to do.",
			"We spawn a bunch of particles outwards and then just set them--",
			"they have all a lifetime.",
			"They last for a certain amount of time.",
			"And then they fade between two colors.",
			"In this case, we fade from red to transparent or whatever color it is.",
			"And then after the lifetimes elapsed, it has the overall effect",
			"of sort of this glimmering, gravity based effect,",
			"but it's really just a bunch of particles that are",
			"set to spawn in different directions.",
			"Apologize for that.",
			"So we'll take a look.",
			"It's going to be in our brick class here in Breakout8.",
			"So we're going to go to brick.",
			"",
			"We have a bunch of colors that we're storing here.",
			"So if you notice, the particle systems adopt the color of whatever brick",
			"they're hitting just so that it stays sort of congruent",
			"with what we're looking at.",
			"So we're just storing a bunch of colors here.",
			"And I wouldn't worry too much about this.",
			"These are just colors from the sprite palette",
			"that we used with our sprite art.",
			"There's specific colors that are only used in that sprite.",
			"And having a palette, generally speaking,",
			"allows your art to look a little bit more cohesive",
			"when you're doing sprite art as opposed to just picking colors willy nilly.",
			"If you say, oh, I'm going to only use 16 or 32 colors for this palette,",
			"you'll sort of have a more cohesive look and also",
			"a very retro look because often hardware was",
			"limited to a certain amount of colors back in the day for older systems.",
			"So it's nice to--",
			"as an aside-- and we'll look at it next week as well.",
			"Looking at when you're doing your own sprite art, try to use fewer colors",
			"and then that will give you-- it also makes it easier for you.",
			"You don't have to spend time choosing I want to have this shade of green.",
			"I wonder if it looks good.",
			"If you only have two shades of green or semi shades of green to choose from,",
			"that's all you've got.",
			"You have to make do with it what you can.",
			"So what we're doing here is we're storing five colors from our palette.",
			"We're going to use this.",
			"And then when we trigger our--",
			"so right here we're initializing a particle system.",
			"So psystem gets love.graphics.newparticlesystem.",
			"And then these are a few functions.",
			"So feel free to look in the wiki for how these functions actually behave.",
			"But lifetime acceleration and area spread",
			"just are sort of the properties that influence",
			"the way our particle systems behave.",
			"And so using whatever our current color is,",
			"we're going to set our psystem's colors using setcolors function.",
			"We're going to set it between two colors.",
			"Color with 55 times tier alpha and color with zero alpha.",
			"So the higher the tier, the brighter the particles,",
			"but they'll always fade to zero alpha, if that makes sense.",
			"And then we'll just emit 64.",
			"And this is all in the hit function.",
			"So all we've basically done is just add this particle system trigger in our hit",
			"function, and it has the result of the behavior that we saw earlier.",
			"So any questions on particle systems or how we use them?",
			"",
			"So level 9 is the progression update.",
			"So the purpose of this update is to allow us to go from level one",
			"to two to three to four and start get more interesting level",
			"generation that way.",
			"The gist of this is in our--",
			"so if you look at our StartState--",
			"",
			"so all we need to really do to store a level is just to store a number.",
			"And then where do we increment the number?",
			"Or when do we increment the number I should say?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Exactly.",
			"So we increment the level.",
			"We go to the next level when all of the bricks",
			"are in play have gotten there in play flag set to false.",
			"So we have no pricks that are in play effectively.",
			"So in our StartState--",
			"so let's go ahead and look at Breakout9.",
			"",
			"So StartState.",
			"",
			"We're passing in level gets one here.",
			"We're just going to start off.",
			"When we're going to StartState, we're just going to pass level equals one.",
			"And then henceforth, anytime we do any state changes from play to serve",
			"and to victory, as we'll see, victory being our new,",
			"oh, you cleared this level.",
			"Here's the next level.",
			"We're just going to pass the level between them.",
			"And then in PlayState, the important bit of code here is on line 204.",
			"So this is just a function called checkVictory,",
			"which is exactly as James said.",
			"",
			"We're going to iterate over the entire table and just say if it's in play,",
			"return false because we're not in victory",
			"if we have any bricks that are in play.",
			"But return true if we didn't meet that condition.",
			"And so this is just a simple way for us to check whether or not",
			"we are in a victory.",
			"And so on line 88 of the same file in our PlayState,",
			"we're just checking to say, hey, if self.checkVictory after we do any brick",
			"hit--",
			"because that's when we've just set a brick to in play is false--",
			"just check victory.",
			"And if so, play a new sound like a happy sound",
			"that we've done a victory, and then just pass everything",
			"into the new VictoryState that we have here.",
			"And the VictoryState is simply a sort of just a message state.",
			"So all it does is just renders everything as before,",
			"but it just says your current level complete.",
			"Self.level complete.",
			"And then press Enter to serve and it'll go back to the ServeState",
			"as soon as that happens.",
			"And then here is where the actual progression happens.",
			"When we go to the ServeState, we have our level but we want to add one to it.",
			"So all we need to do when we trigger a transition into our next state, just",
			"increment level by one here, and also create",
			"a new map because bricks needs to get restarted because we have a new level.",
			"Self.level plus one.",
			"And that'll have the effect of, oh, we've gone from level one to two",
			"to three to four et cetera when we go between PlayState to the VictoryState",
			"back to the ServeState.",
			"So any questions on how any of this works?",
			"Yes.",
			"AUDIENCE: Do you have to worry about garbage collection for any",
			"of the bricks at all?",
			"Or is that handled by the Love engine somehow?",
			"COLTON OGDEN: Garbage collection is handled by Love.",
			"Yes.",
			"Yeah.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yes.",
			"Because the question was, do you have to worry about garbage collection",
			"when we are sort of clearing away the bricks and adding new bricks?",
			"The self.bricks table, this table here, it's",
			"getting assigned to a brand new table from levelmap.createmap.",
			"When there are no references to an existing table,",
			"lua's garbage collector will trigger at whatever",
			"interval it's set to trigger and clear up all that for you dynamically.",
			"Just like the same way that Java works.",
			"Almost identical.",
			"Any other questions?",
			"All right.",
			"So we have progression.",
			"In the sake of speed, I won't demo.",
			"It also takes a while just because we have to clear an entire level then",
			"get to the next level.",
			"But that's how the behavior works.",
			"The next sort of iteration of this is high scores.",
			"And I will test to make sure whether or not this is actually working.",
			"I know I changed some stuff.",
			"Yeah.",
			"So high score.",
			"Let's debug for a second.",
			"So HighScoreState line 38 in Breakout10.",
			"",
			"So HighScoreState.",
			"",
			"And then the issue was [INAUDIBLE] to index field high scores.",
			"A nil value.",
			"OK.",
			"So that means that--",
			"OK.",
			"I think I might know the issue, but it's because I",
			"transitioned to a new user that doesn't have a saved file active on this.",
			"The way that will transition, therefore, into love.file system, which",
			"is Breakout10's main new thing that it introduces-- so writing files",
			"to your file system is done [INAUDIBLE] with love.filesystem.",
			"And there's a few things.",
			"So Love automatically gives you a directory, a save directory",
			"that's pretty much hard coded.",
			"There are a few exceptions as to how to not use that directory,",
			"but it assumes that you're always using that directory.",
			"And with very few exceptions will you always use that folder.",
			"It's like app data local on Windows, and application support,",
			"and the name of your application on Mac.",
			"But it's a subfolder that Love has read and write access to",
			"for files on your file system.",
			"You can check whether it exists with love.filesystem.exists at some path.",
			"You can write to that path with some data, that data being a string value.",
			"And then love.filesystem.lines is an iterator,",
			"which will allow you to look over any of the data that's",
			"in a file at a given location.",
			"Yes.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yeah.",
			"AUDIENCE: Does this work if you [INAUDIBLE]",
			"COLTON OGDEN: It should.",
			"We can pull that up now actually and see.",
			"Because I know on their Love2D--",
			"so file system.",
			"So the question was he ported his--",
			"when you port your Love app to the iPhone,",
			"will it have the same sort of behavior if you're--",
			"",
			"on an iPhone, will it have the same sort of save directory behavior?",
			"And it looks like it's not officially on here.",
			"I know that there is an iOS port for Love2D,",
			"or the ability to send it to Love2D.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: I have to imagine yes.",
			"It probably has some sort of--",
			"I'm not entirely familiar with how iOS handles sort of local storage,",
			"but I'm assuming that just in the way that it's been abstracted for desktops",
			"and for Android, it's also abstracted for iOS.",
			"Haven't tested it myself.",
			"I would experiment and see actually maybe with this code.",
			"See if you can maybe get it working with persistent high scores.",
			"I know that iOS does typically let you store a small amount of data per app",
			"in some location, a fixed location, but I'm not",
			"entirely sure what that is offhand.",
			"I can look into it more and come up with a--",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yeah.",
			"I mean, not from firsthand because I don't have an Android,",
			"but it has official Android support.",
			"So I'm guessing it does, but I haven't tested it.",
			"I have not tested it manually on Android to verify that.",
			"",
			"But yes.",
			"I believe-- because in the prior directory we were looking at when it",
			"showed--",
			"oh, it's actually up here.",
			"This path here.",
			"This data/user/0/love2d.android.",
			"file save.",
			"That looks to me like it's the official sort of path",
			"that data is stored on an Android device for application.",
			"So I haven't tested it myself.",
			"But if you have an Android and you're curious or maybe an emulator,",
			"give it a shot and see if it works.",
			"Oh, and it even says here, there are various save locations.",
			"And if they don't work, you can see what the actual location",
			"is with this function here.",
			"The love.filesystem.get save directory.",
			"That may work on iOS as well, so I'd be curious to hear about",
			"whether that actually works on that.",
			"",
			"Yeah.",
			"So that's the gist.",
			"Using the love.filesystem abstraction lets us read and write files.",
			"We can then just paste or we can just save whatever data",
			"we want anywhere within that directory.",
			"We can just create files in there and then use those to store our,",
			"you know, sort of game worlds, or character profiles, or whatnot.",
			"How would we maybe go about implementing sort of like a high score list?",
			"",
			"So I'll look.",
			"There's a picture here.",
			"So we have 10 scores.",
			"We'll assume that's fixed.",
			"Each of the scores has a name, and then each of the scores has an actual score.",
			"So all we really need to do is just store ultimately the names",
			"and then the scores.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: So we'll use an array.",
			"Their response was we'll use an array as sorted by that score.",
			"Yeah.",
			"Essentially that's exactly it.",
			"We're just going to keep a score table and each table",
			"is going to have a sub table.",
			"And each of those entries, one through ten,",
			"is going to have a name and a score.",
			"And then once we're done with our application,",
			"we'll just use love.filesystem.write.",
			"We'll have to convert all of those into a string",
			"because we can't just take a table and then spit that out into a file.",
			"We have to actually make it into some form that we can save",
			"and then reload back in somehow.",
			"What would be the most efficient way, do you think, or a way we can do this?",
			"",
			"Probably just a new line separated list.",
			"The way that I've done it in this application",
			"is just names, and then new line, score, new line, name, new line, score.",
			"10, so 20 rows.",
			"And that gets the job done.",
			"Assuming that you don't tamper with the file, then everything should work.",
			"And you can write additional code as well",
			"to say, oh, if there is a score that's all",
			"garbled, we don't have enough scores, then probably",
			"should render it accordingly.",
			"My code does something similar to this, but not entirely.",
			"",
			"The relevant code-- and I'm going to sort of just glaze over it.",
			"If we're looking at-- this is Breakout11, right?",
			"Yeah.",
			"Oh, no, this is Breakout10.",
			"So in Breakout10, we have to load all the high scores",
			"in main.lua, which is here.",
			"So set identity to Breakout or create a folder called Breakout",
			"that we can save and read files to and from.",
			"If it doesn't exist, then just create them.",
			"In this case, I'm just seeding CTO my initials.",
			"And then I times 1,000.",
			"So 10,000 down to 1,000.",
			"Just very simple data.",
			"Writing into a file called breakout.lst.",
			"It can be whatever you want.",
			"All we're doing is reading lines from the data, or from the file.",
			"And then this is if it doesn't exist.",
			"And then if it does exist, then we're going to iterate over it",
			"with love.filesystem.line, which will take a file",
			"and then just split it on new lines basically and give you",
			"an iterator over all those lines.",
			"So it can just say, OK, if it's a name, which",
			"means that if it's one or three or five or seven in the list,",
			"then set the name to--",
			"and we're using string.sub just in case they",
			"write some long name or some long name gets-- they can't do it",
			"through our game, but if it gets written to the file as some long name,",
			"it should get truncated to three characters",
			"so we can display it appropriately.",
			"And then otherwise if we're not on a name line,",
			"if we're on, like, an odd line or even line,",
			"we should consider that a score and just use to number.",
			"Because we're using string data and if we try to assign,",
			"do any sort of comparisons numerically on the string data,",
			"which we will have to do to compare high scores,",
			"it's not going to work because it's going to see that there's strings.",
			"So we use to number here.",
			"Just a simple Lua function.",
			"And then that's it.",
			"And then we just return scores.",
			"And then I'll sort out what's causing the issue,",
			"and then push that to the repo ASAP.",
			"But that has the effect of us being able to actually load all of our high scores",
			"and display them at the start of the game.",
			"It doesn't take care of being able to actually input our score.",
			"And so we can do this with Breakout11, which you can see if you run the repo.",
			"And you can test just to assign your initial score to some value like 10,000",
			"or 20,000, and then just lose on purpose and you",
			"get a sense of how it actually works.",
			"But essentially, it's just arcade style.",
			"You know, you had only three characters you could input your name.",
			"So does anybody have any idea as to how we are sort of storing this,",
			"or can pitch an idea?",
			"",
			"So we have three characters and we want to--",
			"ideally if we're, let's say I want to go to C on the first one.",
			"Let's say I pressed up twice so I get to C. How is it going from A to C?",
			"You could just say, you could just render",
			"I want to render the character A, the character A, the character A,",
			"but how is it going to know when you want to go to B, or C, or D.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: The pitch was, you could create",
			"a table with all of the characters and iterate through it.",
			"You absolutely could do that.",
			"It's a little bit bulky.",
			"That might be what--",
			"actually, that's probably not how arcade systems did it back in the day.",
			"Because the way that we're going to do it here in Breakout11 is I",
			"added a new state called EnterHighScoreState.",
			"And if you recall, CS50 teaches this.",
			"But all sort of characters at the end of the day are just numbers.",
			"ASCI.",
			"In this case, 65, if you recall, is capital A.",
			"So all we need to do is just draw out whatever that character",
			"cast to a string is, or character.",
			"And we do that simply down here in the draw function.",
			"If we do string.char, at char is three.",
			"All that has the effect of doing is just taking that number",
			"and then converting it to a character.",
			"So all we need to do then is what?",
			"When we want to go from A to B, B to C, C to D.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Exactly.",
			"But then what happens if we're at A and we want to go down?",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: We would.",
			"So if we're at A, then if we press downward and we want to go to Z,",
			"the logic is in here.",
			"",
			"But one we've incremented our code, if it's greater than 90, which is Z,",
			"then we should set it back to 65.",
			"We'll loop back to A.",
			"And same thing here.",
			"If we press down and we're at A, we've got to go back up to Z,",
			"so we just set it to 90.",
			"So simple loop back logic.",
			"And we just draw it, we highlight.",
			"And then once we've done that, the user presses Enter.",
			"We transition to the HighScoreState, actually,",
			"because this state should only trigger if they entered a new high score.",
			"Which means that we need to check in the VictoryState, or not the VictoryState,",
			"but rather in the GameOverState whether or not",
			"their score is higher than any of the stores in some sort of,",
			"quote unquote, global scores table.",
			"And then how do we think we're passing the scores back and forth now?",
			"",
			"Does anybody recall how we're keeping track of app state?",
			"",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yep.",
			"In the change function.",
			"So all we need to do is keep track of-- load",
			"our high scores at the beginning of the game,",
			"pass them all the way down the line.",
			"And then finally-- and we can also load them in our EnterHighScoreState,",
			"but we need to keep track of what our high scores are in the GameOverState",
			"so that we know, oh, I've got a high score.",
			"Let's instead of transitioning back to the StartState, let's transition",
			"to the EnterHighScoreState so the user can add their high score to the list.",
			"And then once they've entered their high score, which is here,",
			"we'll just write it to this file again.",
			"Compile a score string, which takes name and score of our scores.",
			"We take whatever score that we were at that's--",
			"we look through our scores table backwards",
			"and when we find a score that's lower than ours,",
			"we just keep track of that index until we get to one that's higher than ours.",
			"In which case the one plus one, that index plus one",
			"is what we should then overwrite.",
			"And so we shift all the other ones below accordingly.",
			"And we do that in this class if curious.",
			"And so I'm just going to breeze through the last couple.",
			"The paddle select update is just kind of a fluffy state",
			"that lets us add a element of sort of, like, user selection to our game.",
			"In our PaddleSelectState here, we transition immediately.",
			"Instead of going to the [INAUDIBLE] PlayState now,",
			"we're going to go from Start to Paddle Select when we hit Start Game.",
			"So we're going to go to--",
			"and then the Paddle Select class itself.",
			"",
			"CurrentPaddle gets one, and then all it essentially",
			"is is us drawing two arrows here.",
			"And so if we're at number one-- in this case, I think we're at number three--",
			"then both of these arrows will be completely opaque.",
			"But if we're on the left or the right edge, they should darken to say to us,",
			"oh, we can't move left or right anymore because we're",
			"at either index one or four or five, and there's only that many colors.",
			"And then render whatever that color variable",
			"is using the quads table that we had before of the different tables.",
			"And then just instructions.",
			"And then from there is where we'll end up transitioning to the ServeState",
			"rather than going to the ServeState from the StartState.",
			"And all the code in that is here.",
			"We have sound effects playing.",
			"And then making sure that we also play a different sound",
			"effect based upon whether they're at the left or the right edge.",
			"If they're on the left edge and they try to go left,",
			"it should play like a sound that sort of sounds a little rougher",
			"to let them know that they can't go left,",
			"and the opposite for the right edge.",
			"And then once that's all done, once they press Enter on whatever paddle",
			"they want, they're going to get the paddle,",
			"we're going to instantiate a paddle, pass that into the ServeState,",
			"and we're going to take currentPaddle from the state, which",
			"is whatever value they got by scrolling between all the different paddles.",
			"And then the last update, which is my favorite part of most every lecture",
			"I think is the music update.",
			"And all that really is is just music set play in main.lua,",
			"and then set looping to true, and then we have a game.",
			"And this is our Paddle Select.",
			"So notice the arrows are semi-opaque on the left and the right.",
			"It's kind of hard to hear, but when I press right now",
			"it's kind of like there's a bit of a rougher sound.",
			"We choose red.",
			"We go to level one and we transition to the ServeState",
			"from the PaddleSelectState, and then we just play the game as normal.",
			"And that's basically all there is to it.",
			"And there is a couple of features we didn't have time to really go over",
			"like making sure we recover HP if a certain amount of points",
			"have been elapsed, but I encourage you to look",
			"into that when you trigger a hit.",
			"There's some logic in the PlayState to say, oh,",
			"if they've gone over a current recovery threshold,",
			"let's add one heart to the player, you know, just keep them playing.",
			"Just to reward them for their high score.",
			"",
			"Next time we'll cover a few concepts.",
			"So basic shaders.",
			"Shaders are like little programs you can run in your graphics card",
			"and do fancy effects, but we won't go into too much detail.",
			"Anonymous functions.",
			"We've seen a lot of anonymous functions in Lua in the context of Love.",
			"They're just functions without a name, and you can just",
			"use them as function arguments and do all sorts of cool stuff with them.",
			"We'll use them for callbacks next week when we do things",
			"like tweening, which is taking some value",
			"and making it interpolate over time to some other thing.",
			"Because right now we've basically just been updating things based on velocity,",
			"but we haven't really done anything based on time.",
			"So we'll take a look at that in more detail",
			"next week with a library called timer, which is really fantastic.",
			"Lets you time things and then chain things together.",
			"We'll be covering the game Match Three if familiar.",
			"It's basically Candy Crush.",
			"We'll be using a different tile set, but it's the same idea.",
			"And we'll have to calculate how to actually find out",
			"whether we've gotten a match in the grid, our tile grid,",
			"and then shift the blocks accordingly and do all the other logic, add score.",
			"And then basically since it's so fundamental to Candy Crush and games",
			"of its nature, we will have to cover how to sort of generate",
			"these maps procedurally to have tiles that are laid out in a dynamic way,",
			"and also in a way that doesn't start off with any matches",
			"because then that wouldn't make any sense because the matches have",
			"to resolve.",
			"And then we'll take a little time if we have the time next week",
			"to talk about sprite art again and palettes.",
			"And maybe I'll show you guys how to sort of convert images from one",
			"palette to another in, like, a program that I use, Aseprite,",
			"but you can do this in any sort of large photo editing software.",
			"And then assignment two is a couple of extensions to Breakout.",
			"So if you noticed in the sheet there were a few little sprites here",
			"at the bottom--",
			"so get rid of the quad outlines.",
			"So these little things down here are, I'm assuming,",
			"they're meant to be power ups.",
			"They look like power ups.",
			"But the goal of the pset is to implement a power up.",
			"And a power up is going to be such that when you grab it,",
			"you'll get two additional balls, or however many you want actually,",
			"that will spawn in addition to your one and detect collisions on their own.",
			"So you'll have several and they'll score points for you.",
			"And, of course, only when the last ball comes below the surface of the screen",
			"should you trigger a Game Over.",
			"And then I want you to add-- and this will also",
			"be more detailed than the spec-- but I would",
			"like you to add growing and shrinking to the paddle.",
			"So currently, we have like four different sizes of paddle,",
			"but we're not using them.",
			"So it would be nice if when we gain enough points or we lose points, or not",
			"points, but lives rather, we increase or decrease the size of the paddle",
			"accordingly just to introduce another level of challenge",
			"and or lack of challenge.",
			"And then finally, one last part which is in the sprite sheet as well,",
			"there's a key block here and a key power up here.",
			"So sort of let the power up come, pick the power up with your paddle.",
			"And then only when you have that power up should you",
			"be able to break the block with a key.",
			"And you should take this into consideration",
			"when generating your levels as well.",
			"So you'll have to also get your hands dirty with the level maker.",
			"But all in all, that was Breakout.",
			"So I'll see you guys next time.",
			"Thank you.",
			""
		],
		"is_youtube": false
	},
	"video_005": {
		"section": "CS50G 2020",
		"subsection": "Match 3",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000400/HarvardXCS50G-V000400.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000400_DTH.mp4"
		],
		"video_duration": 6852,
		"speech_period": [
			1.984, 14.406, 0.78, 2.64, 5.13, 2.25, 2.76, 2.91, 6.232, 1.958, 2.04,
			3.04, 6.5, 2.19, 3.03, 1.62, 2.67, 2.94, 5.07, 2.13, 3.21, 1.779, 2.041,
			2.95, 6.43, 3.69, 1.98, 2.55, 3.539, 2.041, 2.58, 4.38, 1.134, 2.166,
			3.79, 2.16, 1.94, 4.23, 3.25, 1.62, 2.0, 4.6, 1.37, 2.79, 2.22, 4.56,
			3.56, 1.25, 2.54, 5.15, 1.42, 3.81, 1.95, 2.28, 3.84, 4.96, 2.78, 3.39,
			5.01, 4.95, 2.62, 3.86, 4.9, 2.75, 2.07, 2.94, 3.06, 2.88, 3.451, 2.99,
			2.999, 2.82, 1.41, 2.72, 2.98, 3.6, 1.43, 3.63, 3.21, 2.17, 3.405, 1.625,
			2.208, 2.712, 3.969, 1.041, 2.985, 2.125, 1.08, 3.66, 4.38, 5.69, 3.0,
			2.083, 3.537, 1.57, 3.25, 2.29, 1.666, 1.004, 1.833, 1.947, 3.48, 2.82,
			2.52, 1.965, 2.625, 0.93, 5.08, 3.29, 1.94, 4.27, 1.44, 0.874, 2.826,
			1.71, 2.66, 2.88, 3.24, 5.01, 4.23, 2.19, 4.39, 2.09, 4.297, 2.333, 3.78,
			2.67, 2.95, 3.02, 2.28, 3.82, 3.05, 1.17, 2.91, 4.83, 3.96, 2.958, 3.944,
			3.944, 7.395, 4.534, 0.625, 7.05, 1.41, 1.26, 0.45, 2.624, 2.702, 1.734,
			0.86, 4.99, 1.53, 2.98, 1.48, 1.5, 3.459, 1.041, 5.64, 4.752, 2.208,
			2.091, 1.749, 5.944, 2.666, 3.02, 2.29, 2.61, 3.15, 4.17, 2.46, 4.86,
			0.839, 4.391, 2.84, 2.186, 1.624, 3.75, 1.44, 0.69, 2.54, 1.37, 3.92,
			2.56, 2.76, 3.531, 1.749, 1.83, 3.685, 1.875, 3.804, 1.166, 5.041, 1.749,
			5.41, 2.81, 6.93, 1.98, 3.33, 2.88, 5.79, 4.209, 1.041, 3.752, 1.958,
			2.744, 2.166, 3.12, 4.68, 6.36, 3.379, 0.625, 3.872, 4.899, 0.875, 1.53,
			5.16, 2.475, 1.125, 3.912, 2.448, 3.84, 1.78, 5.2, 1.5, 1.0, 3.63, 3.78,
			1.05, 3.12, 4.559, 1.291, 3.96, 2.086, 2.624, 1.249, 2.711, 2.31, 1.14,
			3.81, 6.07, 1.75, 0.958, 1.532, 5.78, 3.23, 3.09, 3.39, 5.055, 1.375,
			5.627, 1.083, 2.82, 6.09, 2.807, 2.083, 1.8, 3.272, 1.708, 1.166, 5.584,
			3.9, 1.59, 2.91, 2.75, 2.619, 2.791, 3.81, 3.34, 6.02, 2.55, 1.38, 2.94,
			3.54, 4.47, 2.19, 1.89, 2.958, 2.772, 3.862, 1.958, 3.15, 3.2, 2.0, 4.615,
			1.375, 2.54, 2.625, 2.949, 2.416, 1.71, 8.0, 1.94, 3.75, 2.82, 4.46, 5.92,
			3.51, 2.83, 4.09, 3.01, 4.137, 1.833, 4.17, 0.51, 3.6, 3.37, 4.235, 2.125,
			2.46, 2.57, 2.37, 2.94, 3.84, 4.2, 2.23, 3.89, 4.05, 2.801, 2.999, 5.957,
			2.583, 2.89, 2.33, 3.96, 3.78, 3.23, 1.87, 1.65, 3.58, 2.42, 2.13, 4.07,
			2.52, 1.99, 4.59, 2.48, 4.39, 3.919, 5.459, 2.291, 3.331, 2.243, 2.166,
			2.01, 3.271, 5.4, 3.03, 3.374, 3.166, 4.75, 4.07, 4.38, 2.1, 3.39, 2.37,
			4.23, 3.16, 3.17, 1.98, 3.1, 4.46, 1.07, 4.24, 0.78, 3.06, 4.919, 2.791,
			3.6, 3.18, 4.02, 4.019, 3.041, 3.855, 1.625, 2.22, 2.19, 2.64, 2.31, 2.79,
			1.48, 4.145, 7.015, 3.31, 3.49, 6.986, 2.374, 1.955, 2.065, 4.68, 4.239,
			1.291, 1.916, 4.434, 3.23, 1.72, 5.044, 1.916, 3.48, 3.27, 6.24, 7.56,
			5.28, 6.27, 1.53, 3.45, 4.59, 2.55, 6.16, 1.93, 3.97, 4.8, 1.781, 1.249,
			3.93, 3.33, 3.06, 3.92, 2.38, 4.56, 4.98, 4.29, 2.85, 1.86, 3.69, 1.44,
			2.65, 7.01, 1.62, 4.77, 2.849, 1.916, 3.083, 2.772, 2.55, 3.09, 4.98,
			2.506, 1.874, 3.555, 1.215, 4.44, 2.16, 3.7, 5.46, 2.54, 4.59, 3.18, 3.52,
			2.39, 3.26, 1.27, 2.22, 1.515, 2.875, 1.124, 2.226, 2.967, 2.333, 1.36,
			3.42, 7.24, 3.47, 3.0, 2.38, 2.95, 1.5, 1.46, 2.09, 4.17, 3.18, 4.27,
			4.37, 1.71, 2.88, 4.17, 3.54, 1.71, 1.11, 3.27, 3.24, 2.61, 4.35, 4.71,
			1.5, 1.708, 5.887, 0.875, 1.583, 2.697, 3.041, 4.159, 2.83, 4.07, 5.55,
			0.9, 2.68, 4.24, 3.22, 2.926, 4.274, 4.25, 2.467, 1.083, 2.88, 3.12,
			3.022, 1.958, 3.81, 2.22, 2.679, 1.791, 7.05, 3.092, 1.708, 5.38, 1.04,
			0.791, 3.859, 3.17, 4.415, 3.125, 2.76, 4.58, 3.972, 2.458, 2.78, 3.79,
			3.15, 2.52, 3.96, 4.07, 3.37, 2.04, 3.87, 5.03, 2.32, 1.912, 1.708, 2.75,
			3.56, 2.13, 8.39, 11.056, 8.934, 1.89, 2.77, 5.59, 0.5, 1.59, 0.77, 1.38,
			2.01, 1.2, 1.146, 3.654, 5.14, 0.79, 2.208, 1.702, 2.43, 2.53, 3.594,
			2.816, 2.79, 1.92, 1.7, 3.77, 2.106, 1.374, 2.84, 2.424, 1.416, 3.24,
			2.74, 5.12, 2.18, 2.78, 2.428, 1.282, 2.49, 3.06, 3.21, 2.16, 2.6, 2.8,
			4.38, 3.6, 1.29, 1.68, 2.79, 3.0, 1.53, 2.97, 3.92, 3.21, 2.26, 3.39,
			1.62, 3.859, 1.541, 4.14, 3.3, 2.291, 2.749, 5.37, 2.446, 1.874, 2.306,
			3.124, 3.18, 1.94, 2.71, 2.81, 4.99, 1.83, 1.95, 4.05, 5.01, 2.93, 2.47,
			2.83, 1.91, 3.9, 3.61, 2.6, 4.14, 3.32, 3.25, 10.08, 1.17, 2.67, 4.41,
			3.24, 5.137, 1.583, 6.26, 3.28, 4.185, 7.342, 2.541, 1.791, 7.136, 2.025,
			3.51, 3.93, 1.29, 3.81, 5.32, 5.51, 2.28, 6.48, 5.912, 1.708, 3.45, 2.3,
			2.68, 2.583, 1.737, 4.12, 2.57, 3.809, 3.08, 3.67, 1.08, 0.791, 2.93,
			4.41, 4.51, 1.48, 1.49, 3.101, 1.458, 0.541, 2.37, 9.48, 7.611, 0.999,
			2.86, 4.31, 3.89, 1.437, 2.083, 2.041, 2.009, 2.14, 1.82, 5.52, 3.32,
			4.33, 1.8, 4.56, 2.345, 3.635, 5.06, 5.16, 5.23, 2.51, 2.0, 3.904, 1.416,
			2.37, 1.93, 6.02, 4.73, 2.08, 3.72, 2.97, 5.64, 3.789, 1.041, 2.79, 3.78,
			5.1, 3.89, 4.714, 2.166, 3.72, 4.59, 4.02, 3.21, 3.33, 3.697, 2.333, 4.74,
			2.52, 4.53, 5.79, 1.34, 2.23, 5.22, 4.8, 4.98, 4.61, 3.65, 1.75, 3.942,
			1.208, 1.37, 2.23, 5.685, 1.625, 1.208, 2.452, 6.69, 4.77, 4.86, 3.66,
			2.39, 3.42, 3.91, 2.97, 6.48, 1.69, 4.01, 0.93, 3.9, 3.35, 1.94, 3.89,
			2.41, 3.08, 5.76, 2.75, 3.94, 4.11, 6.93, 5.61, 2.96, 5.27, 3.8, 3.45,
			1.14, 2.01, 3.57, 3.4, 0.74, 4.267, 3.083, 1.791, 2.139, 2.94, 4.95, 5.86,
			1.06, 3.096, 1.124, 1.77, 3.3, 4.32, 1.81, 2.06, 2.35, 1.16, 3.66, 2.97,
			5.55, 2.64, 3.21, 2.76, 2.38, 2.78, 4.02, 2.82, 3.36, 3.69, 0.81, 7.52,
			1.19, 6.78, 3.489, 1.041, 3.18, 3.54, 1.5, 1.959, 2.374, 1.107, 2.03,
			1.41, 1.083, 5.577, 3.81, 1.92, 3.45, 3.75, 2.792, 3.166, 1.972, 3.5,
			2.67, 2.25, 1.8, 1.599, 1.041, 4.02, 4.8, 3.947, 2.083, 2.07, 3.99, 4.724,
			0.916, 2.34, 5.29, 4.79, 3.7, 8.81, 3.15, 2.88, 2.25, 1.35, 4.29, 3.09,
			4.78, 3.11, 0.75, 4.78, 2.87, 2.25, 5.28, 2.96, 1.25, 2.82, 2.48, 3.99,
			2.4, 3.36, 6.81, 2.82, 7.47, 3.9, 2.54, 2.05, 3.63, 4.66, 6.5, 8.25, 1.92,
			1.41, 1.77, 6.42, 1.92, 3.99, 3.45, 3.93, 4.83, 3.51, 3.01, 1.73, 3.35,
			1.81, 5.19, 2.32, 3.02, 3.069, 1.041, 3.48, 2.85, 3.21, 6.03, 5.5, 4.02,
			3.89, 2.97, 1.2, 5.55, 7.53, 2.25, 2.94, 3.63, 1.23, 3.07, 3.71, 5.4,
			2.91, 3.06, 3.009, 1.791, 2.416, 3.464, 3.93, 2.59, 2.57, 4.68, 4.86,
			4.06, 2.75, 3.45, 3.87, 2.78, 6.76, 3.03, 4.38, 3.075, 2.985, 3.44, 4.99,
			3.48, 3.31, 3.62, 2.19, 4.13, 9.13, 4.89, 6.48, 3.284, 1.666, 2.1, 5.19,
			4.71, 1.81, 4.22, 4.32, 1.86, 5.82, 1.81, 4.58, 3.9, 3.47, 3.28, 1.17,
			3.09, 1.47, 1.92, 5.04, 1.38, 3.92, 1.76, 2.855, 1.875, 4.71, 4.29, 6.11,
			6.46, 2.16, 5.88, 6.87, 2.08, 0.5, 3.423, 4.89, 3.437, 2.15, 3.79, 2.37,
			2.76, 9.27, 3.75, 6.64, 7.43, 4.0, 11.93, 3.972, 0.708, 4.38, 2.97, 3.39,
			5.297, 2.583, 4.19, 1.25, 2.721, 1.749, 6.33, 5.97, 2.04, 4.2, 3.9, 1.53,
			6.18, 3.0, 3.542, 2.458, 5.97, 3.524, 0.916, 0.76, 0.69, 0.53, 2.041,
			3.989, 3.399, 1.791, 3.03, 2.91, 2.074, 1.916, 3.48, 5.25, 3.58, 4.4,
			3.75, 3.66, 2.06, 4.87, 1.35, 4.5, 5.16, 3.63, 2.44, 6.13, 3.07, 2.01,
			2.64, 3.99, 4.11, 5.82, 0.78, 2.37, 1.567, 2.333, 4.47, 3.86, 5.65, 2.91,
			3.12, 3.81, 2.31, 2.01, 3.33, 4.62, 3.51, 4.41, 3.48, 2.846, 1.124, 2.63,
			5.58, 3.57, 3.51, 5.28, 4.095, 1.485, 5.22, 3.63, 1.87, 1.31, 3.957,
			1.833, 5.19, 2.85, 2.88, 3.12, 3.362, 1.708, 1.458, 5.202, 2.1, 2.69,
			4.82, 3.05, 4.96, 2.66, 2.19, 3.166, 3.311, 2.583, 2.36, 2.33, 2.75, 1.32,
			1.82, 1.094, 1.166, 1.77, 3.99, 2.52, 3.87, 5.13, 2.61, 3.78, 2.64, 3.577,
			2.333, 2.77, 3.14, 2.3, 1.0, 3.54, 6.96, 7.89, 1.65, 3.54, 6.48, 10.03,
			2.14, 6.2, 1.65, 10.98, 4.95, 3.36, 3.75, 4.98, 7.27, 6.35, 2.4, 4.2,
			2.55, 4.545, 6.285, 4.629, 2.916, 2.565, 4.91, 4.11, 4.59, 1.402, 0.833,
			2.799, 2.916, 4.59, 2.61, 1.8, 3.96, 3.18, 8.01, 2.75, 4.12, 2.5, 3.4,
			3.88, 1.23, 4.92, 2.55, 2.34, 1.8, 4.77, 5.91, 4.5, 3.47, 4.99, 4.08, 8.1,
			3.84, 4.17, 3.33, 3.33, 1.95, 3.18, 3.39, 2.28, 3.75, 1.92, 4.83, 2.56,
			2.96, 6.21, 3.81, 5.28, 1.44, 5.224, 1.416, 1.61, 7.37, 3.79, 3.9, 2.28,
			2.82, 6.17, 2.71, 2.31, 2.82, 2.73, 2.94, 3.39, 3.3, 4.53, 4.86, 6.045,
			1.875, 3.63, 2.28, 3.279, 1.791, 4.06, 3.77, 5.1, 1.14, 3.42, 2.35, 2.85,
			2.54, 0.74, 2.5, 2.117, 1.333, 2.04, 3.44, 0.5, 3.33, 1.55, 4.12, 2.81,
			3.749, 1.291, 2.01, 1.77, 5.43, 4.74, 2.85, 2.958, 3.952, 2.49, 2.91,
			1.92, 3.9, 2.61, 3.047, 1.333, 4.36, 3.53, 0.792, 2.208, 1.2, 2.46, 1.166,
			3.183, 1.291, 4.02, 3.57, 2.52, 6.609, 0.5, 4.29, 2.221, 3.21, 3.056,
			2.374, 3.84, 1.57, 1.88, 2.28, 1.749, 4.471, 3.38, 4.32, 2.949, 4.281,
			2.79, 3.219, 2.0, 3.391, 4.109, 1.361, 3.349, 2.79, 2.311, 4.677, 1.833,
			3.009, 1.458, 2.073, 3.33, 5.19, 2.34, 3.01, 1.375, 2.175, 1.36, 2.7,
			1.32, 1.157, 2.083, 2.55, 5.13, 3.192, 1.458, 1.75, 3.47, 3.43, 1.5, 5.93,
			7.03, 3.41, 2.19, 1.89, 2.46, 1.09, 2.8, 4.6, 6.31, 3.12, 4.43, 3.63,
			1.26, 1.746, 5.274, 3.185, 2.875, 5.91, 1.53, 5.934, 2.685, 0.791, 2.23,
			1.65, 7.14, 3.85, 2.03, 1.68, 1.55, 3.82, 2.56, 4.66, 3.819, 3.291, 5.19,
			5.9, 4.6, 3.92, 2.63, 2.42, 2.627, 2.083, 3.36, 3.87, 2.1, 2.73, 4.107,
			2.583, 3.0, 0.98, 3.67, 1.59, 6.13, 7.19, 3.54, 1.84, 4.37, 4.299, 1.791,
			4.53, 4.41, 6.43, 1.972, 5.478, 3.59, 1.36, 5.66, 2.58, 5.8, 3.863, 1.833,
			2.484, 1.142, 1.708, 1.5, 2.37, 1.333, 1.007, 1.99, 3.26, 3.0, 0.499,
			4.031, 3.78, 3.082, 2.708, 6.07, 2.18, 1.77, 4.26, 2.4, 1.59, 3.18, 2.49,
			3.3, 4.254, 2.166, 2.02, 2.375, 3.195, 2.4, 2.31, 7.92, 3.36, 5.13, 2.49,
			8.85, 1.95, 2.36, 5.92, 3.24, 3.37, 5.706, 2.624, 2.77, 3.08, 3.37, 4.76,
			3.02, 1.83, 2.89, 1.14, 2.29, 3.95, 2.32, 4.877, 1.083, 2.13, 3.3, 3.51,
			4.5, 4.56, 2.41, 2.87, 1.86, 7.44, 2.13, 6.33, 6.56, 1.75, 3.19, 1.712,
			2.208, 5.08, 1.67, 4.51, 6.53, 5.31, 1.244, 0.916, 3.269, 2.791, 2.37,
			4.59, 2.737, 2.583, 3.72, 4.56, 6.48, 0.76, 1.458, 2.522, 3.84, 1.98,
			3.379, 2.291, 2.3, 2.23, 4.11, 3.9, 1.8, 2.97, 2.882, 5.456, 3.472, 2.976,
			2.976, 4.464, 2.748, 2.708, 2.976, 2.542, 2.79, 4.08, 5.55, 2.66, 1.82,
			2.984, 2.916, 2.28, 2.82, 5.37, 5.97, 2.16, 3.962, 2.458, 5.55, 1.93, 5.1,
			0.8, 2.7, 0.65, 1.6, 1.62, 4.86, 1.41, 2.97, 6.07, 4.21, 2.17, 0.701,
			0.499, 2.07, 3.9, 3.09, 1.095, 4.585, 3.23, 2.37, 3.03, 3.57, 3.3, 2.25,
			1.583, 4.387, 1.264, 1.916, 1.374, 2.456, 4.78, 5.92, 3.08, 1.59, 3.54,
			2.01, 3.12, 4.02, 4.502, 1.708, 2.4, 1.835, 2.125, 2.833, 2.847, 3.98,
			3.82, 1.46, 2.43, 2.17, 1.34, 3.21, 2.37, 3.852, 2.458, 1.94, 3.36, 4.56,
			2.19, 1.665, 1.125, 5.61, 1.65, 3.0, 0.6, 4.29, 4.22, 3.1, 5.19, 3.37,
			1.73, 2.55, 3.3, 3.284, 3.166, 2.85, 2.49, 2.08, 3.464, 1.916, 3.17, 4.08,
			2.85, 5.61, 2.37, 3.93, 2.7, 2.7, 5.01, 5.16, 2.01, 3.57, 4.65, 2.08,
			0.89, 2.833, 1.797, 4.22, 1.92, 4.95, 3.72, 2.31, 3.36, 3.6, 2.382, 2.208,
			5.7, 1.09, 0.5, 5.37, 5.82, 3.34, 2.157, 1.583, 4.17, 2.22, 6.18, 5.31,
			6.21, 1.009, 0.791, 1.28, 3.94, 1.35, 2.4, 2.64, 2.07, 5.07, 2.01, 2.83,
			3.26, 2.291, 2.989, 4.5, 1.5, 3.18, 4.09, 4.67, 0.72, 5.1, 3.63, 2.55,
			5.534, 2.416, 3.48, 2.55, 3.57, 1.52, 3.31, 1.71, 4.11, 4.59, 3.08, 5.32,
			3.867, 1.083, 3.45, 2.85, 2.01, 5.62, 1.7, 3.1, 2.825, 4.755, 3.23, 1.39,
			3.12, 2.13, 2.4, 4.87, 2.48, 5.45, 2.38, 2.76, 3.25, 1.74, 2.315, 4.465,
			2.342, 0.958, 0.75, 1.53, 2.58, 3.216, 6.514, 7.44, 5.051, 3.439, 3.51,
			1.13, 2.82, 5.736, 1.124, 2.249, 3.091, 4.0, 4.76, 4.05, 2.13, 1.56, 4.68,
			1.59, 2.112, 1.958, 3.46, 3.36, 3.6, 2.156, 3.124, 1.98, 3.99, 4.63, 6.74,
			2.64, 3.94, 3.56, 2.19, 4.072, 2.708, 2.269, 0.791, 3.128, 1.324, 0.708,
			1.17, 1.05, 3.57, 1.26, 3.212, 1.708, 2.85, 2.7, 2.61, 2.13, 3.63, 2.814,
			2.766, 1.185, 4.284, 4.73, 4.35, 0.791, 1.85, 6.13, 4.12, 3.44, 3.03,
			2.25, 4.996, 1.874, 2.11, 2.125, 2.135, 1.25, 4.65, 3.0, 3.63, 1.42, 1.64,
			2.19, 5.43, 3.684, 2.166, 1.59, 0.78, 2.21, 2.95, 2.55, 3.45, 3.21, 5.1,
			3.9, 2.64, 4.14, 1.77, 3.18, 2.82, 3.45, 2.91, 0.94, 4.17, 2.39, 3.93,
			1.68, 1.77, 2.475, 2.875, 1.125, 1.365, 1.07, 4.08, 5.52, 4.27, 3.77,
			5.17, 2.6, 3.27, 2.46, 3.93, 5.21, 1.06, 5.64, 3.75, 1.86, 2.2, 4.545,
			1.625, 2.0, 1.832, 2.749, 2.383, 0.666, 1.02, 3.48, 6.07, 2.9, 1.77, 4.26,
			3.33, 1.05, 6.042, 1.958, 1.08, 0.5, 2.84, 6.66, 5.97, 2.727, 1.083, 2.4,
			3.81, 4.83, 2.43, 4.92, 4.14, 2.7, 3.9, 1.53, 3.192, 2.458, 2.36, 3.68,
			1.86, 6.54, 2.79, 3.99, 7.11, 1.28, 3.1, 4.35, 7.9, 5.775, 2.645, 3.66,
			5.31, 4.62, 4.8, 2.38, 2.926, 2.374, 1.2, 3.041, 1.519, 3.83, 1.5, 2.291,
			5.009, 4.74, 3.12, 0.499, 3.371, 2.4, 3.48, 4.56, 3.22, 1.55, 4.52, 3.558,
			4.84, 3.872, 2.129, 1.041, 3.3, 3.78, 4.53, 4.059, 1.791, 4.71, 1.77,
			2.05, 5.75, 3.66, 3.542, 1.708, 1.583, 4.087, 2.28, 5.317, 1.583, 2.97,
			3.21, 2.67, 2.67, 3.9, 3.57, 2.64, 2.79, 4.44, 3.06, 3.41, 2.53, 1.5,
			5.37, 3.644, 3.166, 3.374, 0.916, 2.52, 3.99, 5.37, 5.4, 4.1, 3.52, 1.38,
			3.33, 2.7, 2.76, 3.33, 2.04, 1.29, 2.799, 1.791, 3.912, 2.568, 2.01, 3.0,
			3.3, 6.03, 4.59, 4.93, 2.36, 1.77, 3.78, 6.3, 3.67, 2.454, 1.916, 1.23,
			2.53, 1.25, 1.65, 2.61, 2.46, 0.84, 2.92, 1.858, 6.232, 1.75, 2.692,
			1.958, 2.8, 4.17, 6.545, 2.399, 2.416, 2.291, 8.029, 3.36, 3.54, 4.65,
			4.92, 3.75, 2.295, 1.875, 3.68, 3.1, 6.72, 1.47, 3.6, 2.516, 2.374, 3.51,
			2.49, 4.535, 2.625, 1.6, 3.27, 2.609, 2.791, 0.51, 2.55, 2.012, 0.958,
			2.172, 2.458, 3.046, 1.624, 2.85, 4.98, 2.1, 4.23, 3.78, 1.59, 1.62, 2.61,
			2.76, 5.37, 4.47, 1.29, 2.67, 2.02, 4.85, 2.61, 1.997, 2.833, 2.28, 4.8,
			3.56, 3.659, 1.541, 1.833, 2.547, 2.68, 2.63, 4.41, 4.44, 3.99, 2.41,
			4.167, 1.833, 4.16, 1.69, 3.019, 2.041, 4.454, 2.416, 3.03, 2.7, 6.76,
			2.15, 3.45, 5.26, 5.12, 3.21, 4.08, 2.39, 3.01, 3.66, 1.96, 4.97, 2.55,
			2.85, 3.96, 1.39, 2.66, 2.97, 2.745, 2.655, 4.65, 3.39, 4.44, 2.91, 2.13,
			5.22, 2.79, 4.83, 3.0, 1.65, 5.82, 3.05, 2.32, 1.59, 3.06, 2.49, 3.84,
			3.75, 2.61, 3.09, 4.045, 3.125, 0.66, 5.37, 3.544, 0.666, 0.94, 2.23,
			3.15, 3.06, 6.63, 2.43, 3.39, 4.492, 1.958, 2.88, 2.7, 4.81, 5.69, 3.9,
			5.22, 3.45, 3.68, 2.92, 2.73, 3.24, 3.39, 2.34, 2.4, 3.72, 3.244, 2.291,
			4.905, 2.67, 5.43, 3.03, 2.01, 3.266, 2.624, 1.14, 1.28, 2.76, 2.197,
			3.083, 1.971, 1.749, 3.72, 2.92, 3.02, 2.447, 0.833, 4.85, 3.11, 4.0,
			3.21, 2.52, 0.9, 2.75, 0.821
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"SPEAKER 1: Hello.",
			"Welcome to lecture three of GD50.",
			"Today, we're going be talking about Match 3, as shown by the little cubes",
			"here on the slide.",
			"Match 3 originated a little earlier than 2001,",
			"but the first big game that came out that was",
			"a sort of genre staple of Match 3 was Bejeweled, shown here on the screen.",
			"This is a more modern incarnation of Bejeweled,",
			"but it came out originally in 2001.",
			"It was actually a web browser game, and the formula is very simple.",
			"The premise is you have a grid of different colored or shaped items,",
			"usually pretty small, like eight by eight, or so.",
			"And your goal is just to simply, like the name says, match three or more",
			"of them in a row.",
			"If you do, you get a certain number of points.",
			"Matching usually more than three gives you more points, or a bonus.",
			"And whenever you match three, the blocks will disappear from the grid,",
			"and they'll be replaced by more blocks.",
			"And the ones that you made holes for, the blocks above them",
			"will come down via gravity.",
			"This is a more modern incarnation of the formula.",
			"This is Candy Crush, which I think most people know.",
			"It was a very big hit on mobile devices, and otherwise around 2013, 2012,",
			"and that's probably the most recent big Match 3 style game that's come out,",
			"but there are a lot of other takes on it--",
			"different versions that try to add new features, and stuff.",
			"This is the game that we'll be putting together today, and I'll show you how,",
			"and we'll be covering a few other things as well.",
			"So the topics today, we'll be covering, first",
			"of all, a fundamental concept in dynamic languages, a lot of dynamic languages,",
			"and also Lua.",
			"It's called anonymous functions, which are functions",
			"that are first class, meaning that they operate as data types,",
			"and so we can do some fancy stuff with those.",
			"Tweening, which means just taking one thing,",
			"and interpolating its value between two values from 1,",
			"to a destination value over time, which is a very important thing in games.",
			"You can do things like move objects.",
			"We can also tween their opacity.",
			"Just sort of asynchronous behavior, and asynchronous variable manipulation.",
			"Timers, very important.",
			"We can time something to happen at certain intervals,",
			"or after a certain length of time has passed",
			"to get us past the idea of storing different timed variables,",
			"or different counters, and break away, and keep timer objects that",
			"will take care of this for us.",
			"We'll see how we do that with a specific library.",
			"And then we'll get to the actual details of Match 3, and how to solve matches,",
			"and how to account for that.",
			"Fill in the grid, account for when we actually solve a match,",
			"and repopulate it once we've done so.",
			"We'll talk about how to do this procedurally.",
			"It's very simple compared to, I think, Breakout's more procedural layout",
			"system, but it's still randomisation, and we'll talk about that.",
			"And then last, if we have time, we'll talk about sprite art,",
			"and palettes, which is a big fundamental thing when you're doing 2D game",
			"development, and something that this, and Breakout's sprite sheet",
			"took advantage of was the idea of using, on purpose, a restricted set of colors,",
			"a palette for creating your 2D art, and there",
			"are a lot of really cool, and impressive things we can do with that.",
			"But first, I'd like to actually show what we'll be running today in class.",
			"So I'm going to come here into my directory.",
			"Make sure I'm in the right place, which I am.",
			"So this is part of the distribution code, which is online.",
			"So there's a Match 3 directory.",
			"And would anybody like to come demo it in class?",
			"",
			"All right, [? Tony. ?] Come on up.",
			"All right, so whenever you're ready, go ahead, and just hit Return here.",
			"",
			"[GAME MUSIC PLAYING]",
			"All right, and so this is my implementation of Match 3.",
			"It uses a different set of tiles.",
			"We have things that are moving over time.",
			"It's arrow key based.",
			"",
			"So if you press Enter on any tile, you can flip it with another tile.",
			"It doesn't have to be a match, in this case.",
			"So you can-- yeah.",
			"Yeah, you kind of got an unlucky board.",
			"There, at the very bottom, I see there's a few that--",
			"some brown ones you can match together.",
			"So once you match them together, the tiles come down to repopulate.",
			"You get new tiles up top.",
			"",
			"And so notice, we have a timer on the left as well.",
			"It's something that's counting down.",
			"We'll see how this is actually done with the library we'll be using, as opposed",
			"to managing a counter variable keeping track of it over time.",
			"",
			"A lot of games will actually implement it so you have to-- you can only,",
			"and this will be part of the assignment, actually,",
			"where you can only move a tile if it creates a match.",
			"In this case, there's a--",
			"and we can see the timer counting down, and then once you-- yeah,",
			"if you don't get past the goal, there's a game over.",
			"But thanks, [? Tony. ?] I appreciate it.",
			"AUDIENCE: No problem.",
			"SPEAKER 1: So that's the game in a nutshell.",
			"And another thing I want to point out to is",
			"the transition, the white transitions, and then the level text.",
			"Those are all done with timers that we'll be using,",
			"and tweens, which we'll be covering in class here",
			"as some of our early examples.",
			"But there's a lot of stuff that we haven't touched on, but also",
			"a lot that we have.",
			"It uses sprites, and a sprite sheet, and we've done that thing before.",
			"We chop up a sprite sheet, and then take out the whatever individual quads",
			"you need, and draw them to the screen.",
			"Here's what our goal is, which is we have a title screen with Match 3,",
			"start, and quit game in this case.",
			"A little bit simpler.",
			"No high scores this time just because we've already covered that,",
			"but we also have a level screen.",
			"It tells us what level we're on before we can actually play,",
			"and there will be a transition box with text in it.",
			"It'll come down, stop, and then come down again.",
			"So almost like chain behavior, which we'll see how we implement that too.",
			"And then lastly, on the bottom there is our main game screen,",
			"where we have a level, a score, and then a goal.",
			"If you get the goal amount of points before the timer runs out,",
			"then you go to level 2, and level 3, and level 4,",
			"and the score increases by a multiplied factor each time.",
			"So the first thing I'd like to start talking about today",
			"is how we actually get timer behavior using something a little bit more",
			"than just keeping track of some variable that we set to 0,",
			"and then adding dt to it every update.",
			"There's a better way to do that, but first, why don't we",
			"go ahead, and look at timer0.",
			"And so what I'm going to do is go into the timer0 directory.",
			"I'm going run it, and we can see here, in the middle of the screen,",
			"just a very simple--",
			"just a label that just says timer, and then x seconds,",
			"where obviously the x is incrementing over time every second.",
			"So a crude way, what would be an easy way to implement this?",
			"",
			"AUDIENCE: Do you like [INAUDIBLE] random in Flappy Bird [INAUDIBLE] randomizer",
			"[INAUDIBLE] if you just keep track of your delta prime",
			"and add it to some variable outside [INAUDIBLE] you do something else?",
			"You could even just display the variable [INAUDIBLE]..",
			"SPEAKER 1: Yes.",
			"So the response was keep some variable that you modify with dt in update,",
			"or display the variable.",
			"Yeah, that's definitely a way.",
			"Did you have--",
			"AUDIENCE: Yeah, I was just going to say, keep a float variable,",
			"and constantly add a dt to it, and display it,",
			"but display the truncated version.",
			"SPEAKER 1: Yeah.",
			"So keep a float variable, but just truncate the delta time off of it.",
			"You could do that, definitely.",
			"We'll take a look here as to actually how I did do it.",
			"It's very similar to that.",
			"This is the wrong directory, though.",
			"So it's in timer0 in main.",
			"So we do have a variable.",
			"So the current second here, which we are going to keep track of 0, 1, 2.",
			"Lua doesn't really have the notion of truncate a float",
			"because when you take a number that's floating point,",
			"and you make it into a string, you actually",
			"have to do string substitution on it where",
			"you use a function called g sub to take off the last part manually",
			"because it doesn't really differentiate between ints and floats.",
			"It just has a number data type.",
			"But we can do this by just keeping track of",
			"whether or not we've passed a certain length of time",
			"because we know dt is given to us in seconds.",
			"We can just add to our variable, and then every time we've",
			"gone over 1, because it gives us--",
			"it gives you usually like .013, whatever 1/60 or approximately 1/60 of a second",
			"is.",
			"Once our timer-- we're going to keep a timer variable-- equals 1,",
			"we'll just increment current second by 1,",
			"and then we'll set that timer back to 0, and then",
			"we'll just repeat over, and over again.",
			"We'll actually use modulus so in case we go slightly over 1 second,",
			"we can account for that.",
			"We do that here.",
			"So second timer gets second timer plus delta time,",
			"and then if it's greater than 1.",
			"So if a full second has elapsed, just increment current second,",
			"and then modulo a second timer by 1.",
			"And Lua is a little different in that most languages only let",
			"you modulo something if it's an integer, but since there is no differentiation,",
			"you can actually modulo floats, and you'll",
			"get the floating point value leftover.",
			"And so that's the basic way of actually doing that,",
			"but there's a couple of things wrong with it.",
			"So does anybody want to suggest what is potentially bad or unscalable",
			"about this kind of approach?",
			"",
			"Well, I'll show you timer1 so we can maybe",
			"get a sense of how this could kind of get out of hand pretty quickly.",
			"So let's say-- first, I'll run timer1.",
			"So let's go into timer1 here, and notice now we have five labels.",
			"They're running at different intervals.",
			"The first timer, it's incrementing every 1 second,",
			"the second timer is incrementing every 4 seconds,",
			"the third one is incrementing every 4 seconds, and then so on, 3, and then 2.",
			"So if we wanted to do the same approach that we just did,",
			"this is what we would do.",
			"We have five variables, five timers.",
			"Because we want to keep track of whether or not",
			"something's gone over more than just one second,",
			"it's not super easy to just put this all in a table,",
			"and iterate over it, and use your iteration logic to do that.",
			"We actually, because they're in some sort of random, who knows what order,",
			"timer2 takes 2 seconds, OK, timer3 takes 4 seconds, timer4 takes 3, and then 2,",
			"you have to unmanageably keep all of this in separate variables.",
			"[? Yes, Tony ?]",
			"AUDIENCE: Couldn't you just use one second timer, or even one variable,",
			"and then just in the display [INAUDIBLE]",
			"SPEAKER 1: You could.",
			"Yeah, in this case, you could.",
			"Again, Lua's display, it's a little bit funky when you--",
			"you have to do g sub, and some weird string stuff,",
			"but yes, you could do that.",
			"AUDIENCE: Couldn't you just do modulo 1, and then take that value as a string?",
			"Is that the equivalent of truncating?",
			"SPEAKER 1: Modulo 1 would still give you the floating point value",
			"because there's only one number type.",
			"So if we modulo 1.00157 by 1, we'd get 0.00157.",
			"AUDIENCE: Oh.",
			"OK.",
			"If you subtracted from that value, from I don't know.",
			"So it's a value minus the value of modulo 1, I guess.",
			"SPEAKER 1: So yeah.",
			"It was proposed that we've used modulo, and we could.",
			"In short, we could, but what if we're not just",
			"printing a value to the screen.",
			"What if we have 10 different things, like 10 different creatures that",
			"are all doing different things over time,",
			"and we don't necessarily want to have to keep a timer for each,",
			"and every one of those things.",
			"In a simple example like this, yeah, there's probably a--",
			"on purpose, it's also a little bit convoluted just",
			"to illustrate the problem.",
			"But yes, there are shortcuts for this, but the fundamental problem",
			"is how can we get rid of having five different timers for something?",
			"And by the way, I'll go to the next slide.",
			"Timer0, the simple way.",
			"Timer1, the ugly way.",
			"Timer2 is the clean way that I found using this ecosystem.",
			"There's a wonderful library, and you could implement this yourself.",
			"The fundamental idea is have a global timer",
			"object that then manages all of these different things going",
			"on using the power of what I alluded to earlier, anonymous functions,",
			"and I'll show you how that works.",
			"So in main.lua of timer2, we have a set of intervals.",
			"We have a set of counters.",
			"",
			"And then what we're doing here is we're just saying for i gets 1 to 5,",
			"we're calling a function call timer.every.",
			"So if you're familiar with JavaScript programming,",
			"there's a set interval function which lets",
			"you do something every length of time.",
			"So first of all, timer is just a library.",
			"We've just required it here.",
			"It's part of the knife ecosystem, and then",
			"here, we have a couple of functions, timer.every, and timer.after",
			"that we'll use.",
			"Well, basically, what it does is you give it",
			"a length of time-- timer.every seconds.",
			"It's in seconds, and you can give it fractional seconds.",
			"You're passing in just a function here, just an anonymous function.",
			"It doesn't have a name, but because Lua, and a lot of dynamic languages",
			"treat functions as first class citizens, as it",
			"called, because they are data types, you can just pass them into functions.",
			"This allows us to do behavior like this that would otherwise",
			"be a little bit tricky to do.",
			"We can just say after this block of time,",
			"assuming we've built some structure that is probably just storing",
			"a table with a bunch of things that have a length of time in them,",
			"just call this block of code later.",
			"It's called a callback function.",
			"We're just going to call it back, and then we're just going to do this.",
			"We're going to say counters i gets counters i plus 1.",
			"So we have all of these intervals, and all of these counters.",
			"So it will just, basically, manage that for us,",
			"and now we don't have five variables.",
			"You do have to set whatever you want those to be.",
			"That's your that's your primitive at this point.",
			"You just need the lengths of time, depending on your problem.",
			"In this case, that's all we need.",
			"You might need more than that, depending on what you want to do with timer.",
			"But in this case, we just want to increment in value over time.",
			"So keep counters, and then just keep track of the intervals,",
			"and then our code's gone from I don't know how many lines.",
			"It was a lot larger--",
			"I think was 96 lines, down to 98 lines, down to 70,",
			"and this is incredibly scalable.",
			"If we wanted to add another one that's 8 for example,",
			"we just need to add 8, and then that.",
			"I guess I'd have to do this as well.",
			"I gets 5 to 6, and then you want to-- the computer that requires me",
			"to off my user so I can make changes.",
			"We'll just real quickly see if I didn't mess up.",
			"",
			"And so yeah, basically we're deferring everything to timer now.",
			"We get the exact same behavior, but a much smaller length of code.",
			"And the nice thing is it's very declarative.",
			"We can just say OK, every something seconds, I want this chunk of behavior",
			"to happen.",
			"I don't have to see OK, I've got timers up here, I've got counters here.",
			"OK, down in my draw function, OK, I've got to draw all these.",
			"It's iterative, and it's declarative, and that's the ultimate goal.",
			"And here, at the very bottom, it did actually work.",
			"Now it's working every eight seconds, which is nice.",
			"One, two, there we go.",
			"Super easy to extend.",
			"We're going to be using it a lot in this problem set,",
			"and also in future lectures just because it's a lot easier than keeping",
			"track of a bunch of counter variables.",
			"And there's another function that we're seeing here--",
			"timer.after because sometimes you just want to wait a certain length of time.",
			"Maybe you have every 1 second for 5 seconds you want a bomb to tick,",
			"and then after 5 seconds, you want it to blow up,",
			"and you could also model that with another function that we'll see soon,",
			"but these are probably the two core time-based functions.",
			"And you can go here to this URL able to see the knife library.",
			"There's a bunch of modules that are really nice.",
			"We just happen to be using timer, and it's",
			"tween, and every after functions primarily in this problem.",
			"But we'll use another one called the event in the Zelda [? p-set, ?] where",
			"we actually look at how to dispatch events, and triggers, and stuff,",
			"and to prevent us from checking every frame.",
			"Oh, what do we have to do?",
			"If some wall is broken, this frame, then do this.",
			"We can just dispatch an event that we blow up a wall.",
			"We'll get to that.",
			"Any questions at all about how those two models differ, and how they work?",
			"",
			"OK, cool.",
			"So the next thing I want to look at-- so we can tie that back into also,",
			"real quick, if we want.",
			"Match 3-- whoops, and then there's a timer that's",
			"manipulating the text on the screen.",
			"All of those letters in the-- this is in the start state of the game code.",
			"All of those letters have a color associated with them,",
			"but they're on a timer so that after every 0.075 seconds,",
			"they'll go to another color, and to another color.",
			"And so we don't have to keep track of every letter's",
			"individual color, and a timer for it.",
			"We can just change them all.",
			"If we start the game, something else that's on a timer, the timer,",
			"actually, there, which is just decrementing some value.",
			"Every one second, decrement timer by 1, and that's it,",
			"and we don't have to keep any-- we don't have to say anything more than just",
			"that, and that's what's really nice about using that kind of model.",
			"So another thing that you probably also noticed, and I'll run it again,",
			"is this fade out, and fade in, and also that animation.",
			"Those are things that are happening over time.",
			"We don't actually-- we can just sort of manipulate them.",
			"We can keep track of some sort of counter for it.",
			"We can also just say over this length of time, change this value to this value,",
			"and that's a much easier way to model the problem mentally.",
			"And so we'll illustrate that.",
			"First, I'm going to go to tween0.",
			"So tween0 is the simple way to do something.",
			"So I'm going to illustrate tweening here with Flappy Bird just going",
			"left to right.",
			"So up there, that's what happens when you print out the number, by the way,",
			"just by default.",
			"And so if you wanted to truncate it, yeah, you",
			"could just g sub the first two, I guess, depending on how large it is,",
			"and that would have the effect of displaying it as just an integer.",
			"But we can see that over two seconds, we've had--",
			"and there's a little bit of overlap just because delta time can",
			"go a little bit over two seconds when you're adding to it because it just",
			"adds whatever length of time as a float has elapsed since the last frame.",
			"In this case, we're just adding it until it's greater than or equal to 2.",
			"So in this case, we went 0.01 over 2 by the time that actually ended.",
			"Some iterations will be less than that.",
			"So this one will be--",
			"yeah, see, that one was less than 2.01.",
			"It just depends on your computer, and your specs.",
			"But Flappy Bird starts on the very left.",
			"So he's got an x-coordinate, and then at the very end,",
			"he's got another x-coordinate.",
			"So the simple solution is what?",
			"",
			"We know that we want this to elapse over two seconds.",
			"So what we can do is I'm going to pull up tween0.",
			"",
			"And MOVE_DURATION here, it's a constant of 2 seconds just",
			"for the sake of this example.",
			"A sprite here, just a simple image.",
			"I'm putting everything in one code file this time, as opposed to breaking it",
			"out into subclasses just for simplicity because these are such small examples.",
			"But we're setting it's x and y.",
			"Oh, and this is another Lua trick, by the way.",
			"You can assign two variables to two values using a comma here.",
			"So flappyX comma flappyY gets 0, and then VIRTUAL_HEIGHT",
			"divided by 2 minus 8.",
			"Setting this x to 0, we have a timer here, and then it's end x.",
			"So we want it to end at the end of the screen.",
			"So we're going to say virtual width minus his width, an then",
			"the usual boilerplate for getting a project set to go.",
			"If it's less than the move duration-- so if timer is 0 going up to 2,",
			"but it's not quite 2 yet, we're going to add dt to it, and then we're going to,",
			"basically, assign it to either the lowest of end x,",
			"so it will never go higher than end x, or end x times the ratio of timer",
			"over move duration.",
			"So timer over move duration, if it's less than 2,",
			"that's going to be some value, some fractional amount less than 1.",
			"So it's going to basically just scale it,",
			"depending on how far we've moved the timer between 0 and 2.",
			"So just a scaling operation.",
			"This happens to only work in the context of moving something from left to right,",
			"or from 0 to something else, but it's a crude, basic way of illustrating",
			"a very basic tween operation.",
			"That's what it essentially is.",
			"It's a multiplier of some ratio of how much time has passed,",
			"versus how much time we're actually looking to elapse.",
			"And that has the effect, once again, of just--",
			"it's scaling the ratio because it's timer over moved duration.",
			"It's something over 2, but it's not quite 2 over 2.",
			"Until it gets 2 over 2, and it's 1, then end x times 1 is going to be end x.",
			"But before that, it's going to be some fraction of end x between 0 and end x.",
			"So it has the effect of giving us a very basic tween, but it's a little bit--",
			"we have a little bit to manage here.",
			"It doesn't really feel super clean.",
			"Do you guys have any questions about how this works?",
			"OK.",
			"So we're going to go here.",
			"So first of all, any thoughts about how that might not be super scalable,",
			"looking back at the last example?",
			"",
			"AUDIENCE: I guess like the situation before,",
			"getting a lot of objects moving on the screen.",
			"SPEAKER 1: Yeah, and what if your index is different for every single one?",
			"Then you have kind of a mess.",
			"What if we had something like this?",
			"",
			"You don't want to keep track of an end to x.",
			"They all happened to have the same end x,",
			"but notice they're moving at different rates.",
			"They're all moving at some sort of random amount.",
			"AUDIENCE: How many are there?",
			"SPEAKER 1: There's 1,000.",
			"We could go crazier if we wanted.",
			"This is a fun thing to do, is stress testing.",
			"So if I go to tween1, and I go to main, timer max is 10.",
			"So we're saying that the longest possible time",
			"any bird can take to get from left to right is going be 10 seconds.",
			"So right here, we're using a table based approach here.",
			"We're actually keeping track of 1,000 birds, and we're saying,",
			"OK, here's an empty table from 1 to 1,000.",
			"Add a new bird, and in this case, we're not adding a bird object, or anything.",
			"It's just a table.",
			"They all start x equals 0, left side.",
			"Their y is random.",
			"So they can be anywhere between the top and the bottom of the screen.",
			"So VIRTUAL_HEIGHT minus 24.",
			"24 happens to be the height of the sprite,",
			"and I should have probably put Flappy sprite get height right there.",
			"And then rate, they're all going to have their own rate.",
			"So rate gets math.random.",
			"Math.random without a value passed into it",
			"gives you a fractional value between 0 and 0.999999.",
			"What this has the effect of doing is math.random with just two values,",
			"if you pass in 10 and 50, it's going to give you 10 to 50,",
			"but they're always going to be integer values.",
			"You can't say like 10.0 and 50.0, and assume that it",
			"will know what you're talking about.",
			"It's just going to be integers.",
			"So if you give it one value, it will know.",
			"OK, you're asking me for a float between 0 and 0.999999.",
			"That's going to act as the fractional part of whatever value we",
			"might want to generate using a math.random with a value passed in.",
			"So here, we're saying OK, math.random, TIMER_MAX minus 1.",
			"So TIMER_MAX is 9.",
			"So our TIMER_MAX is 10, sorry.",
			"So if we subtract 1 from that, this is math.random 10.",
			"So we're going to get a value between 1 and 9.",
			"So TIMER_MAX minus 1 is 9.",
			"Sorry if I said 10.",
			"TIMER_MAX is 10, TIMER_MAX minus 1 is 9, but we're",
			"adding math.random, some fractional amount.",
			"So whatever value we choose between 1--",
			"actually between-- yeah, between 1 and 9,",
			"it's going to be that value, point something.",
			"So this is how you get random--",
			"basically, at the end of the day, this is",
			"how you get random floating point numbers in Lua and Love2D.",
			"Does that make sense?",
			"Do you guys have questions about that?",
			"AUDIENCE: So your final rate could be anywhere from 0 to--",
			"SPEAKER 1: Final rate is going to be anywhere from 1-- in this case from,",
			"1 to 9.999999.",
			"If we wanted it to be 0, we could do that,",
			"and that'll give us the effect of taking whatever we get, and subtracting 1.",
			"So now it will be between 0 and 8.999999.",
			"And if we did this--",
			"",
			"AUDIENCE: Couldn't each math.random end up at 0?",
			"SPEAKER 1: No, because math.random, if you pass in a value,",
			"it'll always do from 1 to some value.",
			"The question was will math.random give you 0 if you pass in a value?",
			"And math.random, by default, gives you between 1 and something else.",
			"And so that's why we do this.",
			"That's not why we do this.",
			"We do this to add the fractional part so that we can get",
			"fractional floats between some value.",
			"But yeah, if you wanted it to be between 0, and something else,",
			"you would just subtract 1 from the final result",
			"because we know that we're always going to get from 1 to some value.",
			"If you minus from 1, you will never go below 0.",
			"It will always be 0 to something else, and then in that case,",
			"we probably would just take off the minus 1",
			"from TIMER_MAX so that it will be between 0 and 9.999999 in this case.",
			"But as a design decision, I made it so that we would always",
			"have at least a rate of 1 because then it",
			"could get really, really slow if it's like 0.005 or something like that.",
			"You wouldn't want that.",
			"It would take ages.",
			"",
			"OK, so we have a timer.",
			"We're not using knife.timer in this case yet.",
			"Basically, in update, we're just saying as long as timer max is less than--",
			"timer is less than timer max.",
			"This update logic will only run as long as we haven't gone over timer max.",
			"Increment it, and then for each bird, basically, we're",
			"doing the same thing that we did before, except we're using",
			"that bird's rate as the scale factor.",
			"Yeah, the denominator of that ratio, and that",
			"will have the effect of multiplying all of those birds",
			"individually, based on their own rate, rather than",
			"some global rate, if that makes sense.",
			"And then here, we're just drawing all of them at their own x and y.",
			"And just again, we're just storing birds are just",
			"a table with a few variables in this case.",
			"Just a very simple shell, and it has the effect of--",
			"oh, and one thing I wanted to do is just add a 0 there.",
			"I've got to do this every time because I didn't",
			"set my permissions appropriately.",
			"But now there's going to be 10,000 birds.",
			"So let's see how this looks.",
			"So it looks pretty similar, actually, but it's a little more condensed now.",
			"I don't notice a frame rate drop.",
			"If we wanted, we could go down to love.draw, and love.graphics.printf",
			"at FPS, and then to string, love.timer.getFPS, and then",
			"let's set it to 4, and then VIRTUAL_HEIGHT minus 16,",
			"and then got to do this again.",
			"This should have the effect of giving us our frame rate.",
			"So we can really stress test this, and see what the--",
			"oh.",
			"I made a mistake.",
			"OK, let's see.",
			"What did I do?",
			"Push.start.",
			"I'm guessing I missed a--",
			"yeah, I missed a--",
			"",
			"do that, and then that, and then save it again.",
			"Sorry about that.",
			"There won't be too many of these edits, but I figured",
			"this would be fun to illustrate.",
			"So now, this should work.",
			"",
			"Printf, so we have that.",
			"Oh, right, and then it just needs to be print.",
			"It doesn't need to be printf.",
			"Got to save again.",
			"Sorry.",
			"This will be worth it, I hope.",
			"There we go, 5160.",
			"OK, it takes a couple of seconds.",
			"It has to interpolate between the last couple of times",
			"that it's pulled for frames, and when you start up,",
			"it doesn't have the data it needs.",
			"So 10,000, easy.",
			"Let's do like a million.",
			"So we have 10,000, 100,000, a million.",
			"I really got to change those permissions.",
			"Getting good at practicing my password, though.",
			"Going to go ahead, and do that.",
			"Ooh.",
			"Oh, my laptop is suffering.",
			"Oh man, but they're all moving independent of frame rate.",
			"This is just a testament to how powerful delta time is.",
			"They all move there after 10 seconds.",
			"We've got to 10.6 seconds, which is not good.",
			"That means that's how long passed between the last frame,",
			"but my laptop clearly can not handle a million birds on the screen,",
			"but it can handle 10,000, or maybe even 100,000.",
			"And that's just a fun way--",
			"a fun thing to do.",
			"In general, when you want to stress test your game,",
			"just put the frames per second on, and just go nuts.",
			"Just add a lot of stuff.",
			"Just see what your computer is capable of because you",
			"can find new, fun things that way, I guess, and maybe just",
			"see how good your code is too.",
			"So tween0, simple way.",
			"We have just variables, and one counter.",
			"No tables or anything.",
			"Tween2 is a good way for if we have a lot of things",
			"that we want to manipulate over time.",
			"But what if now we want some of them to change",
			"their opacity over time or something?",
			"It starts to get a little bit more complicated.",
			"And this is, by the way, I should've put this earlier in the code,",
			"but this is the knife library is responsible for timer,",
			"and a lot of other things that we'll be looking at,",
			"and it's got a bunch of modules here listed--",
			"behavior for state machines, which is like what",
			"we've been doing for state machines, but they have their own version of it.",
			"Knife.bind, so you can pre-bind arguments to functions,",
			"and create subfunction.",
			"It's called currying, but create subfunctions of other functions",
			"that have pre-determined variables.",
			"Knife.chain, we'll see, actually, how that can be used coming up later.",
			"Convoke is for coroutines.",
			"We'll see coroutines in the context of Unity,",
			"but basically, they're functions that can pause their state for later.",
			"Knife.event we'll use in two weeks for Zelda,",
			"maybe even next week if I can fit it in for Mario.",
			"Memoize is for memoization.",
			"It's like a dynamic programming related thing.",
			"Serialized system.",
			"System is going to be useful to know about in context of Unity as well.",
			"Unity uses an entity component system for much of its structure.",
			"Knife.test, and then lastly, knife.timer,",
			"which is what we'll end up using, and this is probably my favorite library",
			"that exists in the Love2D ecosystem.",
			"And so with that said, we'll look at tween2 now.",
			"I'm going to go here into tween2, and so now we have not just movement, but also",
			"their opacity.",
			"They all start at different opacity levels,",
			"and we want to not only change their movement",
			"over time, but also the opacity.",
			"So it would get a little bit trickier if we decided",
			"to do that with our current situation.",
			"Totally doable, but how would we go about changing, just right now,",
			"their opacity just as is?",
			"How do you change a spite's opacity?",
			"AUDIENCE: The variable and the graphics [INAUDIBLE]",
			"SPEAKER 1: Is it a variable-- can you say that one more time?",
			"AUDIENCE: I forget the exact function name,",
			"but it's like love.graphics to put an image on the screen.",
			"SPEAKER 1: The love.graphics.draw.",
			"AUDIENCE: Wasn't there an argument in that?",
			"SPEAKER 1: So it's actually not an argument to that function.",
			"So I'll show you now.",
			"So in order to draw something at some different opacity,",
			"it's actually love.graphics.setcolor, and we do that here.",
			"So recall that Love2D is a state machine, and how it draws things.",
			"You can basically set a color onto anything",
			"that you draw, whether it's a font, an image, or a shape.",
			"And if you just pass in 255, 255, 255, that's white.",
			"And then if you give it an opacity, which",
			"is the fourth parameter, which is the alpha component of that,",
			"then that's how transparent it will be.",
			"And so we could have done this with other colors too.",
			"We could have done this with like if we wanted to tint it red,",
			"and also have it be sort of transparent.",
			"We could do that if we just did 25500 bird.opacity.",
			"But if you just want to manipulate opacity independent of--",
			"or its transparency or its alpha independent of its color,",
			"and keep it the same exact color, you just do it white.",
			"If you did it black, nothing would show up.",
			"Is that true, actually?",
			"Let me verify that.",
			"",
			"Pretty sure that's right, but I could be wrong.",
			"",
			"I'm right, thankfully.",
			"OK.",
			"That or they're just black, and there's a black background too.",
			"Do you have a question, [? Tony? ?]",
			"AUDIENCE: No.",
			"SPEAKER 1: Oh, OK.",
			"So we'll take it on faith that that is correct.",
			"And back to the gist of this example.",
			"We have TIMER_MAX again.",
			"Actually, we really haven't changed much.",
			"What we have changed is we still have our birds.",
			"We need to keep track of their x, of their y, of their rate.",
			"Well, not necessarily their rate.",
			"Oh, well, their rate, yeah, because we're actually",
			"going to loop over each of these, and then create",
			"a timer between operations for them.",
			"And their opacity.",
			"Oh right, they start with an opacity of 0,",
			"and faded to 55, regardless of their--",
			"",
			"their opacity changes at the same rate as their x does.",
			"So the farther away, the longer they take,",
			"the slower they fade to fully opaque, and we see this here.",
			"So for k bird and pairs of birds.",
			"So for every bird, we're just going to set a tween, and then this is tween.",
			"So timer.tween is I think I have a slide on it here, right?",
			"A super cool useful function, super easy to use too, it",
			"takes iteration just like timer.every, timer.after, and it takes a definition.",
			"So in this case, it doesn't take an anonymous function",
			"like the other ones did because we're not really",
			"saying I want to do some sort of undefined behavior",
			"over the course of this operation.",
			"What I want to do is just change some values.",
			"I want to interpolate them.",
			"So what we're going to do is just pass in a-- this is the syntax for it.",
			"We pass in square brackets, the actual thing that we want to change.",
			"In this case, I want to change bird.",
			"I want bird to change in some way, and then",
			"what I want it's values to change toward are these.",
			"I want it's x to change to end x, and I want it's opacity to go to 255.",
			"And I wanted to do it over bird.rate, and so this bird.rate,",
			"every bird is storing it.",
			"So for birds that got a rate of 2, then it's",
			"x is going to go to end x over the course of 2 seconds,",
			"and it's opacity is going to go to 255 over the course of 2 seconds.",
			"And you can put as many things as you want, and as many--",
			"you can put as many variables here, and as many entities.",
			"Entities being anything that you want to change that",
			"has a field, any table-based or class-based structure.",
			"You can pass any of those in here, and just tween them all at the same--",
			"if they all have the same rate, and then just get that operation that way.",
			"And so that has the effect here of all we need to do is just add--",
			"it's like two lines of code, but now we've easily changed it so",
			"that we can just tween two things at once,",
			"and that's the power of timer.tween, and we'll see that.",
			"So back to, actually, Match 3, if we want to look at that again.",
			"",
			"This is a tween, that's a tween, that's a tween, and that's a tween.",
			"So the white, the foreground there, is just a rectangle",
			"that fills the whole screen.",
			"It's just a white rectangle.",
			"I have it set to timer.tween opacity from 0 to 255.",
			"Before that gets called, if we go from the start to the begin game state,",
			"and then if we go from at the beginning of the game state,",
			"before the level text comes down, it's going from 255 to 0.",
			"So it's just the reverse of that is the tween, and then all it's doing",
			"is just drawing a rectangle to the screen.",
			"But that's how you get a very simple transition.",
			"Same thing for fade to black.",
			"If you want to fade the whole screen to black,",
			"just draw a rectangle the size of the screen,",
			"and then just tween its opacity from 0 to 255, and then vise versa.",
			"That's how you get a simple transition.",
			"It can be any color you want.",
			"It can be a red transition.",
			"And then the level text, that's just a tween on the y, right?",
			"And then I just have some rectangle, love.graphics.rectangle with text,",
			"and it just says timer.tween to like VIRTUAL_HEIGHT divided by 2 minus 8,",
			"and then timer.after1.",
			"So we can actually pull this up if we want.",
			"We can see how this works.",
			"Today's going to be a little wider on the main distro code",
			"just because a lot of this is more conceptual.",
			"But in the begin game state-- well, actually, in the start state",
			"is when we go.",
			"So these colors, and letter table, and stuff that's all for the Match 3 text,",
			"if you're curious.",
			"So these are all back to what I said earlier about the beginning screen",
			"having Match 3 with the different colors going on a timer.",
			"These are just tables of colors.",
			"So notice this is RGBA, and then I'm just performing",
			"a shuffle on them every 0.075 seconds.",
			"So 2 will get 1, and vise versa.",
			"It'll all go down, and then 6 will come up here to 1 every 0.75 seconds.",
			"And then M gets mapped to this one, A gets mapped to this one,",
			"T to this one, C, H, 3, and that's it.",
			"That's done here at line 44 of the start state.",
			"But what I was going to show you was the tween for the transitions.",
			"So here in start state, in the update function says,",
			"it says if we press Enter, and our current menu item",
			"is 1, meaning that we're on start game, not quit game, timer.tween here.",
			"And notice that we have a finish function, which will show--",
			"I'm actually going to show you in the next couple of examples, the chain",
			"examples.",
			"But finish is just a function that you can",
			"run after any timer that just says, hey, when this is finished,",
			"run this block of code, and notice that takes anonymous function here,",
			"just like that.",
			"So we can say OK, tween, over the course of one second,",
			"notice we're passing self into here because we want to manipulate ourself.",
			"We have a value that we want to manipulate.",
			"So self.transitionAlpha.",
			"So we're saying I want to take my transition alpha,",
			"and I want it to go to 255, and we set it to 0 by default. So at the very top,",
			"here, at line 60, transition alpha is just our white rectangle that",
			"fills the screen.",
			"I'm just saying set it to 0 so we don't see it at all.",
			"It's going to be invisible.",
			"It's still there no matter what.",
			"It's hidden, but after we press Enter, tween",
			"it to 255 over the course of 1 second, and then when that's finished,",
			"notice this is familiar, right?",
			"gStateMachine change begin game.",
			"We're going to go with the begin game state after that.",
			"Our passing level gets 1.",
			"We're starting the game, and then we're going to remove this color.",
			"Remove that timer from the-- this is actually",
			"unnecessary in this circumstance, but you can remove timers from timer.",
			"If you have something going constantly--",
			"in this case, the color timer, and let's say we move from this state",
			"to the next state, the next state doesn't have all those colors,",
			"right, the Match 3 colors.",
			"So we don't need to keep-- because timer is a global object,",
			"it's going to keep updating over, and over again.",
			"We don't need certain timers to exist indefinitely.",
			"We can just remove this one because it's not relevant anymore.",
			"But this is all it takes just to give us a simple transition from one screen",
			"to another.",
			"Just give this transition alpha 255 down in the actual render function.",
			"Where is it?",
			"It is right here.",
			"So right here.",
			"Draw our transition rect.",
			"It's going to be drawn last so that it draws over everything when we finally",
			"do get a transition, but self.transitionAlpha,",
			"and that's all we really need.",
			"We need to keep the variable, and then whenever",
			"we want to perform like some sort of operation over time,",
			"just use timer.tween.",
			"It's that easy.",
			"But that was a little bit of a--",
			"it was a relevant tangent.",
			"We would have talked about it anyway, but that's the first use case",
			"that I think of in this project, and then also the label.",
			"I'll show you the label in a little bit.",
			"But I think before we do that, let's talk about chaining.",
			"So you guys have probably played a lot of games",
			"where maybe there's a cut scene, and you're looking at a character,",
			"and they walk, and then maybe they turn, and they walk in another direction,",
			"and they walk up, and then they speak to you.",
			"There's a dialog box, and then maybe they do an animation or something,",
			"and then maybe some other things happen that are",
			"on some sort of predestined path.",
			"It's a very discrete path.",
			"It's not random.",
			"It's laid out in advance.",
			"It's a series of steps, one consecutive.",
			"That's the concept of chaining things together is relevant",
			"when we get to sort of timing things because when we finish timing",
			"something-- because usually, a lot of those things",
			"happen over the course of time.",
			"Over the course of five seconds, NPC1 will walk up north,",
			"and then they'll turn left, and then they'll say something.",
			"We want to model that.",
			"We don't want to basically have variables that say",
			"if NPC1 is at this tile, then do this.",
			"If NPC.dialogueOpen, then do this.",
			"We basically want to say walk here, do this, do this,",
			"do this in a flat, easy-- or at least semi-flat, easy sequence of steps.",
			"I have a few examples to illustrate how we can do that using timer",
			"for some semi-basic use cases.",
			"So chain0 is the first one.",
			"So this one is just Flappy Bird.",
			"He's going left to right, then he goes down, then he goes back left again,",
			"and then he goes up.",
			"What's the basic way that we model this--",
			"that we implement this?",
			"Just off the cuff.",
			"",
			"AUDIENCE: We can use that finish thing to do the--",
			"SPEAKER 1: We would.",
			"If we didn't know about finish, how would we probably do it?",
			"I shouldn't have given away finish before I got to that example.",
			"I kind of got ahead of myself.",
			"",
			"We can imagine somebody maybe saying OK, I",
			"want Flappy to move left to right, right to bottom, bottom to left,",
			"bottom to up.",
			"Maybe they're going to say if Flappy is less than--",
			"or has reached first point, move left, else if he's reached bottom or point 2,",
			"move down, and then move left, move up.",
			"And in both of those cases, they're changing the x and y value of Flappy,",
			"and it's basically just a lot of ifs, and state variables.",
			"",
			"I see it in a surprising amount of code.",
			"Just state being kept all over the place.",
			"The first implementation of that that we'll look at uses something similar.",
			"So in chain0, and there's only two examples here, actually, for chain.",
			"But chain0, there's a movement time, and then a timer.",
			"We're going to be semi-clean about it.",
			"We have some destinations.",
			"OK, so we have destination1.",
			"I know that I don't necessarily want to keep track of a bunch of if statements,",
			"but I'm going for--",
			"assuming that I don't know what timer can do for us,",
			"here, I'm just saying OK, I want this first destination",
			"to be virtual width minus his width, and then",
			"keep him at y0 So right edge of the screen, assuming that he starts at 0,0.",
			"And then I want his second destination to be that same side on the x-axis,",
			"but I want the y to be virtual height minus his height.",
			"So go to the bottom of the screen.",
			"Then I want it to be 0 in his height from the bottom of the screen,",
			"and then back to 0,0.",
			"So we have those modeled, and then I want to keep a flag in each of those.",
			"I want to know whether he's reached that state yet.",
			"So I'm going to iterate over that table I just created,",
			"and just add a new key to each of these called reached,",
			"and just set it to false.",
			"Just by default, he hasn't reached all of them yet.",
			"And then in the update, basically, I'm going",
			"to set a timer to the min of movement time.",
			"So it will never go higher than movement time, and then timer plus delta time.",
			"And then for every destination in destinations, if it wasn't reached,",
			"then set its x and y, FlappyX and FlappyY, which are, in this case,",
			"we're uncleanly using global variables to keep track of this.",
			"FlappyX and FlappyY gets baseX.",
			"So notice another problem.",
			"We have to maintain where we are relative to our next spot in order",
			"for this math to work because before, we just took Flappy Birds--",
			"basically, the timer divided by movement time",
			"was a ratio where we scaled the end destination,",
			"and assigned that to Flappy, which had the effect of moving",
			"Flappy left to right.",
			"But if we do that in the opposite, right to left,",
			"the math isn't the same because he's going backwards.",
			"He's getting negative values added to his x value.",
			"So we need to keep track of a base that he started at for each",
			"of these operations baseX, baseY.",
			"So at the very beginning, baseX, baseY is 0,0.",
			"So it's actually going to be much the same,",
			"but as soon as Flappy get to the right edge of the screen,",
			"we want baseX to be the right edge of the screen, baseY still 0,",
			"and then if he goes down, we want baseY to then be bottom edge of the screen,",
			"baseX to be right edge, and so forth.",
			"So what we do is we just scale.",
			"We're still using a timer over movement time as our scale factor,",
			"but we're adding the difference of our destination and our base,",
			"and we're multiplying by that scale factor instead.",
			"And so this difference, if we add it, whether we're",
			"moving left, or right, or down, or up, it's",
			"going to have the effect of filling in that gap of bridging that no matter",
			"where we are, no matter which direction we want to go.",
			"And so this is basically a fairly complete linear interpolation",
			"algorithm, which is the basis of tweening.",
			"Just interpolate some value between another value.",
			"It's usually modeled in geometry as the line between two segments.",
			"",
			"And then if timer gets movement time, we've",
			"reached our destination, reset the timer, reset or baseX and Y,",
			"and that has the effect of just doing what we saw earlier, which was just",
			"putting him point by point.",
			"So any questions as to how this interpolation-- how",
			"this way of modeling the problem works?",
			"",
			"All right, so there is a better way, a much better way thanks to timer.finish,",
			"which you can apply to any timer operation, including timer.tween.",
			"So we can basically say OK, once that operation is finished, do something.",
			"And this is all we have to do, we just have to say timer.tween.",
			"We no longer have to interpolate at all.",
			"That's taken care of for us by timer.",
			"So we're doing timer.tween over movement time.",
			"Flappy, set it to-- this was before we add all this in a destinations table",
			"with reached flags as well.",
			"Now, we just have the x and y here.",
			"So on the first movement, we want his x to be right edge of the screen,",
			"just like before-- y get zero.",
			"Once that's finished, anonymous function with another timer.tween.",
			"So we're saying OK, once you're finished,",
			"then tween him from the top right edge to the bottom right edge.",
			"So y gets VIRTUAL_HEIGHT minus FlappySprite getHeight.",
			"And then once that's finished, another anonymous function,",
			"another timer.tween, another finish, another anonymous function,",
			"another timer.tween.",
			"And this is, in its own way, unscalable.",
			"It's nested.",
			"There's a term for it called call back hell",
			"because you just get infinite downwards sloping anonymous functions with all",
			"this behavior.",
			"There are ways to flatten it, and we potentially will talk about it.",
			"It's part of knife.chain.",
			"Knife.chain has a way to turn all of these--",
			"basically, it would look something like this.",
			"It would be chain, and then it would be like moveFlappy x, y.",
			"MoveFlappy x2-- it wouldn't be x2, y2.",
			"We'd actually write these out here, but it would have the exact same effect.",
			"This is if you're looking to maybe implement a cut scene system, or just",
			"some sort of scripting system for your game",
			"that's very declarative, and imperative in style.",
			"This is the holy grail of changing behavior, and getting it to work,",
			"and just making it look nice, and readable.",
			"Yeah?",
			"AUDIENCE: Well, you could also pass in--",
			"you could pass in a table to your function of x's and y's [INAUDIBLE]",
			"simpler for [INAUDIBLE] to chain a lot of things.",
			"SPEAKER 1: Yes, you could do that too.",
			"The response was you could pass in a table to--",
			"you could iterate over a table, and within that table,",
			"generate a timer.tween.",
			"The only issue comes about with finish, and there is a way--",
			"I guess you could get a reference back to the timer,",
			"and then add a finish block to it, but then you would lose out on--",
			"that does work for the same function if all you're doing",
			"is moving something to a bunch of locations, it's absolutely true.",
			"But if we wanted Flappy say something, and hero disappear, and then",
			"hero flash, it gets a little bit trickier to do stuff like that.",
			"But yes, I agree.",
			"There are ways of modeling-- this particular example is a little bit",
			"repetitive, and could be modeled, I think, better",
			"with a function that takes advantage of the fact",
			"that timers can be returned, and then given new finish variables.",
			"I'd have to experiment with it to see because I'm actually not",
			"100% sure that you can add a finish.",
			"No, I think you can, actually.",
			"I think you can add a finish function to a reference",
			"because it's just a function on an object.",
			"So yeah, but independent of that, I think the goal probably",
			"is one, knowing how we can now chain behavior, and then two,",
			"striving towards flattening it.",
			"But in the purpose of this problem set, we'll see this a couple of times,",
			"and it's just worlds better than before.",
			"What's this, 76 lines?",
			"And then tween1 or chain0 was 96.",
			"OK, so 20 lines of code.",
			"And also the fact that now we have a declarative interface for modeling",
			"asynchronous behavior, that's really the fundamental thing,",
			"is not having some value that models your duration, or your counter,",
			"or whatever value, but just saying, hey, over this length of time,",
			"I want you to do this.",
			"I want you to do this.",
			"I want to do this.",
			"I want you to do this.",
			"After this length of time, I want you to do this.",
			"",
			"I always like to try and strive towards making code as declarative as possible",
			"just so that you can read it in the future,",
			"and then the people working on your code base",
			"can also read it well in the future, and I",
			"think timer does a pretty awesome job of that.",
			"And this is just a reference for timer finish.",
			"So it just takes a callback, and then once a timer function",
			"tween every or after has completed, it triggers that callback.",
			"So we're going to take a break for five minutes now, and then once we get back,",
			"we'll talk about swapping, and some of the algorithms we use in Match 3,",
			"starting with just rendering a board, getting tiles to swap, tweening them,",
			"and then we'll actually look at how we take falling tiles,",
			"and account for them, and then repopulate them.",
			"",
			"All right, we're back.",
			"So recall, before break we were looking at timer,",
			"and how to take code that was previously managed by timers, and asynchronous,",
			"but also very stateful, and sort of messy, and all over the place,",
			"and putting it into a more declarative, clean,",
			"easy to express format via timer.tween, timer.every, timer.after, timer.finish,",
			"timer;finish for any timer objects.",
			"So with all that out of the way, now we'll",
			"start talking about the actual Match 3 mechanics.",
			"And the very first thing that we'll look at is swap0,",
			"and this is the sprite sheet for Match 3 that's included in the distro.",
			"So as we can see, it's something that we can easily chop up with generate quads,",
			"as we saw before.",
			"Just a function provided in util.lua.",
			"These are all 32 by 32 pixels.",
			"So it would be very easy just to go through all of them,",
			"and basically just generate quads with the sprite sheet 32, 32,",
			"and just get a table with all of these individual things.",
			"But notice that they're blocked up into patterns of colors,",
			"and this has actual meaning, and value for our game",
			"because when something is the same color,",
			"and only when something is the same color, a tile is the same color,",
			"are we allowed to trigger a match with it.",
			"If we get any three or four--",
			"anything higher than three together in a line, vertically",
			"or horizontally, that's a match, and we need to remove it from the table.",
			"So we need some sort of way of identifying these tiles as being",
			"of some color, and then they also happen to have a different pattern on them.",
			"This one's got nothing, but then an x, and then a circle, and a square.",
			"So those patterns-- it's not implemented in the distro,",
			"but part of the assignment.",
			"It's actually going to make them relevant.",
			"But the part that is implemented is the actual matching of the colors.",
			"And so the first thing that we'll need to do, probably, when we actually",
			"get into the core code of the distribution",
			"is instead of just putting them into one table, categorizing them.",
			"Splitting it up into maybe one, two, three, four, five, six, seven, eight,",
			"nine times two--",
			"18 tables, so that we can just say gframes at color.",
			"So color being one to 18, and then get the index into that.",
			"So there's six within each one.",
			"So it'll be one to six.",
			"One to six will be the variety, with one being the base variety.",
			"And part of the assignment will be make sure",
			"that the base variety is the only one that we start with on level one,",
			"but then gradually introduce these other varieties.",
			"And you can put them in whatever hierarchy",
			"you want to, but make them have some sort of value",
			"later on top of a few other things the assignment will cover.",
			"But that's the spreadsheet in a nutshell,",
			"and we'll be splitting it that way.",
			"So 18 tables of quads, instead of one quad of whatever",
			"this amount is-- eight by 16.",
			"Not sure how many that is off the top of my head.",
			"But let's take a look at swap0 in the distribution",
			"so we can get a sense of what we need to do",
			"to begin implementing our Match 3 game.",
			"Notice we have require util for GenerateQuads.",
			"We're just going to generate for this basic example.",
			"We're not going to differentiate between colors, and varieties, or anything.",
			"We're just going to put them all into one quad, or one table of quads.",
			"So we're just going to use the regular GenerateQuads function.",
			"We're not going to differentiate them.",
			"We're just going to use our sprite here, our match3.png",
			"provided in the distro, which is the exact same image that we just",
			"saw on the screen.",
			"I'm going to just generate them.",
			"They're 32 by 32--",
			"generate the quads for them.",
			"They're 32 by 32 pixels.",
			"I'm assigning it to a table here called TileQuads.",
			"And then here, we're calling generateBoard,",
			"and so generateBoard isn't all that dissimilar to what we saw before",
			"with maybe the level maker in Breakout, where we just spawn a bunch of bricks,",
			"or a bunch of tiles, in this case.",
			"Except in this case, they're kept in a nice 2D array that's",
			"always going to be eight by eight, and that's never",
			"going to change just by one of the constraints of the game.",
			"Match 3, traditionally, is an eight by eight grid that's",
			"always full of tiles of some variety.",
			"So local tiles, it's going to be an empty table,",
			"and then we're going to do a nested for loop here--",
			"y to x.",
			"The standard is usually y first, and then x,",
			"and then we index y before x just because the individual rows in a 2D",
			"array, or sprite, or table will be such that, for example, if our table was",
			"equal to this-- oops, sorry.",
			"Syntax bug.",
			"If we did this, and then we have a table here, and a table here, and a table",
			"here, and we had like 0, 1, 1, 1, 1, 1, 1, 1, and then 1, 1, 1, 1.",
			"If we index into this table--",
			"so table at 0, that's going to give us another table.",
			"That's not going to give us--",
			"let's say we wanted to get the value at table 2, 3.",
			"The instinct might be to think I'm going to index at x, y",
			"just because x, y tends to be more commonly seen.",
			"But if we did that, and assumed that x was horizontal,",
			"and y is vertical in this arrangement, which is how we have it,",
			"then table2 wouldn't be this value here table2 would be this table here.",
			"The first value you passed into indexing some table when it's a nested table",
			"is just, in fact, the table itself, which",
			"is why we actually need to do-- when we want to get some value,",
			"we have to index at table y, x.",
			"So it's flipped for that reason because x is actually going to be--",
			"the first index is going to be these sub tables,",
			"or sub arrays if you're in C, or Java, or something like that.",
			"So when you see table y, x, and you're wondering why it's not table x,",
			"y, that's the reason.",
			"So any questions as to why that is, or how that works?",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: In this case, I was using zero based indexing,",
			"but Lua is one index.",
			"That was just habit.",
			"",
			"It was pointed out that I was using zero based indexing in my example.",
			"You want to use one based indexing when you're actually programming,",
			"and not zero based.",
			"But the same principle applies.",
			"Zero would be one in that case.",
			"In a general purpose language--",
			"most languages, if we were to abstract the problem out in a C 2D array,",
			"or C++, or Java, zero would be appropriate there.",
			"But anyways, we have a nested for loop.",
			"We're starting at y, and then we're going to x,",
			"and then basically, that has the effect of y,",
			"and then x, x, x, x, x, y, x, x, x, x, x.",
			"Just insert a blank table.",
			"Fill it with-- we're just using tables here.",
			"So we're not using any sort of tile class,",
			"or board class, or anything fancy.",
			"We're just using raw data types here.",
			"So we're just saying insert into tiles y, which",
			"by the way, if we're at x equals 1, 8, here,",
			"and we're in any given iteration of our outer y loop,",
			"tiles y will be the last table that we just inserted--",
			"the last blank table on the first iteration of this x loop.",
			"So basically, it's saying, in the inner table that I just",
			"put into the table that's going to represent our board, the tiles table,",
			"insert a new table.",
			"So we have a table of tables of tables.",
			"In the third table are the actual tiles themselves.",
			"You can think of this table as being a tile data type, more or less.",
			"Just implemented using a table.",
			"That has an x-coordinate, a y-coordinate, and then a tile,",
			"and the tile is going to be a random number that's",
			"going to be the index into our quads.",
			"So each tile holds x and y, and then notice",
			"that we're multiplying by 32 because we're",
			"going to use this to draw the tile, and the tiles are 32 pixels tall by high--",
			"sorry, wide by tall.",
			"We are going to multiply x minus 1, recall,",
			"because even though tables are one indexed, coordinates are zero indexed.",
			"So x gets that times 32, y gets that times 32,",
			"and then get a random number between 1, and the number of quads",
			"in our tile quads table.",
			"So recall this number sign here is just a shorthand for length of the table,",
			"and then we're going to return it.",
			"So we generated our board.",
			"It's a y by x grid of table rows of little tables",
			"that all have an x, y, and a tile ID, and the tile ID maps to the quads",
			"that we just generated.",
			"OK, that's it for the init function.",
			"Sorry, love.load in this example.",
			"The love.draw uses a function called drawBoard, and we pass in 128 by 16.",
			"The 128 by 16 is just xy offsets.",
			"We're just going to draw our board at 128, 16,",
			"and is it going to center our board.",
			"And then if we go down to drawBoard at line 89,",
			"gets an offsetX, offsetY, nested for loop again.",
			"We're just iterating back over the tiles that we got,",
			"and recall, actually, generateBoard returns tiles,",
			"and then we set board equal to the result of generateBoard.",
			"So down here in line 89, again, in drawBoard-- actually at line 95.",
			"Within this nested for loop, we're going to get a tile at board y, x,",
			"just so we have a shorthand reference for it.",
			"We don't have to say board y, x several times, which you would have to hear.",
			"We're going to draw the sprite--",
			"the quad at tile, tile, tile.tile, which, recall,",
			"is a random number between one and whatever",
			"the number of quads we have in our tile quads table.",
			"And then that x plus offsetX, and the y plus the offsetY, which",
			"has the effect of drawing every single tile in our grid at some given offset.",
			"And that has the result--",
			"and I probably should have run this, actually, in advance",
			"just so I could illustrate it.",
			"",
			"But we have a simple board.",
			"Looks nice.",
			"It's colorful, but it's very, very basic.",
			"Just a 2D render of our game.",
			"There's no behavior or anything.",
			"This is just how we draw the board.",
			"So any questions as to how just the drawing, and the creation of the board",
			"work?",
			"",
			"OK.",
			"So swap1 is a little bit more complicated.",
			"It builds on what we did before, what we just",
			"built, which was getting the board implemented, and drawn onto the screen.",
			"But there's no behavior at all.",
			"It's just a static-- basically, the same thing",
			"as drawing an image onto the screen.",
			"And so for that, what we want to do is implement swapping.",
			"So how do we think we can accomplish this?",
			"Anybody have any ideas as to how we can swap?",
			"",
			"AUDIENCE: [INAUDIBLE] using tweening to have it go in opposite directions.",
			"SPEAKER 1: Well, we could.",
			"That will have the effect of--",
			"the response was we could use tweeting.",
			"We could, and we actually will for swap2,",
			"but it's going to be a little bit more complicated than that",
			"because they're in a 2D array.",
			"So if we just tween their x, y--",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: They will be in the same place in the array.",
			"But yes, ultimate--",
			"AUDIENCE: You could switch the position in the array,",
			"and then reload the array.",
			"SPEAKER 1: Switch their position in the array, and then reload the array.",
			"We will switch the position.",
			"We don't have to reload the array, but we will switch their positions.",
			"That's effectively, what it is.",
			"Literally just take two tiles, and swap in CS50,",
			"where we just take two variables, and get a temp variable that",
			"points that one variable, gets its values",
			"while the second variable gets the values of that one, or vise versa,",
			"I think.",
			"This one gets this one's values, this one gets this one's values,",
			"and then this one comes down to this one, basically.",
			"There's the middleman that keep-- because if this one gets this one's",
			"values, it's going to get overridden by this one's value.",
			"So there would be no reference to it's x, y, or anything.",
			"So that's why you need to store this one up here, so this one can come here,",
			"and this and come back down here.",
			"So we've done a swap, effectively.",
			"And there's ways in Lua to do swaps, as we saw before,",
			"without even needing a temporary variable.",
			"You can just do xy get some other xy, which sort of bypasses that.",
			"But when you start to do four things getting swapped at once,",
			"and you have four commas, it can get a little tricky, a little bit unwieldy.",
			"I'm actually not 100% sure you can unpack more than two things in Lua.",
			"I'll have to double check on that, but right off the gate,",
			"we're seeing that double assignment here on line 32,",
			"highlighted x, highlighted y gets 1, 1.",
			"And let me actually run just so we can see.",
			"There's actually a couple of pieces here besides just that.",
			"",
			"Swap1.",
			"So we have the board as before, we also have",
			"something to show us where to swipe because we have",
			"to know where we're swapping the tiles.",
			"In an ideal implementation, which is an optional part of the assignment,",
			"you would have mouse behavior for your game.",
			"So you could just click on two tiles, or click, and drag, and swap them.",
			"In this case, we're not doing that.",
			"We're just implementing key based behavior.",
			"So when I press left, right, up, or down, I can move.",
			"If I press Enter on a tile, and then move around, it's an indicator to me",
			"that I've selected that tile to swap with something else",
			"because it needs to keep track of OK, you want to swap this tile.",
			"What do you want to swap it with?",
			"I want to swap it with this tile.",
			"So they get swapped.",
			"I want to swap it with this tile.",
			"So they get swapped.",
			"Or this tile.",
			"So you can swap it with whatever tile you want to.",
			"There's no constraints.",
			"The actual distro code implements a constraint, and so offhand,",
			"what do you think a constraint would be for making sure that we can't--",
			"AUDIENCE: They have to be adjacent.",
			"SPEAKER 1: Yeah, they have to be adjacent.",
			"So what would that entail?",
			"AUDIENCE: That their x [INAUDIBLE]",
			"SPEAKER 1: Exactly.",
			"And the shorthand for that, really, is if the absolute value of their x's",
			"minus their y's is equal to 1.",
			"Because if you subtract one's x from another one's x,",
			"and then one's y from another one's y, and then",
			"you add the differences together, that'll",
			"tell you whether they're directly adjacent to each other.",
			"It has to equal one.",
			"If equals zero, then their x's and y's are the same.",
			"If equals two, then it's two tiles away on the x-axis,",
			"or it's away on the x and the y, in which case it would be diagonal to it.",
			"So the only way is it's x's minus it's x's.",
			"Tile1.x minus tile2.x, and tile1.y minus tile2.y,",
			"if they're absolute value of their difference is one,",
			"then they're adjacent.",
			"That's in the implementation.",
			"",
			"So this is why we have these variables here, highlighted tile.",
			"Basically we're setting a flag saying, do we have a highlighted tile?",
			"If we do, we're going to perform some drawing logic later down in the draw",
			"function.",
			"Basically, how would we draw a highlighted tile, do you think?",
			"AUDIENCE: Add a rectangle with transparency.",
			"SPEAKER 1: Exactly.",
			"So the answer was add a rectangle with transparency.",
			"That's exactly what we do.",
			"I'm going to go down to this part here.",
			"So on line 173, if we have a highlighted tile,",
			"and basically, this is in the middle of a loop--",
			"our y, x before.",
			"We've put it into a draw board.",
			"We have the drawBoard function, but x, y, or y, x,",
			"the tile is going to be whatever tile we're currently on,",
			"and if we do have a highlighted tile, and that tile's gridX--",
			"notice we now have a new variable called gridX, as opposed to it's regular x",
			"so that we can check for these sorts of things to see where it is in the array.",
			"If it's gridX is equal to whatever we've set highlightedX to,",
			"and gridY is equal to highlightedY, then love.graphics.setColor",
			"half transparency, and then just draw a rectangle with this 4",
			"at the end of it, which actually draws a rounded rectangle.",
			"If you pass in no 4, it will just draw straight rectangle,",
			"but if you pass in an int at the very end, that's how many",
			"rounded segments basically that rectangle will have.",
			"So you can get rounded corners on your rectangles,",
			"and it's good for UI drawing, and stuff like that.",
			"We use it a little bit in the distro.",
			"So that's how you get a highlighted tile.",
			"There was also a selected tile, and a selected tile",
			"is just draw a rectangle, same thing, but it's a line this time,",
			"and there's always going to be a selected tile no matter what.",
			"So we're always going to draw it here at the end of our render function.",
			"It's just 255--",
			"234 for the opacity so that it's just kind of transparent, but not super",
			"transparent.",
			"Set line width to 4 so that it's not just a very thin rectangle.",
			"If you set the line width, and then you draw a rectangle with the line format--",
			"the line mode of drawing, it will use whatever the current line",
			"width is when drawing the rectangle.",
			"So we set it to 4, then draw a line rect at selectedTile.x",
			"plus offsetX selectedTile.y offsetY, and we draw it 32 by 32",
			"because that's the size of a tile, and then",
			"we set our color-- remember to always set your color back to 255, 255, 255,",
			"255 because if you don't, and I did this when I was debugging, actually,",
			"you get some fun stuff.",
			"Wait, was that the right one?",
			"",
			"Oh, I might have fixed it up above where we--",
			"there was an issue.",
			"If you don't set, basically, your color, and you set it to red,",
			"everything will draw red after you've done something.",
			"So if it ever happens, remember to set your color back to 255, 255, 255, 255,",
			"anytime you change the color in some way, like I'm doing here.",
			"AUDIENCE: Alternatively, you could also just",
			"make sure to always set the color before you draw something. is that right?",
			"SPEAKER 1: Yes.",
			"The response was make sure you always set",
			"the color before you draw something.",
			"I think that's what I ended up doing in this distro, which",
			"is why it's not working anymore.",
			"I think it was--",
			"where was it?",
			"It was here, but I must have fixed it because I accidentally",
			"left that out when I was debugging, and it ended up drawing-- everything",
			"was red.",
			"So just as an aside just because Love2D is a state machine.",
			"Drawing it beforehand is definitely the safer way to go too.",
			"",
			"So the core of this, because we're running a little low on time--",
			"the core of this overall block of code is just the swap here.",
			"So if there is no highlighted tile-- so basically,",
			"if we pressed Enter or Return--",
			"now, we have all input handling in love.keypressed key.",
			"And by the way, this is input handling to change",
			"the x and y of our selected tile.",
			"",
			"If we press Enter, and we don't have a highlighted tile,",
			"then we need to have a highlighted tile, otherwise we should swap them.",
			"So we get a reference to tile one and two, we swap, we create temp variables.",
			"Recall, we need to have that middle man up here that",
			"keeps track of this tile's information.",
			"So it's going to keep track of all of tile2's information",
			"with tempX, tempY, tempgridX, and tempgridY because we",
			"need to not only change their x-coordinates,",
			"but also their grid positions.",
			"And then we need to create a temp tile here.",
			"Basically, here's where we actually swap their places in the board.",
			"So tile1.gridY, tile1.gridX gets tile2, and then we're getting a reference",
			"to temp tile so that we can--",
			"because if we set board at wherever tile1 is to tile2,",
			"we won't have anything where tile2 is.",
			"We need to have a temp tile to keep track of--",
			"sorry, we won't have anything at tile1 if we overwrite it with tile2.",
			"So we need a reference to tile1 here, so that we can put it",
			"into where tile2's spot is, right here.",
			"And then we need to do all that before we end up swapping their coordinates",
			"and tile grid positions, otherwise you get weird buggy behavior",
			"when you're moving the selected tile around.",
			"And then we can on the highlight, and then reset our selection",
			"because their selection is also going to get changed after we do the swap.",
			"So we need to put it to the second tile because it gets swapped with whatever",
			"tile we highlighted.",
			"And that's the overall gist.",
			"It's basically taking two tiles, flipping the information,",
			"storing a middleman.",
			"Same thing in swap in CS50, a little more complicated,",
			"though because these all have subfields that all need to get manipulated.",
			"And a lot of this can actually be done mathematically.",
			"You can actually have its x and y mathematically derived",
			"from it's gridX and gridY.",
			"Just multiply by 32.",
			"In this case, I just kept them as variables, and separate.",
			"But yeah, you could just do that too, and that",
			"has the effect of swapping the variables whenever we move them,",
			"and then that's the fundamental first step in Match 3,",
			"is just swapping any two tiles in a given position.",
			"So does that make sense altogether?",
			"OK.",
			"So this example is actually not that much different at all from swap2.",
			"I'm going to show you swap 2 right now.",
			"So if we go to swap2, the only change we really have made",
			"is that now tiles flipped instead of instantly changing, they tween.",
			"And this is a piece of cake at this point.",
			"We already know-- what's the function we need to do?",
			"Just timer.tween.",
			"All we need to do is just take the two, and then just",
			"tween tile1.x and tile1.y to tile2.x, and tile2.y,",
			"and do the same thing in reverse.",
			"Tween tile2.x, and tile2.y to tile1.x, and tile1.y.",
			"And so if we open up swap2, go to main, nothing in this program",
			"really changes, except in update, where we go to line 99,",
			"and we're just doing it here.",
			"Notice the definition.",
			"Over 0.2 seconds, it takes in the definition table, here,",
			"and it's taking in two entities because we're modifying two things.",
			"We're modifying tile2, and tile1.",
			"We're just setting x to tile1.x, and y to tile1.y,",
			"and then tile1 is getting the tempX and tempY",
			"because before, it was just getting it directly from the temp,",
			"and now it's just tweening it over time.",
			"But that was before just a bunch of tile2.x equals tile1.x,",
			"tile2.y equals tile2.y, tile1.y equals tile2.y.",
			"That's all it is.",
			"That's what's really nice about it.",
			"Now we don't have to really work hard at all",
			"to get nice, smooth transitions in whatever we do,",
			"whether it's a UI, or the game.",
			"It's just super nice, and convenient.",
			"So that's all we need to do to get basic swapping done.",
			"That was swap2, the tween swap.",
			"And so I put together a set of slides here just",
			"to illustrate the algorithm that we use to calculate the matches.",
			"So right now we've got swapping in, but we",
			"don't know when we've gotten a match.",
			"So just offhand, does anybody have any idea as to maybe",
			"how we can go about calculating whether we've got any matches?",
			"",
			"AUDIENCE: Well, we already figured out how to track if a thing is adjacent.",
			"So you, I guess, have a table of adjacent--",
			"you go through [INAUDIBLE] block, and if you have an adjacent--",
			"or for every adjacent block, you check if that color equals your color.",
			"And if it does, you check if--",
			"well, then I guess you need to figure out what direction it's in,",
			"and then you check, continuing in that direction,",
			"if there's another of the same color.",
			"SPEAKER 1: So their response was when you're",
			"looking at tiles, look at all adjacent tiles,",
			"and if there is a color that's the same one, then figure out its direction,",
			"and then move from there.",
			"So like a recursive style.",
			"I guess you could implement it recursively.",
			"It probably would be a little bit trickier to understand, and probably",
			"not as efficient.",
			"The way that we are actually going to implement it",
			"is going to be a little bit more iterative.",
			"So all we really need to do is check every row, and every column one time,",
			"and then go basically, left to right.",
			"So in this case, we have to check every row and column one",
			"time in this direction, and then one time in this direction",
			"because we can get vertical and horizontal matches.",
			"So we start off.",
			"Let's just arbitrarily decide we want to start going left to right down the data",
			"structure.",
			"So we'll go, what color is this?",
			"That's brown.",
			"OK, check the next one.",
			"Is it the same color?",
			"If it is, then say OK, the number of matching tiles that we've found so far",
			"is two.",
			"If it's greater than three, then later on we'll",
			"need to add that group as a match to our list of matches, basically.",
			"But if it's not, OK, then the number matches is one again.",
			"So set it to one, and then do the same thing.",
			"Same color?",
			"No.",
			"OK, number of matches is one.",
			"In this case, here we have the number of matches is going to be two",
			"because this is blue, and then we're going to go ahead,",
			"and then same color again.",
			"The number matches is three, and then we've gotten to the end of the row.",
			"So we can say OK, what was our last number of matches?",
			"Was it greater than or equal to three?",
			"If it was, add that group of tiles to our table of",
			"matches if we've gotten a match, and then move on.",
			"And we do that over, and over again, and if it's in the middle of a group,",
			"like it is here-- so this isn't at the end of the row.",
			"This is just in the middle of the row.",
			"What we do is number of matches one, two, three, and then we go here,",
			"and it's set to one.",
			"Well, first of all, we check number of matches",
			"when we get to a different color.",
			"We say, OK, this isn't the same color as this tile.",
			"This is purple, and this is gray, but number of matches is three.",
			"So what we do is we just add these three tiles to our--",
			"we're keeping a table of matches because we're going to go through,",
			"and we're going to delete all of them.",
			"And then, eventually, we're going to do some tweening as well,",
			"but we're going to delete all of these.",
			"And then in order to do that, we need to walk backwards.",
			"We need to say, basically, for x gets position",
			"minus number of tiles in the match, just add that to a match,",
			"add that to a match, add that to a match,",
			"and then add the match to our table of matches.",
			"And that's it for the x direction.",
			"And for the y direction, it's the exact same thing.",
			"Going down here-- different color, different color, different color,",
			"different color, and then same color, same color, different color,",
			"but number of matches is three because one, two, three, and then",
			"it's going to walk backwards, up to the top, add that match,",
			"and then just continue down here.",
			"Same thing, same thing, and then same thing there.",
			"This is at the end of the column.",
			"So it's going to get to the end.",
			"It's not actually going to look for the next tile",
			"because there are no more tiles, but every time",
			"we complete a row, or a column, we check at the very end,",
			"do we have the number of matches equal to three or greater?",
			"If we do, then we need to do the same logic",
			"as we did before by adding that match to our list of matches.",
			"So it's actually quite a simple algorithm, and this is the set of steps",
			"that I just illustrated.",
			"We have a match found there.",
			"Oh, sorry. [? Tony, ?] yes?",
			"AUDIENCE: If you complete two matches at once, would it see both?",
			"SPEAKER 1: It would.",
			"The question was if you complete two matches at once, would it see both?",
			"Yes.",
			"If you complete-- and it wouldn't if you deleted",
			"them as you went because let's say you had like one, two, three here.",
			"I'm assuming that's what you mean, one, two, three, one, two, three.",
			"If you just deleted them as you went, then no, it wouldn't see them.",
			"It would go here, it would get these three, delete them,",
			"and then it would just see these two.",
			"But because we walk over the entire thing,",
			"and then we only delete matches after all of the matches have processed,",
			"we're going to add this one first, and then when we do our vertical one,",
			"we're also going to see this one, and so it's going to count as two matches.",
			"And you could make your code a little bit more complicated if you wanted to,",
			"and say if there's an intersection between two matches,",
			"I want to give the player more points.",
			"Or I want to give him some sort of effect like in Candy Crush,",
			"I think you get like explosions, or Bejeweled,",
			"you get explosions if you get like a T pattern.",
			"And if you get four in a row, you get a laser or something across the screen.",
			"And actually, part of assignment is clear a row.",
			"If you get four in a row, you should clear that row, or call them.",
			"If you do that, then yeah, you can have logic.",
			"But currently, all the distro does is just this simple iteration--",
			"horizontally, then vertically, and adding matches as you go.",
			"And actually, there is an optimization that you can make.",
			"If you go here, for example, let's say we're going here, here,",
			"and then we're here, and we're at a different color than the last one.",
			"We can just go to the next one.",
			"We can just skip because we know we only have two left.",
			"There's no point in looking for a match if you're at the n minus 2",
			"because there's no possible way to get a match.",
			"So that's just a shortcut.",
			"A little optimization you can make, and that's actually in the code.",
			"Just break off if you're at--",
			"in the code, it's x or y equals 7.",
			"Just break out of that for loop basically,",
			"and go to the next row, or column.",
			"",
			"Any more questions as to how that works?",
			"",
			"If you're actually looking in the code, we won't go over it",
			"in too much detail in class.",
			"It's fairly straightforward, I think, once I walk you",
			"through the algorithm a little bit, but I'll point you to the relevant lines.",
			"It's in the play state.",
			"No, sorry.",
			"It's in the board in the calculate matches function.",
			"Here, on line 50, calculate matches.",
			"So horizontal matches, y gets 1 to 8.",
			"You keep a color to match, and basically, you just",
			"keep track of how many you've matched.",
			"Match numbers one always when you're doing a brand new color,",
			"and then starting at x 2 to 8, because we already",
			"got the first tile, basically, if the color is the same, increment matchNum.",
			"Otherwise, set our current color to that color, the next tile.",
			"If we've done this, and our match is greater than or equal to 3,",
			"then we found a match.",
			"We can add a match.",
			"We create a new table.",
			"We go backwards from where we are with x 2 gets x minus 1,",
			"and then x minus matchNum.",
			"So it works for no matter how long the match is,",
			"whether it's three, four, or five.",
			"And then we're subtracting 1, and then you just",
			"insert into that match, the tile at that x 2 position",
			"because the matches are made of tiles.",
			"So a match is just a group of tiles put together,",
			"and so you can intersect to any given match just by comparing the tiles,",
			"and just seeing if they have the same tiles, basically.",
			"That's how you'd get a cross match.",
			"And then after that's all done, just insert into matches that match.",
			"Here's a little optimization.",
			"If x is greater than or equal to 7, and this is in part of the loop",
			"where we already know that we're on a new color from the last color,",
			"we'll just break, and then set matchNum to 1 if we haven't gotten to that point",
			"yet.",
			"And then this is the part of the code that accounts for a last row--",
			"the row ending with a match because we're not going to be on the next loop",
			"to see whether we're going to a different color.",
			"We just need to check to make sure at the end of any row iteration,",
			"or column iteration when we go to the next row, or column.",
			"Before we go to the next row or column, that matchNum",
			"is greater than or equal to 3, and if so,",
			"then do the same logic here, but start x at 8.",
			"And same thing for vertical matches.",
			"Exact same logic, just x and y are inverted.",
			"And then that's it.",
			"And then self.matches, we keep a reference to self.matches in the board",
			"so that later we can remove them here, and I",
			"believe we use it for something else.",
			"And then we return, basically, if the number of matches is greater than 0,",
			"we're going to return matches, else we're just going to return false.",
			"And we can use this later.",
			"We can say if matches from our play state,",
			"then we can call a few other functions, and bring",
			"in new tiles, and stuff like that.",
			"But just for the sake of being thorough as an illustration,",
			"this is how the algorithm works.",
			"In this case, actually, this was before I made the optimization.",
			"We wouldn't actually do this in this particular case.",
			"This would have shorted down to the next column before it even checked this,",
			"but if your algorithm didn't make that optimization, then yeah,",
			"I would just see two tiles there.",
			"Go to the next one, nothing there, no matches.",
			"Same thing here.",
			"There is a match there, and the match would",
			"be found not at the end of the diagram here,",
			"it would be calculated when it's pointed here,",
			"but it knows matchNum is greater than or equal to 3 at that point.",
			"And it does the exact same thing here.",
			"We just go column wise, and then nothing there,",
			"nothing there, and then we've got one right there.",
			"And so the next part--",
			"oh, any questions on how that works at all?",
			"",
			"The next part-- we have the matches now.",
			"We have them in tables.",
			"We have the tiles.",
			"We have references to the tiles.",
			"How do we remove the tiles once we have--",
			"how do we get rid of them as soon as we have the matches?",
			"",
			"Assuming that our board is a table, a 2D table, and each array within there just",
			"has a tile object, how would we clear the board of our tiles?",
			"AUDIENCE: Are you including what you're shifting [INAUDIBLE]??",
			"SPEAKER 1: No, just remove it from-- just like like.",
			"Just remove it from play.",
			"AUDIENCE: Oh.",
			"I guess you can [INAUDIBLE]",
			"SPEAKER 1: Yeah, you could.",
			"Yeah, with a little bit of finagling, you could get it",
			"to where you could set a tile to be invisible,",
			"and then you could just give it a new tile ID, I guess,",
			"and then shift it up above, and then make it come.",
			"Well, I don't know if that approach necessarily",
			"works super well for this because of gravity",
			"because the tiles have to come down.",
			"So then you'd have to bring the lower ones, if they were at the bottom here.",
			"Those would have to come down.",
			"",
			"That kind of approach would be a little tricky.",
			"You could make it work, I think.",
			"The simple approach, which we used in this distro,",
			"is actually just setting them to nil because if you set something to nil,",
			"it's just not going to render, in this case.",
			"So we're just setting all of these tiles that were previously there to nil.",
			"They're nothing at this point.",
			"They effectively would render like this if you tried to render them,",
			"assuming that your code accounted for it, or it didn't break.",
			"And then the next stage would be the actual getting the board fixed",
			"because we have the tiles removed.",
			"So now, we have this thing here, but there",
			"is a step that has to happen before we get new tiles, and that's gravity.",
			"We have to actually shift everything down.",
			"So how do we go about shifting tiles down?",
			"So this first column, we don't really have to do anything, right?",
			"This column is all set, but what about this column?",
			"How would we shift?",
			"How would we get that tile to go down?",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: Sorry?",
			"AUDIENCE: Tweens again?",
			"SPEAKER 1: Tweens.",
			"Yes, we could do it with tweens, but from a data structure",
			"standpoint, how would we--",
			"because that will just tween the xy, but that won't necessarily",
			"fix-- the underlying data structure still",
			"has to represent-- because we're going to do iterations over it,",
			"we have to have references to the tiles in the right spots.",
			"AUDIENCE: So just shifting it was the table",
			"from the fourth row to the fifth row.",
			"SPEAKER 1: So how would you start by getting this tile down",
			"to this position?",
			"AUDIENCE: Switching it from the fourth row to the fifth row.",
			"SPEAKER 1: You would.",
			"How would your algorithm work step by step to making sure that would happen?",
			"",
			"AUDIENCE: Is it start from the bottom, and if that's nil, it would go up more",
			"SPEAKER 1: Exactly.",
			"That's exactly you do.",
			"You start from the bottom, and then whenever we have anything that's nil,",
			"we need to look for the first tile above it that's not nil, and shift it down.",
			"So in this case, we start from the bottom, and we go up this way.",
			"Not nil, not nil, not nil, not nil, not nil.",
			"So none of those are spaces in the code.",
			"It's called spaceY, or space and spaceY.",
			"So we go to the next column over, and we only",
			"have to check vertically in this case.",
			"We don't have to do a horizontal check for anything",
			"because gravity can only follow in one direction.",
			"So we just go over here.",
			"So we're only looping through this code, effectively, in this case, five times,",
			"but in our code, eight times.",
			"But it needs to be a while loop rather than a for loop,",
			"and we'll see why in a second.",
			"But start here.",
			"We see oh, we have a space there.",
			"So what we need to do is say, OK, the lowest space is here.",
			"So we need to look for the next tile above it, and shift it down.",
			"So we keep a reference to this, and we look up here,",
			"and we say oh, this is a tile.",
			"Perfect.",
			"So I'm just going to take this tile, and I'm",
			"going to set that space index to that tile,",
			"and then I'm going to set this index to nil.",
			"And then we just have to start again, though, from here",
			"because this tile is now space.",
			"So we have to look up here, and say OK, so basically, our y counter",
			"stays at that thing, and then just goes back up because our y counter could,",
			"theoretically, come all the way up here before it finds a tile,",
			"and then shift it all the way down, but we can't just-- or here, let's",
			"say there are two tiles right here.",
			"Our y counter might end up here because these are all spaces,",
			"and the tile gets shifted down here, but we can't just",
			"start our y counter back here again, and go up to the next tile,",
			"and look for spaces because we have all these spaces down here.",
			"So it's a while loop.",
			"So while, basically, there are no spaces on any of these points,",
			"we need to make sure that we keep lowering the tile.",
			"So keep a reference here, tile here, bring it down, space here.",
			"So we keep a reference with space.",
			"We say oh, there's a space here now.",
			"We can look all the way up, but there's no tiles anywhere.",
			"So we know that we can just move onto the next iteration of the loop.",
			"We haven't found any tiles.",
			"We don't need to bother with it.",
			"Same thing here.",
			"We have a space reference here, tile, found a tile,",
			"shift it down, space here, tile here, shift it down, space here, tile here,",
			"shift it down, space, space, done, and then we rinse, and repeat that.",
			"It's kind of almost like a bubble sort type of algorithm.",
			"Not a sort, but it has the same sort of look and behavior to it, more or less.",
			"Here's just a visual illustration of it.",
			"So start from the bottom, go up, we're looking for spaces here.",
			"No spaces; column is perfectly stable.",
			"We found a space here, tile is there, shift it down.",
			"Restart the loop from the tile, space, space, space, no more spaces;",
			"column stable.",
			"Space found, tile found, shift, space found, tile found, shift, space found,",
			"tile found, shift, and so on, and so forth.",
			"And so that's the gist.",
			"Super, super basic.",
			"But now we actually have to replace the tiles.",
			"AUDIENCE: You don't even need to check.",
			"Once you shift a block down, you don't even",
			"need to check the space above it, whether it's a space",
			"or not because you know that's automatically a space when you just",
			"shifted a block, right?",
			"SPEAKER 1: Yeah.",
			"Actually, that's true.",
			"Yeah, I guess in that case, you wouldn't need to.",
			"But we do need a reference to that space, and keep checking above it.",
			"But yeah, I guess you probably don't need, necessarily,",
			"to check whether it's a space or not.",
			"You can just assume it's a space, and I actually think my code does that.",
			"I'm not 100% sure off the top of my head.",
			"We can check, and see.",
			"",
			"I think it's down here.",
			"No?",
			"Is it?",
			"",
			"Oh no, it's in get falling tiles, I think, which is on line 177.",
			"So for 1 to 8 in x, we keep a spaceY.",
			"So spaceY, we set it zero because that's just a variable.",
			"We don't have a space yet.",
			"So just because you can't index a tile--",
			"you can index Lua tables by zero, but because they're not by default,",
			"we're just setting the zero as like our false space flag.",
			"y gets 8, starting at the bottom.",
			"So while y is greater than or equal to 1, tile gets self.tiles y of x.",
			"In that case, it's going to be at the eighth position.",
			"So space is set to false, but space is our space",
			"found flag, and also whether or not the tile that we just looked at",
			"was a space.",
			"Sorry, no, it's just our space flag.",
			"We check to see if there is a tile at our current position.",
			"So recall, everything gets set to nil.",
			"So we can just say local tile gets self.tiles y x.",
			"This will be nil if there was no tile there.",
			"So if tile, which means if it's not nil, if it equal something, spaceY of x",
			"is going to equal that tile.",
			"We keep a reference to spaceY, which is our last space.",
			"We set tile.gridY to spaceY because we have to reset it to gridY.",
			"We're going to tween it here.",
			"This is how we actually get the falling, tweening behavior.",
			"We're going to tween it's y to tile.gridY minus 1 times 32,",
			"recall, because coordinates are zero based, but Lua tables are one indexed.",
			"Space is false, y is spaceY, and then spaceY gets zero.",
			"",
			"Basically, we're going to start at the--",
			"we're going to put spaceY to that tile, and then we're",
			"going to set spaceY to 0.",
			"I think it actually does, in this case, it is actually checking that tile",
			"to make sure that it's--",
			"yeah, because it's just getting set to the tile--",
			"spaceY being the tile that we just replaced, and just put",
			"into an actual spot.",
			"So it does actually make the check up above to see whether that's a space",
			"or not.",
			"Only one caveat though actually is--",
			"actually, no, that wouldn't be true.",
			"I was going to say, if you're at the top of the screen,",
			"but no because there's no way we can be at the top of the screen,",
			"and have-- yeah, I don't think it would work.",
			"A small optimization you could make is you just assume always a space.",
			"Yeah.",
			"",
			"That's the get falling tiles in a nut shell,",
			"or at least the ones that are falling from gravity.",
			"And then we also have tiles that we want to add to replace them,",
			"and so we'll see that here.",
			"So this code.",
			"So what we need to do to replace--",
			"what do you guys think we need to do to get replacement tiles?",
			"",
			"AUDIENCE: Check response, and check if it's empty, [INAUDIBLE]",
			"but if it's not, then you're done.",
			"SPEAKER 1: Yeah, exactly.",
			"So the response was check to see from the top",
			"if there are any tiles that are empty, and if there are,",
			"then spawn some tiles, and then ideally, tween them to their new positions.",
			"You can basically just assign them to their values here.",
			"So what we need to do, actually, though, is",
			"if we spawn a tile up here to put into any of these positions, their gridY's",
			"need to be set in advance because they're",
			"going to occupy that space anyway.",
			"Their actual y position needs to be tweened.",
			"So because the x and the y are separate from the gridY, and the gridX,",
			"those are just table indices, but not their coordinates.",
			"We can tween those, and it won't actually",
			"have any effect on the data structure.",
			"The data structure itself can maintain-- we can still use the data structure--",
			"put a tile in its right spot in our table,",
			"and then give it the right gridX, and gridY, but tween the x and y value.",
			"We can do whatever we want with those.",
			"We can make them spin around, and stuff as long",
			"as the data structure is intact, and ideally,",
			"as long as we can't input while it's doing it's movement,",
			"and stuff like that because that could create some visual bugs.",
			"And so what we do is we actually disable input when a swap is taking place,",
			"and you'll see that in the distribution code.",
			"But yes, count how many spaces there are.",
			"Spawn four tiles, spawn two tiles, spawn two tiles",
			"spawn four tiles that have already been given their right gridX, gridY,",
			"and then just tween their y to wherever it needs to go.",
			"It's gridY times 32--",
			"gridY minus 1 times 32.",
			"And so that's what we're doing here.",
			"We're just count, and then boop.",
			"That was my favorite part of putting this show together.",
			"And so we're going to get into a couple of minutes of talking about sprites,",
			"and palettes, but I think the one thing--",
			"blanking for a second.",
			"I was going to talk about one last thing.",
			"Let me see if I can figure out what that was.",
			"Oh, right, so in the board--",
			"sorry, in the play state, I believe, is where this is, there is a function.",
			"",
			"So play state has it's own calculateMatches, basically,",
			"where it waits for you to--",
			"where once you've basically swapped any two tiles,",
			"it will calculate whether those tiles have made a match.",
			"",
			"And we're going to get matches via self.board calculateMatches,",
			"the function that we were looking at before.",
			"If there are any matches--",
			"well, we play a sound effect here for every match.",
			"This is where you also calculate the score.",
			"You just multiply the number of tiles in a match by 50,",
			"and part of the assignment will be adding some value",
			"to the individual varieties of the tiles.",
			"",
			"Here, we tween.",
			"So we return also from the board class a table",
			"of tweens for all of the new tiles that we just spawned,",
			"and so what we're going to end up doing is tweening all of them here.",
			"So notice that we're passing in a timer.tween,",
			"this variable, tilesToFall.",
			"That's a definition file that we're just returning from our board class.",
			"And so once those are all finished, then we get new tiles,",
			"and then we tween here.",
			"I think this line is redundant, actually.",
			"I think this might have been a debugging line.",
			"I don't think we need this.",
			"",
			"No, we don't need this at all.",
			"So sorry.",
			"This is the important part.",
			"We're going to tween--",
			"wait, we do need it.",
			"Self.board getNewTiles.",
			"What am I thinking of?",
			"",
			"Sorry, a little bit confused for a second.",
			"I thought this was an empty function that I defined.",
			"Get new tiles.",
			"Yeah, this returns an empty table.",
			"But basically, the gist of it is the play",
			"state, when it calls this function, it will call itself every time.",
			"",
			"And I think this is actually having the result of doing it",
			"instantly here because newTiles is just an empty table.",
			"I think all this should be is just this inside all of this like that.",
			"But that has the result of calling itself again",
			"because when we get new tiles coming from the top of the screen,",
			"we could potentially have a case where we've gotten some matches,",
			"and it's not shown here, but new falling tiles could give us new matches.",
			"So after we calculate matches, let's say maybe this tile dropped here,",
			"but it was a purple, and these two were already there.",
			"We've already calculated matches, but then we",
			"need to do it again, and then do it again if it keeps happening.",
			"And so you should be recursively call self calculateMatches",
			"in that case, which will have the effect of accomplishing that because this",
			"will always look for matches.",
			"And so when we call self calculateMatches here, over, and over",
			"again, until there are no matches--",
			"as long as there are matches, this should keep happening.",
			"You should keep getting scores, and tiles should keep getting cleared.",
			"But as soon as that's not the case anymore,",
			"then self.canInput equals true, and we're not calculating matches anymore.",
			"We don't recursively call the function anymore, and we're done.",
			"And so that's just the point I wanted to illustrate.",
			"Got slightly confused by, I think, what was a vestige of my old code.",
			"Maybe I was trying something, but I think this, ultimately,",
			"should just be this, and I'll test it, and make sure, and then push",
			"the change.",
			"",
			"And it doesn't need to be over 0.25 seconds.",
			"It can just be instant.",
			"",
			"Palettes, really quickly, with something I wanted to cover,",
			"which was just the idea of taking art, and then just-- and I",
			"have a couple of cool examples to show.",
			"Just taking some sort of picture, and then giving it--",
			"only using or some sort of image, and only using 32, in this case,",
			"or some arbitrary number of colors.",
			"This is some fancy stuff that some person named DawnBringer online did.",
			"He generated a very famous 32 color palette called DawnBringer's 32 color",
			"palette.",
			"But basically, it allows--",
			"this is done with just 32 colors we see on the screen.",
			"Those are all dithered.",
			"Dithering is a term which means to just draw two colors pixel by pixel,",
			"interleaved, so that from far away it looks like a brand new color,",
			"and this is a dithering chart.",
			"This just shows you every color here at the very top.",
			"These are all 32 colors.",
			"These are 32, and those are 32 intersected with each other such",
			"that they're just like dot, dot, dot, dot, dot.",
			"Every other dot is every other color.",
			"And so you can do some pretty amazing things with just a few colors.",
			"This is actually done with 16 colors.",
			"All four of those are only 16 colors.",
			"This is just to show you what it looks like when you do it to an actual image.",
			"This is an example of what using a color palette on an image that",
			"doesn't work well with it looks like.",
			"So this is a regular image with I don't know",
			"how many colors, thousands of millions of colors, and this",
			"is using DawnBringer's 32 color palette.",
			"So still looks very similar to what it should.",
			"It's a cat, but there's a lot of weird things going on in the background",
			"because taking an image with a lot of blur, and a lot of distorted color,",
			"has the effect of giving you blotchy patterns when you go down",
			"to a few colors.",
			"But this is an example of an image that has a lot of flatter colors.",
			"There's still a lot of colors in this image.",
			"There are some shades, and stuff like that, but this is thousands of colors,",
			"and this is 32 colors.",
			"So clearly, if you do it on the right thing,",
			"you can actually get really good effects with it.",
			"And so again, not a whole lot of difference, but this one's",
			"got I don't know how many hundreds of thousands of colors,",
			"and this one's only got 32.",
			"And so how it ties back into what we're doing",
			"is this is using a 32-bit color or 32 color palette on purpose.",
			"This is actually DawnBringer's 32 color palette.",
			"Breakout used the same palette, 32 colors,",
			"and a lot of our 2D future lectures will use limited color palettes.",
			"If you're trying to draw sprite art, and you want some quick, and easy ways just",
			"to give your work a little bit of consistency,",
			"I recommend trying to pick 8, or 16, or 32 colors,",
			"and just adhering to using just those.",
			"And you'd be surprised at how much you get out",
			"of it, and how much more cohesive your work will look just",
			"by imposing that constraint on you.",
			"It's an artifact of a real world constraint of former hardware.",
			"The NES only had so many colors it could color each sprite,",
			"like four colors, or something that.",
			"And so you also get a-- if you're going for an authentic retro look,",
			"it will help you in that sense.",
			"And then different from palettes, but related",
			"is palette swapping, which is another term you've probably heard,",
			"which is basically all of these Mario sprites--",
			"",
			"they'll probably start with a gray scale Mario, some like gray version",
			"where each of these separate colors are mapped out",
			"to some table where one equals red, two equals blue, or whatever.",
			"And then you can just shift all of them, and then you",
			"get all of these different nice effects, assuming",
			"that you've created a good palette.",
			"You can get a lot of reuse, and this is actually",
			"how Super Mario Bros. used to do some of its programming.",
			"The clouds and the bushes were the same sprite.",
			"One was just colored green.",
			"It was palette swapped green from the white that the cloud was colored.",
			"So that's the gist of Match 3.",
			"Assignment 3 is going to have a few parts to it.",
			"So time addition on matches.",
			"So when you get a match, you should get time added to the clock.",
			"Currently, right now, you only get 60 seconds.",
			"It's a little bit hard to actually get past level two at this point.",
			"So getting points for every tile in a match.",
			"Make it so that level one starts with simple flat blocks.",
			"So earlier, we saw the array of tiles, and it",
			"was flat tiles on the first index of every color row,",
			"but there were several other patterns like x's, and circles, and triangles,",
			"and stuff.",
			"Make those worth some higher amount of value, each one.",
			"Create random shiny variants of blocks that will destroy an entire row when",
			"you get a match.",
			"So have a block.",
			"It should have some field, shiny or something.",
			"If it's shiny, render it with something to make it look shiny.",
			"You can use particle effect if you want.",
			"You can put a very opaque, or a very transparent maybe yellowish or whitish",
			"rectangle on it to give it a brighter look.",
			"And then if it's in a match, that entire row",
			"should get cleared instead of just that match.",
			"Only allow swapping when it results in a match.",
			"This is an important thing because right now, mathematically,",
			"it's actually very unlikely that you'll get a board that",
			"has matches on it to begin with.",
			"So you're going to have to pick a subset of tiles in your implementation,",
			"and actually use those instead of just using all of them.",
			"Pick six tiles, which you can get variants on, or just whatever flat",
			"colors, and then use only those to spawn your board.",
			"Don't use all 18, or however many there are.",
			"And then optional, if you're curious, if you want, probably,",
			"an arguably better gaming experience with this,",
			"just implement actually playing with the mouse.",
			"Being able to click and drag, or just click individual tiles.",
			"And to do that, you will need to convert--",
			"because we use the push library for virtual resolution,",
			"you'll need to convert the window mouse coordinates",
			"to push coordinates so that they'll map into the game space appropriately,",
			"and so you'll use a function called push to game, where",
			"it takes an x and y, where the x and the y will be your mouse coordinates.",
			"Next time, we're actually going to get into a little bit",
			"more robust of a game, arguably, like a Mario clone.",
			"This is actually where this course started",
			"was I taught a seminar on Super Mario Bros.",
			"We won't be using Super Mario Bros. assets because of copyright,",
			"but we'll be using this tile sheet here, which is very similar.",
			"It's got a nice aesthetic.",
			"We'll cover tile maps.",
			"So how to generate levels using individual tiles.",
			"2D animation, so rather than just like static things",
			"that we've had going on so far, you'll have characters that actually walk,",
			"and jump, and do different things.",
			"We'll talk about how to actually procedure",
			"generate platformer levels, which isn't terribly difficult.",
			"It sounds kind of difficult, but it's actually pretty--",
			"for very simple stuff, it's not too bad.",
			"Basic platformer physics, so hitting blocks, and jumping,",
			"and stuff like that.",
			"We've covered a lot of that with Flappy Bird, actually, and actually,",
			"the bricks from Breakout kind of tie into it a little bit.",
			"Hurt boxes so we can have enemies that hurt you, and visa versa.",
			"And power ups so that you can change your state in some way to make you",
			"larger, or invincible, or whatnot.",
			"That was Match 3.",
			"Thanks a lot, and see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_006": {
		"section": "CS50G 2020",
		"subsection": "Super Mario Bros.",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000300/HarvardXCS50G-V000300.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000300_DTH.mp4"
		],
		"video_duration": 6861,
		"speech_period": [
			2.976, 13.121, 1.333, 2.54, 2.17, 1.85, 2.23, 1.04, 1.708, 4.622, 3.192,
			1.458, 1.8, 3.06, 5.64, 3.082, 1.458, 1.958, 2.022, 2.46, 4.17, 4.64, 3.1,
			3.57, 4.14, 3.36, 2.58, 2.066, 2.124, 2.2, 1.23, 1.77, 3.6, 3.3, 1.23,
			1.33, 1.11, 1.04, 1.14, 3.03, 2.9, 5.31, 1.92, 1.97, 3.29, 4.29, 3.51,
			6.62, 2.2, 4.17, 1.98, 5.49, 3.45, 2.64, 3.579, 1.791, 1.833, 3.397, 1.46,
			3.36, 2.396, 2.374, 2.625, 2.175, 2.01, 1.29, 2.82, 1.27, 2.33, 1.666,
			2.804, 3.81, 2.64, 1.92, 6.57, 3.42, 3.6, 2.82, 2.52, 2.29, 4.79, 2.46,
			1.65, 3.57, 3.57, 2.25, 2.43, 3.39, 3.18, 2.95, 1.879, 1.291, 2.19, 5.1,
			1.78, 4.53, 3.39, 3.15, 2.87, 3.78, 4.11, 3.199, 1.541, 2.32, 1.85, 5.357,
			1.333, 2.56, 4.38, 2.504, 2.416, 2.34, 3.09, 2.19, 2.962, 1.208, 2.7,
			3.18, 1.56, 1.737, 1.083, 1.44, 1.74, 1.509, 2.541, 1.26, 3.34, 1.36,
			0.52, 0.9, 0.708, 1.512, 4.86, 1.83, 3.3, 1.89, 7.18, 3.74, 1.89, 3.66,
			4.56, 2.7, 1.42, 2.0, 4.32, 5.19, 3.21, 3.78, 3.75, 3.78, 3.302, 0.958,
			3.15, 4.54, 3.68, 3.42, 5.31, 3.15, 5.43, 1.06, 3.17, 3.09, 2.0, 0.5,
			2.97, 2.0, 2.88, 3.69, 2.657, 2.833, 1.962, 2.958, 1.95, 1.26, 2.04, 4.89,
			2.4, 2.92, 0.5, 4.98, 5.987, 2.833, 4.649, 4.261, 1.94, 5.21, 1.13, 4.23,
			3.0, 4.007, 2.833, 2.12, 3.984, 4.8, 2.166, 1.11, 0.499, 6.521, 3.99, 2.4,
			3.36, 6.082, 1.208, 1.208, 2.932, 3.69, 3.51, 2.25, 3.846, 1.374, 7.26,
			6.66, 4.68, 2.51, 2.74, 3.78, 3.755, 4.495, 3.96, 2.27, 2.71, 2.85, 2.809,
			1.541, 4.66, 6.76, 4.99, 1.98, 3.42, 4.74, 2.094, 2.416, 3.41, 1.77, 3.24,
			3.18, 2.83, 4.33, 3.63, 1.78, 3.87, 4.71, 6.51, 3.36, 4.66, 3.53, 1.56,
			2.872, 0.958, 3.5, 4.97, 2.22, 3.43, 2.84, 3.0, 3.3, 5.64, 5.22, 2.79,
			2.04, 3.6, 2.91, 3.87, 2.95, 3.54, 2.36, 3.208, 3.092, 8.88, 3.28, 2.39,
			1.68, 3.27, 1.289, 2.041, 1.729, 0.791, 3.88, 3.89, 4.412, 1.708, 2.352,
			1.958, 1.32, 2.041, 2.428, 1.791, 2.22, 4.62, 3.3, 1.877, 2.833, 2.1,
			3.96, 3.99, 3.6, 3.35, 6.58, 1.86, 4.47, 4.38, 3.54, 2.37, 1.33, 3.194,
			2.166, 0.916, 4.214, 3.96, 1.65, 2.89, 2.87, 2.116, 3.594, 3.68, 2.01,
			3.63, 4.2, 1.33, 3.41, 3.01, 2.75, 5.43, 3.324, 2.666, 2.869, 1.791, 1.78,
			3.42, 2.51, 3.18, 6.24, 3.57, 2.37, 5.55, 3.92, 2.316, 3.124, 1.083,
			1.886, 3.131, 1.7, 4.59, 4.72, 3.349, 12.011, 1.97, 2.52, 2.36, 2.68, 4.2,
			3.76, 8.33, 4.05, 5.27, 3.97, 3.61, 3.89, 2.88, 2.07, 6.24, 1.38, 3.45,
			4.81, 6.05, 3.51, 3.57, 3.3, 3.346, 2.624, 2.88, 3.352, 1.958, 3.71, 6.33,
			3.06, 4.374, 2.166, 3.18, 3.33, 5.46, 6.57, 0.96, 0.655, 1.166, 2.391,
			5.45, 2.458, 2.51, 2.38, 1.74, 3.28, 4.08, 4.19, 1.8, 2.37, 3.72, 0.752,
			1.708, 4.14, 4.38, 4.17, 3.92, 1.9, 4.815, 1.375, 1.333, 2.107, 3.627,
			1.833, 3.52, 1.31, 2.52, 3.57, 2.79, 1.38, 3.66, 5.25, 3.03, 3.93, 9.06,
			6.99, 4.08, 0.61, 2.84, 2.19, 4.13, 2.56, 3.39, 2.4, 2.79, 3.42, 1.29,
			3.11, 1.34, 4.82, 3.45, 2.31, 4.796, 2.374, 1.83, 3.1, 3.06, 2.13, 2.51,
			1.63, 2.54, 3.39, 2.84, 3.04, 6.55, 4.03, 2.54, 5.48, 2.069, 2.041, 4.5,
			5.67, 2.34, 3.2, 1.75, 6.86, 2.244, 0.666, 2.124, 5.68, 2.986, 1.92, 3.46,
			2.4, 3.429, 3.041, 1.291, 5.419, 3.69, 2.7, 2.82, 5.25, 1.65, 6.22, 2.78,
			1.09, 2.09, 4.68, 1.23, 2.625, 3.495, 4.77, 6.88, 3.387, 1.583, 0.63,
			3.132, 1.818, 0.87, 1.38, 1.74, 2.25, 4.022, 2.958, 1.48, 2.73, 3.81, 3.0,
			5.52, 3.7, 2.12, 4.02, 2.13, 3.06, 3.22, 3.41, 1.92, 3.15, 2.7, 3.67, 5.0,
			2.58, 1.614, 2.166, 4.94, 4.07, 2.99, 2.24, 5.3, 2.4, 2.37, 3.54, 0.5,
			4.23, 2.45, 3.49, 3.57, 3.53, 5.53, 1.77, 2.75, 3.19, 3.92, 5.59, 3.03,
			4.44, 2.46, 2.95, 1.333, 4.741, 3.166, 3.29, 4.41, 2.25, 3.99, 2.64, 3.27,
			4.71, 3.71, 2.26, 4.797, 1.833, 1.44, 3.93, 2.25, 4.32, 2.49, 1.68, 4.71,
			2.439, 1.791, 2.94, 3.71, 2.77, 2.04, 4.502, 2.458, 6.54, 1.121, 0.499,
			1.38, 0.81, 1.08, 3.42, 2.04, 1.71, 3.24, 2.82, 3.51, 5.07, 2.33, 2.343,
			1.964, 4.903, 0.75, 3.36, 2.07, 2.77, 3.16, 3.07, 3.39, 1.62, 1.4, 1.5,
			2.04, 2.77, 3.69, 4.136, 1.124, 3.5, 2.64, 3.51, 4.17, 3.28, 3.48, 2.934,
			1.166, 3.69, 2.91, 4.05, 4.53, 1.2, 3.52, 2.15, 1.92, 3.45, 1.41, 4.41,
			3.772, 1.208, 3.75, 3.252, 2.208, 2.4, 3.21, 3.36, 1.459, 2.041, 2.56,
			7.77, 2.43, 3.1, 2.962, 1.708, 2.76, 3.78, 3.253, 1.847, 4.02, 4.71,
			3.012, 0.958, 2.291, 3.139, 2.09, 3.91, 6.08, 1.44, 2.85, 0.93, 1.47,
			4.98, 3.09, 1.34, 3.211, 1.749, 2.88, 4.98, 1.34, 3.19, 3.33, 3.9, 2.377,
			0.833, 1.624, 1.886, 3.28, 2.77, 1.72, 2.244, 2.916, 2.04, 3.34, 4.01,
			2.309, 1.721, 2.96, 2.43, 3.449, 3.94, 2.661, 3.712, 2.708, 2.57, 1.94,
			5.0, 4.17, 2.2, 1.54, 3.72, 3.177, 3.333, 4.77, 1.877, 4.473, 1.259,
			0.791, 3.61, 2.57, 4.01, 3.88, 3.99, 1.06, 5.25, 1.34, 4.45, 4.75, 4.76,
			4.25, 7.68, 5.85, 2.22, 2.01, 5.64, 3.75, 3.75, 3.24, 3.22, 3.2, 6.69,
			4.02, 3.24, 2.37, 2.31, 2.85, 5.19, 2.88, 5.13, 5.59, 2.821, 0.499, 2.48,
			1.974, 2.416, 3.34, 1.04, 3.81, 2.2, 2.73, 4.67, 4.38, 3.96, 3.48, 4.59,
			2.61, 6.25, 3.85, 0.57, 2.27, 2.95, 4.79, 4.06, 4.75, 1.44, 0.87, 4.78,
			1.88, 3.22, 3.62, 6.48, 2.44, 7.76, 2.43, 2.73, 3.13, 3.23, 2.64, 1.76,
			3.04, 2.8, 1.11, 3.059, 1.791, 2.574, 1.416, 3.0, 3.84, 2.13, 3.27, 1.817,
			2.083, 1.44, 1.87, 3.35, 6.47, 1.96, 2.25, 3.81, 4.24, 3.29, 4.9, 3.29,
			2.82, 3.44, 4.53, 6.43, 2.09, 3.55, 2.84, 4.83, 1.66, 2.84, 4.02, 3.42,
			2.85, 2.97, 2.91, 5.13, 1.66, 2.49, 0.958, 4.222, 3.24, 2.53, 8.49, 3.95,
			3.21, 3.37, 2.66, 1.5, 2.28, 4.41, 7.54, 3.89, 2.82, 3.08, 2.83, 1.95,
			2.105, 1.7, 0.75, 3.245, 1.86, 9.33, 2.4, 5.16, 1.38, 5.25, 2.73, 7.054,
			2.166, 5.15, 2.58, 2.82, 2.46, 4.68, 2.82, 3.87, 5.1, 1.5, 1.942, 1.958,
			1.782, 3.234, 1.854, 1.26, 1.76, 6.97, 0.69, 3.041, 2.001, 0.832, 2.196,
			3.775, 2.625, 2.21, 4.12, 2.974, 0.936, 0.791, 3.129, 2.55, 3.855, 1.625,
			5.43, 4.11, 1.23, 1.59, 2.1, 3.12, 1.32, 2.38, 3.89, 1.83, 3.69, 3.726,
			2.874, 1.86, 4.382, 0.958, 3.33, 4.26, 7.83, 5.07, 3.24, 3.6, 3.79, 4.38,
			3.8, 1.35, 6.15, 6.54, 5.91, 4.41, 0.69, 2.01, 3.09, 2.64, 4.38, 3.57,
			3.12, 5.76, 3.42, 2.3, 2.12, 2.45, 2.284, 2.416, 1.58, 3.53, 3.87, 1.89,
			1.18, 2.33, 2.58, 2.76, 4.8, 0.881, 1.249, 2.35, 2.49, 3.74, 3.09, 2.148,
			4.401, 2.08, 0.791, 3.72, 3.34, 2.78, 2.97, 3.14, 1.96, 2.07, 2.94, 2.04,
			5.97, 5.67, 4.62, 1.737, 1.583, 1.6, 1.44, 4.224, 1.416, 4.71, 3.3, 4.3,
			1.25, 4.95, 1.17, 2.041, 3.359, 4.83, 3.01, 3.2, 1.29, 3.36, 2.397, 2.833,
			3.65, 1.74, 1.17, 5.88, 2.22, 4.56, 3.99, 2.22, 3.122, 3.648, 2.5, 3.78,
			4.545, 2.185, 2.484, 2.166, 1.82, 3.6, 2.366, 2.874, 1.81, 1.25, 1.89,
			2.52, 7.26, 2.64, 2.61, 3.18, 1.2, 4.23, 3.48, 2.46, 5.04, 2.9, 1.99,
			3.93, 1.26, 5.64, 2.874, 2.916, 2.87, 2.464, 2.416, 2.742, 1.458, 2.82,
			0.5, 0.46, 0.65, 1.98, 1.89, 4.05, 2.29, 1.48, 0.97, 1.791, 4.359, 6.9,
			3.51, 2.97, 5.19, 1.51, 4.5, 2.84, 2.82, 4.68, 2.82, 1.08, 5.31, 1.54,
			4.905, 1.625, 4.74, 3.25, 5.45, 1.36, 1.65, 4.67, 5.422, 1.958, 1.35,
			1.35, 2.04, 6.54, 4.41, 5.4, 3.63, 6.72, 4.92, 2.756, 4.244, 0.75, 2.432,
			1.458, 2.77, 2.685, 3.96, 3.465, 0.84, 1.95, 2.79, 3.16, 3.142, 2.458,
			2.041, 3.089, 2.025, 4.735, 3.47, 4.26, 5.07, 3.99, 5.93, 1.48, 3.34,
			6.06, 3.74, 2.37, 4.81, 5.09, 4.92, 3.69, 4.95, 4.41, 3.9, 5.46, 4.14,
			5.49, 5.79, 2.58, 5.73, 4.32, 1.29, 5.86, 4.52, 3.42, 3.96, 3.9, 3.69,
			6.321, 1.449, 2.73, 5.97, 2.88, 2.1, 3.299, 2.791, 4.38, 2.97, 3.72, 2.43,
			3.99, 5.49, 2.83, 3.47, 0.6, 2.73, 3.99, 3.544, 1.916, 3.18, 5.341, 1.499,
			2.88, 7.23, 4.17, 1.485, 3.465, 1.05, 3.15, 3.2, 1.08, 1.75, 3.3, 4.3,
			4.1, 6.22, 3.366, 1.874, 6.24, 2.81, 2.297, 2.083, 4.54, 4.85, 3.42, 2.1,
			2.52, 1.92, 5.1, 2.82, 8.67, 6.06, 2.61, 5.17, 0.77, 4.95, 6.42, 3.25,
			1.25, 2.13, 3.81, 6.535, 1.625, 3.48, 0.51, 4.21, 2.69, 2.412, 2.958,
			2.29, 2.78, 3.09, 0.87, 2.31, 4.84, 4.514, 2.166, 3.9, 1.254, 2.166, 7.14,
			0.9, 2.59, 1.49, 3.07, 1.48, 3.36, 4.02, 4.95, 3.18, 4.38, 3.758, 3.599,
			1.403, 4.45, 1.65, 4.31, 3.93, 4.33, 2.49, 1.75, 1.63, 2.15, 2.41, 3.39,
			2.58, 4.62, 1.68, 3.63, 5.64, 3.9, 3.012, 1.458, 1.68, 3.094, 1.916, 6.67,
			2.54, 2.63, 2.53, 7.32, 2.52, 4.18, 2.0, 5.01, 4.14, 4.71, 4.02, 3.75,
			2.81, 3.0, 3.73, 1.5, 4.11, 4.455, 5.715, 3.33, 3.51, 6.51, 1.5, 4.22,
			3.76, 1.89, 1.95, 5.461, 1.499, 1.083, 2.667, 3.18, 3.03, 3.07, 1.59,
			3.17, 1.8, 2.16, 5.46, 1.62, 2.57, 5.06, 2.84, 2.16, 2.76, 1.92, 4.929,
			1.791, 1.46, 3.07, 2.55, 2.46, 4.68, 2.82, 2.791, 4.469, 5.04, 1.77,
			5.039, 3.241, 2.24, 0.96, 2.291, 2.179, 2.25, 3.09, 2.7, 4.239, 1.791,
			2.76, 3.46, 5.14, 2.829, 1.611, 2.259, 2.101, 6.279, 3.31, 1.541, 1.8,
			4.38, 6.9, 4.076, 3.124, 2.01, 2.96, 6.46, 2.639, 6.271, 2.2, 2.659,
			7.941, 3.559, 3.321, 1.91, 0.88, 2.292, 0.708, 2.07, 2.399, 1.26, 2.791,
			0.791, 3.529, 0.6, 3.45, 2.61, 2.089, 2.291, 5.97, 1.59, 3.57, 3.977,
			2.083, 1.541, 2.689, 2.85, 2.596, 1.874, 2.27, 3.44, 2.72, 4.11, 0.99,
			5.46, 1.32, 4.555, 1.625, 2.4, 2.91, 3.54, 2.11, 3.22, 0.756, 1.749,
			3.311, 1.904, 2.07, 2.97, 2.88, 3.33, 2.37, 1.52, 1.75, 2.251, 2.886,
			2.405, 3.332, 3.166, 1.6, 3.08, 5.73, 2.63, 3.41, 2.99, 4.11, 2.31, 2.67,
			2.91, 5.19, 4.8, 3.9, 4.22, 3.39, 3.277, 1.583, 7.35, 5.25, 3.24, 1.73,
			4.31, 0.5, 4.982, 2.708, 1.208, 0.922, 3.083, 2.227, 3.69, 3.45, 4.62,
			1.86, 4.29, 5.1, 4.219, 1.541, 2.16, 3.6, 3.3, 2.484, 4.15, 0.996, 6.474,
			1.888, 1.708, 2.15, 1.583, 1.067, 2.55, 5.43, 3.265, 2.855, 5.82, 4.38,
			3.69, 1.08, 1.98, 2.13, 2.4, 3.0, 1.729, 1.291, 1.65, 3.194, 1.916, 1.11,
			4.02, 2.49, 2.4, 4.12, 4.22, 1.886, 2.374, 2.32, 2.7, 3.29, 4.08, 4.267,
			3.428, 0.5, 2.505, 3.84, 4.29, 3.72, 2.58, 1.62, 2.791, 4.979, 4.35, 5.7,
			2.59, 5.15, 5.58, 2.91, 6.61, 3.14, 3.27, 3.51, 2.85, 3.84, 2.64, 3.53,
			6.6, 2.53, 4.2, 3.14, 2.65, 2.85, 2.76, 1.8, 3.36, 1.73, 2.89, 3.36, 5.49,
			3.345, 1.875, 2.25, 1.8, 3.95, 2.3, 3.89, 2.23, 3.6, 2.75, 3.48, 3.78,
			3.63, 2.504, 1.666, 3.93, 2.91, 3.21, 2.88, 5.25, 4.32, 5.09, 5.08, 4.2,
			3.63, 1.68, 3.21, 2.49, 4.44, 5.22, 1.26, 4.279, 2.291, 3.87, 2.55, 3.052,
			3.346, 1.917, 0.875, 5.22, 2.37, 7.83, 6.9, 5.085, 4.185, 3.09, 6.93,
			2.78, 1.27, 2.37, 3.09, 3.549, 2.791, 1.749, 1.301, 4.03, 1.49, 3.75,
			1.14, 4.62, 2.83, 2.18, 4.47, 5.34, 4.77, 0.76, 5.18, 4.14, 3.79, 2.87,
			1.79, 3.47, 2.7, 5.15, 1.479, 1.791, 3.48, 5.25, 10.74, 2.67, 2.31, 3.45,
			2.37, 3.91, 4.088, 1.956, 3.912, 3.434, 1.06, 4.84, 4.22, 2.1, 1.41, 3.21,
			4.65, 5.19, 3.54, 2.905, 2.375, 4.02, 2.37, 3.0, 2.49, 1.02, 2.4, 2.37,
			1.05, 3.09, 2.61, 4.71, 2.85, 5.31, 1.84, 3.62, 2.16, 2.624, 4.936, 4.86,
			1.5, 2.22, 2.64, 1.767, 2.583, 1.92, 3.75, 4.46, 2.82, 2.85, 2.112, 2.458,
			1.35, 2.53, 2.03, 4.7, 2.5, 6.004, 2.286, 2.3, 3.19, 1.38, 3.36, 3.18,
			2.67, 1.92, 3.32, 3.37, 1.47, 1.333, 1.639, 1.708, 4.95, 1.904, 3.166,
			2.28, 4.5, 2.4, 2.79, 4.98, 2.58, 5.012, 1.708, 3.24, 4.02, 1.35, 2.417,
			2.416, 1.707, 3.99, 3.6, 2.41, 2.63, 4.265, 4.55, 1.125, 1.47, 1.708,
			4.072, 0.72, 2.73, 2.16, 3.87, 1.61, 2.974, 2.166, 2.25, 4.8, 1.17, 4.23,
			2.52, 4.56, 1.56, 2.91, 3.72, 5.77, 2.24, 2.916, 4.194, 2.82, 4.29, 8.78,
			2.7, 4.72, 1.91, 2.22, 3.9, 3.572, 2.458, 4.02, 3.419, 2.041, 2.729,
			1.791, 1.81, 4.71, 1.26, 3.0, 3.48, 2.05, 5.15, 0.99, 1.77, 4.475, 1.375,
			4.85, 4.96, 3.161, 1.999, 2.166, 4.364, 3.43, 1.09, 2.55, 4.15, 2.29,
			1.754, 1.638, 3.208, 4.74, 5.41, 0.92, 3.23, 3.86, 0.5, 3.752, 1.878,
			3.61, 2.6, 3.78, 2.73, 3.39, 4.826, 2.374, 5.4, 1.38, 3.27, 5.35, 4.22,
			3.9, 1.64, 2.77, 0.63, 2.4, 3.45, 3.0, 4.92, 4.7, 2.02, 3.27, 1.65, 5.232,
			1.458, 4.26, 3.45, 5.16, 3.0, 1.89, 2.16, 2.97, 3.48, 3.33, 2.61, 1.56,
			4.83, 2.33, 2.62, 1.47, 2.79, 3.45, 3.32, 5.11, 2.73, 2.4, 3.3, 2.01,
			3.436, 1.124, 1.83, 3.812, 1.708, 1.42, 1.79, 3.99, 3.99, 3.9, 2.23, 2.84,
			2.13, 4.98, 2.55, 4.59, 2.43, 4.87, 4.31, 1.51, 7.1, 3.54, 1.32, 2.91,
			3.447, 2.333, 5.19, 2.87, 4.97, 3.78, 3.69, 4.199, 1.541, 3.347, 1.833,
			3.64, 1.43, 2.096, 2.434, 5.42, 1.48, 2.94, 3.03, 5.02, 2.58, 2.18, 3.44,
			1.64, 4.44, 2.22, 4.95, 1.56, 2.22, 3.54, 7.02, 6.43, 5.35, 3.01, 2.38,
			2.39, 2.65, 4.58, 1.422, 2.208, 1.98, 2.79, 5.94, 4.16, 3.31, 2.46, 3.27,
			3.6, 2.59, 1.22, 2.85, 5.37, 2.86, 2.63, 3.9, 2.2, 6.53, 1.83, 3.64, 4.31,
			3.63, 2.64, 1.95, 3.9, 4.41, 2.406, 2.874, 5.086, 1.874, 3.33, 2.19, 1.94,
			3.436, 2.874, 0.916, 4.064, 1.83, 2.041, 3.679, 1.33, 3.27, 1.92, 3.315,
			2.625, 1.841, 0.499, 1.948, 2.597, 1.041, 3.555, 1.749, 2.75, 1.56, 2.38,
			0.958, 4.072, 1.975, 6.995, 5.82, 4.73, 3.09, 7.326, 1.124, 3.171, 1.999,
			1.5, 3.29, 3.12, 4.546, 2.624, 3.57, 3.0, 3.051, 1.999, 2.375, 1.695,
			3.63, 1.83, 4.0, 6.66, 5.16, 1.62, 4.56, 3.36, 2.46, 1.08, 2.82, 1.416,
			4.634, 2.38, 1.35, 4.02, 2.83, 1.25, 3.39, 1.9, 1.85, 2.61, 3.15, 2.58,
			2.66, 1.28, 1.61, 2.28, 4.51, 1.94, 7.41, 2.3, 2.852, 1.958, 3.63, 4.401,
			2.922, 3.581, 0.791, 2.975, 4.81, 3.21, 3.05, 3.06, 5.04, 3.18, 4.14,
			3.75, 3.84, 4.62, 4.12, 3.217, 2.083, 4.23, 2.995, 1.025, 5.22, 2.99,
			2.84, 3.32, 2.38, 3.71, 3.81, 0.54, 3.415, 0.875, 5.28, 3.26, 2.95, 1.69,
			3.09, 3.02, 2.22, 4.41, 3.16, 7.73, 3.3, 3.695, 2.935, 1.365, 7.635, 2.4,
			4.08, 2.865, 1.875, 1.499, 1.441, 3.59, 5.29, 2.016, 2.124, 2.86, 3.72,
			7.874, 2.916, 4.34, 3.03, 3.38, 2.19, 4.71, 1.75, 2.19, 4.06, 3.44, 5.69,
			2.13, 2.06, 4.39, 3.579, 1.791, 1.9, 3.59, 3.48, 3.78, 3.09, 4.12, 3.03,
			1.75, 2.291, 3.676, 2.083, 2.49, 4.29, 6.66, 3.07, 2.81, 3.63, 1.32, 4.76,
			3.25, 6.15, 3.6, 1.35, 2.52, 3.06, 3.21, 1.68, 4.85, 1.96, 2.232, 0.708,
			0.99, 1.74, 1.26, 4.83, 7.47, 2.88, 2.4, 4.92, 2.91, 5.52, 2.43, 1.834,
			2.332, 2.319, 4.225, 2.98, 3.14, 3.04, 0.5, 2.125, 3.115, 2.86, 4.26,
			10.38, 2.86, 1.61, 2.741, 1.999, 3.08, 2.6, 3.02, 3.554, 0.916, 2.37,
			2.255, 3.637, 5.82, 4.868, 2.494, 1.874, 1.872, 4.92, 3.608, 1.476, 1.968,
			4.928, 3.35, 6.37, 0.5, 2.64, 5.43, 1.8, 4.049, 2.791, 4.71, 5.4, 3.51,
			3.39, 3.402, 2.208, 5.59, 3.95, 5.49, 2.28, 4.59, 1.98, 2.34, 1.92, 7.38,
			5.32, 2.27, 3.345, 1.875, 4.23, 1.711, 2.249, 2.82, 2.22, 1.515, 4.035,
			1.27, 4.35, 1.49, 5.39, 4.0, 5.47, 2.072, 1.458, 4.2, 4.89, 3.69, 5.22,
			2.73, 2.036, 0.874, 4.89, 3.414, 2.916, 1.5, 4.62, 5.08, 3.59, 2.31, 3.33,
			2.85, 4.14, 2.97, 2.67, 3.3, 2.1, 3.65, 3.42, 3.76, 2.13, 1.13, 1.0, 2.15,
			0.888
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: Hey, good evening.",
			"Welcome to GD50 lecture four.",
			"This is Super Mario Bros.",
			"As seen on the slides here, though, we're",
			"not using the actual Super Mario Bros. sprite sheet.",
			"This is sort of like a rip off.",
			"But I found a really awesome sprite sheet",
			"that has all the basic tiles that we need to get this thing working.",
			"There's a link in the distro as to where you can find it online.",
			"I had a lot of fun playing with it.",
			"So hopefully, maybe if you're curious, you",
			"can use some of the sprites in there to go off and do your own thing.",
			"But Super Mario Bros.-- the actual game which this lecture and assignment are",
			"based off of-- is the game shown here.",
			"I think everybody knows what it is.",
			"It's probably the most famous game of all time.",
			"But this game came out in 1985--",
			"sort of revolutionized the gaming industry.",
			"It was the game that brought the gaming industry from a crash",
			"in the '70s thanks to a lot of poor game making policies",
			"and companies and low QA standards.",
			"It basically took the gaming crash of the late '70s, early '80s",
			"and brought games really back to the forefront of people's consciousness.",
			"This and games like Legend of Zelda and a lot of other NES titles",
			"made Nintendo basically the dominator of the video games",
			"industry in the '80s and '90s.",
			"And even today, with games like Breath of the Wild,",
			"they're still doing their thing.",
			"This is Super Mario Bros.",
			"It's a 2D platformer.",
			"And what this basically means is you control Mario, who's a plumber.",
			"He goes around, walks sort of looking at him from the side.",
			"He walks left to right.",
			"He can jump up and down.",
			"He's affected by gravity.",
			"He can hit blocks.",
			"He can jump on enemies.",
			"He can go down pipes, and there's a bunch of levels.",
			"It was, for its time, quite a complicated game,",
			"and it spawned numerous offshoots and rip offs and other good quality",
			"platformers.",
			"While we talk about Super Mario Bros. today,",
			"some of the topics we'll actually be talking about are tile maps--",
			"so how we can take basically a series of numbers--",
			"tile IDs-- and turn that into a game world.",
			"As you can see here, the game is broken up into blocks of 16 by 16 tiles.",
			"You can see the bricks and the question mark blocks,",
			"and the pipes are even all composed of simple tiles.",
			"And they map to IDs.",
			"And when you take a 2D table or array and you just iterate over all of it",
			"and render the appropriate tile at the appropriate x, y,",
			"you get the appearance of existing in some game world,",
			"even though it's just composed of a bunch of tiny little blocks.",
			"2D animation is something we'll talk about.",
			"So far, we haven't really done any animation",
			"at all in terms of at least characters.",
			"We'll do that with Mario.",
			"He'll have-- our version of Mario, an alien--",
			"when he's moving, he'll have two frames of animation.",
			"The frames of animation-- that's sort of like a flip book",
			"if you've ever used one, where you can see individual pictures.",
			"And when you display them rapidly back to back,",
			"you get the appearance of animation.",
			"We'll be talking about that.",
			"Procedural level generation-- we'll be making all of our levels",
			"generate randomly.",
			"So every time we play the game from the beginning,",
			"everything will be completely different.",
			"We don't have to hard code a finite set of levels.",
			"Everything will be dynamic and also interesting, in my opinion.",
			"We'll talk about the basics of platformer physics",
			"and how we can apply that to our game world",
			"here, because we are just using a table of tiles,",
			"each with an x, y that's hard coded in the game world space.",
			"All we have to really do is take an x, y of Mario, for example,",
			"and then just divide that by the tile size.",
			"And then we get basically what tile that is",
			"in our array at that point in the world.",
			"And so it's really easy to do arbitrary collision detection based",
			"on what direction you're going and not have to iterate over",
			"every single tile in your world.",
			"Because it's just a simple mathematical operation to get the exact tile",
			"given two coordinates, since the world is in a fixed space.",
			"We'll have a little snail in our game that",
			"walks around and does a couple of random animations",
			"and will go after the player, sort of like a little basic intro to AI.",
			"And then lastly, we'll touch on things like power ups and game objects",
			"and how we might be able to influence Mario and pick those up",
			"and that sort of thing.",
			"So first though, a demo.",
			"So if anybody is willing to come up on stage",
			"to test out my implementation of Mario, that would be awesome.",
			"James?",
			"I'm going to go ahead into here, so we should be all ready to go.",
			"So as soon as you're ready, go ahead and hit Return there,",
			"and you should be up and running.",
			"So as a part of having random levels--",
			"so currently, we have a green alien.",
			"The blocks have a random chance in this case to spawn a gem.",
			"And so once they do, you can pick the gem up.",
			"Either they have a gem or they don't.",
			"You can pick it up, and you get 100 points.",
			"As we can see, the world is sort of shifting",
			"based on where James's avatar is, so it tracks the character.",
			"We have some notion of a camera.",
			"You're getting unlucky with the blocks so far.",
			"So you can fall down through the spaces, so you probably want to avoid that.",
			"But if you want to demonstrate doing it--",
			"so in that case, we collided with the two blocks below it.",
			"The one on the right had the gem.",
			"So go ahead and just fall down so we can demonstrate.",
			"So when we fall down, we detect whether the player",
			"has gone below the world limit, and then we start him back",
			"at the beginning of the game.",
			"You can press Enter, it should regenerate a brand new world.",
			"Notice how we have random holes in the ground.",
			"We have random tiles.",
			"We have random toppers for them.",
			"All the blocks are random.",
			"We have snails now.",
			"They're sort of chasing after James.",
			"He can jump on top of them.",
			"There's a lot of little moving pieces here, but a lot of them",
			"are actually pretty simple.",
			"And I'll show you very shortly.",
			"JAMES: Should I stop?",
			"COLTON OGDEN: Yeah, sure.",
			"That would be a great point.",
			"So thanks, James.",
			"Appreciate it.",
			"Currently, there is no notion of a level ending.",
			"That's part of the piece that actually will",
			"spawn an object that the player can interact with to just sort of retrigger",
			"a new level, basically.",
			"But the whole engine behind this basic platformer is there, and it all works.",
			"And so our goal is seen here.",
			"Our goal in this lecture is to demonstrate",
			"how we can get things like a character that moves around on a screen,",
			"and a camera that tracks their position, and tiles that are randomized.",
			"And maybe there are pillars in the ground, holes in the ground.",
			"All of this, again--",
			"at least the tiles-- are stored as just numbers.",
			"So all we really need to do is perform a transformation on a series of numbers.",
			"Maybe 1 is equal to a tile being there, 0 is equal to empty space.",
			"And so just by looking at it, we'll see we go column by column.",
			"We can say, oh, maybe there's a chance to not spawn any tiles along the y",
			"column on this x of the world map.",
			"Or on this particular y, maybe instead of spawning the ground level,",
			"we spawn a couple above it and down so that we get a pillar",
			"and so on and so forth.",
			"And it's just this summation of these randomizations",
			"equals a nice little variety of game levels.",
			"So the first thing we should talk about really is what a tile map is.",
			"And what I've alluded to so far is you can really think of a tile map",
			"as being effectively a 2D array or a table of numbers.",
			"And it's a little more complicated than that depending on how complex",
			"your platformer is, because some numbers are equal to tiles that are solid",
			"or not.",
			"So you should be able to check whether a tile is collidable,",
			"meaning that the player or whatever entity you want to check for",
			"can actually collide with it or",
			"Not.",
			"So obviously, we don't want to trigger a collision on empty tiles.",
			"We want the player to move freely through those.",
			"But if they run up against a wall or if gravity is affecting them,",
			"and they hit tiles below them or above them, we want to detect a collision",
			"and then stop them based on which direction they're moving.",
			"And depending on how complicated you get with your platformer, maybe",
			"you have animated tiles, for instance.",
			"So if a tile's animated, it will display a different frame of animation",
			"based on what timer you're on.",
			"Really, the sky's the limit.",
			"In this case, we'll be fairly simple.",
			"Our tiles will mostly just be numbers with a couple of other traits, which",
			"we'll see later on.",
			"And this is just an example here of a very simple map-- just a colored",
			"background.",
			"We have our character, and then we can sort of visualize all of those tiles",
			"as being just for the sake of theory 0s or 1s.",
			"So tiles0-- so I'll actually get into a little bit of implementation",
			"here as to how we can get drawing some very simple tiles.",
			"So if you're looking at the distro, in tiles0",
			"is going to be where we start off here.",
			"And I'm going to go ahead and run tiles0 so we can see what that looks like.",
			"So this is just tiles0.",
			"It's a much simpler program than what we just saw, but all we're doing here",
			"is just a color in the background and then tiles.",
			"",
			"Off the gate, anybody have any ideas as to what the first step would",
			"be if we wanted to implement this?",
			"",
			"AUDIENCE: Just put the tiles in a loop, draw them, and then have a background?",
			"COLTON OGDEN: So put the tiles in a loop, draw them,",
			"and then have a background.",
			"Yes.",
			"So basically, if this is main.lua in our tiles0,",
			"first thing we're going to need is a tiles table to store our--",
			"we're not going to be storing just flat numbers.",
			"We'll be storing little mini tables that have a number in them and ID,",
			"so we can say tile.ID if we have a 2D table.",
			"Here, we have an empty table.",
			"We're going to populate that.",
			"",
			"If we're going to draw our tiles, we are going to need a sprite of some kind.",
			"And what I did was I just chopped out a little segment here.",
			"So this is tiles.png.",
			"It's just literally one tile from the main sprite",
			"sheet that comes with the distro.",
			"And then on the right side is just transparent so that we can offset--",
			"maybe tile ID 1 is equal to solid block, and then tile ID 2 is equal to empty.",
			"And so if we recall generate quads, we can split up a sprite sheet",
			"into however many quads we want to.",
			"Let's say this is 16 tiles tall--",
			"each tile-- and then the whole thing are two tiles wide.",
			"So it needs to be split into two separate tiles.",
			"We'll just generate quads, and then we'll have, recall, a table.",
			"Each of the indexes of that table will be",
			"a quad that maps to one of these tiles.",
			"So number 1 will be this tile here, number 2",
			"will be the transparent bit over here, and then",
			"that's how effectively our IDs are going to map",
			"into what gets drawn onto the screen.",
			"The ID is the index into our quad table.",
			"So going back into tiles0, we have here just a map width and height.",
			"We're just going to say generate a map 20 by 20.",
			"RBG-- we're just going to make it random,",
			"so we're going to clear the screen with a random color.",
			"And then this is the quads = GenerateQuads.",
			"And notice that we're passing in tile size here.",
			"It's good practice just to make your tile size a constant.",
			"So our tile size in this entire lecture--",
			"they're all going to be 16 by 16.",
			"And so since they're symmetrical, we just pass in tile size TILE_SIZE.",
			"And then here is where we actually end up spawning the map--",
			"so nested for loop.",
			"y gets 1 to map height, x gets 1 to map width.",
			"Remember, we have to insert a blank table into the base table that's",
			"going to act as our current row.",
			"And then in that row, we're going to add a small at tiles y,",
			"because y is going to be up here-- our current row and ID.",
			"And so what we're doing here is if y is less than 5--",
			"meaning we'll just set an arbitrary point for the ground, basically.",
			"If it's less than 5 tiles from the top, then just make it the sky.",
			"And so sky-- up here on line 24, 25-- we just",
			"set two tile IDs, as I said before.",
			"Sky is 2, so it's going to be on the right side of the sheet.",
			"And then ground is one.",
			"It's going to be the very first quad generated in the sheet.",
			"So if y is less than 5, that ID should be equal to sky else",
			"it should be equal to ground.",
			"And so down here is where that comes into play.",
			"We're going to clear the screen with our random color.",
			"We're going to iterate over the loop, as James said.",
			"We're going to get the tile at tiles y x,",
			"and then we're just going to draw the sheet and the quads at that tiles ID.",
			"And then recall, since tables are 1 indexed but coordinates are 0 indexed,",
			"we take the x and the y, subtract 1 from them,",
			"and then we just multiply them by tile size.",
			"And that has the effect of drawing each of those tiles",
			"at their respective point in the world and making",
			"it seem as if we have this world-- this bunch of bricks",
			"with a random background every time.",
			"Which isn't all that interesting, but just a little bit more variety.",
			"And so that's the very basic gist behind it.",
			"I mean, it's essentially almost the same thing as what we did in match three,",
			"where we just mapped the individual tiles that",
			"were in the grid to indexes in the tile sheet based on the color and variety.",
			"Only this time, they're always going to be in the exact same place,",
			"so we don't have to worry about whether their x and y are",
			"different from their grid y and grid x.",
			"We're not maintaining a reference to those.",
			"And so that's static tiles.",
			"Does anybody have any questions about how we just",
			"draw static tiles to the screen?",
			"Pretty basic stuff.",
			"",
			"The whole name behind side scrolling game",
			"is that the tiles scroll based on what we're doing in the game.",
			"It can be an auto scroller, in which case",
			"maybe you're an airplane that's sort of going",
			"through a level that's scrolling automatically,",
			"and you're shooting things.",
			"And you're not really in control of where you go.",
			"Or it can be like Mario, where you control an avatar.",
			"And you can walk around and jump and stuff,",
			"and the camera will always be fixed on you.",
			"And so the scrolling is just relative to where your character's x and y are.",
			"So I'm going to show you guys an example of how we can",
			"get scrolling implemented in our game.",
			"And to do that, the function that we're really going to be looking--",
			"at a new function--",
			"is love.graphics.translate(x, y).",
			"And so what that does is effectively just translates",
			"Love2D's coordinate system so that whenever we draw something,",
			"it gets automatically shifted by x, y.",
			"And so that has the effect of the everything being sort of skewed",
			"based on the x, y that we pass it.",
			"And so if we maintain a reference to where the character is,",
			"we can just shift where everything gets drawn on the screen.",
			"And that will have the effect of it being a camera, but it's not.",
			"All we're doing is just shifting the coordinate system",
			"based on some offset--",
			"x being in this case where the players is effectively.",
			"AUDIENCE: So it changes the whole coordinate system?",
			"COLTON OGDEN: It does.",
			"It shifts everything in the coordinate system that you draw by the x and y.",
			"And so that will basically affect what's getting rendered",
			"into the active window at that time.",
			"",
			"So I'm going to go ahead and pull up tiles1 here",
			"so we can see how this works.",
			"Let me go ahead and first run the program.",
			"So if we're going into tiles1 in the distro,",
			"currently it looks almost identical.",
			"But I can move it if I just press left or right.",
			"And so we can see here, this is where the 2D array of tiles",
			"gets cut off here.",
			"And then it also cuts off, because we're only generating a 20 by 20 level.",
			"It also gets cut off at the very right side as well.",
			"And these are details you would normally hide from the user",
			"by just clamping the x between 0 and the right side",
			"of the map minus VIRTUAL_WIDTH.",
			"And that will have the effect of whenever you get to this point,",
			"it won't let you go right anymore, and same thing for the left side.",
			"Well, all we're doing right now-- we're not",
			"doing it based on the character at all.",
			"We're just using keyboard input.",
			"So let's go ahead into tiles1.",
			"",
			"And so the important thing that we're going to look at is--",
			"as I just alluded to, we're calling love.graphics.translate",
			"on some value called cameraScroll.",
			"",
			"It has to be a negative value, because if we're moving to the right",
			"up here or to the left--",
			"if we're moving to the left, camera scroll basically is going to decrement,",
			"so it's going to get less.",
			"So we can say the camera scroll when we're",
			"going left is going to be 0 or less if we're starting at 0,",
			"or it's going to decrement.",
			"If we press right, camera roll should increase.",
			"If we want the appearance of moving to the right or moving to the left,",
			"you actually have to translate by the opposite direction.",
			"Because if we look at this, and if we call love.graphics.translate positive,",
			"all of this is going to get moved to the right.",
			"So it's going to have the appearance of us moving left.",
			"And if we translate it to the left by a negative amount,",
			"it's going to have the appearance of us moving right.",
			"So if our scroll is positive and we want to move to the right,",
			"we actually have to translate by a negative amount.",
			"And so that's why I'm calling negative math.floor(cameraScroll).",
			"Does anybody know why we're calling math.floor on cameraScroll",
			"instead of just calling negative camera scroll?",
			"Does anybody remember what math.floor does?",
			"So math.floor will return the--",
			"it'll basically truncate the number down to the lowest integer.",
			"It will basically take off the floating point value.",
			"Because we're rendering to a virtual resolution",
			"with push, if we basically offset the translation by a fractional amount,",
			"you'll get artifacting.",
			"Because it's taking your window and just condensing",
			"your image onto a virtual canvas, you'll get weird blur and stuff like that.",
			"So whenever you draw something and you have a fractional number for something,",
			"and you're drawing it to a virtual canvas that's been magnified",
			"or it's being condensed, just make sure to math.floor it",
			"so you don't get any weird blur artifacting.",
			"If you take this out and experiment around, or even if in the distro",
			"you take it out of the player's position, you'll see the player",
			"will get weird blurry artifacting and stuff like that.",
			"So that's why that's there, in case you're curious.",
			"And so all we're doing here-- we're just saying",
			"if it's equal to left, scroll the camera left, scroll it right,",
			"or basically decrement our camera scroll and then increment or camera scroll.",
			"And then just use the negative version of that here.",
			"You could also just assign camera scroll equal to positive",
			"when you move left and negative when you move right,",
			"and then you could give it the regular camera scroll here.",
			"But it's sort of mentally flipped in terms of this part.",
			"So I just made the decision to decrement it here when we're pressing left,",
			"because we're going less on the x and then more on the x when we press right.",
			"Does this make sense?",
			"Anybody have question?",
			"AUDIENCE: I have a question.",
			"Is there a corresponding function in JavaScript",
			"and in other languages like this where you can shift a whole coordinate?",
			"COLTON OGDEN: Is there an equivalent function in JavaScript",
			"where you can shift the whole coordinate system?",
			"Not in base JavaScript, probably.",
			"I'm not too familiar with CSS.",
			"There might be a CSS function that does it.",
			"In a lot of 2D game engines, yes, I would say.",
			"And a lot of actual 2D game engines will have a camera object, which",
			"sort of encapsulates this behavior.",
			"Love2D doesn't have a camera, so this is sort",
			"of why we're doing this-- is because it's kind of a lower level game",
			"framework, Love2D.",
			"It doesn't really give you as many things",
			"right out the gate, which makes it great for teaching these concepts.",
			"But a more robust solution like Unity or Phaser",
			"or a lot of other game frameworks is that they'll just have a camera object.",
			"And you just basically give that your x, and then you just move that.",
			"You basically tell that to track the player--",
			"like camera.trackPlayer or trackEntityPlayer--",
			"and that'll have the same effect.",
			"It's a little bit more abstract.",
			"It's a higher level than what we're doing,",
			"but it's the same exact principle underlying.",
			"So any other questions as to how this works?",
			"",
			"All right, cool.",
			"So that's all we're effectively doing.",
			"We're just getting a camera scroll, decrementing it and incrementing it.",
			"And then just every frame, we're translating everything",
			"before we draw everything.",
			"You have to do the translation before you draw, because everything that you",
			"draw after the translation gets affected by the new coordinate system change.",
			"So that's scrolling.",
			"Let's get to actually talking about drawing a person-- an avatar--",
			"more than just a set of tiles, since that's what the game revolves around.",
			"If we look at character0, this would be our first example here.",
			"This is just going to be a very simple example--",
			"charactr0.",
			"",
			"You guys probably know how this works already.",
			"All we're doing is just drawing a sprite to the screen--",
			"so just love.graphics.draw.",
			"We're getting quads from a tile sheet.",
			"I believe it's in the slides.",
			"The actual sheet is here.",
			"So we have this little guy--",
			"several frames of animation.",
			"It's 16 wide, 20 tall, and we just take a quad.",
			"We split it up into quads first.",
			"So we know that it's 16 wide by 20 tall, so we just generate quads",
			"on this image by 16 and 20.",
			"And then in this example, all we're doing",
			"is taking the first frame, which is quads1, and just drawing that.",
			"As you can see here, we have a bunch of different things.",
			"We have like a crouching state, and we'll",
			"get to more about animations in a little bit.",
			"But here, we have him climbing up a ladder.",
			"But you can see all these different frames.",
			"We'll end up showing how you can play them back to back",
			"and get different animations.",
			"But for the sake of this basic example, all we're doing",
			"is just rendering the very first frame.",
			"And we can see that--",
			"let me make sure I'm in the right file, which I am--",
			"we are getting the character sheet here on line 43 and 44.",
			"And then we have to give him an x, So characterX, characterY.",
			"In this case, we're just setting him above tile 7,",
			"so we do 7 minus 1 times TILE_SIZE because tiles are 1 indexed",
			"but coordinates are 0 indexed.",
			"And then we just subtract the height so that he's",
			"right above the tile instead of right at the tile.",
			"And then down here, we do a love.graphics.draw",
			"on, as I said before, just characterQuads 1.",
			"Just a very basic hard coded example.",
			"Any questions at all as to how this works?",
			"",
			"So now let's say we want him to move.",
			"What do we need?",
			"What's the next step if we just wanted him to move?",
			"",
			"AUDIENCE: Give him an x and y?",
			"COLTON OGDEN: Yes, give him an x and y.",
			"So yes, so he does have an x and y already.",
			"So if you look at-- am I in the right one?",
			"So if you go to character0, this is character0 still.",
			"We have given him an x and y already, but there needs to be another step.",
			"What's the other step involved?",
			"",
			"So if we wanted to move, we need to check for keyboard input.",
			"And then we need to take his x--",
			"we're just going to move him on the x-axis for now.",
			"We basically need to take his characterX variable up here,",
			"and we need to modify that.",
			"We can basically do the same thing that we did down here in love.update.",
			"Previously, it was on the coordinate system--",
			"love.graphics.translate.",
			"We modified the camera scroll.",
			"We set that equal to scroll speed times delta time.",
			"We subtracted or added it.",
			"In this case, what we're doing is we have a new constant called",
			"CHARACTER_MOVE_SPEED, and we're just doing that exact same operation",
			"but on characterX instead of cameraScroll.",
			"So the end result of that is that we have the character here.",
			"And then we can move him left or right, and he go off screen.",
			"Now, there's a couple of things wrong.",
			"What's wrong?",
			"What are some of the things that are wrong with the scene right now?",
			"AUDIENCE: The camera should move with him.",
			"COLTON OGDEN: Camera should move with them.",
			"AUDIENCE: No animation.",
			"COLTON OGDEN: Does not have animation.",
			"Those are probably the two real things that are wrong.",
			"So camera does not track him, which is an important thing.",
			"Obviously, we want to be able to maintain a reference to our character,",
			"unless we're at the left edge of the screen.",
			"If we're at the left edge of the screen, this is actually OK.",
			"And that's part of the distro-- is we clamp the x so",
			"that it doesn't go past the left edge.",
			"But if we're beyond the middle and not to the right edge of the screen,",
			"it should be moving along with him and vice versa.",
			"And then he needs to animate, so his sprite",
			"needs to change every certain number of seconds whether he's moving.",
			"And it has to be only when he's moving, right?",
			"If he's standing still, you can have an idle animation.",
			"Some characters will tap their foot and do stuff like that.",
			"But let's say for the sake of this example we want him just",
			"to stand still when he's idle.",
			"And we want him to have an actual animation when he's moving.",
			"We need to take care of these two pieces--",
			"three pieces if you count the idle animation part.",
			"So let's go into character2 and take care of the first part, which",
			"is tracking him.",
			"So let me go into character2.",
			"Let's run it first so we can see what it looks like.",
			"",
			"So now the camera is basically affixed to the player.",
			"In this example, we don't take care of the left edge issue.",
			"In the distro, that's fixed.",
			"But we have the basic side scrolling mechanic-- take a character,",
			"follow him.",
			"How do you think that we're accomplishing this?",
			"",
			"Yes.",
			"AUDIENCE: Translate the drawing against the characterX?",
			"COLTON OGDEN: Yes, exactly.",
			"And it can't be exactly the characterX though,",
			"because if it is, then the character is going to be on the left edge, right?",
			"So we need to offset our x that we translate by.",
			"We need to basically translate by his x minus half the screen space",
			"plus half the character width.",
			"And that will have the effect of translating it but always keeping",
			"that offset half a screen width away from the player, if that makes sense.",
			"And so what we're doing is in character-- this is character2, right--",
			"character2, we're still doing the same thing we did.",
			"Actually, that's the wrong file.",
			"We are modifying characterX here.",
			"So same thing we did before--",
			"multiply the move speed by delta time and either add or subtract it",
			"if we're pressing left or right.",
			"But also, here-- reintroducing camera scroll.",
			"And we're setting it to, like I said, characterX minus VIRTUAL_WIDTH divided",
			"by 2, half the screen, and then positive offset",
			"of his width divided by 2 so that he's perfectly right in the center.",
			"Because remember, characters' coordinates",
			"are set by their left, not their center.",
			"And then we just do what we did before.",
			"We translate the scene based on cameraScroll,",
			"and we render him at characterX characterY using math.floor",
			"to prevent him from being at a fractional point in our world space",
			"and then it being blurry and artifacted.",
			"And that's sort of it in terms of how we can get tracking over character.",
			"And if you wanted to track along the y-axis,",
			"you could do the exact same thing.",
			"Maintain a cameraScroll x and a cameraScroll y--",
			"so keep them separated.",
			"And then you would just translate here.",
			"So we're passing in 0, because we don't want",
			"to track along the y-axis necessarily.",
			"But all you would need to do is pass in your y cameraScroll.",
			"And then you could do it based on characterY",
			"and whether or not they're above the ground",
			"or past a certain point in the sky.",
			"So any questions at all as to how the camera tracking is working here?",
			"",
			"All right.",
			"So we took care of one issue, which was the lack of tracking.",
			"But there was one other issue, which was he's not animated.",
			"All he's doing is just moving sort of like M.C. Hammer--",
			"or is it M.C. Usher?",
			"M.C. Hammer?",
			"I forget.",
			"He's doing that.",
			"He's not doing anything.",
			"We need to actually animate him so that he looks like he has some life to him",
			"and that you can also differentiate importantly",
			"between two separate states.",
			"He can be idle, he's not moving, and he can be moving.",
			"So we should have some sort of visual feedback",
			"as to what's currently going on.",
			"So anybody know how we can go about implementing",
			"an animation for our character?",
			"What are the pieces that we'll need?",
			"AUDIENCE: I guess if he's moving right, then",
			"call a function and a render that looks through some images?",
			"COLTON OGDEN: Yes.",
			"So if he's moving right, then have a function",
			"that sort of loops through some images.",
			"That is effectively what we will be doing.",
			"We have a class called Animation, which I've introduced here.",
			"And all it basically does is keep track of-- you",
			"pass it in a table, which has the frames of the sheet",
			"that you want to animate over.",
			"So we can just pass in--",
			"let's go ahead and take a look here.",
			"",
			"And I referenced the slide earlier, but all of these",
			"are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10-- however many there are,",
			"you just pass into the animation.",
			"Let's say he's on a ladder.",
			"So let's say this is 1, 2, 3, 4, 5, 6, and 7.",
			"You say, the frames are going to be 6 and 7,",
			"so those will just loop left to right, starting back",
			"at the beginning when it's finished And then you give it an interval.",
			"So say I want the animation to happen this fast in terms of seconds,",
			"so I want it that maybe happened every 0.2 seconds.",
			"And so that will have the effect of every 0.2 seconds,",
			"it'll keep track of a timer.",
			"So have we gone over 0.2 seconds?",
			"Start at 0 and then add delta time to it every time.",
			"If we have, increment what our current frame of animation is.",
			"So our current frame is this one, and then 0.2 seconds elapses,",
			"it's going to be this one.",
			"And then 0.2 second elapses, and we need to loop back to the beginning.",
			"So we'll end up using modulus to take care of that",
			"as we can see in the Animation class.",
			"",
			"Basically, that's all done here.",
			"So if we have more than one frame of animation, recall it gets a def here.",
			"So we get frames, we get an interval, get a timer that's initialized to 0,",
			"and then get a current frame.",
			"We'll say the current frame is 1.",
			"And then as long as we have more than one frame,",
			"there's no point in looping over or trying to animate",
			"any animation that only has one frame.",
			"And we can, of course, have animations that only have one frame.",
			"Idle is only one frame of animation, as we saw here.",
			"That's only one frame.",
			"We don't need to do any sort of logic to say, oh,",
			"what's the next frame, because there's only one frame.",
			"But if we were to look at character3, we can see two frames there.",
			"And then that's just one, frame he's idle.",
			"And when we move left, he moves in that direction.",
			"Anybody recall how we can get him-- because obviously,",
			"we saw the spreadsheet just a second ago,",
			"and there was only one direction that the sprites were facing--",
			"how we can get him to look that way, even though there's",
			"no sprites for him to look that way?",
			"AUDIENCE: Flip it on the axis.",
			"COLTON OGDEN: Flip it, so love.graphics.draw.",
			"Recall you can pass in a negative scale factor on whatever axis you want,",
			"and that'll have the result of flipping it along that axis.",
			"That's all we're doing.",
			"So this is the default frame, so we're just drawing it.",
			"And then we have to keep a reference to whatever direction he's facing.",
			"And if his direction is equal to right, we'll",
			"just draw that frame and then loop and process the animation.",
			"If he's facing left, draw it, but also perform a negative 1 transformation",
			"on the x-axis.",
			"And just like that, we have that working.",
			"So all we're doing--",
			"just keep a timer.",
			"And then when the timer goes over our interval, just increment the frame.",
			"And then use modulus to loop back over it--",
			"back to starting at 1.",
			"And that's all done here on this line 28.",
			"And so you can look in there a little more",
			"if you want to get a handle on how the math works,",
			"but it is just a simple sequence of iterating over a collection of frames",
			"based on a timer.",
			"And that has the effect-- just like a flip book, as I said earlier--",
			"of our character having an animation and having some life.",
			"So any questions as to how this animation class works?",
			"AUDIENCE: The render is in the Animate class?",
			"COLTON OGDEN: So no.",
			"The render is not in the animate class.",
			"So the render is--",
			"I realize I didn't show any actual main here.",
			"We have two animations here, which was just the idle one,",
			"so we're just passing in one frame.",
			"We're going to give it an interval of 1.",
			"It's not going to really matter, but just for the sake of consistency,",
			"we're giving it an interval of 1-- arbitrary.",
			"And maybe we want to change his animation later.",
			"So by having an interval here, we won't forget to add one later.",
			"Moving animation-- recall 10 and 11.",
			"So it's toward the end of the sheet--",
			"the two walking frames.",
			"Interval here is 0.2 seconds.",
			"We need a current animation to render him,",
			"and then we keep a reference to whatever direction he's looking at.",
			"So if he's looking to the right, we're going",
			"to reference this in the love.graphics.draw at the bottom.",
			"And that's what we're going to use to perform the sprite flipping",
			"along the x-axis.",
			"Maintain a reference to that.",
			"And then down here, the part that we actually reference the animation",
			"is on line 150 if you're looking at character1.",
			"Or is it character2?",
			"Sorry, character3.",
			"If you're looking at line 150 in character3,",
			"we're using currentAnimation:getCurrentFrame().",
			"So the class will actually just tell you whatever the current frame of animation",
			"is, because it keeps a reference to what frame it is based on the timer",
			"and how much has elapsed.",
			"AUDIENCE: So the class is generating a different frame real time",
			"and plugging it in there.",
			"COLTON OGDEN: Yeah.",
			"It's maintaining a reference to whatever the current frame is,",
			"and it's in the table of frames that it got when you gave it",
			"the definition up at the top here--",
			"lines 51 to 58 where we create the two animations.",
			"Basically, it maintains a reference to which index in this frame table",
			"we're at.",
			"So if 0.2 seconds has elapsed, we start at 1, and then we go to 2.",
			"And then we'll go back to 1.",
			"And so it'll just basically return frames, index.",
			"And frames index 1 is 10, frames index 2 is 11.",
			"And so the function is getCurrentFrame.",
			"So characterQuads, currentAnimation, getCurrentFrame.",
			"And then here, because we're performing an origin transformation--",
			"so that's another thing to consider when you're flipping sprites.",
			"When you flip a sprite, it actually flips along",
			"whatever its default origin is.",
			"And the default origin of any sprite is its top left corner here.",
			"So if you flip something along its x-axis,",
			"it'll appear here instead of just flipping in place.",
			"So you actually have to set the origin to its center",
			"when you do any sort of in place flipping of a sprite.",
			"So you'll notice in the code when you're looking",
			"at it that we have plus CHARACTER_WIDTH divided by 2 and plus CHARACTER_HEIGHT",
			"divided by 2 on these two here.",
			"So we shift where it gets drawn, and then we shift its origin",
			"offsets which are here on line 160.",
			"So if you look at love.graphics.draw, you'll",
			"see it has a lot of optional arguments.",
			"And these two at the bottom are the origin offset arguments.",
			"And so these only really come into play when",
			"you do some kind of flipping of a sprite on an axis",
			"and you want graphical consistency not to have it flip one way or the other.",
			"Sometimes that's the effect you're looking for, but in this case,",
			"it's not.",
			"We want him to literally stay in the exact same place.",
			"So to flip a sprite in the exact same place,",
			"you need a set its origin to its center, not its top left.",
			"Does that makes sense?",
			"OK.",
			"And also here, 0 is the rotation here.",
			"So it's sort of required if you're going to add",
			"this many arguments to the function.",
			"But we're testing if direction is equal to left, we want to flip by negative 1",
			"on the x, else just give it 1.",
			"So 1 just means default transformation, so no flipping.",
			"And then we don't flip on the y at all, so that will always be 1.",
			"And so that's in a nutshell how you can get your character to animate and also",
			"stay in place when you animate it.",
			"So any questions as to how animations or the origin offsets or any of that work?",
			"",
			"OK.",
			"So we did talk about animations.",
			"The last thing we'll talk about for the character is jumping.",
			"So if you recall from Flappy Bird, how can we get our character to jump?",
			"What are some of the pieces we need?",
			"AUDIENCE: Key press, and then the y goes up.",
			"And then we have to have gravity.",
			"COLTON OGDEN: Yep.",
			"So key press is one thing we need, so check for space",
			"is going to be the default key.",
			"y goes up, and then check for gravity.",
			"So not only do we need y, but we also need delta y.",
			"We need velocity, because gravity is a transformation on velocity, not",
			"strictly on position.",
			"So if we go back to character4, this is sort",
			"of a hackish way of implementing gravity,",
			"because we haven't actually incorporated tile collisions.",
			"And I'll defer most of the implementation for that",
			"as to the distro, and I'll go over with you guys.",
			"But right now, we have the exact same thing we had before,",
			"where we have tile scrolling.",
			"But if I press space bar, I go up, and then he comes down.",
			"And notice that he has an animation as well.",
			"He has a different frame.",
			"So if he's jumping, he's got a little jump frame.",
			"So that means now we have three animations.",
			"We have an idle animation, we have a moving animation,",
			"and then we have a jump animation.",
			"So effectively, we have three states as well--",
			"idle state, moving state, and jumping state.",
			"Four states, actually.",
			"And also, I noticed a slight bug here where if you're still in the air,",
			"his frame doesn't change.",
			"So it actually probably should stay to that frame,",
			"even if he's standing still.",
			"But I guess it doesn't matter too much.",
			"We also interpret it as a feature.",
			"But he's got a couple of states when he's in the air.",
			"There should be two states here.",
			"One is jumping state, and one is falling state.",
			"And do we know why the two being different is an important thing?",
			"",
			"So if we think about Super Mario Bros.",
			"and we think about the differences between jumping and falling,",
			"what are some of the things that change based on whether Mario is jumping",
			"or whether he's falling?",
			"How does he interact differently with the environment, I should say?",
			"",
			"So if unfamiliar, Mario-- when he jumps, he can actually hit blocks.",
			"So if he's below a block and he hits a block that",
			"has some sort of behavior in it, it will trigger whatever is in that block,",
			"whether it's a coin or whether it's to destroy the block.",
			"And if he's falling, recall if he lands on top of an enemy like a goomba,",
			"he'll destroy the enemy.",
			"And so we need to distinguish between these two states.",
			"Because when he's jumping, he's not able to--",
			"when he's actually going up, he can't attack the enemy.",
			"And likewise, when he's falling down, he can't destroy the block.",
			"So even though he's jumping up in the air",
			"and the gravity is applying a transformation",
			"and it all looks like one state, there's actually two important changes",
			"in his state that are relevant.",
			"And that's something that we'll need to pay attention to,",
			"and it's in the distro.",
			"He has a falling state and a jumping state.",
			"Even though they share the same animation,",
			"they have different behavior.",
			"So let's go ahead and look at the character4 distro here.",
			"So what I've done here is I've added a delta y for the character.",
			"So just like in Flappy Bird when we press space",
			"and we made our delta y go up to negative 50--",
			"so instantly shot up pretty high, because that was getting",
			"applied every frame.",
			"Same thing here.",
			"Once we press space, we're going to change delta y to negative 50",
			"if we go down to right here.",
			"So if the key is equal to space, I have it in the love.keyPressed function.",
			"Since we're doing all this in main.lua just for illustration,",
			"things are a little simple.",
			"If key is equal to space and his delta y is",
			"equal to 0, what would happen if we didn't",
			"check to see if delta y was equal to 0?",
			"AUDIENCE: We double jump in the air.",
			"COLTON OGDEN: Yep.",
			"We'd be able to jump infinitely, so we have to do a check for that.",
			"We set his dy to JUMP_VELOCITY.",
			"JUMP_VELOCITY is a constant up top on line 29, which is negative 200.",
			"And then gravity is equal to 7.",
			"And so what we do is we set it to negative 200-- his delta y--",
			"as soon as he jumps.",
			"And then every frame down in update, we basically",
			"increment his delta y by gravity.",
			"And then we increment his y by delta y times delta time.",
			"And so it'll have the effect of when he's in the air",
			"and he's got a negative velocity, it'll actually",
			"start becoming positive and positive until it is positive,",
			"and then he falls back to the ground.",
			"And then the hack that I was referring to earlier--",
			"since we don't have collision detection implemented in this example yet--",
			"is we're just basically checking to see whether he has",
			"gone below what we set the map's floor.",
			"And if he has, then set his position, first of all, to be above that tile",
			"here on line 133.",
			"And then set his delta y equal to 0.",
			"And that will allow us then to hit space again,",
			"because his delta y will be equal to 0.",
			"AUDIENCE: So I didn't see [INAUDIBLE] on it.",
			"Looks like there's always gravity, then.",
			"COLTON OGDEN: There is always gravity, something",
			"I realized shortly before lecture.",
			"But all you would really have to do is, I think, if character dy--",
			"Yeah.",
			"You could easily take that out of there-- just an if statement around it.",
			"AUDIENCE: It's just a waste of resources, right?",
			"COLTON OGDEN: It is.",
			"I mean, it's not expensive, because all you're doing",
			"is incrementing a variable by a certain amount.",
			"If anything, if you're introducing an if condition every frame,",
			"which is probably the same if not actually more.",
			"I think a branch is more CPU than just an assignment.",
			"I'm not entirely sure about that.",
			"AUDIENCE: Interesting.",
			"COLTON OGDEN: Yeah.",
			"In this case, it doesn't really have any side effects.",
			"But it's a good thing to notice.",
			"But now notice that we can just sort of walk along the floor here,",
			"because there's no collision detection.",
			"We'll talk about how we implement a collision detection soon.",
			"So one thing that we'll start talking on-- and we'll take a break fairly",
			"soon--",
			"is procedural level generation.",
			"So I am a big fan of procedural level generation,",
			"and platformer levels are actually fairly easy--",
			"at least in a simple sense--",
			"to procedurally generate.",
			"And so like with match three, all we basically",
			"did was just loop through our grid and just",
			"say, oh, get a random color and a random variety.",
			"And then with the assignment, it was a little bit more complicated,",
			"where you actually had to check to see whether you were on level one.",
			"And then if you weren't, then your variety",
			"should be maybe a certain amount depending on how far along you've",
			"progressed in the game.",
			"",
			"With a platformer level, we have to think",
			"about how we can take that grid of tile IDs and think about it mathematically.",
			"How can we get the results of a level, but make it different every time--",
			"introduce some variation, right?",
			"And so the solution that I found that makes the most sense",
			"is going column by column.",
			"So here, we just have a bunch of-- this is just",
			"a very simple perfect screenshot to illustrate a very simple way",
			"of generating the level.",
			"But recall, if we just think about these tiles here-- these empty spaces--",
			"being a 0 and these being a 1, it's sort of almost like binary in this case.",
			"We could just fill the entire thing with 0 first, just assume empty space.",
			"And then we could just column by column go down and just have a chance",
			"every column.",
			"OK, do I want to generate a ground here?",
			"If I do, start at the ground level and then just",
			"generate earth tiles all the way down.",
			"And then go to the next x position, do the same thing, do the same thing.",
			"And then maybe every column of the world that you're generating,",
			"you also have a chance to generate a pillar like this.",
			"So if generate pillar is true, then I want to spawn--",
			"instead of starting the ground here, I want to start it here.",
			"And then maybe you have a flag that says,",
			"OK, not only do I want to generate pillars,",
			"I also want to generate chasms--",
			"just empty space, obstacles for the player.",
			"Because if he falls down-- it goes below the world space--",
			"it should be game over.",
			"So in that case, you just say if generate chasm--",
			"make math.random 10 or whatever it is--",
			"then just go to the next x.",
			"Don't even do anything.",
			"And that will have the result of generating a chasm.",
			"And so little piece by piece--",
			"doing small things like that has the net effect",
			"of generating a lot of visually interesting, dynamic,",
			"and random levels.",
			"You never know what to expect.",
			"And this is a very basic example.",
			"You could go infinitely far with it.",
			"However many ideas you have in terms of how",
			"to create obstacles and interesting levels and scenery for the player--",
			"you could absolutely implement that.",
			"AUDIENCE: How do you handle if there's a platform to jump on?",
			"You have to have that consistency.",
			"COLTON OGDEN: Yeah.",
			"So if it's a platform, it depends on how you want to implement platforms.",
			"",
			"And actually, I did a seminar on Super Mario Bros.,",
			"and we did platforms as tiles.",
			"In this case, we'll have blocks that are actually",
			"what we've denoted as game objects-- which",
			"are a little bit different than tiles.",
			"Because they can have arbitrary sizes, and they don't necessarily",
			"have to be affixed to the world grid.",
			"But if you were to treat a platform that was, let's say,",
			"two tiles wide as tiles, all you would do",
			"is just basically have a flag up here that's like, generate platform",
			"equals true or whatever--",
			"AUDIENCE: And then turn it off after--",
			"COLTON OGDEN: Turn it off after however many iterations.",
			"You also need the size of it.",
			"You'll need a flag that's like platform width equals however many,",
			"and so you'll just keep a counter.",
			"It's like current platform tile equals 1, 2, 3.",
			"And if it's equal to width, then you don't generate it any more.",
			"And that has the effect of potentially colliding with pillars",
			"if you don't account for that.",
			"So you can also in your logic say, if I'm generating a platform right now,",
			"don't generate a pillar.",
			"But you could generate a chasm, because the chasm",
			"doesn't interfere with your platform.",
			"",
			"If you don't have platforms as tiles-- if they're different objects--",
			"then you don't have to do it during the actual world generation phase.",
			"You can just test.",
			"You can just create a game object that's a platform.",
			"Depending on how complicated your algorithm is,",
			"maybe make sure that it's not next to a pillar when you generate it.",
			"And you could just do that by getting the tile here and then looking",
			"at the next four tiles--",
			"something like that.",
			"We don't do platforms in this example, but it's something",
			"that you could pretty easily do with tiles.",
			"And slightly more difficult but also still fairly easy to",
			"do with game objects, which is included in the distro",
			"and which we'll touch on in a little bit.",
			"",
			"Let's see, we're at level--",
			"oh, another couple of things that I wanted to show before we",
			"actually start getting into the code for how to generate levels.",
			"This is the sprite sheet for this whole project, which is a really cool sprite",
			"sheet that I found online.",
			"It's in the spirit of platformers like Mario,",
			"and it's got a nice little mockup here on the right.",
			"So I encourage you to take a look at that",
			"and just maybe get some inspiration and see all the different cool stuff.",
			"Tinker around with it if you want to.",
			"But as you can see here, there's a couple of pretty prominent things.",
			"We have a ton of tiles.",
			"These are all tiles here--",
			"different tiles and variations.",
			"And then we have a ton of these toppers here.",
			"And so what really helps this whole demonstration",
			"of generating these levels is the fact that we have",
			"so much visual content to work with.",
			"And so here, again, are the tiles.",
			"Here are the toppers.",
			"And then when you take the two together and then you also",
			"have these random backgrounds--",
			"these are toppers here, the top of the tiles here.",
			"It's incredibly easy to just have a sheer abundance of visual variety",
			"and interesting things in your game levels without even--",
			"and the algorithms here are very simple.",
			"All we're doing is just checking to generate pillars and columns.",
			"I know.",
			"I thought it was really cool and helps illustrate the importance and power",
			"of this whole procedural approach to creating the levels for this.",
			"And there's actually not that many games that take advantage, I think,",
			"of procedural level generation in the platformer genre.",
			"Plenty of games like Minecraft and Terraria--",
			"Terraria is a great platformer that is an example of that.",
			"But I don't think I've seen a really good Super Mario Bros.",
			"game that does something like that.",
			"",
			"Let's see.",
			"What time is it?",
			"6:23.",
			"Let's take a five minute.",
			"And then as soon as we get back from that,",
			"we'll start going into how we actually can implement the procedural level",
			"generation in more detail.",
			"All right, welcome back.",
			"This is lecture four.",
			"And before we took a break, we were talking",
			"about procedural level generation in the context of platformer levels.",
			"So recall, here are just a few examples that I took pretty quickly of my code.",
			"And you can see they have different backgrounds, different tiles.",
			"Sometimes we have chasms, sometimes we have pillars.",
			"We'll be talking about a few ways to do the tile version of that,",
			"because there's two levels here.",
			"In the distro, we'll see there are also things like bushes, for example.",
			"We can see in the top middle there the purple--",
			"well, I guess those little purple cacti.",
			"And the one right below that, there is a pillar with a yellow fern on it.",
			"Those are separate objects from the tiles--",
			"game objects.",
			"But the actual tiles themselves we'll dig in here a little bit as to how",
			"to get those generated.",
			"So the first thing we want to look at, level0, is just some flat levels-- so",
			"just basically what we've already done.",
			"So I'm going to go ahead and go into level0.",
			"",
			"And then if we see here, we have a simple flat level,",
			"just like we did before.",
			"Now the tiles are different.",
			"And if I press R, they're randomly generating every time.",
			"So you can get a sense of just how visually diverse this generation looks.",
			"Oh, I think that might have been a bug earlier.",
			"I'm not sure.",
			"Haven't seen that yet.",
			"But we can see here, I'm pressing R.",
			"All I'm doing is taking the array of tiles that we have,",
			"and I'm assigning it a tile set and a topper set",
			"in the case of the scope of this generation.",
			"So recall that the topper is just the top layer sprite,",
			"and the tile set is the tiles underneath.",
			"Anybody want to just suggest how I'm rendering the topper versus the tiles",
			"and what's going on there?",
			"AUDIENCE: You're just pulling it from part of the sheet, right?",
			"COLTON OGDEN: Yes.",
			"Yeah, in a nutshell, I'm just pulling the toppers",
			"from a different part of the sheet.",
			"Any idea how I'm storing information-- what's being stored here",
			"to get it to render like this?",
			"AUDIENCE: Maybe you just need to store the position of the topper",
			"and know that everything else is below that.",
			"COLTON OGDEN: Yes.",
			"So you could store the position of the topper",
			"and know that everything else is below that.",
			"That would work for a flat level.",
			"I don't think that would be reliable for a level that has pillars on it,",
			"because the pillars are a higher elevation than the ground.",
			"And then there's also chasms and stuff like that.",
			"",
			"So what's going on here actually is we're",
			"storing a flag in the tile that says whether or not it has a topper on it.",
			"And if it has a topper, then we render not only the tile,",
			"but as soon as we render the tile, we also render the topper.",
			"And I won't go too deep into the code here.",
			"But what we're doing to get all these different tile sets and topper sets",
			"too is we have to take all of these tile sets-- these collections of tiles--",
			"and divide them up, right?",
			"We have to know that if we want to render the entire level in tile",
			"set one, then we should basically take this into its own sheet--",
			"its own table-- this into its own table, this into its own table, going",
			"left to right actually.",
			"And we have basically four way nested loop.",
			"So we go every set on the x by every set on the y.",
			"And then within each of those, we want to look for every tile along the x",
			"and every tile along the y therein and split up",
			"the tile sets so that we can index into the individual quads.",
			"So in the actual code, I won't go too deeply into it here.",
			"But I'll show you where it is if you're curious to look into how we do that.",
			"It's in Mario in Source, util.lua, which is recall where we before",
			"stored our generateQuads function, which does a simple split on a tile",
			"sheet along its x and y based on whatever width and height you pass in.",
			"We have in here also a generateTileSets function, which takes in the quads",
			"from a generateQuads table.",
			"So we first generate quads on all of this or all of this.",
			"So we have every single frame of this divided by 16, which is--",
			"I don't know how many that is.",
			"6 by 5 times 10 by 5, 10 by 4--",
			"that many quads, so thousands of quads, I think, if not hundreds.",
			"This I'm pretty sure is thousands of quads.",
			"And then we take that and then divide it using",
			"the number of sets along the x-axis, sets on the y-axis,",
			"and then the size of each tile set along the x and size along the y.",
			"We basically divide it using a four way nested loop here.",
			"We basically just divide it up.",
			"And then instead of doing a generateQuads",
			"along the entirety of the picture, we just",
			"basically do a 2D slice of that quad table we get back",
			"from the first generateQuads call.",
			"So I encourage you to look in here and experiment with that.",
			"You don't need to necessarily know how it works for the assignment.",
			"But that's how we can basically take a giant sheet like this",
			"and easily integrate it into our code.",
			"We can just swap in and out whatever active tile",
			"sheet we want to work with, assuming that everything",
			"is cleanly laid out like this, which is on the part of you or your artist.",
			"You want to make sure that everything is conducive to programmatic organization.",
			"Had things been scattered around in a very awkward way--",
			"maybe things were zig zagged or there were weird spaces or something like",
			"that--",
			"we wouldn't be able to do something as clean as what we did here",
			"in util.lua with just 63 minus 20 lines of code",
			"by getting each individual tile set.",
			"So that's an important consideration if you're",
			"looking at creating assets for your project",
			"and you want to do some programmatic hot swapping of your tile sets.",
			"Let's make sure we're in the right--",
			"we're not in the right example here, so we're",
			"going to go into level0 into main.",
			"And we have constants now for all of our tile sets and what the height is",
			"and how many they are wide by tall.",
			"",
			"We do it here.",
			"We get our regular quads from our tiles and toppers,",
			"so these are just literally every single tile within that big tile",
			"sheet put in one table.",
			"And then we just divided up into tile sets",
			"and topper sets here with generateTileSets function.",
			"And then we get a random tile set and a random topper set here--",
			"math.random, number of tile sets, number of topper sets.",
			"And then at the very bottom also, we have a generateLevel function--",
			"223-- which is going to be built upon in the next two examples.",
			"Level0 is just a flat level, so it's actually",
			"exactly what we saw before, which was just if y is less than 7,",
			"ID should be equal to sky or ground.",
			"And then this part is actually what I was",
			"alluding to before with the topper, because recall",
			"we need to store a flag in a tile to render a topper or not.",
			"And it should be whatever the top tile is in the level on the ground.",
			"In this very simple flat thing, we can always",
			"assume it'll be the same y level.",
			"In this case, if it's equal to 7, then topper",
			"should be true, otherwise, false.",
			"So every tile along y 7 is going to have topper equals true.",
			"And this comes into play up here.",
			"If we do love.graphics.draw(tilesheet), we have not only just tile.ID as we did",
			"before, but we have tile sets indexed into tileset now.",
			"So remember, tileset got a random value between 1",
			"and however many tile sets we had that we spliced out of our massive tile",
			"sheet.",
			"Now, we just index into that, and then we index into tile.ID.",
			"And tile.ID will then be whatever our ID is but relative to that sheet, not",
			"the whole entire sprite at once.",
			"And the same thing for topper.",
			"We have a topper set, we index into topper",
			"sets here at the topper set that we got, and then that's",
			"where we'll have the collection of tiles that form that particular set.",
			"And so the two are completely separate.",
			"They can be one random color tile with one random topper, but it's consistent.",
			"It's global.",
			"We have one topper set and one tile set that are active at any one time.",
			"And if we press R, which I did up here, then we",
			"just reset them to random on line 139 and 140.",
			"Tile set gets a new random number, topper set gets a new random number.",
			"It has the effect of--",
			"we can just walk around and then generate random sets.",
			"",
			"So pretty simple.",
			"And recall again, topper is--",
			"because the tile that we're standing on is y seven, topper equals true.",
			"So in that case, that particular top layer is always going to have a topper.",
			"And it gives us a nice little bit of visual variety,",
			"because it actually makes quite a bit of a difference having",
			"a topper versus no topper.",
			"And you can also just not have a topper and consider",
			"that a permutation of the toppers times tiles, like procedural algorithm.",
			"That's flat levels.",
			"Does anybody have any questions as to how this works",
			"or anything that we're doing here?",
			"",
			"OK.",
			"So things are a little flat, a little boring.",
			"The next step will be actually introducing one of the things",
			"that we can see here in our little collection of sample levels,",
			"like this pillar right here in the very middle.",
			"Does anybody recall how we go about spawning a pillar as opposed",
			"to just flat land?",
			"AUDIENCE: For that column, just put some more dirt down or more tiles down.",
			"COLTON OGDEN: Yep.",
			"So for that column, just put more tiles down instead of just the ground level.",
			"That's exactly what we're going to do.",
			"So I'm going to go ahead and open up level1 and main,",
			"and I'll run the example here as well just so you can see it looks like.",
			"",
			"So here we have quite a few.",
			"And notice we haven't implement collision,",
			"so we're still walking through them.",
			"But they're just random.",
			"Their random amount is up to taste, really.",
			"Right here it's pretty common, so it might be worth",
			"lowering the amount a little bit.",
			"If you wanted to, you could also maybe have a flag that says, spawn pillar,",
			"and maybe you want a pillar width.",
			"You could have anywhere between one and three tiles.",
			"And if its width is greater than 1, then just loop over a few times",
			"and just draw that same height a few times as opposed to just one time,",
			"and then set the flag back to false.",
			"A lot of things you can do with it.",
			"And also, they're a little tall here.",
			"For the main distro, I ended up making them a little shorter.",
			"But we'll see how we do this in the code here.",
			"It's going to mostly be down in our generateLevel function.",
			"So what we're doing here-- go ahead and hide that--",
			"is we have basically this code here--",
			"line 227 to 236.",
			"So all we're doing here is just filling our entire thing with just sky.",
			"We're just setting the entire thing to empty.",
			"And now we have a fully populated 2D array.",
			"All we need to do in order to change a tile-- we",
			"don't have to worry about insertions or adding too many tiles to our array.",
			"All we can do now is just directly change whatever tile exists there.",
			"So all we need to do is starting on line 239,",
			"we're going to start doing the column by column iteration over our entire level",
			"and deciding whether we should generate pillars or not.",
			"And we're always going to generate ground.",
			"So here's the flag spawnPillar.",
			"And if it's equal to 1, this is going to basically be assigned to spawnPillar.",
			"So math.random(5)==1.",
			"We have a 1 in 5 chance of spawning a pillar.",
			"If we just want a pillar, then pillar gets equal to 4 from 4 to 6--",
			"so y gets 4 to 6 effectively--",
			"tiles at pillar x, ID ground.",
			"And then here's where we set the topper, recall,",
			"because now pillars can be the top most tile on the surface.",
			"But they're above the ground level.",
			"So we just basically say, when we're generating a pillar,",
			"if pillar is equal to 4-- which is the very first tile that we start at--",
			"then set topper equal to true here.",
			"Otherwise, set it to false.",
			"So that's how we can get pillars to also have toppers and then in this case,",
			"we're not generating any chasms yet.",
			"So all we're going to do--",
			"",
			"once we've generated a pillar on that particular column,",
			"we'll just say ground gets 7 until the map height--",
			"so towards the very bottom of the screen.",
			"And then we'll just set it to ground.",
			"And then topper-- in this case, we're going to make sure",
			"that we're not spawning a pillar.",
			"Because if we don't check this, then it'll",
			"also spawn a topper where the pillar meets the ground,",
			"and it'll look a little bit silly.",
			"And then we also want to check that ground is equal to 7.",
			"And so all together, that has the effect of this behavior.",
			"And so if we didn't check for that spawnPillar,",
			"we'd have a topper right below our feet here too,",
			"which looks graphically strange.",
			"And also, you can see--",
			"emergently, we're getting double width pillars.",
			"And that's just kind of a natural byproduct",
			"of a lot of these randomizations.",
			"A lot of these procedural algorithms--",
			"they'll generate outcomes that you might not necessarily",
			"have anticipated, which is kind of a cool thing.",
			"You didn't necessarily program it to have pillars that were two tiles wide,",
			"but just the nature of randomization-- that's just what you get.",
			"And that's another exciting thing about procedural level generation",
			"is that it can surprise even the person that wrote the algorithm.",
			"It's really cool, and it saves you work having to create levels.",
			"So that was pillared levels.",
			"Chasm levels-- who can tell me how we can do chasm levels?",
			"AUDIENCE: You just skip a column.",
			"COLTON OGDEN: Yep.",
			"you skip a column.",
			"So at the very beginning, all we can just basically say",
			"is, do I want to generate a chasm here?",
			"If I do, just skip.",
			"Go to the next iteration of the loop.",
			"And so we'll take a look at that.",
			"As simple as it is, because Lua doesn't have the notion of continue--",
			"this will be a refresher, because I believe",
			"this was in one of the assignments--",
			"it has a goto statement.",
			"So basically, same code as before, starting column by column.",
			"x equals one until map width.",
			"We have a 1 in 7 chance--",
			"just arbitrary.",
			"And this should ideally--",
			"if you're engineering an entire large game or application,",
			"this would be called SPAWN_CHASM_CHANCE probably,",
			"and just set that to seven somewhere.",
			"But we're just setting it to 7 here--",
			"just a static magic number, but magic numbers are generally bad.",
			"Goto continue-- and so continue is here at the very bottom of the loop",
			"here, which is this for x = 1, mapWidth.",
			"So it will have the effect of skipping straight to x equals 2 if this at 1,",
			"for example.",
			"A lot of languages just simply have continue.",
			"Lua does not have continue, so this is a community established tradition",
			"for implementing continue-like behavior in Lua.",
			"You create a label via double colon with a name and then a double colon,",
			"and then you just goto it.",
			"And so that's as simple as it is for generating chasms.",
			"And so if we go to level2 and run that, we get chasms.",
			"And so now we've got a little bit of interesting visual variety.",
			"It's not spawning a ton of chasms in this example.",
			"It spawned one so far.",
			"There's another one.",
			"And then sometimes just emergently, you can get two.",
			"See, there we go.",
			"We get some interesting obstacles as a result.",
			"It almost looks as if someone intentionally did that--",
			"almost.",
			"I would probably, like I said, shrink the pillar size a little bit.",
			"It's a little tall.",
			"",
			"That's that.",
			"That's basic procedural-- in the context of platformers,",
			"that's the mental model for how we can start",
			"thinking about generating obstacles.",
			"And there's a lot of different directions you could go.",
			"Let's say maybe you wanted to generate pyramids.",
			"I mean, it's a common thing in Mario.",
			"There will be steps, [INAUDIBLE] set for it.",
			"The same implementation would basically happen here.",
			"It would be a little bit different, because you're",
			"doing it on a column by column basis.",
			"But you'd effectively just maintain a reference",
			"to something like step height, and then you",
			"would say generate stairs is true here.",
			"And then you would just set step height to 1.",
			"So then you add a tile here.",
			"You would go from ground level up until step height, generate a tile,",
			"go the next one, and then increment step height to 2.",
			"And then do from ground until step height--",
			"tiles go up.",
			"So 1 and then 2 and 3 until you've gone to stairs width, in which case",
			"you stop generating stairs.",
			"That's this principle behind how you could",
			"do something a little more complicated.",
			"Or pyramids-- same exact thing, pyramid width.",
			"And then you just go until pyramid width equals--",
			"or we're at pyramid width divided by 2, make it go up.",
			"And if we're higher than that, make it go down.",
			"And then you have the effect of the pyramid approach.",
			"Yeah.",
			"AUDIENCE: Where are you putting the column",
			"generation if it's a [INAUDIBLE].",
			"It's not in the play state.",
			"COLTON OGDEN: In this case, it's all in main.lua.",
			"But in the distro, it's going to be in levelmaker.lua.",
			"So we've broken out all of this functionality",
			"into just how we did Breakout.",
			"We had the same sort of thing-- level maker--",
			"and it just has levelMaker.generate.",
			"And then you give it a width and a height,",
			"and it will generate an entire level for you.",
			"AUDIENCE: An entire level, but it has to continuously--",
			"oh, you generate it all at once?",
			"It doesn't generate as you walk?",
			"COLTON OGDEN: The question is, does it generate continuously or all at once?",
			"It just generates all at once.",
			"So you could implement a--",
			"if you wanted to do an infinite runner, the way you would do that is you",
			"would break up your level into chunks.",
			"And with infinite runners, usually you can only move in one direction.",
			"So as you go right, your levels that you've generated before-- they get",
			"discarded, so you avoid memory overconsumption.",
			"What you would do is you would just generate a chunk--",
			"maybe a 100 by 20 level.",
			"And then you would go through that, through that.",
			"And then when you get to level end minus maybe like five tiles or 10 tiles,",
			"you would generate another one, append it, put it to the right,",
			"and then you would just go from the left to the right.",
			"And you probably would need some sort of semi-fancy code",
			"to splice them together once you've generated them.",
			"Alternatively, you could just always pad your--",
			"no, you probably wouldn't want to pad.",
			"I would probably just splice them end to end and then get rid of x equals 1 100",
			"or however many on the left once it's gone past the left edge of the screen.",
			"In this case, to summarize, it's all static.",
			"But you could very easily--",
			"not easily, but you could very well make it an infinite runner.",
			"Yeah.",
			"AUDIENCE: So we're rendering the entire level, but we just can't see it all?",
			"COLTON OGDEN: The question is, are we rendering the entire level,",
			"but we just can't see it all?",
			"The answer is yes.",
			"Currently, in this implementation, we're just rendering the entire level--",
			"so tile by tile is getting drawn to the screen.",
			"For small examples like this, it's not a concern.",
			"But for a large level-- like if we did a Terraria level, for example.",
			"Terraria's thousands and thousands of tiles wide by probably",
			"1,000 or more tiles tall--",
			"you want to render only a chunk, only what you can visibly see.",
			"And for that, you could use your camera offset and then just render",
			"from one tile to the left and above that to one tile below the bottom edge",
			"of the camera and to the right of it.",
			"Just render that subset of tiles.",
			"So you just need a for loop to iterate over a small section.",
			"AUDIENCE: So you can kind of make an array",
			"of what the map's going to look like and then",
			"just render only slices of the array that you can see.",
			"Is that right?",
			"If you put a multi-dimensional array and then you just go through it",
			"and render as you go-- is that the thought?",
			"COLTON OGDEN: Question was, you just have",
			"a multi-dimensional array of tiles for your level,",
			"and then you just render it as you go.",
			"The answer is yes.",
			"You would have your overall tiles--",
			"your big 2D array of 100 by 20 or however many thousands of tiles.",
			"And then based on wherever your camera is rendering,",
			"it's just a for loop within that just of a nested amount.",
			"So maybe your player is at x 30 plus 6 tiles.",
			"So you would just render from 30 tiles to maybe 45 tiles",
			"on x and maybe 10 to 20 on the y--",
			"just that chunk.",
			"And it's just relative to where your camera is.",
			"You're always rendering just a small little--",
			"basically, it is effectively a camera at that point.",
			"It's rendering a chunk of the tiles to the screen.",
			"AUDIENCE: But in this code, it's not.",
			"COLTON OGDEN: In this code, no.",
			"The levels here are--",
			"it's sufficiently complicated to introduce.",
			"I mean, it's not too complicated to introduce.",
			"It's pretty easy.",
			"But the consumption-- the processing here--",
			"is very light, because the levels are fairly small.",
			"And even if we did have really large levels,",
			"it's sufficiently small to not have to worry about it.",
			"But if we did get to a point where your levels were 1,000 tiles or more,",
			"and then maybe those tiles have additional,",
			"you just want to squeeze all the performance possible out",
			"of your application.",
			"You could look into just rendering a subset.",
			"It's fairly simple to introduce but just not something",
			"that we included in this assignment.",
			"Any other questions as to how this sort of thing works?",
			"",
			"OK.",
			"",
			"So far, we've talked about procedural level generation.",
			"We've talked about animation and rendering and all that stuff.",
			"We haven't really talked about how to do tile collision.",
			"And we won't go into a terrible amount of detail,",
			"because the code is a little lengthy.",
			"It'll be part of your assignment to read over it and understand it,",
			"but it's in the TileMap class that we have.",
			"Basically, the whole gist is that because we're",
			"on a 2D tile array that's fixed, it'll always be at 0, 0, at least",
			"in the model that we've currently implemented.",
			"We can just convert coordinates to tiles and then",
			"just check to see whether or not the tiles at whatever that is",
			"are solid or not.",
			"Let's say we wanted to look at the top of our character in this case.",
			"So if we have our character here.",
			"For the sake of illustration, I put him between two tiles above him",
			"just to show why we need to do this the way that we are doing it.",
			"But you take the point here--",
			"his very top left, so player.x and then player.y,",
			"which is effectively their version of 0, 0.",
			"And then player.x plus player.width minus--",
			"we do a minus one for a lot of collisions",
			"so that he can walk between blocks and stuff like that.",
			"Because if you don't basically give him slightly less than the amount--",
			"because he's 16 pixels wide, and the tiles are 16 pixels wide--",
			"if he's between two blocks and he wanted to fall down,",
			"he just won't fall down, because it's still detecting a collision.",
			"",
			"Because if he's on the hole here--",
			"let's say this is the hole, and these are the tiles here.",
			"The x plus the width--",
			"it'll trigger a collision on this tile and this tile still.",
			"So basically, you need to minimize his collision box by one pixel",
			"to fit through 16 pixel gaps essentially is what it boils down to.",
			"But the gist behind collision--",
			"in this case, this would only apply when he's",
			"jumping, because this is the only time at which he can really",
			"collide with tiles that are above him.",
			"You would test for whatever block falls on this pixel",
			"and whatever block falls on this pixel.",
			"And if either of them are solid, you trigger collision.",
			"And if not, then there's no collision at all.",
			"So if he's right here, for example--",
			"right directly beneath a tile-- it's only going to check one tile.",
			"This point and this point are both going to fall on this tile.",
			"But the reason that we want to check for both points here and here",
			"is in the event that he is beneath two separate tiles,",
			"because now this point's going to check this tile,",
			"and this one's going to check this tile.",
			"We can't just check this tile, because if we only check this tile",
			"and there was no tile here but there was a tile here,",
			"him jumping would still not trigger a collision.",
			"It would think that it was only looking here and not here.",
			"So for every collision on every side we do of him effectively,",
			"we need to check both corners of that edge effectively.",
			"So when he's jumping, we turn this point--",
			"this x, y-- into a tile by just dividing it by tile size.",
			"So we can say, player.x divided by tile size plus one.",
			"That's going to equal whatever tile this is on the x.",
			"And then same thing for the y--",
			"we just divide the y by tile size, and then we add 1 to it.",
			"And that will allow us to get the exact tile.",
			"If we use those x, y that we get from that operation,",
			"we get the exact tile at that y, x index in our tile's 2D array effectively.",
			"So we do that for jump.",
			"We check both corners of the top of his head.",
			"We do the same thing for the bottom, only at that time,",
			"we're checking x, and then y plus height,",
			"and then x plus width, y plus height.",
			"And then if we're doing the left edge, what are we checking?",
			"",
			"AUDIENCE: The bottom left and top left?",
			"COLTON OGDEN: We are.",
			"So that will be x0, y, and then x0, y plus height.",
			"And then if it's the right edge, same thing.",
			"We check x plus width y, and then we check x plus width y plus height.",
			"And so that's the gist behind collision detection in the distro here.",
			"And you can see it in Mario if we go to TileMap.",
			"",
			"Point to tile-- this is effectively where it happens.",
			"",
			"On line 32, we're basically returning--",
			"this bit of code here--",
			"28 to 30-- is a check.",
			"Because we can jump over the map edge, we",
			"won't be able to check at tile y divided by TILE_SIZE",
			"plus 1, x divided by TILE_SIZE plus one, because those will be nil.",
			"Those won't exist, because he'll literally",
			"be outside the map boundaries.",
			"Same thing if he goes below it or he goes beyond the left or right edge.",
			"So that's all this code is here.",
			"It just makes sure that if we do go beyond the map boundaries,",
			"we return nil.",
			"So that way, we can check nil rather than getting a tile index error.",
			"And then on line 32 is the operation that I just mentioned,",
			"which was we take the y--",
			"so this x and y that we pass in are going to be the player's actual x, y.",
			"When we pass those in, we're just going to get the tile at self.tiles,",
			"and then effectively y divided by TILE_SIZE taken down to an integer,",
			"and then add 1.",
			"Because recall, tables are 1 indexed, but the coordinates are 0 indexed.",
			"So this will result in a 0 indexed outcome, so we want to add 1 to it.",
			"Same thing for here-- math.floor(x) divided by TILE_SIZE plus 1.",
			"So effectively, points to tiles.",
			"And then we'll just get a tile from that.",
			"And the tile-- we can just check, hey, is that tile solid or not?",
			"If it is, trigger collision.",
			"So that's the gist behind being able to do it in a platformer",
			"where everything is fixed.",
			"That's sort of like a shortcut we can take.",
			"Because now, what's the nice thing about this?",
			"What jumps out as being a super nice thing about this algorithm,",
			"imagining that we have, let's say, 10,000 tiles in our game world.",
			"So if you look and see, all we're doing is",
			"we're just doing a simple mathematical operation",
			"on what his x and y is, right?",
			"What's the alternative to this?",
			"If we were doing this via AABB, for example,",
			"we'd have to iterate over every single tile, right?",
			"AUDIENCE: Can you summarize?",
			"To avoid iterating over everything on the screen,",
			"you just check the column that he's in and the column tile?",
			"COLTON OGDEN: Yep.",
			"So the gist is he's got an x and a y.",
			"The x and the y are going to be in world coordinates, so his x could be 67",
			"and his y could be 38 or something like that.",
			"They don't map evenly to tiles.",
			"But if we divide those by whatever the tile size is in our world--",
			"16-- that's going to be the exact tile.",
			"We also have to add 1 to it, because the tables in lua are 1 indexed.",
			"But we can index our self.tiles at the x, y",
			"that we get from that-- the dividing by 16.",
			"And that will be the exact tile that he's colliding with.",
			"",
			"We don't have to basically have a collection of tiles",
			"that we iterate over and check whether they",
			"collide with the player using AABB collision detection",
			"like we've done before.",
			"Because recall, in Breakout, we had the bricks, right?",
			"They all had their own x, y, but they weren't on a grid.",
			"They weren't fixed.",
			"So we had to actually take them and do an AABB.",
			"We had to iterate over them and perform AABB on them,",
			"because there's no deterministic way to just index at them really quickly.",
			"It's the same thing with arrays versus linked lists.",
			"Because arrays-- you can calculate how far some value is given an index.",
			"You have instant access to it.",
			"It's an order of one operation as opposed to a linked list.",
			"If you want to try and get to a particular value,",
			"you have to iterate through the entire thing until you find it.",
			"AUDIENCE: Can you just look for the column that you might be landing on?",
			"COLTON OGDEN: You're getting the exact tile at whatever your x divided by 16--",
			"or whatever your tile size is--",
			"and your y divided by 16 is.",
			"And you're doing it, recall, for two different points",
			"depending on what you're looking for.",
			"If you're looking for the tiles that are above your character,",
			"you're going to be doing it for this point.",
			"So whatever this value is-- his base x, y--",
			"whatever that is divided by 16 and then whatever that is divided by 16.",
			"And then that'll get you whatever tiles are directly above him.",
			"It will intersect with whatever tile intersects with this point",
			"and whatever tile intersects with this point.",
			"Same thing with here and here if we're looking on the left,",
			"here, here if we're looking on the bottom,",
			"and here and here if we're looking on the right side.",
			"And we check for collision after he's already",
			"moved so that these points will be intersected with potential blocks.",
			"And that's how we can check whether it's a collision or not.",
			"We do this when he moves and is in some sort of movement state.",
			"AUDIENCE: So you're still doing collision detection",
			"with his actual coordinates, but you're just",
			"narrowing what you're character width--",
			"COLTON OGDEN: Yep.",
			"we're turning it from iterating over every single tile",
			"to an instant operation, because we can just mathematically get",
			"the exact tiles that he's at without having",
			"to worry about where he is in the map.",
			"It's just instant access.",
			"And this only works because we know the tiles are always",
			"fixed in the exact same locations.",
			"They're always starting at 0, 0.",
			"They're always going to be TILE_SIZE.",
			"Things get a little more complicated when",
			"we introduce game objects, which have their own independent x, y.",
			"And for those, you do have to iterate over.",
			"You have basically a collection of game objects or a collection of entities.",
			"Let's say we have snails in the game world.",
			"The snails aren't going to be at some fixed location every time.",
			"They can move continuously.",
			"So for those, we have to actually keep them all in a container",
			"and then loop through them and say, has my player collided with any of these?",
			"If he has, then trigger a collision with that snail--",
			"kill it or kill the player if he's in a walking state or a jump state.",
			"And if he's in a falling state, then they",
			"should die, because he's colliding with them from the top.",
			"And you narrow down what collision you check for, as you can see at the bottom",
			"here.",
			"Tile collision-- when you're looking above your character,",
			"you're only testing that when you're in the jumping state,",
			"because it's the only time you need to.",
			"So that's the only point at which you'll collide with tiles that are above you.",
			"When you're in the falling state is when you'll check for tiles below you.",
			"And then you can interact with tiles to your side",
			"when you're in either the jumping, falling, or moving state,",
			"so you should check for left and right tiles in all three of those states.",
			"AUDIENCE: Shouldn't you always test for beneath you in case you get a chasm?",
			"COLTON OGDEN: In case what?",
			"AUDIENCE: In case you get a chasm.",
			"COLTON OGDEN: In case you get chasm, yes.",
			"",
			"You're correct.",
			"This should actually be tested only when in the player",
			"falling state and player walking state, yes.",
			"So the question was, shouldn't you be testing for tiles beneath you",
			"when you're walking?",
			"And yes-- not just falling, but walking as well.",
			"This one only jumping, this one falling and walking,",
			"and this one for jumping, falling, and moving.",
			"",
			"Does that make sense--",
			"how we can take the x, y and sort of turn that into a tile",
			"by just dividing it by 16?",
			"And do note the plus 1 as well, because our tiles in our self.tiles",
			"are 1 indexed.",
			"And so when we divide x, y by tile size, we're",
			"going to get a 0 indexed coordinate.",
			"If our x is at 14, we're within the first tile.",
			"But if we divide that by 16, we're going to get zero.",
			"So we need to add 1 to that so that we get the first tile in the array",
			"still, which will be whatever that tile is.",
			"So that's how the collision works.",
			"It's all implemented in TileMap here.",
			"And basically every state that the player is in, which is in StatesEntity,",
			"and then player falling, idle, jump, and walking--",
			"these are all states that perform this check.",
			"They basically do all the logic that's here",
			"at the bottom, which is testing in the player",
			"jumping state, falling state, and moving state for left or right collision.",
			"And then in the falling state, we check for collision below us.",
			"And then in jumping state, we check for collision above us.",
			"That's all done within the states themselves.",
			"But the actual transformation from pixels to tiles--",
			"that's just a function that we call from TileMap.",
			"It's just a utility function.",
			"AUDIENCE: What's the function called again?",
			"COLTON OGDEN: It's called pointToTile.",
			"So if you're in TileMap on line 27--",
			"pointToTile(x, y).",
			"And the first little bit here is just the bit",
			"that lets you basically go outside the map bounds",
			"without getting a tile index error.",
			"So if it's just outside the tile limits, less than 0, or greater than width,",
			"just return nil.",
			"And so you can do a check on nil to check",
			"to see whether TileMap pointToTile is equal to nil",
			"or not when you do the collision.",
			"And if it is, then just don't do anything probably.",
			"But assuming that you're within the tile boundaries, on line 32",
			"is where you do that transformation-- the math.floor, recall,",
			"because we want to get integer values for these.",
			"We don't want to get fractional numbers, because you",
			"can't index these tiles as fractional numbers, although I'm not sure.",
			"I think you might be able to in Lua generally-- index a tile",
			"by a fractional number.",
			"But in this case, we just want integers.",
			"So we call math.floor on y divided by TILE_SIZE plus 1,",
			"y divided by TILE_SIZE then add 1 to that,",
			"and then we do the same thing for the x.",
			"So that's the operation.",
			"And then wherever we want to check for whatever tiles we want to collide for,",
			"we just call pointToTile on those x and y coordinates.",
			"That's the backbone behind all the tile-based collision in the game",
			"effectively.",
			"",
			"Any questions as to how this works?",
			"Yes.",
			"AUDIENCE: So you're only detecting the collision of corners",
			"and not the edge itself?",
			"COLTON OGDEN: Correct, because you don't really need to check for the edge",
			"if you're taking into consideration the top and bottom corner,",
			"unless your entity is sufficiently tall that they need",
			"to check for more than three tiles.",
			"In this case, our entity is not more than two tiles tall,",
			"so we only need to check for his top left, bottom left.",
			"If we're doing a left collision, top right, bottom right.",
			"If we're doing a right collision, his top left, top right for top and bottom",
			"left, bottom right for bottom.",
			"If you had an entity that was eight tiles tall,",
			"you need to check every single tile along his right side, which",
			"just means you need to iterate over his entire height divided by tile size.",
			"And then just offset the y that you're checking for each of those tiles.",
			"Does that makes sense?",
			"OK, cool.",
			"All right.",
			"I alluded to this briefly by mentioning state.",
			"",
			"I don't know if I alluded so much to the fact that we're using entities.",
			"But in this distro, we're introduced to the concept of entities.",
			"An entity can be almost anything you want it to be.",
			"In this distro, we're considering entities",
			"to basically be anything that's living or sentient moving around--",
			"in this case, the player or snails.",
			"Those are entities, and then they just are subsets of entity.",
			"An entity is a very abstract thing.",
			"You'll see it in a lot of game engines and a lot of discussions",
			"about how to organize your game and how to engineer it.",
			"Unity is probably the most prominent adopter",
			"of what's called the entity component system, whereby",
			"you have everything in your game.",
			"Every single thing in your game is an entity,",
			"and then every entity is comprised of components.",
			"And these components ultimately drive your behavior.",
			"It's sort of like if you're familiar with composition over inheritance.",
			"If you've heard of this as a software engineering thing,",
			"that's effectively the same paradigm.",
			"Rather than inherit a bunch of different things to be your--",
			"let's say you have a base monster class.",
			"And then you have a goblin that's a subset of monster,",
			"so it inherits from monster.",
			"And then you have a goblin warlord who inherits from goblin,",
			"and then you have an ancient goblin warlord that inherits from that.",
			"Rather than have this nested tree of inheritance,",
			"you adopt composition, which means you take a base container,",
			"and then you fill it with different components that represent",
			"what the behavior of your object is.",
			"So if you have an entity--",
			"let's say you give it a monster component.",
			"And then maybe you also give it an ancient component,",
			"so it's an ancient monster.",
			"And maybe you give it a goblin component,",
			"so then it's an ancient monster goblin.",
			"And then you give it a warlord component,",
			"so it's an ancient goblin monster warlord.",
			"So it has all the pieces that make it what",
			"it is without you having to create this crazy chain of inheritance.",
			"That's effectively what the model of an entity component system",
			"is versus standard inheritance-- using that to drive",
			"the model of your problem.",
			"In this case, we're not going into crazy entity components.",
			"But I wanted to bring it up, because Unity,",
			"which we'll be covering in a few weeks, is entirely component-based.",
			"Everything you write in Unity is a component.",
			"And entities, whether they're in an entity component system or not,",
			"form the backbone of most large games.",
			"Most games that have some complexity to them",
			"model most of the pieces within them as entities that have behaviors",
			"and do things.",
			"And so in this case, entities are snails and our player.",
			"And then separate from the tiles--",
			"when we do collision for that--",
			"we want to also check collision on every entity with the player.",
			"So we make sure that the player's collided with the snail in this case,",
			"because that's the only other entities that they can be.",
			"But you can have an arbitrary number of enemies if you want to.",
			"If you collide with an entity-- so just a for loop.",
			"So for entity in pairs of entities, check collision.",
			"If you're in the jump state, then die.",
			"If you're in the fall state, kill it, et cetera.",
			"When you're doing most of your entity to entity interaction stuff,",
			"that's generally how you'll model it.",
			"You'll just iterate over everything and then just collide everything.",
			"Depending on what collides with what, you'll",
			"just collide everything with everything else and process interactions that way.",
			"That's effectively how we do it.",
			"We have in the--",
			"I believe it's in GameLevel.",
			"This maintains a reference to a table full of entities,",
			"a table full of objects.",
			"Objects can be-- we'll talk about that in a second--",
			"gems, and blocks, and bushes, and stuff like that, and then a tile map.",
			"",
			"For every entity, we just update it.",
			"And then for every object, we update it.",
			"And then for every object in objects, we render it as well.",
			"And then we render every entity.",
			"This is just sort of basic how you would take a game world,",
			"populate it, and then process and update it.",
			"Just containers, tables that maintain a bunch of references to everything,",
			"and then just update them.",
			"The actual interaction takes place in the--",
			"because they're dependent on what state we're in.",
			"If you look at all the different states for the player in the states slash",
			"entity folder, you'll see, for example, on line 62 of the player falling state,",
			"we're iterating over every object in the level.objects.",
			"And notice the player has a reference to its level",
			"so that it can access everything within it.",
			"And then within that level, all the objects are stored.",
			"So all it needs to do is just say, if the object collides",
			"the player and the object is solid, then set our dy to zero,",
			"et cetera, et cetera.",
			"All this code's actually pretty easy to read through,",
			"so I would encourage you to take a look at it",
			"and just understand how all the collision and stuff is",
			"working between the player, the objects, the blocks, and things like that--",
			"things like blocks are solid, things like bushes are not solid.",
			"But that's the gist.",
			"Have a collection of objects or entities.",
			"And then depending on what state you're in, collide with some.",
			"And then depending on the state, maybe that kills you,",
			"maybe that kills the enemy, maybe nothing happens,",
			"maybe you become invincible.",
			"Maybe you collide with a power-up game object,",
			"and that power-up triggers your self.player.invincible is true.",
			"And then if self.player.invincible is true,",
			"then maybe you render him with a rainbow animation.",
			"And then in any of the functions where he would collide and die with an enemy,",
			"he no longer dies, he just kills them.",
			"So that's sort of the gist behind how you would interact with objects",
			"and how to process it.",
			"Game objects are different.",
			"Like I said earlier, these are examples of some of the objects here we can see.",
			"The gems on the bottom left there are all in the distro.",
			"If you hit a block-- and if we have a few minutes,",
			"I'll show you really quickly how that works--",
			"if you hit a block, you'll have a chance to spawn a gem.",
			"If you collect the gen-- which means if you collide with that game object--",
			"increment your score 100.",
			"These are all other objects that I didn't have any time to implement.",
			"But just off the gate, just as a mental exercise,",
			"how do you think we could implement a ladder?",
			"",
			"Yeah.",
			"AUDIENCE: You would just have a climb state.",
			"And if the player is touching a ladder and presses a certain key,",
			"they would enter the climb state, and that would cause them to go up.",
			"COLTON OGDEN: Correct.",
			"So what Tony said was if they go onto a ladder,",
			"they should go into a climb state.",
			"And depending on whether they're in a climb state",
			"or not, if they press a button, they should go up or down.",
			"And then you would check.",
			"If they're at the top of the ladder, get off the climb state,",
			"go into a walk state.",
			"Or if they're at the bottom of the ladder, go into a walk state.",
			"And that's just another game object that you just collide with,",
			"and then it's a new state for you.",
			"Yes.",
			"AUDIENCE: You may actually want it in a fall state,",
			"because that way you could have a ladder that doesn't actually go anywhere,",
			"it just gives you height.",
			"But you could use that to jump over wide gaps.",
			"COLTON OGDEN: What Tony said was you could",
			"have the ability to jump off a ladder.",
			"Is that what you Said Yeah.",
			"The ability to jump off a ladder so that you can then use it as an obstacle.",
			"That's absolutely true.",
			"Actually, in the mock up that we saw up here, it's super hard to see.",
			"I'll see if I can maybe zoom in on it here.",
			"",
			"Mario, Mario, graphics, and then it's called full sheet.",
			"The whole entire sheet that I used for this lecture is called fullsheet.png.",
			"I don't know what that is.",
			"So if you zoom in really high here, we can see effectively",
			"what you were alluding to--",
			"right here, this little rope thing.",
			"I'm guessing for the sake of this mock up that's",
			"what they were trying to illustrate.",
			"But you have a game object that lets you go into a climb state.",
			"Whether it's a ladder or whether it's a rope,",
			"just add a new state for the player.",
			"If they're in that climb state, then we have this new animation",
			"which we saw in the sheet earlier, which was their back or their front.",
			"And then they just climb up it and just update it",
			"if they're moving up or down the ladder.",
			"And then just give them the ability to jump off.",
			"And then when you get to the top or bottom, just get off.",
			"",
			"And you could think a lot of the same thing with a lot of these obstacles,",
			"like the spikes here.",
			"If you're jumping and you hit it, you should probably die.",
			"And so you would check for if the object.ID maybe is equal to spikes",
			"or whether object.lethal equals true.",
			"Same thing with this one.",
			"And then some obstacles are completely cosmetic, like this mushroom here.",
			"In the case of the distro, bushes and mushrooms and cacti",
			"and all those sorts of things are just completely cosmetic,",
			"so you can walk through them.",
			"They don't trigger collision, but they're rendered as game objects.",
			"They're not part of the tile grid.",
			"",
			"They don't get processed in the same way as tiles.",
			"They're not stored in the y, x.",
			"",
			"So that's effectively how we can start thinking about objects",
			"and how to give them behavior.",
			"Part of the assignment is going to be adding a flag.",
			"So this flag is in the sprite sheet.",
			"So what you'll do--",
			"and I'll touch on this at the end of the lecture here.",
			"We're getting close to it.",
			"These keys here actually at the bottom right--",
			"so part of the assignment will be to--",
			"it's actually right here.",
			"So I'll go over it really quickly.",
			"Ensure the player always starts above solid land.",
			"So in this case, when James came up here and ran, you ran the first example.",
			"The very first time that we spawned the game,",
			"it generated a chasm right where the player spawned at x1.",
			"And so he just falls to his death if that happens.",
			"",
			"Just right off the gate, anybody have any ideas",
			"as to what we could do to check to see if we're at solid land,",
			"assuming that the player's default start is at x1?",
			"AUDIENCE: At that tile, check if it's solid.",
			"If not, then just move it there over x until it's true.",
			"COLTON OGDEN: Yeah.",
			"What we probably want to do is look all the way down the column,",
			"because we start towards the top.",
			"If we find that there's no tiles down there-- it's just pure chasm--",
			"we probably want to shift the player.",
			"And then random keys and locks--",
			"let me open up LevelMaker so we can see what you'll be interacting with,",
			"because most of what you'll be doing actually is in LevelMaker.",
			"",
			"It does a lot of what we did before with just math.random,",
			"and then it will insert into objects.",
			"So objects is a table here.",
			"It will insert a game object depending on some logic.",
			"So in this case, if we're generating a pillar,",
			"we have a chance to generate a bush on the pillar.",
			"So if math.random(8) is 1, in this case, we're already generating a pillar.",
			"So we have an additional chance that's on top of the chance",
			"to generated a pillar--",
			"so basically, I think it's a 1 in 64 chance on that particular iteration",
			"to generate a pillar with a bush.",
			"",
			"You just add a new game object to objects.",
			"In this case, this is the constructor for a game object.",
			"You give it an x, y, width, height, and then a frame.",
			"And then the frame is relative to whatever quad table matches the texture",
			"string here.",
			"So bushes is the texture, and so whatever quad in bushes",
			"you want to give it--",
			"in this case, we just gave it a random frame from that.",
			"And then a lot of the same logic applies to other parts.",
			"This is another part where we generate bushes just on flat land.",
			"We have a chance to generate a block--",
			"1 in 10 chance this is a jump block.",
			"So here we have texture, x, y, width, height, frame.",
			"Notice that we have collidable is true, and this",
			"is how we can test to see whether a tile is collidable or not.",
			"Hit is false, meaning that we haven't hit it yet.",
			"And if we have hit it, then we do this code basically-- onCollide gets called.",
			"",
			"You can see where this gets called in the collision code for--",
			"",
			"if we look in Player.",
			"",
			"Player has check left collisions, check right collisions,",
			"and check object collisions.",
			"It doesn't have check up and down collisions.",
			"There is a corner case for both of those such",
			"that the logic had to be duplicated.",
			"I forget exactly why.",
			"But you basically get a list of objects that you check for.",
			"",
			"Oh, the reason why is because when you get",
			"the collided objects when you're in the jump state,",
			"you trigger the onCollide function.",
			"So let's go to PlayerJumpState.",
			"If we're in the jump state, this is where we would basically",
			"check to see if we've gotten any objects that collide with the player.",
			"If it's solid, call its onCollide function, object.onCollide, and then",
			"we just pass in the object itself, basically.",
			"And so if you go back to LevelMaker, that's",
			"where we write the onCollide function.",
			"We write the onCollide function within the game object here.",
			"So we just give it an onCollide, remember,",
			"because functions are first class citizens.",
			"We can just say onCollide gets function obj,",
			"where obj is going to be this object.",
			"If it wasn't hit already, one in five chance to spawn a gem--",
			"so going to create a gem.",
			"It's got all the same stuff in it.",
			"In this case, it has its own function called onConsume.",
			"onConsume takes a player and an object.",
			"And then this is all arbitrary, by the way.",
			"You can create whatever functions you want.",
			"These are callback functions, effectively.",
			"We're just going to play the pickup sound and then add 100 to our score.",
			"And then here, in the event that we did get a gem,",
			"we tween it over the course of 0.1 seconds.",
			"We tween its y to be from below the block to up above,",
			"so it has an upwards animation, effectively.",
			"And then we have another sound that plays.",
			"But that's effectively how we're spawning game objects.",
			"Game objects have textures, x, y, width, height, and then",
			"you can give them callback functions that you then",
			"execute wherever it's relevant to you.",
			"In this case, you'll only really need to worry about onCollide,",
			"because the assignment is create random keys and locks.",
			"They have to be the same color, but you can choose them at random.",
			"If the player collides with the key, then he",
			"should probably get some flag that's like key obtained is true",
			"or something like that.",
			"And then you go to the block that spawns in the level,",
			"so you should spawn a block with that same color.",
			"And then on collide, you should unlock it, so get rid of the block",
			"and then spawn a new game object--",
			"the flag.",
			"And then that flag will have its own on collide.",
			"And when you collide with the flag, restart the level.",
			"And that's effectively the gist behind the problem set.",
			"So it probably shouldn't take--",
			"I would say probably maybe 40 or 50 lines of code probably should do it.",
			"AUDIENCE: That game object--",
			"was that a class?",
			"It's not a table.",
			"What is that?",
			"COLTON OGDEN: It is a class.",
			"There's a GameObject class.",
			"A game object is basically-- and I realize I didn't touch on it too much.",
			"In the context of this distro, you could almost think of it as an entity.",
			"In this case, what I've done is I've differentiated",
			"between living things and non-living things",
			"as being entities versus game objects, which is a semi-arbitrary distinction.",
			"But for a small project like this, it makes sense.",
			"For a large project, I would probably create everything as an entity",
			"and then give different kinds of entities",
			"their own behavior and their own components,",
			"sort of like how you do with an entity component system.",
			"AUDIENCE: Are there two ways to create a class in Lua,",
			"one with the curly brackets and one with regular parentheses?",
			"COLTON OGDEN: There is, actually.",
			"So the question was, is there more than one way to create a class in Lua",
			"whether it's parentheses or curly brackets?",
			"Yes.",
			"I don't think I've ever actually talked about this.",
			"",
			"Let's go back to LevelMaker.",
			"If you instantiate a class and that class",
			"takes in just a table as its only argument, you can just pass in this.",
			"This effectively is that argument table.",
			"You don't need parentheses.",
			"It's effectively doing this--",
			"same thing, only you don't need the parentheses.",
			"AUDIENCE: And then that's a table that's being passed in?",
			"COLTON OGDEN: Correct.",
			"It's just an alternative form of instantiation",
			"on things that only take a table as their argument for when",
			"they get instantiated.",
			"AUDIENCE: And you can only have one table in that case?",
			"COLTON OGDEN: Correct, yes.",
			"AUDIENCE: Wouldn't it be easier to create a new class which",
			"would have its own set of game objects so you",
			"would create a gem which would be helper dot gem, which",
			"would in turn create a game object?",
			"COLTON OGDEN: Can you say that one more time?",
			"AUDIENCE: It's kind of hard to explain.",
			"Wouldn't it be easier to create another class which",
			"would have your gem and everything, and your gem in that class",
			"would be a game object?",
			"But in this class, when you wanted a gem,",
			"you would say local gem equals helper class dot gem.",
			"COLTON OGDEN: The question was, wouldn't it",
			"be easier to create a helper class that would allow you to instantiate gems?",
			"Possibly.",
			"",
			"I think if you were going to design this a little bit more robustly,",
			"and if this were going to be a larger game,",
			"then you would just create a subclass for blocks, gems, et cetera.",
			"To shrink the number of files that we had in the distro and to sort",
			"of consolidate everything together and put all of the level code together",
			"in one spot, I decided to just create GameObject as an abstract class that",
			"you could then just create your own behavior for within the actual",
			"constructor-- which is this bit here, which is just the table--",
			"and then allow you to override the onCollide and onConsume functions.",
			"You can actually give it whatever functions you want.",
			"You could give this some arbitrary named function and then test for it later.",
			"This is almost like an obscure way of inheritance.",
			"But I think if I were to engineer this with the goal of making it a really",
			"large game, I would just subclass.",
			"I would just create a class for gem, a class for block, a class for bush,",
			"et cetera, et cetera.",
			"It wasn't strictly necessary for this example,",
			"so we ended up keeping everything a little bit",
			"more abstract in a sense-- a little bit more general purpose.",
			"But yeah, you could definitely create classes for those.",
			"And if you were in an entity component system,",
			"you could have a consumable component.",
			"And then that consumable component would then",
			"allow you to give it some sort of behavior that affects the player when",
			"the player consumes that object.",
			"In this case, a gem is a consumable, so you would just",
			"give it a consumable component with a texture of the gem",
			"and then give it a callback function that",
			"just increments the player's score.",
			"You could probably put that in 10 or 15 lines of code.",
			"It would be pretty easy.",
			"And then blocks would be a spawner component,",
			"so they have a chance to spawn.",
			"And then you would pass in that spawner component a gem maybe,",
			"so it would have a chance to spawn the gem that you passed into the spawner",
			"component-- and then also a solid component to say, oh, this is solid.",
			"So if I hit it, I should trigger a collision",
			"and not be able to walk through it.",
			"So you just layer on these components.",
			"I would encourage you to think about this way of composing",
			"your objects a little bit, particularly as we get towards Unity, which",
			"makes a lot of use of this concept.",
			"In short, yes.",
			"I think that's pretty much everything.",
			"Let me just go ahead.",
			"We're running out of time here, but like I said, one more time--",
			"make sure the player starts above solid land, random color key and lock,",
			"and then make sure that when you get the key, you can unlock the lock,",
			"and that spawns the goal.",
			"So this is all something you can just add to the LevelMaker class,",
			"and it will all work with your game level that way.",
			"And then you touch the goal flag, then respawn the level.",
			"So today, we talked about Super Mario Bros.",
			"The other big Nintendo game of that era--",
			"arguably one of the greatest of all time-- is Zelda.",
			"So we'll be talking about a very simple Legend of Zelda game,",
			"where we just have a random dungeon that we can go through,",
			"a top down perspective, fight simple monsters,",
			"open chests, blow up walls-- that sort of thing.",
			"We'll talk about triggers and events.",
			"And then we'll talk about hurt boxes, inventory,",
			"a very simple GUI for opening up a menu, and then world states",
			"so that we can see which doors have been blasted open so that they",
			"render appropriately and whatnot.",
			"And that's it for Mario.",
			"Thanks a lot for coming.",
			"I'll see you guys next time.",
			""
		],
		"is_youtube": false
	},
	"video_007": {
		"section": "CS50G 2020",
		"subsection": "Legend of Zelda",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V001200/HarvardXCS50G-V001200.m3u8",
			"https://edx-video.net/HarvardXCS50G-V001200_DTH.mp4"
		],
		"video_duration": 6118,
		"speech_period": [
			0.5, 3.874, 12.166, 3.15, 3.63, 1.71, 3.63, 0.54, 1.962, 2.958, 5.13,
			2.58, 2.64, 2.49, 3.69, 1.074, 2.166, 3.496, 1.874, 5.009, 4.201, 2.642,
			2.538, 2.71, 2.67, 3.09, 3.81, 1.76, 2.5, 2.58, 1.65, 1.92, 4.62, 4.2,
			1.23, 1.5, 1.583, 2.407, 4.11, 4.47, 1.17, 1.159, 2.291, 2.435, 2.124,
			3.121, 2.74, 1.91, 3.24, 4.23, 3.48, 2.68, 5.81, 2.305, 0.875, 2.94,
			2.022, 2.208, 2.19, 2.56, 2.91, 2.84, 3.285, 2.916, 3.249, 3.25, 2.81,
			2.07, 2.19, 1.49, 3.7, 2.97, 3.39, 4.73, 1.07, 4.79, 2.04, 4.96, 3.56,
			3.04, 1.19, 2.34, 2.97, 2.624, 3.406, 3.51, 2.82, 4.92, 2.849, 3.331,
			5.27, 2.69, 3.56, 4.32, 2.969, 1.291, 3.96, 2.49, 3.78, 1.23, 4.89, 5.22,
			2.34, 2.61, 2.43, 3.12, 2.9, 3.12, 2.76, 2.791, 1.769, 3.975, 2.625, 3.96,
			4.77, 2.43, 5.34, 3.75, 2.1, 2.04, 2.7, 3.04, 4.13, 2.442, 2.958, 0.54,
			3.752, 2.348, 2.88, 4.814, 1.496, 3.79, 0.81, 1.35, 2.28, 1.88, 1.16,
			2.48, 2.72, 3.76, 3.72, 4.6, 3.47, 3.04, 4.34, 1.77, 3.78, 2.17, 1.62,
			1.25, 3.84, 3.067, 2.833, 2.833, 4.887, 2.37, 2.87, 1.0, 1.13, 0.791,
			4.619, 3.12, 1.11, 2.92, 2.39, 2.04, 3.23, 1.99, 1.959, 2.124, 2.307,
			1.13, 1.46, 2.584, 1.666, 3.88, 0.5, 5.91, 2.099, 1.801, 3.148, 2.041,
			1.801, 4.08, 1.08, 0.87, 0.9, 2.83, 2.025, 3.125, 3.57, 3.58, 3.17, 2.73,
			2.52, 1.87, 2.869, 2.041, 2.92, 4.91, 3.67, 2.99, 2.25, 4.35, 3.15, 4.56,
			0.66, 2.86, 2.649, 1.791, 5.57, 2.46, 3.15, 3.72, 3.51, 3.63, 5.55, 1.29,
			2.666, 2.374, 2.63, 1.208, 5.322, 10.56, 4.67, 3.27, 3.45, 2.03, 3.65,
			2.93, 1.56, 4.401, 1.249, 3.26, 3.84, 4.05, 3.63, 6.03, 1.14, 5.28, 2.4,
			1.99, 4.01, 2.989, 2.291, 4.89, 3.48, 4.18, 2.48, 5.17, 4.31, 2.43, 5.55,
			4.23, 4.45, 2.84, 3.63, 1.027, 0.833, 3.36, 3.0, 3.842, 2.458, 3.18, 3.6,
			3.66, 2.23, 3.53, 3.39, 2.43, 2.19, 3.79, 4.41, 2.11, 0.53, 2.61, 3.0,
			3.184, 2.916, 3.26, 2.145, 5.355, 3.27, 2.97, 1.74, 3.84, 3.589, 3.041,
			2.672, 2.458, 5.22, 4.17, 3.93, 3.69, 4.61, 2.26, 3.99, 3.191, 0.499,
			1.77, 2.46, 2.59, 2.7, 4.7, 2.49, 3.42, 1.98, 3.9, 4.47, 3.36, 3.81, 1.2,
			3.18, 2.644, 1.916, 2.291, 1.729, 3.767, 2.083, 3.66, 5.19, 2.23, 4.52,
			2.97, 4.66, 3.62, 2.17, 3.59, 5.58, 2.4, 2.76, 1.076, 3.334, 2.22, 3.54,
			4.17, 4.26, 5.67, 2.08, 2.99, 5.19, 2.88, 2.974, 1.916, 5.28, 3.45, 2.04,
			2.569, 1.541, 3.45, 4.35, 2.31, 4.02, 4.92, 5.64, 3.6, 2.08, 5.01, 3.32,
			2.46, 2.64, 2.61, 3.54, 3.25, 4.28, 1.8, 3.27, 1.65, 2.811, 0.5, 0.5,
			0.689, 1.18, 4.26, 0.63, 3.08, 4.93, 3.52, 2.93, 4.29, 5.49, 3.48, 4.38,
			2.19, 4.56, 2.07, 2.43, 3.716, 1.624, 1.05, 2.19, 5.91, 3.399, 1.791, 3.6,
			1.02, 4.59, 1.62, 2.55, 3.12, 2.55, 5.37, 3.352, 2.708, 3.03, 2.58, 3.78,
			4.24, 1.16, 3.442, 1.708, 2.99, 2.87, 2.47, 1.5, 2.03, 3.09, 4.33, 4.54,
			4.42, 1.26, 3.94, 3.5, 1.68, 2.73, 3.39, 3.744, 0.666, 1.97, 2.125, 2.535,
			4.29, 4.74, 3.12, 2.65, 3.83, 3.06, 2.4, 3.97, 0.5, 5.25, 2.98, 3.59,
			3.93, 3.03, 3.09, 4.38, 3.75, 1.53, 1.41, 3.54, 3.9, 3.96, 4.44, 1.71,
			1.74, 2.09, 2.2, 3.96, 2.795, 2.125, 2.22, 1.62, 4.26, 3.24, 3.87, 2.55,
			4.02, 3.96, 3.07, 2.69, 3.24, 3.48, 3.96, 3.3, 2.28, 4.86, 1.32, 2.14,
			3.59, 2.18, 1.39, 1.11, 5.47, 2.54, 4.29, 5.09, 4.53, 4.71, 1.11, 2.25,
			4.02, 3.78, 5.186, 1.874, 2.93, 1.62, 2.7, 1.977, 1.833, 1.708, 2.732,
			3.66, 3.03, 3.69, 1.92, 4.74, 2.04, 3.63, 3.48, 1.9, 4.61, 2.97, 1.17,
			2.28, 3.7, 2.39, 1.62, 3.91, 2.93, 1.42, 3.68, 4.53, 3.87, 7.05, 3.69,
			3.9, 4.87, 3.45, 2.09, 3.18, 3.33, 2.94, 2.465, 2.125, 3.344, 0.666,
			0.833, 2.724, 0.583, 2.77, 1.98, 2.97, 2.13, 1.61, 3.17, 4.056, 1.874,
			2.64, 1.76, 2.92, 2.49, 3.42, 4.23, 0.93, 1.37, 3.64, 3.81, 1.21, 4.7,
			1.08, 1.2, 1.08, 2.13, 2.999, 5.511, 1.601, 2.249, 2.64, 1.29, 2.19,
			1.905, 2.295, 1.26, 3.12, 5.64, 1.35, 3.21, 2.91, 4.5, 3.6, 2.35, 2.0,
			3.502, 2.958, 3.35, 1.53, 3.51, 3.69, 4.62, 2.466, 2.124, 2.37, 2.666,
			3.944, 3.38, 3.45, 2.91, 3.03, 5.26, 0.83, 2.46, 2.64, 5.79, 6.63, 1.064,
			3.166, 2.66, 0.87, 0.85, 2.92, 5.7, 0.726, 1.874, 1.3, 1.791, 2.129, 3.57,
			2.49, 2.28, 3.15, 3.48, 2.842, 1.958, 4.35, 3.09, 1.86, 8.34, 3.69, 3.42,
			5.37, 3.04, 6.41, 3.45, 2.22, 5.58, 2.67, 1.56, 5.25, 3.3, 1.59, 3.384,
			2.166, 1.522, 2.708, 3.36, 3.12, 4.53, 2.04, 5.674, 0.942, 1.884, 1.44,
			2.61, 2.79, 1.95, 2.89, 4.259, 1.791, 1.38, 2.504, 1.166, 1.07, 2.49,
			3.42, 1.83, 1.78, 4.31, 5.42, 1.0, 1.93, 4.94, 1.23, 6.73, 3.701, 0.499,
			2.28, 1.71, 3.25, 3.5, 6.48, 3.39, 4.89, 5.07, 1.65, 4.449, 6.321, 4.86,
			2.22, 0.849, 2.781, 5.21, 6.64, 3.29, 5.5, 1.68, 4.649, 7.801, 3.1, 7.145,
			6.205, 2.39, 1.2, 5.64, 3.21, 3.48, 3.03, 5.76, 2.25, 5.67, 4.05, 1.74,
			1.39, 4.05, 2.19, 0.71, 2.31, 6.84, 6.72, 5.25, 3.58, 6.47, 6.12, 3.36,
			2.935, 0.875, 3.46, 3.03, 2.73, 6.84, 4.17, 3.69, 1.89, 4.01, 1.63, 3.327,
			2.583, 4.62, 4.87, 2.54, 4.14, 4.69, 2.72, 4.11, 3.27, 1.02, 2.16, 1.83,
			3.66, 1.65, 4.735, 0.875, 3.48, 0.546, 1.374, 5.22, 1.98, 2.82, 1.56,
			3.85, 4.7, 3.02, 2.38, 4.8, 2.85, 1.59, 1.96, 6.2, 2.74, 3.478, 0.968,
			2.424, 3.02, 3.18, 3.81, 2.16, 2.82, 3.12, 3.57, 3.27, 3.51, 6.4, 3.306,
			3.924, 2.42, 3.73, 5.21, 1.25, 3.35, 1.86, 3.29, 3.53, 2.94, 3.017, 2.083,
			4.58, 1.14, 3.0, 3.02, 1.735, 1.625, 2.855, 0.875, 2.75, 0.675, 0.415,
			0.84, 0.52, 2.63, 0.89, 1.125, 2.312, 0.833, 1.083, 2.557, 3.76, 2.71,
			5.04, 4.08, 4.331, 0.499, 3.15, 2.22, 2.79, 3.72, 3.72, 2.55, 3.45, 6.46,
			1.28, 3.124, 1.286, 3.51, 7.41, 1.56, 7.78, 1.72, 3.5, 2.85, 2.28, 6.66,
			2.82, 4.71, 4.41, 4.68, 1.38, 4.26, 1.8, 2.4, 3.93, 2.264, 1.416, 3.44,
			1.45, 3.07, 1.51, 1.45, 1.15, 1.874, 2.34, 2.416, 2.46, 3.09, 2.31, 4.02,
			4.89, 1.8, 1.63, 5.36, 1.94, 5.5, 2.94, 2.85, 5.13, 3.63, 2.82, 2.4, 3.12,
			2.37, 3.66, 3.81, 3.24, 3.51, 2.13, 5.91, 5.46, 1.74, 2.76, 1.65, 1.53,
			1.92, 2.43, 1.53, 3.29, 3.01, 1.89, 3.69, 4.95, 4.09, 1.37, 2.31, 5.07,
			2.55, 2.76, 1.37, 3.7, 2.02, 2.864, 2.166, 5.85, 2.94, 3.45, 4.83, 4.68,
			4.14, 1.86, 3.926, 2.374, 1.407, 1.083, 5.472, 1.458, 2.22, 2.85, 3.09,
			1.132, 1.208, 1.89, 2.006, 1.124, 0.83, 2.762, 3.208, 3.51, 7.219, 3.041,
			0.925, 0.875, 3.96, 2.05, 3.78, 3.38, 4.467, 1.833, 3.12, 1.02, 1.14,
			3.81, 2.1, 3.3, 4.74, 6.94, 1.46, 3.744, 1.416, 2.76, 4.43, 3.9, 3.97,
			4.25, 1.98, 2.56, 3.631, 0.499, 3.93, 2.46, 2.85, 4.96, 2.06, 3.33, 1.83,
			1.89, 1.23, 2.13, 3.18, 2.88, 3.66, 1.92, 4.29, 4.56, 1.53, 2.125, 5.355,
			4.49, 2.61, 5.46, 1.08, 2.708, 1.121, 0.791, 3.87, 1.347, 2.333, 3.45,
			1.38, 3.45, 2.48, 3.67, 3.38, 1.34, 3.76, 5.68, 0.9, 1.56, 1.65, 2.91,
			3.12, 1.98, 3.39, 2.05, 1.88, 3.33, 3.42, 5.28, 3.419, 2.041, 4.26, 3.734,
			2.416, 1.92, 5.53, 1.49, 1.86, 4.8, 3.42, 4.81, 6.68, 4.96, 6.88, 4.42,
			1.44, 2.74, 2.96, 3.9, 2.19, 3.03, 2.31, 3.3, 4.89, 3.75, 3.36, 2.36,
			1.105, 2.475, 0.7, 1.75, 0.76, 4.38, 1.11, 0.81, 0.75, 1.724, 2.666,
			0.916, 2.584, 5.1, 4.62, 2.16, 3.15, 5.02, 3.05, 4.05, 1.17, 5.07, 4.17,
			3.217, 1.583, 2.67, 3.63, 2.85, 4.17, 2.26, 2.0, 2.12, 4.66, 2.59, 2.73,
			2.69, 4.41, 2.78, 1.6, 3.0, 5.31, 1.74, 1.56, 3.24, 2.82, 5.1, 0.809,
			2.791, 5.47, 1.06, 1.685, 1.875, 1.18, 0.791, 1.339, 2.93, 2.41, 4.53,
			3.48, 2.43, 2.25, 4.02, 3.93, 2.15, 1.75, 2.34, 3.57, 3.78, 2.91, 1.53,
			2.19, 2.89, 0.5, 3.21, 3.84, 3.974, 3.166, 0.791, 5.629, 2.7, 3.36, 1.68,
			4.08, 2.76, 1.62, 3.9, 4.95, 5.31, 1.68, 5.71, 0.5, 2.04, 6.6, 2.61, 4.46,
			3.68, 0.625, 0.916, 3.279, 1.458, 3.882, 1.93, 5.94, 4.44, 2.54, 1.86,
			0.61, 3.91, 5.12, 1.59, 2.1, 2.34, 1.17, 4.24, 2.02, 2.5, 5.647, 1.373,
			1.866, 1.624, 4.1, 2.97, 1.89, 1.74, 2.7, 4.77, 4.62, 2.76, 2.28, 1.5,
			4.26, 3.9, 4.39, 1.35, 4.415, 2.875, 5.79, 1.77, 5.61, 2.64, 1.5, 6.43,
			2.084, 1.916, 1.15, 1.44, 2.49, 1.03, 1.92, 1.94, 4.89, 3.36, 1.65, 3.69,
			2.37, 1.98, 3.04, 2.69, 2.07, 7.32, 4.41, 3.37, 0.5, 1.26, 3.21, 1.41,
			2.992, 0.833, 1.275, 4.511, 0.499, 4.41, 3.59, 2.05, 4.02, 1.98, 5.321,
			2.749, 2.22, 2.072, 1.708, 0.968, 4.84, 4.929, 0.875, 5.1, 1.708, 4.14,
			2.36, 4.39, 5.95, 3.38, 2.79, 3.45, 3.27, 3.48, 3.84, 6.87, 4.31, 3.91,
			1.71, 2.37, 3.93, 3.7, 2.0, 3.84, 2.25, 4.2, 3.254, 1.666, 1.92, 4.2,
			1.65, 2.18, 3.249, 3.4, 0.499, 3.182, 3.0, 3.96, 3.39, 3.364, 0.666, 3.44,
			2.56, 0.5, 2.397, 1.833, 4.33, 4.05, 1.49, 3.37, 2.75, 2.28, 1.12, 1.71,
			1.24, 1.55, 1.2, 2.28, 2.46, 2.52, 3.12, 1.59, 3.57, 3.794, 2.416, 3.06,
			4.77, 1.17, 2.714, 3.166, 3.25, 1.92, 4.16, 2.53, 4.94, 1.68, 2.551,
			2.999, 1.56, 5.52, 3.03, 2.97, 1.69, 7.284, 1.916, 1.458, 2.822, 1.99,
			0.75, 4.186, 1.874, 2.875, 1.385, 0.66, 1.9, 6.14, 3.72, 2.25, 2.52, 5.23,
			1.64, 3.42, 2.01, 0.84, 3.45, 1.4, 3.7, 2.37, 3.51, 2.681, 0.999, 2.17,
			1.08, 4.92, 3.39, 3.57, 3.06, 3.0, 1.11, 3.39, 2.22, 5.79, 2.44, 3.47,
			4.807, 0.833, 3.72, 4.5, 2.67, 2.43, 1.26, 4.41, 6.39, 1.63, 3.8, 1.77,
			4.11, 2.55, 2.55, 3.78, 4.65, 1.42, 3.29, 3.36, 2.84, 3.927, 6.073, 5.91,
			0.63, 4.349, 3.54, 4.561, 1.827, 1.083, 6.21, 2.1, 1.049, 2.741, 2.48,
			1.98, 5.4, 3.21, 1.8, 3.24, 1.859, 3.12, 2.791, 1.259, 2.46, 2.91, 3.624,
			2.916, 2.458, 3.002, 1.29, 3.96, 4.501, 2.667, 3.333, 4.02, 1.515, 2.415,
			2.16, 2.64, 1.44, 3.15, 2.43, 1.71, 1.744, 1.311, 1.565, 2.19, 5.19, 3.0,
			2.46, 3.3, 4.44, 4.94, 1.96, 3.13, 0.93, 2.84, 0.93, 3.122, 3.208, 3.39,
			2.22, 1.305, 1.875, 1.71, 3.57, 1.45, 3.23, 1.5, 2.549, 2.791, 4.95, 1.47,
			1.87, 4.85, 3.546, 0.624, 2.61, 3.81, 3.93, 4.68, 1.3, 2.54, 2.07, 2.28,
			1.23, 2.92, 2.3, 2.4, 2.55, 1.54, 1.87, 1.13, 1.77, 3.6, 3.69, 1.36, 3.38,
			1.14, 2.7, 3.0, 4.53, 3.21, 1.77, 2.31, 3.127, 0.833, 5.49, 2.192, 2.458,
			3.236, 2.374, 1.484, 1.166, 5.06, 4.38, 2.35, 2.36, 1.38, 1.95, 3.33,
			3.915, 0.975, 4.29, 3.044, 3.166, 1.86, 1.32, 5.07, 2.16, 2.68, 1.91, 2.7,
			3.9, 3.187, 3.083, 4.83, 2.25, 2.31, 2.58, 4.47, 2.145, 3.285, 4.92, 2.52,
			4.86, 2.49, 2.31, 2.799, 1.791, 5.1, 4.86, 3.69, 3.84, 3.6, 2.73, 2.04,
			5.52, 1.26, 3.84, 0.71, 0.76, 5.94, 1.8, 4.41, 1.43, 1.91, 6.77, 3.877,
			2.333, 2.37, 3.81, 3.44, 3.4, 2.43, 3.18, 3.24, 4.5, 1.26, 1.04, 6.37,
			2.904, 1.416, 4.66, 0.5, 4.91, 1.63, 3.0, 3.98, 1.01, 2.66, 1.5, 2.07,
			13.97, 2.65, 0.5, 3.03, 5.98, 5.76, 4.26, 3.317, 1.833, 3.07, 3.45, 4.7,
			0.63, 1.11, 4.38, 3.06, 3.21, 5.04, 4.44, 2.79, 4.41, 2.615, 2.875, 2.6,
			3.19, 3.015, 1.485, 4.27, 4.43, 1.77, 3.03, 3.41, 1.392, 6.758, 0.92,
			3.22, 2.91, 4.71, 4.65, 2.502, 4.638, 3.565, 3.135, 1.61, 2.856, 0.624,
			4.5, 4.65, 4.44, 3.35, 4.62, 1.14, 3.06, 1.17, 5.79, 2.31, 1.74, 1.98,
			4.62, 8.13, 6.63, 3.65, 1.99, 1.14, 2.7, 2.4, 4.71, 3.27, 3.47, 1.75,
			5.13, 3.87, 4.38, 2.11, 2.12, 4.59, 3.54, 6.617, 2.083, 1.708, 1.625,
			0.999, 2.118, 2.43, 2.43, 4.02, 2.139, 2.541, 2.97, 3.09, 2.82, 2.22, 2.4,
			2.13, 2.7, 2.49, 1.95, 2.97, 2.52, 3.75, 2.04, 1.18, 2.92, 1.75, 1.59,
			4.98, 2.07, 3.78, 4.41, 3.93, 5.16, 2.22, 3.09, 1.44, 2.938, 3.392, 1.43,
			1.93, 1.43, 2.53, 2.84, 4.95, 4.11, 3.63, 2.25, 3.09, 2.74, 5.006, 2.124,
			3.57, 6.03, 3.7, 3.32, 3.09, 4.29, 2.88, 3.06, 1.56, 3.187, 2.333, 2.5,
			3.71, 3.81, 1.34, 6.46, 2.73, 4.05, 3.18, 3.57, 1.81, 4.52, 1.68, 3.81,
			2.4, 5.25, 2.34, 5.73, 1.282, 1.958, 4.35, 2.74, 1.88, 2.166, 2.334, 5.1,
			3.612, 2.458, 4.472, 2.958, 1.545, 2.205, 3.48, 0.932, 3.783, 3.493,
			1.502, 1.11, 5.94, 5.385, 3.665, 2.38, 1.2, 3.96, 1.05, 2.52, 3.891,
			0.499, 2.666, 2.934, 4.324, 2.666, 1.86, 2.43, 2.07, 4.264, 1.916, 4.45,
			2.12, 2.25, 1.877, 1.333, 3.75, 3.99, 1.74, 3.24, 1.71, 3.18, 5.58, 2.98,
			1.32, 5.43, 5.27, 2.865, 1.875, 1.41, 1.98, 2.89, 2.72, 2.76, 2.76, 3.4,
			1.79, 3.48, 2.4, 2.86, 2.75, 2.1, 2.145, 1.875, 4.179, 1.791, 1.8, 2.04,
			3.12, 0.5, 1.708, 1.542, 1.39, 1.55, 2.43, 3.3, 4.21, 5.54, 4.71, 4.02,
			2.31, 4.43, 4.81, 3.93, 3.09, 0.97, 4.16, 1.45, 0.5, 1.166, 2.884, 3.69,
			0.707, 1.583, 4.37, 2.55, 1.89, 1.37, 3.61, 3.631, 1.499, 2.93, 2.11,
			1.98, 2.899, 0.791, 3.54, 3.12, 2.22, 4.68, 2.97, 1.45, 1.25, 2.52, 2.44,
			3.5, 3.36, 2.4, 1.5, 1.56, 3.33, 5.13, 0.917, 2.583, 1.37, 2.84, 2.82,
			5.1, 1.35, 3.09, 3.12, 3.24, 3.93, 1.66, 4.23, 2.88, 4.23, 6.55, 1.566,
			2.124, 1.208, 4.392, 4.65, 0.81, 3.21, 4.59, 3.27, 4.32, 3.052, 1.958,
			2.69, 4.96, 5.91, 4.05, 4.559, 1.291, 2.866, 1.874, 4.41, 1.83, 6.33,
			4.02, 4.3, 1.67, 3.63, 3.42, 2.125, 0.805, 3.16, 3.01, 3.35, 0.75, 5.55,
			4.47, 3.9, 1.92, 3.69, 2.28, 4.56, 3.42, 1.68, 3.96, 5.19, 1.39, 4.319,
			1.041, 3.99, 2.28, 2.82, 2.4, 2.72, 4.09, 1.68, 2.25, 2.4, 3.57, 3.78,
			3.54, 3.54, 0.51, 3.3, 3.57, 4.33, 4.25, 5.777, 0.583, 5.0, 2.17, 3.63,
			4.83, 2.64, 2.52, 3.96, 3.78, 4.38, 5.07, 2.37, 3.68, 4.15, 2.49, 2.01,
			2.4, 4.11, 4.739, 2.791, 5.13, 1.77, 4.32, 4.92, 4.17, 2.97, 6.06, 1.77,
			2.16, 2.85, 1.42, 3.68, 4.53, 5.64, 3.03, 2.28, 3.27, 5.49, 3.51, 3.48,
			4.02, 0.9, 3.81, 2.07, 3.13, 2.48, 3.81, 2.25, 1.48, 3.05, 3.03, 4.17,
			2.52, 4.04, 3.83, 4.66, 1.964, 2.946, 4.57, 1.88, 2.85, 5.34, 2.87, 0.556,
			2.374, 1.79, 2.61, 2.16, 2.47, 1.64, 1.221, 1.749, 4.33, 1.25, 2.916,
			2.694, 3.9, 1.08, 1.62, 4.59, 2.85, 0.81, 2.76, 4.98, 2.22, 2.349, 1.688,
			1.583, 1.01, 2.07, 1.65, 2.784, 2.166, 2.041, 5.456, 2.083, 3.26, 1.56,
			1.53, 1.65, 2.01, 3.72, 3.292, 2.708, 0.81, 3.24, 2.94, 3.0, 4.5, 1.5,
			2.28, 3.97, 4.04, 4.32, 3.42, 0.9, 2.165, 0.5
		],
		"transcript_en": [
			"",
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: All right, welcome to GD50, Lecture 5.",
			"Today's topic is The Legend of Zelda, as you can see on the screen there.",
			"A very iconic game.",
			"Last week we did Super Mario Bros, which is arguably the most iconic video game",
			"of all time.",
			"Legend of Zelda is a close contender.",
			"Even now, just like with Mario, they're producing very wonderful games.",
			"I think last year Breath of the Wild took all the, I forget which",
			"ceremony it was, or award sort of show.",
			"But it took like every award possible.",
			"Just last year, the latest Zelda, the Breath of the Wild.",
			"So it feels sort of apropos to talk about Legend of Zelda in that context",
			"as well.",
			"Here's a screenshot of the original Legend of Zelda.",
			"It was an NES title, just like Super Mario Bros--",
			"just like most games of its time, tile based.",
			"You can sort of see how the surroundings are sort of layered tiles bit by bit.",
			"The goal of the game overall was to sort of explore this open world, which",
			"is kind of a first of its kind.",
			"You controlled Link, shown at the very bottom there.",
			"You had a sword, yo had bombs, you had arrows.",
			"You want to go find rubies, you went through dungeons.",
			"You slayed monsters and bosses, and then ultimately the goal",
			"was to obtain the Triforce which is shown at the very top left and right",
			"of the slide here.",
			"Here's a screenshot, another screen shot of Legend of Zelda,",
			"inside an actual dungeon where you can see at the very top,",
			"there's got like a map layout.",
			"Maps are sort of arranged in a grid.",
			"And you could go in a room by room, whereby each room was the entire width",
			"and height of the screen, looking for, solving puzzles, looking for items,",
			"that sort of thing.",
			"You can see there's a monster there.",
			"You have hearts at the very top right.",
			"So when you take damage, hearts sort of decrement.",
			"Will see both of these, the hearts and the dungeon aspect of the game,",
			"today in lecture, as well as the width and height of the room",
			"being a dungeon tile.",
			"And controlling an avatar.",
			"But this is sort of a representative screenshot of what",
			"the game looked like back in the day.",
			"Some topics today that we'll be discussing in order",
			"to implement sort of the foundation for what a game engine like this",
			"might look like are things like top down perspective.",
			"So as you can see, in this screenshot, we're",
			"looking at Link from the very top in a bird's eye view, as opposed",
			"to how we used to look at Mario, from the side, where",
			"it was sort of like a side scroller.",
			"Here we're actually looking at things from the top down.",
			"So we have a view of the room in a sort of a different perspective.",
			"There's not really a z axis, technically speaking.",
			"But there sort of is.",
			"You can implement things like gravity in a game engine like this",
			"by jumping over holes and things like that.",
			"But there's no gravity like there was in Super Mario,",
			"where you walk left to right, you jump over gaps,",
			"and it's very easy to see in that sense.",
			"We'll be talking about infinite dungeon generation.",
			"So in the context of today's example, we'll",
			"see how we can go about implementing a dungeon that sort of you",
			"can go through forever and ever, and how to sort of model that",
			"and make it look as if you're traveling through a dungeon over and over again.",
			"And going through different screens in different rooms that are all different.",
			"But in reality, we'll see it's actually just an illusion like we've",
			"seen before in prior lectures.",
			"Well talk about hitboxes and hurtboxes, and what",
			"the difference is between the two.",
			"Hitboxes being rectangles on the screen that inflict damage",
			"upon other entities in your game world, and hurtboxes",
			"sort of being the rectangle that models where your player,",
			"or where an entity in the game can be hurt by other hit boxes.",
			"Well look at events.",
			"So events are a way of broadcasting some key message that tells",
			"the game world oh this thing happened.",
			"And let me register a function to call when that event is processed.",
			"So on some event, dispatch an event, and then",
			"upon that event being received by whatever is listening for it,",
			"perform this chunk of code.",
			"It allows you to sort of decouple aspects of your game",
			"engine a little bit, and makes for a little bit more readable code.",
			"And allows you to do some interesting things with achievements,",
			"for example, where you don't necessarily want to pull every single frame.",
			"Oh, did I do this sort of arbitrary list of things this frame?",
			"Rather, you can just process all of that with an event,",
			"and have a listener and a function that every time you broadcast pick up coin,",
			"maybe I have an achievement that's like oh,",
			"how I picked up 50 coins in this level.",
			"Your achievement callback function in your event can then look for that,",
			"and in your game loop, you don't have to say every frame,",
			"if a player has 850 coins, and you sort of",
			"take out bloat that would exist in your sort of overall game loop that way.",
			"And we'll see an example of how we use that in today's lecture.",
			"We'll look at screen scrolling.",
			"So a very iconic aspect of Legend of Zelda",
			"is when you're going from one screen to another,",
			"there is a sort of transition period as one screen loads and the other screen",
			"goes away.",
			"In hardware, in the NES, this was sort of the only way",
			"you could actually render more than a screen width of tiles.",
			"You actually had to dynamically load in tiles and sort",
			"of overwrite tiles that existed before that in memory.",
			"But today, we'll see how we can sort of create",
			"the illusion of doing that by just drawing a room",
			"and then having our main room, and then just sort of tweening over,",
			"and then setting everything back to the origin at 0.0.",
			"And it makes it look as if we're moving back and forth between all",
			"these rooms, when in reality all we're doing is just doing a shift,",
			"and then putting everything back to 0.0.",
			"So I'll illustrate that on the screen, if I can.",
			"And one of the last things we'll look at is data driven design.",
			"In the context of a lot of types of games, particularly RPGs and action",
			"games, it's often very valuable to be able to model all of your items,",
			"entities, sort of abilities, anything you really",
			"can, as data rather than logic, in order to make it easier for you to write one.",
			"And two, for you to sort of allocate the design aspect of your game",
			"to other people, not just programmers.",
			"And have an engine that's very versatile.",
			"And model and we'll take a look at how we implement",
			"sort of a foundation for that later on.",
			"But first I'd like to illustrate a demo for today's lecture,",
			"a sort of implementation of Legend of Zelda.",
			"Is there anybody that would like to come up and sort of demo this today",
			"in class?",
			"",
			"Awesome.",
			"Thank you so much.",
			"So whenever you're ready, go ahead and press the Return key there.",
			"[MUSIC PLAYING]",
			"And so we see on the screen, Legend of 50, which is our Legend of Zelda",
			"you rip off.",
			"So you press Enter.",
			"You go into, this is the play state of the game.",
			"So you control an avatar.",
			"You can walk around.",
			"He can interact with switches, as we saw here.",
			"When he presses a switch, the doors open.",
			"And once the doors are open, you can walk through them",
			"and it does, as I alluded to before, it transitions the screen, one",
			"entire screen height or width, depending on the direction, up above and below.",
			"We see here now where we're pressing spacebar to actually swing our sword.",
			"It's destroying the entities in the game space.",
			"So there's a hitbox triggering when you press the space bar that collides",
			"with other entities in the game world.",
			"If that hitbox hits their hurtbox, then they are flagged as dead,",
			"and they disappear from the game world.",
			"And so this goes on ad infinitum.",
			"It's just an infinite dungeon.",
			"So he can go in-between as many floors as we want to.",
			"All we're doing is every time we go through a doorway, spawn a new room,",
			"delete the old one, and just keep going forever, and ever, and ever.",
			"In a game like Legend of Zelda, it typically doesn't work like this.",
			"There is a hard set number of rooms, and they all exist in sort of a 2D array.",
			"And when you generate your dungeon, you sort of",
			"have to take into consideration things like where do I put the keys?",
			"Where do I put the boss?",
			"Where do I put treasure?",
			"That sort of thing.",
			"We won't get too in-depth as to how we can implement a complex algorithm like.",
			"But we'll touch on it a little bit, and talk about maybe some ideas",
			"that we have.",
			"And then lastly, if we just-- if we want to demo--",
			"if we can see the top left, we have hearts there,",
			"which is iconic sort of Zelda.",
			"When we do take damage from an enemy, notice that we flicker a little bit.",
			"So there's some rendering behavior triggering,",
			"and we become invulnerable when we take damage.",
			"And then lastly, when we finally take the last hit,",
			"we get a little game over screen, using the Zelda font.",
			"And that's the game in a nutshell.",
			"We press Enter and loop back.",
			"So pretty simple altogether, but there's a lot of pieces",
			"here that we haven't really seen before.",
			"So thank you very much for coming up to demo the game.",
			"All right.",
			"So that was a demo of Legend of 50, Legend of Zelda.",
			"It has a lot of the pieces that Zelda has.",
			"It's not as fully fleshed out, of course,",
			"as a full game like Zelda, which would be monstrously large.",
			"And there's a lot of things we need to factor in.",
			"But the foundation is there.",
			"We have the dungeon foundation upon which we can build an actual generator,",
			"if we wanted to.",
			"We have entities.",
			"We have hit boxes.",
			"We could easily model, because we have switches in the game,",
			"we could model things like treasure chests that",
			"open that have different states, just like the switch had different states.",
			"And have different objects in our game space interact with other objects.",
			"We have a lot here, and we'll talk about all of it today.",
			"So here's a few screenshots just to show what we just looked at.",
			"Our goal mainly is the second screen shot,",
			"on the top right, which is the play state, which has",
			"all of the little pieces we just saw.",
			"But just to tie it all together, we do have a start state here,",
			"and a Game Over state which is relevant in regard",
			"to the hearts on the top left.",
			"So the first thing that I'll talk about as we sort of get the engine built up",
			"is, where do we go for getting our assets into the game?",
			"And just like in prior lectures, prior to today,",
			"we just have a sprite sheet, like we did with Mario,",
			"where everything is laid out in a fairly even sequence of tile segments.",
			"In this case, the segments are 16 by 16 pixels.",
			"Here, I've overlaid a grid just to show that the picture is indeed perfectly 16",
			"by 16.",
			"And this is something that you should take into consideration.",
			"And consciously do when you're building your game assets.",
			"Make it easy to chop up into little pieces,",
			"so you can then index into this sprite via some table of quads.",
			"And then assign an ID to whatever object,",
			"or tile you want to render to the screen.",
			"And so we see if you look here, things like the doors,",
			"they're not perfectly modeled by one tile.",
			"And so when you do have things that are larger than 16 by 16,",
			"it's not quite as easy as oh have an entity or an object with this frame ID,",
			"and draw it to the screen.",
			"You actually need to a little bit more complicated render logic.",
			"So just offhand, if I wanted to draw a door,",
			"does anybody have any suggestions as to how I would model that?",
			"And or draw it to the screen?",
			"",
			"So if we have a door that's not perfectly a 16 x 16 pixel tile,",
			"offhand, what we need to do is just basically store all four",
			"of those tiles in this case, or at least keep track of however many tiles",
			"your object is.",
			"And then just draw them based on some offset.",
			"Have an xy that represents the top left of that object.",
			"Place it in the right position, and instead of drawing just one tile,",
			"we draw four tiles.",
			"And then instead of having just one collision boss that's 16 by 16 tiles,",
			"you can do a couple of things.",
			"You can either check collision on all four of these tiles,",
			"or at least all two of these door tiles, or model your own custom hit",
			"box that then maybe that object that represents a doorway has control of.",
			"So you can say doorway collides player, and then the doorway",
			"has a height and width of however many pixels it is wide by tall here.",
			"Just this door part.",
			"And then, you are able to then build upon not just having one tile that",
			"models an object or entity in your game space,",
			"but now you have more artistic flexibility.",
			"You can do things like have doorways that are more than one pixel wide.",
			"And sort of have a more convincing gameworld as a result of that.",
			"You'll see a lot of things like that in games like RPGs",
			"where you have full houses that are obviously not just one tile.",
			"You can model things as one tile if you want to,",
			"but from an artistic perspective, and from just a game engine perspective,",
			"it's a little bit easier to programmatically",
			"be able to cut up all your assets into tiles and draw them as such.",
			"So being able to build upon just the single sprite",
			"and be able to do multiple sprites represent",
			"an object is the key to things like houses, things like big trees,",
			"things that are just more complicated than single tiles as we see here.",
			"The character sprite sheet is, as you can see, a little bit more complicated.",
			"So this is an example of a sprite sheet that has padding.",
			"Sometimes you will get sprite sheets that aren't neatly divided",
			"into even segments.",
			"And for good reason.",
			"Because sometimes you have tiles that are not perfectly",
			"the width and height of whatever your game engine's tiles are.",
			"In this case, the player is actually 20 pixels tall, and 16 pixels wide.",
			"And on top of that, he's got different frames of animation.",
			"We can see here at the bottom left, he's got a sword swinging animation.",
			"The sword swing animation is actually stored in a 32 by 32 pixel frame,",
			"because sometimes depending on which angle he's looking at,",
			"his sprite can get a little larger or smaller.",
			"So when you have a sprite with padding, what's sort of a way",
			"that we can draw this to the screen reliably?",
			"How do we take this into consideration?",
			"How would we render a screen sprite with padding?",
			"",
			"So let's say this sprite here, our character swinging a sword, is in a 32",
			"by 32 pixel box.",
			"Right?",
			"This sort of box around here, this white space.",
			"But he's only still maybe 16 pixels wide by 20 pixels tall.",
			"Or maybe he is some amount similar to that.",
			"In order to draw him to the screen, which you can look at in the code,",
			"all we really need to do is assign that sprite an offset.",
			"Just say, OK, this sprite's offset x and offset",
			"y are some value that basically lets us draw the sprite",
			"to a negative x and a negative y value.",
			"And that'll shift the sprite up, such that it aligns perfectly",
			"with wherever his xy are.",
			"And you can take a look at the code to see exactly how that works.",
			"Lastly the actual entities for our game world are different creatures.",
			"And this is a sprite sheet-- this is a more ideal sprite where everything",
			"is 16 by 16 pixels wide and tall.",
			"And all we really did here was just divide the sprite sheet",
			"using the regular utility function generate quads by 16 16.",
			"We don't have to worry about separate widths and heights for everything,",
			"and we can create animations very simply because of this.",
			"As a side note, something that I like to do, when I'm parsing",
			"or when I'm piecing apart a sprite sheet that's got a lot of individual frames,",
			"particularly if I'm creating animations, or I just",
			"need to know for a tile, a particular tile to draw to the screen.",
			"It's kind of a pain to manually look through each and every tile, one",
			"by one.",
			"And say OK, this is one but OK.",
			"But if I want to find out which one the slime is,",
			"I got a count, OK how many pixels wide does this?",
			"OK, and then it's times 4, it's 12.",
			"And then it's on the fifth row, so 12 times 4 plus 1 will give me, OK.",
			"So it's at index 49.",
			"So I've spent a non-trivial amount of time sort of hand",
			"calculating what all these do.",
			"I wrote a simple Python script that will just go over a file,",
			"and just add a digit to each individual quad,",
			"to just show you at a glance what each sprite is.",
			"And this is including the distro, so you can see what it looks like.",
			"Saves a lot of time.",
			"And I recommend trying, when you're sort of working with assets",
			"and you find yourself doing something that takes a long time,",
			"and it's sort of tedious and mechanical, maybe",
			"try to find a way to sort of automate that, or at least",
			"make it easier to do things at a glance.",
			"In this case, just simply imposing a numerical grid solves that problem.",
			"I don't have to spend a significant amount of time",
			"figuring out which frames of animation the ghost facing left is.",
			"I know instantly it's 67, 68 and 69, and allows me to just crank things",
			"up that much faster.",
			"So the first thing we'll take a look at is sort of top down perspective.",
			"And we mostly talked about this before, earlier.",
			"But all it really is is a tile map, which we've seen before.",
			"The only difference is now, instead of looking at things from the side,",
			"we're just looking at things from up above.",
			"So what's probably the most obvious consideration",
			"when designing a top down perspective versus a sort of side scrolling",
			"point of view?",
			"Looking at particularly at how the tiles are drawn?",
			"What stands out?",
			"",
			"So the thing that stands out to me is that we",
			"have things like shadows on walls here.",
			"We have also corners, and things altogether",
			"are skewed such that they are almost like rotated slightly as if they're",
			"simulating an angle of rotation relative to the camera facing from up above.",
			"You can see this on the player, for example.",
			"It looks like you're looking at him from backwards and up.",
			"When you're modeling your assets that way, it's more convincing.",
			"And Zelda has always done this, to make your assets look",
			"as if they are slightly tilted, and that you're looking up above.",
			"So when you're designing a top down game, just",
			"for convincing the sake of being more convincing, try and emulate that.",
			"The entities here, like the skeleton, and such,",
			"are a little bit more straight on.",
			"The bats and slimes and whatnot, even though they still",
			"have a little bit of that appearance.",
			"Like the spider it sort of looks as if it's from the top back.",
			"But modeling your assets from a top down perspective, mainly the thing.",
			"Pay attention to shadows and highlights, which",
			"adds a lot in terms of convincing us that we're in this room with lighting.",
			"And also make sure that you're doing things like corners and stuff",
			"and making, it look as if things are slightly skewed rotation wise.",
			"The first thing that we're going to look at in terms of the code in the distro",
			"is Dungeon Generation.",
			"So in Legend of Zelda, dungeons are fixed.",
			"They're completely set in advance by the designers.",
			"And in most games, this is actually the case.",
			"In our example, and in a couple of other examples,",
			"a primary example of them being that I can think of,",
			"that I have in the slides, a famous game called The Binding of Isaac,",
			"dungeons can also be generated.",
			"So what's the sort of like the main unit of a dungeon?",
			"At least in the context of Legend of Zelda?",
			"If you had to distill what comprises a dungeon,",
			"what's the most fundamental unit?",
			"",
			"Tony.",
			"A room.",
			"Yes.",
			"A room.",
			"So we can almost look at this, if we picture it in terms of a 2D array,",
			"right?",
			"We have, assuming that this is like index 1.1",
			"in Lua, 0.0 in other languages, going left to right, top to bottom.",
			"Basically we have on or off, relative to each of these.",
			"Off, on, off, off, off.",
			"Each of the indexes in this 2D array holds a room.",
			"And so the room has connections implicitly between the other rooms.",
			"If you wanted to go, let's say, from this room here to the room",
			"up above it, what's the offset, in terms of the 2D array?",
			"How are we going from this room up to this room?",
			"",
			"So we're just going up a y level, right?",
			"So this is x level 3, y level 3.",
			"If we wanted to go up to the next room, we need to load in.",
			"If we're doing it the Zelda way, right?",
			"And we're just going--",
			"we're doing a transition between one room",
			"to another, what we need to do is load in the room at this room,",
			"minus one on the y, and then perform the transition.",
			"And then set that to the current room, such",
			"that now we know we're at y level 2, x level 3.",
			"That's our dungeon.",
			"In the context of 2D dungeons in The Legend of Zelda,",
			"that's as simple as it really is.",
			"You have a 2D grid of dungeon rooms.",
			"Each room has its own collection of entities and objects",
			"and connections to other rooms.",
			"But really, all you do to fill a dungeon is fill an array in a smart way",
			"such that there is no rooms that are, for example, left by themselves.",
			"Notice that every room in the dungeon has at least one connection",
			"to another room.",
			"And that when you're maybe doing your algorithm",
			"to create a convincing dungeon, let's say this room here has",
			"a door on the right, that has a lock.",
			"Right?",
			"We want to make sure that the key isn't in that room.",
			"Because if it is, we're never going to be",
			"able to get to it, assuming that we come from another direction.",
			"So when you're designing dungeons procedurally,",
			"you want to take these sort of things into consideration.",
			"And then for example, the boss room.",
			"Let's say this is the boss room, the boss room",
			"should have maybe a boss key, or something like that.",
			"But the boss key should not be, obviously, in that room.",
			"It should be somewhere maybe where there's a couple of rooms before it",
			"that have a lock or a key, so that you know there's some sort of challenge",
			"involved in your dungeon.",
			"It's not just random as we've done before.",
			"There has to be a little bit of sort of conscious design on behalf",
			"of your algorithms.",
			"Today we're doing things completely random",
			"for illustration, just because a system like this is fairly robust and complex.",
			"But with some effort, you could create a simple dungeon generator just using",
			"those mechanics.",
			"Just make sure that you have locked doors.",
			"The locked doors can only open when you have a key.",
			"Make sure the key exists in a place that's accessible,",
			"and sort of create a chain of a control flow.",
			"Model maybe via graph of some kind that represents your dungeon,",
			"and the progression thereof.",
			"So that's what a Zelda dungeon looks like.",
			"That's what a 2D dungeon in this sort of perspective looks like.",
			"And it looks-- it will look similar to this in other game engines.",
			"It doesn't necessarily have to be perfectly modeled",
			"as a screen width, screen height room going into another screen width, screen",
			"wide room.",
			"You can have arbitrarily complex rooms that have arbitrarily complex sizes",
			"and shapes.",
			"But you still need to make sure that the connections going out of the rooms,",
			"like if you can still model left, right, up, down, if you want to.",
			"You can model arbitrary numbers of connections between rooms.",
			"Just make sure that you have puzzles that can be solved.",
			"That's the main sort of obstacle in generating your dungeons.",
			"Here's a game that I really like that uses the old Legend of Zelda formula",
			"to very good effect now.",
			"It's called The Binding of Isaac.",
			"Notice already we can instantly see that it's top-down perspective.",
			"It's the entire width and height of the room is the dungeon of--",
			"the entire width and height of the screen is the dungeon room.",
			"You have a map up here that shows you, OK, I'm in this room right here.",
			"I can go up, I can go left.",
			"I can go right, I can go down.",
			"This room up here with the yellow crown, that's",
			"going to be locked behind some door with a key.",
			"So we need to have keys that spawn in any of these rooms that",
			"are just blindly accessible.",
			"And Isaac does things a little bit differently also",
			"in that it generates keys and bombs randomly,",
			"so that you can actually get--",
			"you don't necessarily have to plant your keys in very specific locations,",
			"if your algorithm is sufficiently accommodating and complex enough.",
			"You can just at, the end of every room, have a chance to spawn a key randomly.",
			"And if you're lucky, or if you're not lucky, and assuming",
			"that the end of the dungeon doesn't exist behind your locked doors.",
			"You have the opportunity to stall and lock those doors, or not.",
			"And just go on through your dungeon as needed.",
			"In this case, they don't lock the boss doors.",
			"So you can go through the boss door regardless of whether you have a key.",
			"So they've accommodated for this purely random approach,",
			"and that just goes to illustrate how you can still take randomisation",
			"using very complex principles, and produce games",
			"that are extremely addicting and fun.",
			"And you don't necessarily need to be super elaborate.",
			"The first thing, OK.",
			"So hitboxes and hurtboxes will be the next topic.",
			"So I want to touch on, in the code, how we sort of do dungeon",
			"generation in the game engine here.",
			"So I'm going to open up--",
			"there's a few files.",
			"So doorway, notice in the source distro, there's a World folder.",
			"We've sort of categorized all of the files that",
			"have to do with world generation within that World folder.",
			"We have a doorway file, we have a dungeon file, and we have a room file.",
			"So the dungeon file models the dungeon.",
			"All of the rooms that form our dungeon, just as a very high, level top",
			"level, data structure.",
			"It's actually very simple.",
			"The room is, as we saw before, the individual unit of the dungeon.",
			"So a dungeon is effectively like a table of rooms.",
			"And then it holds the code for how we can transition between them.",
			"But that's sort of how we can think about it.",
			"When you a game level in general, in this case dungeon",
			"is sort of our game level.",
			"You can model the different subset aspects",
			"of your level via some data structure.",
			"In this case, we've decided to make it room.",
			"But if you have just a platform or level,",
			"maybe you have regions or zones, or anything.",
			"Just little subsegments of your level that you can transition between.",
			"It's useful to think in terms of that, because from an efficiency",
			"and performance standpoint, you want to dynamically probably load",
			"certain levels one at a time.",
			"Certain aspects, certain components, sub areas of your level, one at a time,",
			"rather than just the entire level at once,",
			"because depending on how sufficiently complex and large your level is,",
			"you can get to exercising your computer's memory constraints.",
			"So don't want to do that.",
			"So in this case, our algorithm is we have a dungeon, we have rooms.",
			"We have one active room that's only visible at one time that's",
			"loaded in memory.",
			"And then whenever we transition between rooms,",
			"we want to have another room that gets temporarily loaded.",
			"So let's look at the dungeon class here.",
			"Dungeon.lua.",
			"So 14 self-taught rooms, empty table.",
			"We're going to fill that with rooms, just room objects.",
			"Self.currentroom.",
			"Room, and we're going to pass it in the player.",
			"So that the player has access to all the entities and objects therein,",
			"and can do things like collision detection, which is very important.",
			"And also so that the entities in the room can look at the player",
			"and then decide what they want to do with their AI, which",
			"you can model arbitrarily complex.",
			"The whole init function of room.lua is going, we're going to show it here.",
			"So in room.lua, in that same world folder,",
			"we've instantiated the dungeon at a high level.",
			"We know the dungeons, it's basically a table of rooms.",
			"So what's a room look like?",
			"Well a room, as we saw before, what are the pieces",
			"that a room needs in order to function?",
			"What does the room have to sort of keep control of?",
			"",
			"AUDIENCE: Doors.",
			"COLTON OGDEN: Doors.",
			"",
			"Anything else?",
			"",
			"So doors it has to keep track of, right?",
			"Because when we touch a door, we should transition to the next room.",
			"It should keep track of the player.",
			"So the player can update.",
			"It should keep track of objects in the room like switches,",
			"as we saw in the example, such that they can update those.",
			"And see has the player stepped on the switch?",
			"If he has, open the doors.",
			"And then entities, right?",
			"It should keep track of all of the creatures in the room",
			"so that they can update, they can interact with each other.",
			"The player can hit them, or they can hit the player.",
			"And you can model whatever interactions you want to.",
			"So we can see here.",
			"Oh, and another thing too.",
			"Probably one of the more important visual aspects of it,",
			"we need to also have a set of tiles that model what the room looks like.",
			"It's a container.",
			"So we're going to draw, we have a corner, a corner, a corner, a corner.",
			"Walls on the sides.",
			"Walls on the top and bottom.",
			"And then a floor.",
			"And so we need to obviously draw the room",
			"before we draw all of the other things, and update all the other things.",
			"So tiles, doorways, entities, and objects.",
			"So we can see here.",
			"You have tiles, soft-lit tiles against an empty table.",
			"We have a function called Generate Walls And Floors.",
			"Entities, empty table.",
			"We have a function called Generate Entities.",
			"And then objects equals empty table.",
			"We have a function called Generate Objects.",
			"And lastly, doorways.",
			"And then here because it's not necessarily",
			"as complex as we need for a entire function, we just have four doorways.",
			"And this is static.",
			"I've chosen in this example to have all the doorways always",
			"be in the same place, and sort of behave in the same way.",
			"But you could create a more complex system, whereby especially",
			"if you have an algorithm that generates a dungeon dynamically,",
			"and maybe your rooms aren't necessarily hard set.",
			"Maybe you have a broom, right?",
			"If we go back to our slides earlier.",
			"And let's say we're looking at this room right here in the very center.",
			"We can see it has a doorway on the left, a doorway up top,",
			"and a doorway to the right.",
			"But there's no doorway on the bottom.",
			"And that looks like an arbitrary design decision on behalf of the designers.",
			"But if we look at this room up top here, we",
			"can see that it sort of behaves in the same way.",
			"There's a doorway going into this room to the left.",
			"There's doorway going to this room down below.",
			"But it doesn't have a doorway up top and a doorway on the right,",
			"because there are no rooms going between that room and those directions.",
			"So when you have a 2D array of dungeon rooms,",
			"and you want to model your doorways, it can be as simple",
			"as is there room in that direction?",
			"If there is, and you will have your data structures sort of",
			"laid out in advance before you generate these doorways, if it does not exist,",
			"don't make a door.",
			"If it does exist, make a door.",
			"And then make sure that when you transition",
			"between from the right to the left, or from the bottom to the top,",
			"that you go to the correct rooms at the correct indices in your 2D room array.",
			"Does that make sense?",
			"Anybody have any questions so far as to like how this works at a high level?",
			"",
			"OK?",
			"Awesome.",
			"So these doorways here are all because of this dungeon",
			"is completely random, and every time it always has doorways going top, bottom,",
			"left and right.",
			"We're always just going to put four doorways,",
			"going top, bottom, left and right.",
			"Note that they take a string denoting which",
			"direction they are, and this will become important",
			"later on in the doorway class, which we see here",
			"is modeled as a separate class.",
			"False here just means is the door open?",
			"So by default, we're going to close the door.",
			"And then self, so that we have access to the room from the doorway.",
			"",
			"The room should have a reference to the player,",
			"so that it can model interactions between the entities and the player,",
			"as well as the objects and the player.",
			"Notice that it has a render offset.",
			"So if we look at the game here, the tiles",
			"don't completely match up to the width and height of the screen.",
			"And that's mainly a function of the virtual height",
			"not mapping perfectly to 16 tiles, divided evenly by 16 tiles.",
			"So what I've done is I've made the dungeon a little bit smaller.",
			"And also the fact that the doorways take up a couple of extra tiles of padding",
			"on their sides, it's like sort of blank space up here.",
			"We've shifted everything inwards a little bit.",
			"We've made the dungeon two tiles smaller width and height wise than the screen.",
			"And then we've just rendered offset by a certain amount",
			"such that it's completely centered.",
			"We calculate how much padding exists between the fully rendered dungeon",
			"and whatever blank space is left, and just shift by half of that amount,",
			"and that's our render offset.",
			"So that's why render offset is important in this case.",
			"When you're trying to center anything, you typically",
			"do it just by calculating an offset.",
			"Calculate the width and height of whatever you're trying to draw,",
			"calculate whatever your width and height of your screen is minus that,",
			"divide it by 2, that's your render offset.",
			"And then these two fields here are interesting. self.adjacentoffsetX,",
			"self.adjectentoffsetY.",
			"Does anybody have a guess as to what this is used for?",
			"Yeah.",
			"Drawing itself when it's the adjacent room.",
			"Yes, exactly.",
			"So drawing itself when it's the adjacent room.",
			"So when you load the next room, you're going",
			"to instantiate a room just like this.",
			"But by default it's going to draw at 0.0.",
			"However, if we want that room to draw not right where we are.",
			"Obviously, if we're in the current room, we",
			"don't want the next room drawing right on top",
			"of where we are, because then it's just going to layer right",
			"on top of the room we're in.",
			"And we want to draw it--",
			"if we're going to the right, we want to draw a screen width to the right.",
			"If we're drawing it to the left, we want to draw it a screen width to the left.",
			"And same thing on the y-axis.",
			"A screen height above, or below it.",
			"So adjacentoffsetX or y, we just add to when we draw the room.",
			"And that'll have the effect of rendering it separately from the room",
			"that we're currently in.",
			"I can try and draw an illustration here.",
			"So if we have our room here, this is our current room.",
			"So self.currentroom.",
			"",
			"And let's say we have a doorway here.",
			"Right?",
			"That's a doorway object, the player is here.",
			"He collides with that object.",
			"It's going to trigger a transition to a room up above.",
			"So what we do is we load in a new room right away.",
			"We always have a pointer called self.nextroom.",
			"And this is all kept track of in the dungeod.lua file.",
			"But self.nextroom by default is going to be nil.",
			"But when we transition from the current room to the next room, right?",
			"We should set that to something.",
			"So self.currentroom is going to be the same.",
			"But when we trigger this collision, self.nextroom,",
			"this is going to be equal to just a new room.",
			"And then we get which doorway we're in.",
			"We figure it out.",
			"We figure out which direction we're moving in, technically.",
			"And then if we're moving up, then we just pass in a--",
			"we said it's adjacent offset y in this case, to negative screen height.",
			"If it's below, we set it to positive screen height.",
			"If we go here, it's going to be negative screen with the adjacent x,",
			"will be negative screen width.",
			"And then positive screen width on the x if we're moving to the right.",
			"And so this sort of adjacent we could see, if do xy,",
			"it will be that's basically the adjacent offset.",
			"And so we end up when we draw our transition going from bottom to",
			"up in this case, we just tween the camera to this value.",
			"So we have a camera, right?",
			"This is our camera.",
			"And it's going to be looking here by default. So camera x and camera y,",
			"those are values in our code as well.",
			"When we trigger this collision on the doorway,",
			"and we have current room here, which is at 0.0,",
			"and then we have this room here, which is at 0 plus our adjacent",
			"offset y, which is negative screen height.",
			"So it has the effect of making it negative screen height on the y.",
			"Our camera x recall love.graphics.Translate is our camera.",
			"So all we do is we just tween that.",
			"We say, OK.",
			"Here's our Cam x is going to be here.",
			"And Cam y, it's getting a little bit messy.",
			"I apologize.",
			"But our camera x and y are here.",
			"And then over time, we're going to tween that up into the next rooms",
			"x and y, which is a just x plus adjacent offset x, y plus adjacent offset y.",
			"And then once this camera has shifted from here up to here,",
			"or whichever direction we're going, whether it's up, down, left or right.",
			"Once we've completed that, we can normalize everything again back to 0.0",
			"by doing self.currentroom equals, what do we need to do,",
			"if we're going to put everything back to?",
			"Let's say I want to make this room the new current room.",
			"What do I need to do?",
			"",
			"So we have current room, and we have next room.",
			"If I want the current room to become the next room,",
			"all I need to do is say self.currentroom equals self.nextroom, right?",
			"",
			"And then once that happens, what happens to the adjacent",
			"offset x and y of the next room?",
			"",
			"They get set to 0, right?",
			"I want to take this room that we've offset up here,",
			"and I just want to make it the center of the game world again.",
			"I want to just put it as 0.0, so we can do this exact same calculation",
			"by just setting adjacent offset x or y to a negative or positive screen height",
			"or screen width relative to 0.9.",
			"So what I'm going to do is just set the adjacent offset",
			"of x and y of the next room, which is now current room, to 0.",
			"And it's going to draw it right back at 0.0.",
			"And then camera x and camera y are also going to be set to 0.0.",
			"And this is going to have the effect of looking as if we're going up",
			"and staying there.",
			"But in reality, we're just going up, and then",
			"instantly shifting everything back to 0.0,",
			"including the player, entities, and switches of that room.",
			"So it's purely an illusion.",
			"But it allows us to simulate this sort of infinite exploring a dungeon effect.",
			"Does that make sense?",
			"Does the overall flow of how this works makes sense?",
			"OK.",
			"So it's a little bit messy there.",
			"Hopefully I was able to illustrate the overall algorithm for how",
			"the infinite dungeon generator works.",
			"",
			"Where did we leave off?",
			"We were in the init function of the room.",
			"So let's take a look at a few of the functions that comprise that.",
			"So generate walls and floors.",
			"This is very similar to what we've looked",
			"at before with tile maps in Mario for example, where we just go from y to x.",
			"And then we just pick a random ID, or our random ID.",
			"Well, it is random ID for some of it.",
			"But sometimes we need an explicit ID.",
			"So remind me, what does the ID actually map to when",
			"we're you drawing tiles to the screen?",
			"If we want to give a tile an ID, what does that, what should that map to?",
			"Yeah?",
			"AUDIENCE: The frame in the sprite sheet.",
			"COLTON OGDEN: The frame in the sprite sheet, that's correct.",
			"It doesn't have to for all game engines, for all implementations.",
			"But it's the easiest thing to do, is just to give your tile an ID",
			"that you can then just draw, you can index",
			"into your sprite sheet at that ID.",
			"It's just very, very simple, lightweight clean approach to modeling.",
			"And we can see here, ID gets ID.",
			"After we've figured out what ID we want, now how",
			"do we determine like let's say I want to draw--",
			"",
			"let's say, for example, like this tile here.",
			"Notice it's a corner tile.",
			"What do I need to do to basically assign--",
			"I'm going to die before I even have the chance to show you.",
			"While I avoid enemies, if I wanted to draw that top left corner,",
			"what am I sort of looking for?",
			"I'm still taking damage anyway.",
			"Relative to x and y, what am I looking for?",
			"",
			"What x and y does that tile need, assuming",
			"everything starts 1.1 on the top left, and goes down",
			"to height and width of the overall dungeon?",
			"What is the xy need to be of that top left corner?",
			"",
			"It needs to be 1, right?",
			"So if that's 1.1, basically the top left corner,",
			"that ID should be equal to the corner sprite.",
			"The top left corner sprite, specifically.",
			"What about the top right corner sprite?",
			"",
			"What should the x be?",
			"",
			"Sorry?",
			"AUDIENCE: Width.",
			"COLTON OGDEN: Yes, width.",
			"Exactly.",
			"What's the y?",
			"Still going to be 1.",
			"What about the bottom left?",
			"",
			"Width, comma height.",
			"And then the bottom right?",
			"",
			"AUDIENCE: But it's [INAUDIBLE]",
			"COLTON OGDEN: Sorry, bottom left should be 1, comma height.",
			"Bottom right should be width, height.",
			"And so basically checking the position of each tile",
			"is how we can infer its ID, which is what we're doing in the source code",
			"here.",
			"If x is 1 and y is 1, OK, top left corner.",
			"And notice that we've put these into constants,",
			"that we've put in the constant.lua, just for readability.",
			"So we can instantly see OK, I should set ID tile top left",
			"corner, not some arbitrary number that's our index into the tile sheet.",
			"At maybe like 40 something, or whatever it is.",
			"Bottom left is 1 and height.",
			"Top right is width and 1, and then bottom right is width and height.",
			"And we can see, it's readable.",
			"We can sort of see at a glance what we're doing, where you're conditionally",
			"generating all of our tiles.",
			"",
			"If none of those are true, and then x is 1, what's that tile?",
			"If x is 1, but it's not a corner?",
			"",
			"It's a left hand wall.",
			"And the same thing is if it's the width, it's a right hand wall.",
			"And if y is 1, it's a top wall.",
			"If y is height, it's a bottom wall.",
			"And then if it's none of those, it's got to be a floor, exactly.",
			"So that's basically how we generate the overall--",
			"it's a very easy, simple generation algorithm.",
			"What I've done is for randomization here,",
			"we have actually a table of potential left walls, potential right walls,",
			"potential top and bottom.",
			"And then we just ascribe it a random value within there,",
			"based on however large that is.",
			"And that gives us variable, we can see it.",
			"We have random-- every time I generate it.",
			"So take note of maybe some of the tiles visually",
			"that you can see there on the map.",
			"",
			"Notice that they change.",
			"Notice that the switch has also changed.",
			"Notice that they changed again.",
			"So everything is variable.",
			"We have a little bit of visual variety.",
			"This is what we did, essentially, with Mario.",
			"We changed the tile set, and the topper set.",
			"Only now we're just changing, we have only one tile sheet,",
			"but several variations at the same tile they're in.",
			"So all we need to do is pick a random variation of whatever tile.",
			"And that involves us looking at the sprite sheet,",
			"picking out which individual tiles, which separate tiles,",
			"map to the specific type of tile, and then just picking a random value",
			"from that table",
			"That's how that works.",
			"So a couple of things, I think, left to show relative",
			"to the dungeon generation.",
			"So 48, we have generate entities.",
			"So entities are here.",
			"We have their names, right?",
			"Some of the entities we saw, skeletons, bats, slimes, ghosts, spiders.",
			"It's a very lightweight function.",
			"It's not like 15 or 20 lines, but we're generating",
			"a bunch of different kinds of entities.",
			"Because what we've done, we take, we basically",
			"take a random type from that table.",
			"We create an entity, and then using what we've",
			"defined in a global table called Entity Defs,",
			"we take out what sort of matters in terms",
			"of generating each individual entity, the characteristics thereof,",
			"and we just put it in simple data form.",
			"This is sort of like the segue into data driven design for your game.",
			"If you look at Entity Defs here, we can just see that all of our entities",
			"are a sequence of data.",
			"So up here we have player, on line 10.",
			"Player gets a table.",
			"We give him walk speed.",
			"We have a table of animations.",
			"So he's got a walk left animation, a walk right animation,",
			"a walk down animation.",
			"All of those have their frames, their interval, their texture, everything",
			"is just clean data, right?",
			"There's no logic here, really.",
			"It's just flags, or values, simple things.",
			"You could give anybody who has sort of the basic knowledge of what we're",
			"doing this file, and maybe some textures, and say, hey,",
			"I want you to design--",
			"I want you to lay out basically all of that's",
			"involved in what makes a skeleton render to the screen.",
			"Create all the animations for them.",
			"Give those animations their timing.",
			"Give them the exact frames.",
			"Maybe skeletons should have health, and maybe health should be equal to 10",
			"on a skeleton, or something like that.",
			"There's not really any programming going on here.",
			"But we're describing everything in our game as data.",
			"And that's important thing in complex games that have fairly complex systems,",
			"but that can be modeled via some attributes.",
			"You can just ascribe your entities and data, and then let your engine parse",
			"this information, and then create your entities programmatically.",
			"You shift the burden from the programmer to the designer, a little bit.",
			"And you afford your design team, you and maybe other people",
			"who aren't as comfortable with programming,",
			"the ability to modify the game engine, add things to the game,",
			"without having to go through the bulk of your engine code",
			"and do anything too fancy.",
			"In this case, it's simple.",
			"All we're doing is just we're creating animations, and assigning a texture",
			"to each of these individual things.",
			"But I alluded to this last week.",
			"You can have a file that maybe describes something like a goblin.",
			"We'll see this at the end of a lecture, which has maybe like a flag",
			"for is it flammable?",
			"How much health does it have?",
			"What are its animations?",
			"What skills does it have?",
			"What's its attack strength?",
			"What's its defense?",
			"Where does it spawn typically?",
			"By putting all these attributes together and having your engine sort of parse",
			"this, you can create, depending on how many fields you have,",
			"you can create very complex potential list of things in your game.",
			"Whether they're entities, whether they're weapons, whether they're items,",
			"abilities.",
			"Anything you want to.",
			"Whether they're levels, even.",
			"Based solely on just data.",
			"So this is a holy grail of design and development",
			"when you get into especially very complex games like RPGs,",
			"where you can have skills that have particle effects",
			"and do different damage to different things.",
			"And you have entities that are-- maybe you want them some to set on fire,",
			"some to be electrocuted.",
			"Maybe some you don't.",
			"Maybe some melt when they touch something.",
			"Create a bunch of flags, create a function",
			"that parses this, and generates entities as a result.",
			"And you just allow yourself an incredible boost in productivity.",
			"No longer do you need to create a spider class, a ghost class, a bat class.",
			"It's all unnecessary.",
			"All you need to do is define what sort of attributes does a bat have?",
			"What attributes does a ghost have?",
			"What attributes does a skeleton have?",
			"And anybody can therefore mod your game as a result of this.",
			"All they need to do is know what attributes a potential entity can have.",
			"And your design team is all the more productive as a result.",
			"So that's a spiel on why this is relevant.",
			"We've implemented a very basic version of this",
			"just for the sake of modeling animations.",
			"But we don't need a separate class for all the different entities in our game",
			"world.",
			"We just need, basically, and in the context of this game,",
			"what are their animations?",
			"So that's entity defs, that's how it's working if we're",
			"looking at room.lua at line 48.",
			"All its doing is getting animations.",
			"This is, by the way, your function that takes in these definitions",
			"and creates your entities.",
			"They should be looking for--",
			"looking into that.",
			"They pull that definition and then just parse out",
			"each individual relevant piece of data.",
			"And then just construct some relevant information",
			"or attach a relevant flag to that entity that your game engine can then later",
			"parse.",
			"The flammable example, if you do an attack and that attack is of type fire,",
			"and it collides with an entity, and that entity.flammable is true,",
			"that should trigger some behavior.",
			"But you don't need to do anything terribly complex.",
			"And you can assign this to any arbitrary entity thereafter.",
			"So just a simple way of getting very complex behavior for your game",
			"objects, entities, whatever you want.",
			"Modeling them as data rather than thinking about it in terms of classes.",
			"So that's that.",
			"Does anybody have any questions just like sort of how that works,",
			"or why it's viable?",
			"Or why it's useful?",
			"",
			"OK.",
			"Couple of last things we'll look at really fast in room.",
			"So online 82.",
			"Generate objects.",
			"So we did this very, very similarly last week.",
			"Where we just had a game object class.",
			"Notice that it takes itself a definition for a switch.",
			"That definition is in gameobjects.lua.",
			"Switch.",
			"Here's a little bit more sort of data modeling something like a switch.",
			"It's got a type of switch, frame is 2 by default. So width and height of 16.",
			"It's not solid.",
			"Player can walk over it.",
			"Its default state is upressed.",
			"So when it gets spawned into the game, it's unpressed.",
			"And it's got two potential states, unprecedented and pressed.",
			"And each of those states have a frame.",
			"So all we need to do to render it is say, what's its current state?",
			"Render this state.frame.",
			"And then now, we don't need to do anything--",
			"that's basically all we need to do in order to render it at the right point.",
			"Your game engine, therefore, needs to look at your object,",
			"and look at its state and look at its potential states, index into that state",
			"and then pull the frame from that.",
			"But it forwards you sort of infinite flexibility.",
			"You can now have maybe of a glowing state,",
			"and maybe there's a frame in that sprite sheet that allows it to glow.",
			"And you could just change it to glowing whenever you want,",
			"and it'll just render appropriately.",
			"So very flexible approach to modeling data.",
			"149 in room.",
			"So we're almost done with the dungeon here.",
			"So 149 is our update function.",
			"All it does basically is iterate through everything",
			"and update it, including basically all the entities.",
			"So for every entity if its health is less than or equal to 0, it's dead.",
			"If it's dead, then don't render it, which we see down in render.",
			"But if it's not dead, and self.player player collides with it,",
			"and the player's not vulnerable, then we should damage the player,",
			"go invulnerable.",
			"And if the player's health is zero, change to game over.",
			"So notice how readable this is.",
			"When you model your entities like this as well, all you really need to do",
			"is just check for certain flags or functions,",
			"and you can do arbitrarily complex tests like this.",
			"Because entities can be dead, or not.",
			"Because entities can be invulnerable, or not.",
			"And then because entities are all xy, with height based things in our game,",
			"and collide just expects them to have that.",
			"All we just do is play sound, damage the player.",
			"What does damage do offhand?",
			"What do you think it does?",
			"AUDIENCE: I'll take a wild guess and say subtracts from your health.",
			"COLTON OGDEN: Exactly.",
			"Just take a wild guess and say it subtracts from health.",
			"It does.",
			"So entity damage just takes in a number, and subtracts that from health.",
			"That's all it does.",
			"Go invulnerable.",
			"What does that do.",
			"",
			"AUDIENCE: Means you've been taking damage for that many seconds?",
			"COLTON OGDEN: It does.",
			"It prevents you from taking damage for that many seconds.",
			"All that really does is just set a flag, which I've alluded to quite a bit",
			"already, an arbitrary flag that you can model via data or some other means.",
			"Every entity has an invulnerable flag.",
			"And if it's invulnerable, then the engine should look for that,",
			"and change the rendering, and the mechanics of the entity accordingly.",
			"And then lastly here, just simple if the player health is equal to 0,",
			"which it might be after we take sufficient damage, change to Game Over.",
			"That's all it does.",
			"And then for every object, just as we do with every entity, update the object",
			"and if the player collides with it, then trigger its On Collide function.",
			"And this can be a function that you arbitrarily create,",
			"depending on the needs of your object.",
			"",
			"If you look up here, for example, every time we create a room,",
			"we generate objects in the room.",
			"We insert into objects a switch, which we saw before, in gameobjects.lua.",
			"And takes an x and a y.",
			"In this case, we just make sure that the x and y",
			"is a random number between the top left of the map",
			"and the bottom right of the map, within the padding that it has.",
			"We get a reference to that object.",
			"And then we define are On Collide function.",
			"So what we do is we say if it's upressed,",
			"so recall that we have a state in the game object definition.",
			"If it's unpressed, change it to pressed.",
			"It's all we really need to do.",
			"And then notice here, for k, a doorway.",
			"So for every doorway in doorways, self.doorways, set that doorway open",
			"is true.",
			"And then play a door sound.",
			"So our On Collide function just interacts",
			"with other things in the game world, and just very simple things",
			"but has a pretty interesting sort of mechanic.",
			"Like we have a--",
			"I took damage off the bat there, because my spawning isn't perfect.",
			"But it changed from-- notice that it changed its state from unpressed",
			"to pressed.",
			"Because it went from the one sprite to--",
			"I'll go into another room so we can see that.",
			"I'll take some damage on the way.",
			"Go to another room.",
			"Notice the sprite.",
			"It sort of looks like it's unpressed, right?",
			"Because the game object's default state is unpressed.",
			"And then On Collide triggers when I go on top of it.",
			"It changes state, which has an effect on what gets rendered.",
			"And it's On Collide function is called, which",
			"opened up every doorway in the room.",
			"So simple like 15 lines of code.",
			"But pretty compelling, interesting behavior for the sake of our dungeon.",
			"Like, it adds a lot, as simple as that is.",
			"Now we sort of feel like we're interacting",
			"with our game world a little bit.",
			"So that's how that works.",
			"And then lastly, rendering on line 188.",
			"Just go through all of our tiles, render all the tiles.",
			"We've seen this before.",
			"Render all the doorways, render all the objects,",
			"render all the entities, if they're not dead.",
			"Right?",
			"If they're dead, then don't render them.",
			"And then this bit here, we'll take a look at the end, which is stenciling.",
			"So notice that when I walk through doors.",
			"Well first of all, notice that I can't walk through doors if they're closed,",
			"which is important.",
			"So when you collide with your doorway objects, if doorway.Open is false,",
			"it shouldn't trigger the room switch, right?",
			"But if I open the doors they're now all set to recall.",
			"Door.open is now equal to true.",
			"So they've changed their renderings, and now they're rendering open doorways.",
			"If I walk through it, notice that it looks as if the player walks",
			"underneath the tiles.",
			"But I'm drawing the tiles before the player.",
			"And one approach that you might think to do",
			"when sort of creating this believable appearance of walking",
			"through a doorway, is say OK.",
			"I'll just render the player after I render before I render the doorways.",
			"Right?",
			"So render all the doorways last.",
			"But it doesn't quite work out, because the sprite actually starts right here.",
			"So what does somebody think is going to happen if I were",
			"to draw the doorway after the player?",
			"AUDIENCE: Your default player disappears if you cross that line or [INAUDIBLE]",
			"over that line.",
			"COLTON OGDEN: Exactly.",
			"The player would disappear as soon as he gets to this little bit of line right",
			"here, which is not very convincing.",
			"And actually I'll try right now to take away the stenciling,",
			"so we can see what that looks like.",
			"So if I just take away the stenciling here, and then I just render.",
			"",
			"Can't type today.",
			"So I'm going to go ahead.",
			"Do that.",
			"",
			"Well, first of all, the rendering order is such that now the doorways render",
			"after before the player.",
			"So he just walks right over them, right?",
			"So I'm just walking, I was walking over the walls.",
			"That's not compelling.",
			"And if I were to do something as simple as change the rendering order.",
			"So right now, the doorways render first.",
			"I'll just render the doorways after the player.",
			"So right here, I took that out, right?",
			"No.",
			"So right now, they render before the player.",
			"I want to render them after the player.",
			"And I'm going to just run it.",
			"And then going to step on the switch.",
			"And then, yep.",
			"Notice we get some weird behavior, too.",
			"",
			"Like sees his head is getting cut off?",
			"And other entities as well, right?",
			"In that case, I couldn't really tell.",
			"But yeah.",
			"Very weird rending behavior.",
			"And what we do to fix that is we create what's called a stencil.",
			"So basically I'll try and get a screenshot here I can show.",
			"First let me fix the changes that I just made.",
			"Right.",
			"And then if I go back into the code here.",
			"So a stencil is just-- and we'll see a slide on this in a little bit.",
			"But a stencil is just basically any sort of arbitrary shape that want,",
			"that you draw onto the screen.",
			"It's invisible, but it determines whatever",
			"gets drawn on top of that stencil, it determines whether or not",
			"that thing gets rendered.",
			"So I have a stencil going basically from here onwards to the next room.",
			"So right about where the doorway hits the archway,",
			"because that's where we want the player's head",
			"to look like it disappears.",
			"Stencil going here.",
			"I have a stencil going right here.",
			"And right here.",
			"And on the right side as well.",
			"And what that does is I've set the stencil",
			"to say whatever passes through this stencil during the sort",
			"of stencil testing period which is, well all we do is we just",
			"draw the player during that time.",
			"But basically if it's on the stencil, don't render it.",
			"And so it what that has the effect of is we still",
			"draw the doorways before the player.",
			"So the player walks in and he's drawn above this part.",
			"But as soon as he hits the stencil, he's not drawn.",
			"It just-- all those, basically what it does",
			"is it draws the character to the stencil, and not to the actual canvas.",
			"And so we get if you want convincing layered, weird, visual effects",
			"like that, stenciling is an approach.",
			"OK.",
			"And then that's all this.",
			"So this stencil function, love.graphics.stencil,",
			"takes in a function.",
			"This is what's going to run during the actual stenciling process.",
			"It's going to draw--",
			"I draw four rectangles.",
			"All those rectangles are just those archways.",
			"Right?",
			"Perfectly layered over them such that it goes into the next room.",
			"And then we do.",
			"Notice that it says Replace, and then 1.",
			"So we replace any pixel that gets drawn to that stencil",
			"with the stencil value of 1.",
			"And then we only draw things that are less than 1 during the stencil test.",
			"Which means anything that didn't get ascribed to value of 1, which",
			"means that if the player went over the stencil,",
			"got a pixel value of 1, that's going to be false.",
			"He's not going to be drawn to the screen.",
			"Yes?",
			"AUDIENCE: So you are stenciling, if you created a different shape,",
			"you could use that, for say, like a light system, some areas are dark,",
			"some areas are light?",
			"COLTON OGDEN: Good question was if you have a stencil, because you",
			"can do with an arbitrary shape, you could",
			"create lighting systems where some areas are dark, and some areas are light.",
			"I want to say possibly.",
			"The thing is, I'm not 100% sure whether stenciling allows you to do,",
			"whether love 2D stenciling allows you to do arbitrary numbers.",
			"I basically am not sure if it's on or off, or a gradient.",
			"Typically, if I were to do our lighting system like that,",
			"I would probably draw a faux lighting system.",
			"One, you can use a lighting kit, like box",
			"2D lights, which does really compelling, cool lights for you.",
			"Or sort of a cruder way to do it, but possibly realistic,",
			"would be to draw a shape that fits whatever you want to be your darkness,",
			"and then render it at an opacity that's less than 100%.",
			"So you'd have a room, and let's say maybe to sides of it",
			"are kind of shadowy.",
			"You draw black rectangles there, right?",
			"But instead of drawing those black rectangles at 255 alpha,",
			"you draw them at 200 or 150, or something like that.",
			"And so you can still see what's underneath them,",
			"but it looks as if they are a shadow.",
			"And you can use gradient effects to do the same thing.",
			"If you want to have shadow that's darker going lighter,",
			"I believe you can draw rectangles with a gradient effect in Love 2D.",
			"I'd have to look into a little bit more.",
			"But you would look to do something like that.",
			"Draw a gradient of shadow via some rectangle, or some arbitrary shape,",
			"to simulate lighting in that case.",
			"And you could accomplish something similar to that.",
			"And there are a lot of other crazy cool ways I've seeing lightning done in 2D.",
			"But that's probably offhand the simplest way that I could think of doing it.",
			"Cool.",
			"",
			"So that's stenciling, and that's basically it",
			"for the dungeon generation, which is arguably the most important part.",
			"And also we looked earlier at the sort of transition mechanic.",
			"And we'll look at the transition mechanic a little bit more",
			"in a little bit.",
			"But let's take a five minute for right now, and then come back to that",
			"and see some more stuff.",
			"All right.",
			"Welcome back to Lecture 5, Legend of Zelda.",
			"So before the break, we talked about a bunch",
			"of different things, dungeon generation being foremost among them.",
			"Now we'll actually start talking about things like hitboxes and hurtboxes,",
			"as we can see here on the screen.",
			"So a hitbox is a rectangle, basically.",
			"And it's how we've implemented it in the distro.",
			"But we can see here there's a few different sort",
			"of rectangles overlapping.",
			"We have the green rectangles here.",
			"These are hurtboxes.",
			"These are where you can get hurt.",
			"And then this is a hitbox.",
			"This is where you can hit something.",
			"And so games, like especially with fighting games,",
			"in a lot of games of fairly complex interactions,",
			"and complex entities that have weapons or particles,",
			"things like that all do damage.",
			"You'll see a lot of complicated overlapping,",
			"and arrangement of these rectangles that sort of bring about",
			"how things interact with each other in terms of collision,",
			"and doing damage, and affecting other entities.",
			"In this case, he's doing an attack that goes from the left to the right.",
			"It's a low attack.",
			"Only his foot, essentially, a little bit inwards.",
			"But essentially his foot does damage, whereas the rest of him is vulnerable.",
			"If someone were to come up to him from up above and attack him,",
			"it would do some damage.",
			"And there's Minecraft, and it shows you how the same sort of principle",
			"applies to 3D games as well.",
			"In this case, what you see there are all hurtboxes.",
			"Those are all aware things can get hurt.",
			"Even though those are few of those things are items,",
			"so that only really affects whether or not the player collides with them",
			"and picks them up.",
			"But that's basically the difference between hitboxes and hurtboxes.",
			"The distro I think I accidentally called the file hurtbox.",
			"So when I push it up, it's going to be renamed hitbox,",
			"because that's what we use it for.",
			"But what is offhand in this game, what do we need a hitbox for?",
			"AUDIENCE: [INAUDIBLE] attacks from the swoord.",
			"COLTON OGDEN: Attacks with a sword.",
			"And the reason that we need a hitbox for that is why?",
			"AUDIENCE: To [INAUDIBLE] the hit.",
			"COLTON OGDEN: Yes.",
			"And why can't we just use the player's position x-y width and height?",
			"AUDIENCE: Because it has a direction as well.",
			"COLTON OGDEN: Because it has a direction as well, and also it needs--",
			"that's essentially its hurtbox.",
			"Right?",
			"So those two reasons.",
			"It has that direction that we need to sort of act as its reference point",
			"for generating a hit box, to inflict damage on other entities.",
			"And we need to use the player's main hitbox",
			"and hurtbox that it already has to see if something",
			"hit it, the player, maybe from another side, or something like that.",
			"So let's go ahead and take a look here.",
			"The main bit of code that deals with the hitbox, in this case,",
			"is one going to be hurtbox.",
			"Should be hitbox.",
			"But we can see this is literally just a rectangle class.",
			"xy, a width and a height.",
			"self.x, self.y, self-taught, self.width, self.height equals all those things.",
			"That's all you need for a hitbox.",
			"Literally box, just all you need are those fields.",
			"And then you can do simply collides.",
			"Just like you do entity.",
			"Entity collides hurtbox.",
			"Yes, no, true or false.",
			"Because recall, collides expects xy width or height.",
			"And it's defined an entity.lua.",
			"So if we go up to the player states.",
			"So recall, last week we introduced the idea",
			"of having the player maintain its own collection of states,",
			"in a state machine.",
			"As opposed to just the game world having a state machine that",
			"influences whether we're at the Start screen,",
			"the Play State screen, whatever we want to divide our game up into.",
			"We have entities states as well.",
			"Now one of those is the-- so we have the idle in the walk state.",
			"Those are so very similar to last week's, where the idle state, they're",
			"just standing still.",
			"And the walking state they're moving and their animation changes accordingly.",
			"The swing sword state is a new state, and what this does",
			"is the player presses spacebar.",
			"It triggers this swing sword state.",
			"There's a new animation.",
			"So we go into the swing sword animation, relative to which direction we're in.",
			"And we get that direction and then we calculate the xy width and height",
			"of whatever our hurtbox.",
			"Should be hitbox, is going to be for the sword.",
			"When the sword hits something.",
			"So that hitbox, if it's facing the left, it's",
			"going to be 8 pixels wide by 16 tall, which",
			"is roughly the left side of the player.",
			"And then we just calculate the x and y depending on which position we're in.",
			"It should be roughly centered based on whatever direction the player is",
			"looking at.",
			"And so we then instantiate that hurtbox here.",
			"We call it a self.swordhurtbox.",
			"And then all we really need to do is what?",
			"In our game loop to check to see if we've hit an entity?",
			"",
			"We just need to loop over the entities in our room, the current room right?",
			"Here.",
			"So every entity in the dungeon's current room.entities.",
			"If the entity collides with our sword hurtbox, sword hitbox,",
			"then, we saw this method before, entity damage one.",
			"And then hit enemy play.",
			"That's as simple as it is.",
			"And recall, in room.Lua, if an entity's health dropped below one, dropped to 0,",
			"it would just trigger it to become dead.",
			"Right?",
			"And so that's all we need effectively.",
			"And then we have some additional logic to make sure",
			"that the animation only plays one time.",
			"And then once it has played one time, change its state to idle.",
			"And then we can press spacebar repeatedly within that same state,",
			"just to keep swinging if we want to.",
			"And it will just restart the animation, and restart",
			"the hitbox being instantiated.",
			"And so that's all we really need to do for that.",
			"Now I have some lines of code here at the bottom of the sword swing",
			"state.lua.",
			"And player swords, swings swords state.",
			"And what these do is sometimes it's useful",
			"when you're programming to sort of see where your collision boxes are, right?",
			"Because you don't necessarily know if everything's lined up perfectly.",
			"When you're detecting collision between different entities,",
			"you want to just check to see are the rectangles actually overlapping",
			"when this triggers?",
			"So all you need to do in order to visually see this at a glance,",
			"and you may have seen this before, in other games or debug modes of games,",
			"is just draw a line rectangles.",
			"And then just give them the xy width and height that you want to look at, right?",
			"So here, I'm going to go ahead and save this.",
			"And then I'm going to run the--",
			"I've basically uncommented it.",
			"Because by default, I don't want it showing.",
			"They're pink rectangles, I don't want them displayed on screen,",
			"unless I want to do debugging.",
			"So I'm going to uncomment them down here.",
			"Notice it sets the color to 255, 0 255.",
			"That's magenta.",
			"I'm going to run this.",
			"[MUSIC PLAYING]",
			"Turn that down a little bit.",
			"Nothing looks particularly different.",
			"But when I swing my sword, notice that there's a little rectangle.",
			"And the rectangles aren't 100% perfect necessarily.",
			"They give the player little bit of an advantage.",
			"Like up above, like his hitbox is barely anything.",
			"Up above, in the actual animation, but in the collision,",
			"I give it quite a wide berth.",
			"And so that's how you can, at a glance, sort of",
			"see whether your things are interacting appropriately.",
			"There's lines of code.",
			"I did the same thing for the other states, the entity, walking,",
			"and idle states.",
			"If you want to sort of look at those, and see not only the player",
			"swinging the sword, but also the other entities, and the collision boxes they",
			"have, and just to check whether or not they're overlapping appropriately,",
			"or to change them, or do whatever you want with them.",
			"But that's a nice way to do--",
			"sometimes it's hard to debug collision if you",
			"can't see exactly what's going on.",
			"Because it's often just in terms of xy width and height, so on and so forth,",
			"with offsets and such.",
			"It can be kind of a pain and/or sort of difficult",
			"to track down certain bugs that way.",
			"So just draw to the screen.",
			"You can apply that same logic to a lot of things in your game world",
			"that may be hidden, but you want to see sort of visually just draw shapes",
			"or draw different things for them.",
			"So you can see what's going on.",
			"So that's how the hitbox and hurtbox work for our player.",
			"And you can easily just spawn more hitboxes for other entities",
			"if you want to.",
			"If you wanted to give them states, or maybe",
			"you want to create projectiles that are offensive.",
			"Maybe just create projectiles, and then shoot projectiles",
			"in a specific direction, but assign a hitbox to that projectile,",
			"if you want to.",
			"Or just use the projectiles xy width and height,",
			"and then you can calculate a collision that way.",
			"Just treat it like a game object, or an entity.",
			"It's up to you.",
			"Or a separate class all together.",
			"But that's hitboxes and hurtboxes in a nutshell.",
			"Anybody have any questions as to how those sort of work?",
			"",
			"OK, cool.",
			"So let's go on to the next topic.",
			"So events.",
			"So I spoke of this earlier.",
			"Events are just a nice way to sort of say when something",
			"happens, do this block of code.",
			"And you can do this anywhere.",
			"And you can decouple it from like maybe two different objects",
			"interact with each other.",
			"But you don't want them to sort of pass references",
			"back and forth between each other, and bloat your code.",
			"Maybe you want the code for that check to happen not inside your main loop.",
			"You want to sort of abstract it out to some sort of other function,",
			"like instantiated events.",
			"And then have your main rendering and update logic",
			"be free of all this conditional stuff.",
			"So you create event.",
			"You say on some event, so maybe like on player walk,",
			"and then you just update some, maybe a label",
			"on the top right of the screen, that gives the player's xy.",
			"And you just say that xy is equal to that player's xy.",
			"I mean, aside from the fact that you could just literally",
			"draw the player's xy.",
			"But it's the same principle.",
			"You can update some value somewhere separate from another entity.",
			"And then just wait for an event, arbitrarily defined event,",
			"that you then broadcast later.",
			"So let's say I want a broadcast swing sword.",
			"I have a swing sword event.",
			"So whenever the player presses space, not only",
			"do they do all the code that we saw before, but they swing sword.",
			"And then we say when you swing sword, pass in the xy of wherever they swung",
			"the sword.",
			"And so then you can say OK, on swing sword, look at all the entities,",
			"and see whether or not the hitbox at xy collides with them.",
			"And you can sort of take out the logic from where you had it before, and put",
			"it in some other centralized location.",
			"If you want to.",
			"More representative of this model is the idea of an achievement system,",
			"where instead of every frame, and you can",
			"have-- games have a ridiculous number of achievements.",
			"Some games have like 1,000 achievements.",
			"You don't want to put the test for every one of those 1,000",
			"achievements necessarily inside of your update logic, right?",
			"You can instead just broadcast an event for all",
			"of the different things that influence whether those achievements are met.",
			"So whether a player needs to get 100 kills in a game, or 100 coins.",
			"Whether they need to jump off some ledge.",
			"You just have events that model all these interactions.",
			"Event on, pick-up coin, do this.",
			"Increment some time, some counter that's stored somewhere else.",
			"Event.on, kill creature.",
			"Or kill creature triggers every time you,",
			"literally a creature is sent from as false to dead as true.",
			"",
			"Maybe whenever the player jumps, you do an on jump function.",
			"And then you can test to see whether or not-- in that code,",
			"you can test to see whether they jumped off that ledge.",
			"And then if that happens, you have your achievement system,",
			"but you don't have all these if statements,",
			"and all these tests happening inside your sort of imperative game loop.",
			"You can just pseudo asynchronously check for all of them,",
			"given a sufficiently detailed event system in your game.",
			"And so the library that we'll use just to show this a little bit",
			"is in the knife library, that we saw before with timer.",
			"Timer.on, timer.every, timer.tween.",
			"In the knife library, there's a submodule",
			"called Event, which allows you to call event.on.",
			"Give it a name and a function.",
			"So on player jump, off player jump.",
			"You know?",
			"Function.",
			"If Player.Position is by some cliff, or some area that's relevant,",
			"then call this block of code.",
			"And increment, or set the achievement to true.",
			"Event.dispatch.",
			"Dispatch an event when something happens.",
			"So if a player jumps, so when they press the spacebar, event.Dispatch jump.",
			"And then just whatever values that your callback function needs.",
			"Let's say you want to check to see what is on the cliff.",
			"Well, if you want to check to see whether they jump off",
			"that specific cliff, you need to check their xy position, presumably,",
			"so you can just pass in optional parameters via event.dispatch.",
			"You can say OK, dispatch the event that the player jumped,",
			"and say that the player jumped at xy.",
			"And so this function call back is going to have access to the xy.",
			"It's going to say OK, on jump, I say I got,",
			"I'm getting my callback called with player.x player.Y. And it happens to--",
			"oh, it's not at the cliff.",
			"So nothing happens.",
			"Or it is the cliff, so the achievement, jump off cliff, unlocked is true.",
			"And test now is not happening every single frame,",
			"which otherwise would potentially.",
			"And it's not blocking up your update logic for your player jumping.",
			"Right?",
			"The player, the jumping logic inside player, the player jumps state,",
			"doesn't need to know--",
			"doesn't need to ask whether or not we've jumped off a cliff.",
			"That's something that we should just delegate to our achievement file,",
			"or whatever you want.",
			"And that's sort of the flexibility that events afford you.",
			"So we use event.",
			"I'll touch on this a little bit briefly here.",
			"But basically, if we go to the player walk state on line 21.39, first of all",
			"we're checking for input here.",
			"Right?",
			"We're just saying if we press the left, right, up, or down.",
			"The direction is that walk left, walk right, so on and so forth.",
			"And then what we do is we call entity walk state.update.",
			"So this base walk state code that exists in entity, so that we can",
			"let every single entity have this code.",
			"All it does just check to see whether or not",
			"the player or entity that it belongs to hit a wall.",
			"And if it did, then set there bumped equals true.",
			"And what it does is just a flag that says, OK, the player bumped a wall.",
			"OK?",
			"Why is that relevant?",
			"Because then, after we call that, we can say, OK, if we bumped a wall,",
			"and this only happens when the player walk state,",
			"if we're looking to the left, temporarily adjust our position.",
			"Because when it bumps you, it knocks you back out back into the world.",
			"But we're going to re-bump our position into wherever we collided.",
			"We're going to look at every doorway, and then",
			"we're going to say if we collided with that doorway, and it's open,",
			"then we're going to shift it to the center of the doorway",
			"so that it doesn't look as if the player is walking through the wall.",
			"We're going to set it to wherever the wall is,",
			"or wherever the door is, the very center of the doorway.",
			"And then we're going to call event.Dispatch shift,",
			"and in that direction.",
			"So shift left, shift right, shift up, and shift down.",
			"And so all of these four different cases are going to say OK,",
			"the player has hit a doorway.",
			"I have a function somewhere.",
			"Event.on, shift down, shift left, shift right, shift up.",
			"That's going to trigger what?",
			"",
			"The next room.",
			"It's going to trigger us moving to the next room, and also the next room",
			"spawning, and the camera sort of shifting position.",
			"",
			"So the code for this is in dungeon.",
			"So we're going to go ahead and look at dungeon.",
			"So right here, on line 29 through 43, event.on,",
			"shift left, shift right, shift up, shift down.",
			"And what that does is we have another function called begin shifting,",
			"which takes in an x and y.",
			"Negative virtual width, virtual width, negative virtual height,",
			"virtual height.",
			"Does anybody recall why we need to pass those numbers in there?",
			"If we're shifting left, and we're passing a negative virtual width,",
			"what do you think that number is going to be?",
			"So recall every room has an adjacent offset x and y",
			"that renders that room with that offset basically added to it.",
			"Its x and y.",
			"So if we begin shifting to the left, negative virtual width",
			"is going to be the x offset.",
			"Because that room needs to be rendered a screen width to the left, right?",
			"And so on for the right, virtual width.",
			"It adds a virtual width to the x offset.",
			"The adjacent x offset.",
			"And then virtual height, negative and positive for shift up, and shift down.",
			"So begin shifting, basically the gist of this is it's a tween operation.",
			"So we start here, recall timer.tween, just takes a value and interpolates it.",
			"So self, we have a camera and a camera y, right?",
			"Going to equal shift x and shift y.",
			"Eventually.",
			"So shift x and shift y being the adjacent offset, that we're",
			"going to need to shift the camera by.",
			"So camera x and camera y, they both sort of zero, always.",
			"When the room gets completely finalized.",
			"So if the shift x is virtual width, negative virtual width,",
			"cause we're shifting left, then it's going",
			"to tween the camera going from right to left over the span of a second, right?",
			"And then the player, the player x and player y,",
			"those are basically set up here to the opposite end",
			"of the room, the next room.",
			"So if the player is going from the top of the room",
			"to the bottom of the next room, it needs to get its x and y",
			"put in that position, the bottom part of the next room.",
			"Or the left part of the next room, if they're moving from the right, right?",
			"Or the right part of they're moving from the left.",
			"And the bottom part if they're moving up.",
			"And the up part if they're moving down.",
			"So that's all that does.",
			"Puts them in the right position, on the next room.",
			"Tweens both of them, the camera and the player,",
			"because the player needs to keep moving to the next room.",
			"And the camera needs to shift up.",
			"When it's finished, we call finished shifting,",
			"which is just a function that says basically everything to 0.",
			"It sets the current room to the next room.",
			"It sets the camera x and all that stuff all to 0,",
			"and then all the entities and objects there, it all gets set to 0.",
			"So they are offset to 0.",
			"So that everything is basically right at 0.0",
			"again, just like it was at the very beginning.",
			"",
			"And then last but not least, when we get into the new room,",
			"we start with the doors all open.",
			"And then when we get into the room here, because this is all",
			"done in the finished function, recall, this",
			"will only happen after the tween is completed.",
			"Every doorway is going to get set to false.",
			"Open equals false.",
			"So all the doors will close as soon as we get into the next room,",
			"after we've performed the tween operation.",
			"And then we'll play a door sound.",
			"So that's the code involved in actually doing the shift operation.",
			"So we were able to trigger it.",
			"We don't have to necessarily do that code from the player walk state.",
			"We just say if the players collide with the doorway,",
			"then dispatch an event that is handled by dungeon.",
			"Because dungeon has access to current room, next room, and all the stuff",
			"that it needs to actually perform that transition.",
			"So we have the two that are sort of decoupled but they work well",
			"in tandem with one another.",
			"So anybody have questions as to sort of how this works?",
			"",
			"OK.",
			"That's essentially the dungeon scrolling.",
			"It's a tween operation.",
			"It's a camera, a temporary room gets rendered.",
			"We move to a temporary room, everything gets set back to 0.",
			"And then it's just a wild loop of that sort of behavior, effectively.",
			"And we use the event library to sort of clean up that whole aspect.",
			"And sort of screen scrolling here, just another demonstration.",
			"We went over it in detail, but this is a nice GIF",
			"I found that sort of encapsulates what that means.",
			"Stenciling is something that we saw earlier.",
			"And if we look at this as a stencil, so we",
			"can pretend that these are the circle of the heart,",
			"and that rectangle are a stencil.",
			"And then we want to draw this gray rectangle on top of those stencils.",
			"We can use the stencil to mask out specific parts, which",
			"would otherwise be pretty tough to do.",
			"I mean, it's hard to necessarily, maybe individually",
			"render pixels, or create a shape that sort of looks like this.",
			"Much easier for a lot of very interesting visual effects",
			"to use a stencil of arbitrary shape and size.",
			"And you can use images, too.",
			"You can use images of stencils, to create some pretty cool effects.",
			"We went over it before, when I talked about the archway.",
			"So I won't go over into much more detail.",
			"But again, you can look at that in the, where was it exactly?",
			"It was in the room function, room class, sorry.",
			"Down here at the bottom.",
			"So lines to 213 to 229 recall they're a stencil function.",
			"The couple functions in particular that you need to use",
			"are love.graphics.stencil which draws the stencils, and then",
			"love.graphics.setstenciltest which compares",
			"the stencil values to some value, and draws them",
			"whether or not that condition is true.",
			"So we have our function here, which draws four rectangles.",
			"Those are all the archways.",
			"It replaces any pixels that get drawn to those rectangles with the value 1.",
			"The stencil value 1, so stencil value is just",
			"like a hidden value that determines whether a image will get",
			"drawn if it's being stenciled or not.",
			"Set stencil test means that we're looking for anything less than 1.",
			"And we'll draw that.",
			"And because the player is going to be 1 if it's",
			"on any of those stencil rectangles, it will not",
			"draw the player if it overlaps with those stencil rectangles.",
			"And so that's in general how it works.",
			"And you can do, there's a lot different comparisons.",
			"You can do greater than 1.",
			"You can do iterative stenciling so that you can increment of value.",
			"You can have simple values go between 0 and 255.",
			"There's a lot of interesting effects you can get with that.",
			"But the general use that we just saw is set the values to one,",
			"and check to see whether they're less than 1, if you want to draw them.",
			"If you want to not draw them.",
			"Does anybody have questions how stenciling works,",
			"and how these functions work?",
			"Yeah?",
			"AUDIENCE: So like having stat stencil cover up the door?",
			"So when you draw the player, you won't actually",
			"draw on the stencil, [INAUDIBLE].",
			"COLTON OGDEN: Yes.",
			"So it's like having the stencil rectangles go over the doorway,",
			"so that the player will not get drawn when it's underneath them.",
			"If I go back to a slide that has it.",
			"The stencils are here.",
			"Right?",
			"I had to go through and figure out the exact xy that I needed for them.",
			"And there is a--",
			"what you can do is you can take that stencil function that",
			"draws the rectangles, and you can just take it out of the stencil test,",
			"and see.",
			"You will actually be able to see where the exact rectangles are.",
			"Because then it will just literally draw the rectangles.",
			"But here, basically right between here and where it would be on the next room.",
			"So that when we go from here over into the next room, it's still",
			"stencils them.",
			"Right here, the player is going to go over them.",
			"It's going to set its stencil value to 1.",
			"It's checking for anything less than 1 to render.",
			"So it's going to fail the test, and it's going",
			"to not draw that player at that point.",
			"So it's effectively just masking out the player,",
			"because we're assigning it to the right stencil value,",
			"and we're doing the right comparison for it.",
			"But yeah, that's effectively it.",
			"Just using it to, because we were in a situation",
			"where our tiles didn't cleanly lend themselves to drawing over",
			"the player, which you could do.",
			"You could draw the shadow part underneath the archway part,",
			"and then just change the rendering order.",
			"But the spreadsheet that we had didn't afford us that flexibility.",
			"So we went with a little more interesting stenciling approach",
			"to getting it done.",
			"We looked at this earlier.",
			"So game design via data, rather than a bunch of logic.",
			"So the more you can sort of get towards modeling your anything in your game",
			"like data, like this, the more flexible your engine is,",
			"the easier it is for people to mod your game.",
			"Which is hugely important.",
			"And the easier it is for you to let designers",
			"take charge of actually creating assets for your game.",
			"So here we've created an arbitrary collection of data,",
			"and you can get as complex with this as you want to.",
			"The only thing that really matters is whether your game engine",
			"supports those fields, and acts on those fields accordingly.",
			"But once it does, I mean, the more things",
			"you add, the more possibilities you have for adding new things.",
			"So goblin, we have health, strength.",
			"So strength should be accounted for in our game engine.",
			"And this is, we're talking in just the general abstract sense now.",
			"Let's say we're like making an RPG or something.",
			"Or maybe this is part of our Zelda game.",
			"If we got a little bit more detailed with it.",
			"But goblin is going to be a creature that has 10 health.",
			"It's got two strength, so these values will",
			"get loaded when it's created as an entity,",
			"and strength is some value that our engine",
			"needs to apply to anything that it decides to attack.",
			"Right?",
			"You could do the same thing with defense.",
			"You could create arbitrary things.",
			"It's got a goblin texture.",
			"So that's the sprite.",
			"We've defined some animations here, which",
			"you've already seen how to instantiate those in our game engine.",
			"Maybe it starts off with a club weapon.",
			"And you can also reference other sort of Lua files",
			"that have these definitions, if you have maybe a weapons defs file.",
			"You could index into weapons defs club, and then that club item",
			"will maybe have a bunch of its own characteristics",
			"that when your game engine is loading this goblin def,",
			"it loads in the club def as well, and instantiates a bunch of qualities",
			"onto that entity, or that item, that then have",
			"behavior relevant to your game engine.",
			"Aggressive is true.",
			"So if something is entity.Aggressive, then maybe it's AI",
			"will seek out the player.",
			"Right?",
			"And you can set it to false.",
			"So now you can differentiate between entities that chase the player,",
			"and entities that are sort of docile, and just do their own random thing.",
			"Sleeps at night.",
			"Maybe your game has a day/night cycle.",
			"Maybe some entities stay awake, and some go into a sleep state, right?",
			"So it will look and say OK, it's nighttime,",
			"does the entity sleep at night?",
			"If it does, OK.",
			"Then entity change state, sleep, right?",
			"And then during the day, when the day happens,",
			"you'll do the same thing in reverse.",
			"You'll say if the entity sleeps at night,",
			"then you say entity.awake is true.",
			"Or whatever it is.",
			"Change state awake, or idle, or walking.",
			"And then flammable.",
			"Maybe you have weapons that shoot damage, or shoot fire.",
			"Or maybe you have torches that shoot fire, or some--",
			"maybe you're in a level that's like lava.",
			"And you know, if you touch one of the tiles, it has a flammable effect.",
			"And if it's flammable, may be your status equals flammable.",
			"You take damage over time.",
			"And you change your animation.",
			"Maybe you'd get tinted red, or something like that.",
			"But thinking about all these different possibilities,",
			"like what your engine is capable of, you can create pretty much arbitrarily",
			"complex data structures and entities, and items,",
			"and whatever you want in your game, without having",
			"to create a goblin class.",
			"Or a skeleton class.",
			"Or a arbitrarily complex creature class.",
			"You just compose your creature with attributes and model",
			"its behavior that way.",
			"Composition over inheritance, which we talked about last week,",
			"is very valuable in game design.",
			"And that's what Unity's game engine sort of approaches.",
			"Because entity is a purely entity component system,",
			"whereby entities are modeled as collections of components",
			"that each do something.",
			"And we can sort of almost think of these as components, too.",
			"Albeit in a much simpler sort of representation.",
			"Does anybody have questions of this, or like why it's useful,",
			"or anything like that?",
			"OK.",
			"So the last thing I wanted to talk about today, and I saw one or two students",
			"were mentioning how they wished they knew, or wish we",
			"talked about a little bit more how programming was done back in the day.",
			"So I'm not an expert, necessarily, in programming 6502 assembly,",
			"which is what the NES is written in.",
			"There are a lot of people that are very good at it.",
			"But there's a few links here.",
			"So in the slides, if you wanted to look at the slides on the website,",
			"Homebrew is actually quite a popular thing amongst certain communities",
			"online.",
			"And what it is essentially getting compilers",
			"that will compile source code for some arbitrary processor, or development",
			"environment from some arbitrary computer system.",
			"Like the NES, which was a 8-bit microprocessor based machine",
			"with its own set of interesting hardware.",
			"It allowed you to compile the assembly for that",
			"and actually run it via a program called an emulator.",
			"And an emulator just allows you to run ROM images, or just arbitrary data",
			"that maps to the machine instructions of some system",
			"that the emulator has emulated via virtual machine.",
			"And so if you wanted to look into it a little bit more in detail,",
			"there's a couple of links here.",
			"So NES.wiki has got a bunch of great links.",
			"There's a Programming Guide that kind of goes",
			"over the basics of how to do some 6502 assembly as well as with the NES,",
			"and its particular hardware.",
			"And then the compiler that most people use for this is called CC 65,",
			"which is a 65 02 assembly compiler.",
			"And so this is an example of some source code.",
			"It's a little bit tough to read.",
			"But I can't zoom in, I don't think.",
			"But the gist of it is you have a lot of--",
			"and here, actually I could pull it up online.",
			"Le me try.",
			"",
			"Super Mario disassembly.",
			"So go here.",
			"This is on Github.",
			"So somebody decompiled, basically, or disassembled rather,",
			"took the bytes that represent all the machine code and the ROM image of Super",
			"Mario Bros and then just converted it back to assembly language,",
			"and then added comments to it.",
			"Because I won't go into too much detail about what assembly is,",
			"and how it works, but essentially it's just",
			"a layer directly above machine code where the keywords",
			"map to essentially what are bytes in memory",
			"that are actually program instructions.",
			"And that influence the behavior of your CPU such that you get programs.",
			"And that's what c is layered on top of, an in every language thereof,",
			"thereafter.",
			"So if I zoom in here, see if I can.",
			"It's being a little slow.",
			"But it's letting me--",
			"so here we can see.",
			"",
			"I think it's lagging because the file is just so large.",
			"It's like 14,000 lines of code.",
			"Because the thing about assembly is assembly is a very, very long.",
			"Because there are so many--",
			"you need to have, just like really slowly.",
			"Zooming in infinitely.",
			"There are just so many steps you need to do in order",
			"to achieve the same thing that you get in a high level language like C,",
			"or even languages higher than that.",
			"Taking a lot of things for granted, especially things like loading",
			"registers.",
			"So every CPU has got a series of registers that can store values,",
			"and then the CPU has logic that you can basically",
			"say OK, if the value in register a is greater than or equal to some value,",
			"then branch to this sequence of the assembly code.",
			"And often you'll have to do things like and/or operations on byte level,",
			"just on bytes.",
			"Like right here, we can see we're ending the value 3 on whatever",
			"is in register a.",
			"Like I said, don't intend to get too much into what assembly is.",
			"But for those curious as to how games were implemented in the '80s, and even",
			"the early '90s, it was all in assembly language.",
			"Because assembly language is you're literally",
			"programming the CPU of whatever machine you're trying to program.",
			"And that's how you get as much efficiency as possible.",
			"If you know your computing, environment you know what your CPU is capable of.",
			"The thing about compiling a language like C, or C++, or Java,",
			"which is even higher of an abstraction than those,",
			"is you're allowing sort of algorithms to do the work for you.",
			"You're allowing algorithms to take your source code",
			"and turn it into this, basically.",
			"A layer lower than this, effectively.",
			"This is an intermediary level that it does generate.",
			"But suffice to say, in the '80s and '90s,",
			"C compilers were not as good as humans were in creating games,",
			"especially to do a lot of the tricky things that they needed to do,",
			"in order to get them working efficiently on processors that were, at the time,",
			"one to three megahertz in speed.",
			"Which now we have like three gigahertz processors, and it's no big deal.",
			"But that is effectively, that's sort of a window",
			"into what it was like developing games in the '80s and '90s.",
			"And then in the '90s, with like things like N64 Playstation 1,",
			"going onto Playstation 2, and so forth, it was typically done in a language",
			"like C or C++.",
			"Sometimes with some variants.",
			"Certain consoles, like the PS3 has a notoriously difficult graphics",
			"processor to program.",
			"So a lot of PS3 three teams needed to program in assembly,",
			"even at the time, which was 2007, 2009.",
			"But that's, in a nutshell, what it's like programming the 65 02.",
			"So if you want, those links up above, it's",
			"a pretty enlightening experience actually digging",
			"into that sort of thing, and trying to make sense of what the assembly does.",
			"It's quite difficult, and quite burdensome because of how long",
			"these programs are, and just how minute each individual instruction is.",
			"Like just checking, just loading a value into a register,",
			"just to do a loop often will just be iteratively loading a value",
			"into a register.",
			"And then like performing some operation, or calculation, off of that.",
			"And then branching to some other loop of code.",
			"A lot of that can be condensed into like just a couple of lines of C,",
			"or even fewer lines of Lua.",
			"So a lot more of a burden but there is insight.",
			"Definitely some insight into digging a little deeper",
			"and sort of looking there.",
			"So once again, those are the links on the NES dev wiki.",
			"Wiki.NESdev.com if you're interested in looking at that.",
			"In Assignment 5, like you did in Assignment 4,",
			"you can create a game object that's consumable.",
			"And feel free to use code from Assignment 4 to do this.",
			"When like you define your on consume function,",
			"if you're going to adopt the same model as the last assignment, then any ideas",
			"as to what we need to do?",
			"",
			"Probably just add the opposite of damage the entity, right?",
			"We want to add hearts.",
			"We want to add HP to it.",
			"And you'll see in the distro that health is modeled as an even number,",
			"because every one digit is half a heart.",
			"Yes.",
			"AUDIENCE: Can you give a negative number to [INAUDIBLE]??",
			"COLTON OGDEN: You can.",
			"And that will effectively be the same thing, too.",
			"So.",
			"The second part is including pots.",
			"So there are pots in the sprite sheet.",
			"So these should be solid.",
			"So when the player interacts with them, he",
			"should be bumped out of where he was.",
			"Allow the player to lift them.",
			"So there's an animation in the sprite sheet that will actually allow--",
			"that shows the player lifting up the pot.",
			"So you probably need a new state, player lift pot state.",
			"Walk with pot state.",
			"Whatever you want to define it as.",
			"But you'll need basically to have those two in order to get this to work.",
			"What's one thing that we'll need to do in order for the player",
			"to lift the pot.",
			"Any ideas?",
			"Besides the rendering aspect of it, when the player walks around, for example,",
			"what needs to happen?",
			"If he's holding the pot.",
			"AUDIENCE: He's slower.",
			"COLTON OGDEN: You can make him slower.",
			"Yeah, that's possible.",
			"That's not required for the assignment.",
			"More fundamental than that.",
			"",
			"The pot needs to track the player's location, right?",
			"It needs to be relative to the player's location.",
			"So keep the pot probably above the player by some amount.",
			"I won't be too picky as to how you implement that.",
			"But the pot needs to track the player.",
			"Which is this next point, actually.",
			"And the walking animations, like I said, should",
			"change while they're carrying it.",
			"Allow the player, lastly, to throw the pot.",
			"So when you throw the pot, basically turn the pot into a projectile.",
			"If it hits one of the walls, break it.",
			"You can either just despawn it instantly, or have some animation.",
			"It's up to you.",
			"But just, if it hits a wall, despawn it.",
			"Trigger it to-- maybe just trigger it to some values, false.",
			"Render is false, whatever you want to do.",
			"If it hits an enemy, it should damage the enemy by one,",
			"just like we've seen already.",
			"And if it travels farther than four tiles,",
			"in addition to also hitting one of the walls, then destroy it too.",
			"So those are the main components for Assignment 5.",
			"And the ways that which you achieve most of it's fairly flexible.",
			"But yeah, that's Lecture 5, Legend of Zelda.",
			"So thanks for coming.",
			"I'll see you next time.",
			""
		],
		"is_youtube": false
	},
	"video_008": {
		"section": "CS50G 2020",
		"subsection": "Angry Birds",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000100/HarvardXCS50G-V000100.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000100_DTH.mp4"
		],
		"video_duration": 5604,
		"speech_period": [
			16.511, 0.999, 1.0, 1.09, 1.44, 2.94, 2.37, 2.082, 2.208, 3.0, 5.23, 3.23,
			1.34, 1.9, 2.53, 4.16, 2.58, 2.22, 4.25, 1.115, 1.625, 4.53, 0.93, 3.57,
			2.28, 3.06, 3.09, 2.79, 3.89, 4.946, 1.624, 4.45, 2.43, 2.61, 4.0, 6.38,
			0.93, 2.666, 4.254, 2.71, 4.049, 2.191, 2.23, 3.244, 3.166, 0.72, 3.12,
			5.28, 1.5, 4.29, 1.24, 2.405, 4.565, 2.26, 4.23, 5.277, 1.083, 1.89, 5.25,
			2.93, 2.86, 4.23, 1.32, 3.249, 1.791, 1.63, 2.01, 3.452, 1.708, 1.75,
			3.22, 1.44, 1.947, 1.833, 4.75, 3.77, 3.765, 3.375, 2.19, 2.916, 1.038,
			0.666, 2.19, 1.35, 4.56, 7.47, 3.18, 4.05, 3.6, 2.1, 2.67, 3.99, 1.11,
			1.74, 1.41, 2.26, 2.42, 1.65, 3.57, 4.32, 3.01, 3.36, 3.89, 2.16, 2.49,
			3.66, 1.811, 0.749, 1.74, 8.5, 1.08, 6.66, 2.07, 3.15, 3.06, 4.544, 3.166,
			0.72, 3.48, 0.96, 1.35, 2.22, 2.76, 1.5, 3.69, 0.99, 2.91, 4.02, 3.75,
			1.5, 4.282, 2.958, 3.74, 3.15, 2.55, 2.34, 4.53, 4.11, 2.46, 3.69, 2.28,
			1.65, 3.42, 3.66, 2.82, 2.61, 4.74, 1.8, 2.65, 3.92, 3.42, 3.0, 2.62,
			2.18, 2.43, 2.815, 1.625, 2.73, 3.33, 3.3, 2.48, 3.655, 2.625, 2.374,
			3.746, 2.88, 3.3, 2.734, 1.916, 1.39, 2.42, 4.83, 2.61, 2.88, 1.2, 4.199,
			1.74, 3.181, 3.27, 3.48, 3.39, 4.83, 7.35, 0.61, 3.5, 6.03, 3.39, 4.11,
			2.51, 2.83, 3.03, 3.77, 3.037, 1.083, 3.48, 2.97, 2.22, 2.88, 3.0, 2.61,
			3.9, 2.19, 3.6, 2.19, 2.5, 2.0, 1.166, 1.374, 1.75, 1.59, 4.26, 2.68,
			3.56, 3.24, 3.78, 7.9, 2.81, 2.88, 4.23, 2.91, 3.84, 5.34, 2.46, 2.04,
			3.72, 3.63, 2.22, 2.16, 2.97, 1.972, 1.458, 3.26, 3.15, 1.59, 5.19, 3.3,
			2.23, 3.11, 4.77, 3.54, 4.422, 2.208, 4.77, 1.92, 4.65, 3.45, 2.34, 2.49,
			2.79, 4.05, 4.38, 5.11, 2.93, 4.2, 3.07, 2.36, 4.8, 3.45, 2.23, 3.05,
			2.04, 3.48, 3.93, 3.87, 5.64, 4.86, 2.97, 3.09, 5.19, 2.08, 2.25, 2.03,
			3.88, 2.69, 3.855, 3.165, 3.93, 1.95, 3.21, 4.2, 3.24, 4.77, 3.21, 2.91,
			4.71, 2.1, 4.594, 1.166, 3.79, 2.45, 2.01, 3.69, 1.78, 1.82, 2.67, 4.3,
			5.62, 1.75, 3.18, 2.41, 3.18, 2.16, 3.33, 2.67, 3.0, 3.31, 3.68, 4.17,
			4.72, 2.31, 3.86, 3.09, 3.08, 2.38, 3.66, 3.24, 3.0, 4.599, 1.791, 2.659,
			1.541, 4.83, 1.11, 5.37, 2.01, 2.64, 3.06, 4.027, 3.083, 2.46, 5.73, 2.68,
			5.54, 3.48, 2.22, 4.14, 2.79, 3.78, 4.389, 4.291, 4.46, 4.08, 1.23, 4.23,
			1.26, 3.537, 1.833, 4.0, 3.35, 2.22, 3.627, 2.333, 3.76, 6.03, 2.67, 2.39,
			2.21, 3.38, 2.19, 3.18, 2.4, 2.102, 1.708, 1.62, 4.62, 3.81, 2.64, 3.69,
			4.95, 3.81, 4.74, 2.34, 2.451, 3.249, 3.617, 2.833, 4.08, 3.99, 2.25,
			3.42, 2.46, 2.12, 3.52, 2.01, 5.94, 4.86, 3.21, 4.15, 3.002, 2.958, 1.35,
			2.07, 6.007, 2.583, 1.69, 3.76, 2.04, 2.65, 6.3, 7.05, 4.53, 3.24, 3.75,
			5.46, 3.33, 3.57, 2.49, 6.3, 4.185, 3.291, 2.124, 5.46, 2.89, 2.42, 5.65,
			3.301, 0.625, 0.996, 4.482, 2.29, 1.916, 0.99, 3.064, 0.906, 0.791, 2.319,
			2.0, 1.25, 3.28, 2.98, 3.729, 2.541, 4.77, 2.52, 5.37, 5.337, 2.583, 1.02,
			4.299, 2.249, 4.222, 2.07, 1.8, 3.41, 1.22, 3.01, 1.0, 2.53, 5.464, 0.916,
			2.22, 2.55, 4.02, 3.61, 5.6, 3.3, 2.64, 3.63, 1.95, 3.12, 3.73, 4.49,
			2.89, 4.86, 6.438, 2.311, 2.041, 0.84, 2.73, 2.16, 3.45, 5.6, 5.05, 2.89,
			0.71, 3.45, 3.51, 4.56, 3.72, 4.26, 3.41, 3.46, 1.827, 1.083, 5.25, 2.43,
			3.951, 1.249, 1.833, 2.027, 2.19, 3.45, 2.37, 4.29, 4.18, 2.99, 2.67,
			4.11, 1.47, 5.2, 5.31, 2.0, 4.685, 1.704, 2.541, 6.3, 3.18, 2.43, 2.79,
			4.14, 4.59, 2.19, 3.99, 1.84, 3.53, 2.52, 3.54, 4.62, 2.901, 2.499, 3.08,
			3.34, 2.07, 1.66, 4.19, 2.8, 3.71, 2.84, 3.34, 3.45, 1.98, 2.46, 1.39,
			2.583, 1.307, 2.97, 3.24, 4.74, 2.46, 4.86, 3.36, 4.56, 3.43, 5.21, 2.838,
			2.5, 0.916, 1.316, 4.97, 4.29, 3.24, 2.25, 1.92, 3.09, 3.18, 1.95, 4.34,
			2.5, 2.52, 3.505, 2.375, 3.31, 4.225, 5.855, 4.23, 3.63, 2.11, 2.18, 3.54,
			4.2, 2.26, 2.81, 2.1, 2.46, 4.23, 1.57, 2.46, 3.5, 4.11, 4.14, 1.0, 3.29,
			3.3, 2.88, 2.16, 5.64, 3.24, 1.68, 2.53, 5.06, 0.72, 4.602, 0.708, 4.29,
			4.83, 10.77, 5.55, 3.84, 3.2, 2.5, 2.61, 4.23, 4.5, 0.84, 2.79, 3.45,
			5.439, 1.791, 4.62, 1.5, 6.12, 2.43, 5.55, 3.24, 2.67, 1.74, 4.32, 2.01,
			2.37, 4.65, 6.09, 2.25, 1.89, 2.61, 4.576, 1.874, 2.37, 3.07, 2.12, 4.89,
			3.93, 2.99, 1.76, 3.68, 3.6, 3.15, 4.86, 1.352, 1.708, 1.89, 4.56, 2.73,
			3.9, 1.429, 1.541, 3.27, 2.09, 1.48, 2.083, 1.247, 3.81, 5.34, 4.062,
			0.708, 6.42, 2.879, 3.591, 2.58, 4.829, 1.29, 1.811, 3.32, 3.97, 5.45,
			2.849, 1.54, 3.77, 2.71, 2.151, 2.272, 2.708, 3.06, 2.46, 3.75, 3.11,
			2.42, 2.57, 4.14, 2.38, 2.314, 1.666, 1.11, 3.42, 2.32, 3.15, 2.78, 1.23,
			4.11, 4.29, 2.44, 2.344, 2.416, 2.31, 2.13, 1.29, 3.388, 3.561, 0.791,
			1.75, 1.92, 6.584, 0.916, 2.25, 3.36, 4.5, 5.4, 4.05, 2.917, 1.833, 1.98,
			3.827, 0.833, 0.625, 2.925, 0.57, 3.57, 4.41, 3.84, 4.23, 4.29, 2.52,
			4.17, 2.77, 3.65, 3.407, 1.333, 3.48, 2.48, 4.76, 0.5, 1.65, 0.541, 0.899,
			9.57, 4.98, 4.2, 5.34, 6.75, 2.46, 1.7, 3.97, 1.61, 2.701, 2.499, 2.13,
			3.315, 3.795, 1.92, 2.041, 3.789, 5.69, 2.73, 1.68, 2.55, 4.32, 3.285,
			1.836, 0.999, 4.2, 3.48, 6.33, 4.83, 6.96, 4.349, 3.041, 2.0, 1.62, 2.67,
			2.98, 3.66, 3.81, 2.01, 3.42, 2.79, 2.32, 3.26, 1.95, 3.78, 1.98, 3.76,
			3.77, 3.21, 2.14, 3.68, 4.68, 4.47, 1.08, 3.3, 2.97, 4.98, 1.697, 3.083,
			4.94, 1.5, 2.79, 4.44, 0.84, 2.37, 3.99, 6.39, 3.3, 2.76, 2.775, 1.425,
			1.291, 4.439, 4.38, 2.19, 5.88, 4.51, 7.22, 3.41, 2.5, 4.11, 2.74, 2.93,
			4.092, 0.998, 1.708, 3.692, 3.685, 1.875, 3.21, 3.12, 5.75, 2.514, 1.416,
			4.38, 1.817, 1.333, 4.65, 4.62, 4.56, 2.17, 2.03, 4.92, 2.31, 2.1, 2.515,
			3.545, 5.01, 5.89, 3.35, 3.54, 1.41, 4.491, 5.273, 2.416, 1.77, 3.33,
			8.76, 3.03, 3.78, 5.46, 2.13, 4.26, 2.61, 4.26, 5.73, 2.67, 3.39, 4.38,
			4.35, 3.33, 2.37, 2.79, 2.94, 1.53, 2.25, 3.66, 3.33, 3.57, 3.3, 1.59,
			3.39, 3.79, 5.99, 3.45, 3.54, 6.06, 2.82, 5.13, 5.67, 1.77, 1.602, 1.458,
			2.22, 4.62, 1.86, 2.16, 4.69, 4.56, 3.65, 2.04, 5.31, 1.35, 4.32, 2.73,
			3.42, 2.61, 2.88, 1.63, 1.32, 6.15, 2.48, 1.56, 8.28, 3.052, 1.208, 4.95,
			3.39, 1.92, 5.73, 3.0, 3.45, 3.61, 3.77, 4.5, 2.79, 3.91, 5.09, 3.63,
			5.07, 3.97, 2.174, 0.836, 3.7, 3.09, 2.64, 1.38, 2.4, 3.15, 6.02, 3.617,
			2.333, 2.58, 3.81, 4.8, 2.76, 3.66, 2.41, 2.45, 2.68, 4.16, 3.69, 2.2,
			3.07, 2.77, 2.94, 3.43, 3.74, 4.08, 2.43, 2.55, 2.88, 3.18, 4.11, 1.41,
			3.96, 3.54, 1.48, 2.31, 3.51, 3.96, 2.16, 3.33, 1.95, 2.52, 5.39, 1.96,
			2.15, 4.14, 2.85, 2.19, 2.19, 2.25, 3.48, 3.99, 4.87, 3.08, 2.22, 7.02,
			2.264, 3.166, 4.68, 3.18, 2.97, 3.447, 2.583, 2.19, 3.78, 3.36, 3.57,
			4.41, 2.73, 1.32, 1.8, 1.41, 1.41, 4.15, 9.56, 5.7, 2.28, 7.28, 3.25,
			3.39, 5.4, 3.81, 2.43, 5.07, 3.03, 1.71, 3.72, 3.36, 3.82, 2.86, 2.75,
			0.62, 3.46, 2.24, 1.71, 6.45, 1.44, 2.73, 3.45, 5.46, 2.43, 2.13, 2.95,
			3.14, 2.019, 1.791, 2.8, 1.25, 3.54, 3.45, 4.32, 2.43, 6.99, 1.92, 2.52,
			2.43, 6.94, 2.565, 0.875, 2.838, 1.162, 0.5, 2.25, 3.21, 2.16, 3.78, 4.83,
			3.6, 4.23, 0.93, 2.731, 0.499, 0.78, 1.86, 4.01, 1.76, 6.02, 3.27, 5.49,
			2.46, 2.91, 3.87, 2.454, 1.166, 5.71, 2.94, 5.67, 4.11, 3.69, 2.85, 3.84,
			2.88, 4.08, 4.5, 0.84, 3.18, 2.04, 6.1, 3.14, 3.12, 4.14, 2.4, 5.1, 4.92,
			1.86, 2.85, 2.51, 3.28, 3.93, 3.93, 3.91, 4.5, 6.11, 3.69, 3.03, 3.242,
			1.708, 2.85, 2.56, 2.87, 2.82, 2.1, 4.95, 3.57, 3.07, 2.66, 4.44, 1.09,
			0.96, 1.958, 4.602, 2.43, 2.631, 3.249, 2.04, 3.96, 5.55, 2.64, 2.88,
			3.42, 2.4, 2.37, 2.7, 3.03, 2.31, 4.961, 1.249, 1.44, 1.14, 4.5, 2.91,
			2.53, 1.55, 4.02, 2.78, 2.08, 3.069, 1.791, 2.7, 4.11, 3.42, 2.94, 2.22,
			4.71, 3.78, 3.31, 2.91, 4.14, 1.62, 2.67, 4.38, 4.192, 1.208, 6.78, 2.58,
			2.0, 2.71, 2.22, 2.41, 3.62, 2.43, 3.9, 1.92, 2.49, 3.24, 3.96, 2.67,
			3.269, 1.291, 3.48, 0.591, 1.999, 3.05, 2.458, 1.832, 3.27, 2.25, 3.36,
			4.95, 3.15, 3.4, 3.92, 3.85, 2.29, 2.696, 1.124, 3.99, 5.19, 4.0, 2.96,
			2.808, 1.5, 1.632, 0.81, 1.875, 4.064, 1.291, 1.583, 3.017, 3.78, 4.41,
			1.32, 3.66, 2.34, 3.55, 2.78, 3.24, 3.93, 2.58, 5.46, 3.94, 1.25, 2.249,
			2.701, 2.79, 2.61, 2.94, 1.65, 0.6, 3.39, 3.51, 2.55, 4.41, 4.74, 3.75,
			2.01, 2.34, 3.84, 4.53, 1.87, 2.84, 4.124, 2.416, 3.502, 1.958, 3.85,
			4.94, 7.38, 2.38, 1.13, 5.88, 4.03, 3.43, 5.14, 6.45, 1.42, 4.22, 2.97,
			4.8, 2.4, 3.96, 1.92, 3.75, 2.43, 2.69, 4.91, 1.58, 4.17, 3.938, 4.187,
			1.375, 1.55, 2.41, 1.62, 2.25, 2.375, 2.335, 6.75, 1.62, 3.03, 3.48, 5.15,
			2.2, 5.64, 1.32, 2.932, 2.708, 2.58, 7.74, 3.03, 5.5, 4.01, 5.67, 2.021,
			2.249, 5.27, 4.12, 4.922, 2.208, 1.86, 2.399, 3.931, 1.35, 4.23, 4.199,
			5.551, 2.61, 3.509, 2.451, 3.25, 4.35, 5.88, 3.63, 3.99, 3.069, 1.5,
			3.471, 2.52, 3.12, 3.45, 0.848, 2.632, 6.39, 2.699, 4.591, 1.71, 4.14,
			6.3, 1.93, 2.87, 4.27, 3.29, 4.86, 3.21, 1.11, 4.23, 4.06, 2.75, 4.53,
			1.98, 3.54, 2.52, 3.627, 1.833, 2.1, 2.67, 5.79, 3.72, 3.591, 2.499, 2.7,
			1.47, 2.82, 4.96, 3.76, 1.63, 4.72, 1.32, 2.9, 4.81, 3.9, 2.7, 3.48, 2.01,
			5.08, 3.08, 4.32, 2.934, 5.988, 2.958, 1.2, 3.15, 3.21, 2.85, 2.46, 2.1,
			3.51, 2.64, 3.852, 1.458, 4.51, 5.43, 1.56, 2.09, 0.24, 1.17, 0.791,
			0.739, 2.35, 3.022, 0.958, 3.96, 2.01, 2.45, 3.34, 5.16, 5.49, 2.55, 3.07,
			1.4, 0.54, 3.041, 2.539, 3.06, 1.441, 3.848, 3.138, 2.583, 2.94, 3.96,
			1.86, 5.01, 5.58, 6.394, 1.166, 1.41, 3.59, 2.77, 2.44, 6.02, 1.74, 2.01,
			3.06, 2.88, 3.81, 2.31, 3.99, 4.23, 3.03, 2.58, 4.44, 4.05, 5.56, 2.14,
			3.37, 1.77, 4.5, 2.01, 2.16, 2.13, 2.31, 4.92, 3.16, 4.23, 3.5, 2.59,
			4.28, 2.46, 2.19, 3.12, 4.23, 4.68, 3.74, 7.93, 3.0, 4.38, 2.1, 3.48,
			3.18, 3.54, 3.54, 5.87, 4.07, 4.36, 3.0, 4.5, 3.63, 5.61, 5.82, 3.15,
			4.71, 1.77, 1.844, 2.416, 4.23, 2.43, 3.51, 3.79, 2.36, 3.8, 2.71, 2.048,
			2.752, 2.43, 1.267, 0.833, 2.94, 3.06, 1.05, 2.37, 7.05, 1.83, 4.65, 2.79,
			5.32, 3.24, 1.49, 3.0, 6.971, 0.499, 4.05, 3.42, 4.89, 5.28, 5.1, 2.76,
			3.03, 4.72, 2.51, 6.18, 3.66, 3.477, 1.083, 2.91, 3.18, 3.0, 2.25, 1.874,
			3.166, 2.28, 5.416, 1.874, 4.44, 6.3, 2.09, 4.542, 0.932, 1.666, 0.5,
			3.69, 3.39, 3.08, 1.48, 4.14, 3.3, 5.15, 4.25, 3.3, 6.05, 5.7, 0.87, 2.07,
			3.3, 5.76, 4.68, 3.51, 8.88, 2.07, 4.17, 3.3, 4.8, 1.95, 2.25, 1.62,
			1.874, 1.666, 4.44, 6.78, 5.7, 2.284, 1.916, 2.25, 1.47, 3.34, 2.15, 3.84,
			3.66, 1.13, 1.48, 2.34, 2.76, 2.31, 2.52, 7.11, 3.0, 4.24, 4.37, 3.63,
			7.36, 3.17, 0.93, 3.36, 3.63, 2.85, 5.7, 4.975, 2.375, 3.12, 5.52, 2.34,
			2.82, 2.76, 2.572, 1.958, 3.33, 3.63, 2.52, 6.12, 1.317, 1.833, 3.84,
			2.31, 2.07, 3.66, 4.95, 2.25, 3.87, 1.5, 3.12, 4.41, 3.63, 1.57, 2.18,
			3.21, 1.4, 1.96, 2.1, 6.764, 2.166, 3.98, 4.51, 2.89, 2.6, 2.61, 1.02,
			2.37, 2.37, 3.4, 0.777, 2.333, 4.71, 2.67, 10.14, 4.38, 2.237, 2.458,
			2.385, 5.1, 5.34, 3.489, 1.791, 6.3, 3.839, 3.041, 2.39, 3.24, 1.59, 3.53,
			1.75, 6.18, 1.56, 1.77, 4.65, 2.13, 8.43, 4.62, 3.51, 3.33, 6.63, 6.81,
			2.4, 1.92, 2.28, 1.5, 2.226, 1.374, 3.43, 3.47, 3.06, 4.35, 2.76, 2.31,
			4.44, 2.52, 4.08, 3.72, 4.47, 1.68, 3.9, 4.08, 2.88, 1.095, 1.875, 3.829,
			1.541, 2.88, 3.95, 4.75, 0.96, 2.37, 3.33, 3.28, 4.82, 3.21, 4.635, 2.712,
			2.583, 3.72, 2.34, 6.0, 3.87, 3.45, 2.34, 2.51, 3.85, 5.01, 3.42, 0.88,
			3.2, 3.75, 2.7, 3.97, 5.63, 2.49, 1.68, 2.88, 5.85, 3.93, 5.43, 2.97, 1.8,
			1.999, 1.391, 5.149, 2.291, 2.58, 2.79, 4.08, 1.14, 2.73, 2.59, 2.36,
			4.27, 4.43, 2.61, 4.02, 1.78, 2.0, 3.72, 3.45, 2.2, 2.87, 3.3, 4.23, 3.51,
			2.32, 1.79, 2.13, 4.345, 0.875, 2.124, 3.636, 2.994, 1.791, 5.692, 2.333,
			3.0, 3.547, 0.833, 2.76, 2.55, 2.252, 0.958, 1.85, 1.111
		],
		"transcript_en": [
			"",
			"COLTON OGDEN: All right.",
			"Good evening, everybody.",
			"Welcome back to GD50.",
			"This is lecture six.",
			"And today we're going to be venturing out of the 8-bit world",
			"and back into a more modern era of gaming.",
			"We're talking about Angry Birds today.",
			"I have pretty fond memories of Angry Birds, actually.",
			"It was the first mobile game that I remember",
			"playing where I realized that mobile was actually a viable platform for gaming.",
			"I played it, I think, back in 2009, was when it was first released.",
			"And I really enjoyed it.",
			"It has a very simple formula.",
			"The goal, if you're unfamiliar, is you have",
			"birds that you control by a sling shot on the left side of the screen.",
			"And then these pigs that have stolen your eggs,",
			"you're trying to destroy them or kill them",
			"by knocking down their fortresses made out of various materials, wood, glass,",
			"metal.",
			"And you get a few different bird types.",
			"But the gist of it is, basically, just sling shot a bird into some structure,",
			"knock it down.",
			"And the whole entire underlying mechanism",
			"for how things work is via a physics engine,",
			"which we'll talk about today in lecture, called Box2D Probably",
			"the most ubiquitous 2D physics engine.",
			"But that's the overall structure of the game.",
			"It's literally just throwing things into structures, knocking them down.",
			"And then that tactile and fun game play makes for really great mobile gaming.",
			"And I enjoyed it a lot back in the day.",
			"This is a screenshot of the first level in the first Angry Birds, which",
			"most people I think have probably seen.",
			"This is a sample from one of their newer games.",
			"As you can see, it's taken a whole new layer here.",
			"There's stone and a bunch of intricately varying structures and new creatures",
			"and stuff like that.",
			"The game has changed a lot, but the formula has stayed the same.",
			"And today we'll explore the foundation of what makes this game work.",
			"And the topics today, a smaller than usual.",
			"But Box2D, we can consider as being a pretty large topic.",
			"We'll be talking about Box2D, which is the physics",
			"engine we'll be using today in lecture.",
			"And via Love2D, which has its own wrapper for Box2D.",
			"And we'll also talk a little bit about mouse input, which you haven't really",
			"done a lot.",
			"But it's very apt, especially in the context of mobile gaming.",
			"Because mouse input and touch input are synonymous.",
			"But first, let's get a lecture demo.",
			"If we have a volunteer come up on stage to showcase",
			"what I've put together here.",
			"So let me make sure I'm in the right directory here.",
			"",
			"So whenever you're ready, go ahead and press Enter.",
			"",
			"So this is a little demo I put together to demonstrate the concepts we'll",
			"talk about today in class.",
			"This is just the Start screen, but it already",
			"shows Box2D representing a bunch of these square shaped aliens, which",
			"we'll actually be what we're trying to target in the game.",
			"But notice that they all fell and had their own collision",
			"and their own physics that took place, and I didn't have to manually code",
			"rotation and stuff like this.",
			"This is all stuff that Box2D takes care of for us.",
			"And we'll see it used to great effect soon.",
			"If you go ahead and just click anywhere on the screen,",
			"we'll go to the main part of the game.",
			"So this is a very simple representation of what Angry Birds is.",
			"You start on the left side of the screen.",
			"You have a bird, in this case an alien, we",
			"used a free art pack that uses aliens instead of birds,",
			"but it's the same concept.",
			"You have an alien that you can click and drag.",
			"So if you click it and then drag around, you",
			"can see the trajectory that you'll have when you let go of the mouse.",
			"So we're simulating where it's going to go via these purple circles.",
			"And then the goal in Angry Birds is to throw the bird into,",
			"or the alien, into the fortress guarding the pigs,",
			"or in this case, square shaped aliens.",
			"So if you go ahead and just launch the bird by letting go of the mouse",
			"you'll see.",
			"Oh, there we go.",
			"And we knocked down the.",
			"OK.",
			"What happened was we shot the alien into the structure.",
			"It destroyed one of the wooden blocks guarding the other alien.",
			"And then, as soon as that happened, the top box,",
			"because these are all being simulated via Box2D's physics engine,",
			"that other box was detected as being unsupported.",
			"So it fell down, it hit the other alien.",
			"And we've coded it so that when a collision occurs",
			"between an obstacle and our alien of sufficient speed,",
			"it should kill the alien.",
			"Which is how it works in Angry Birds.",
			"So if you'll try it again.",
			"And this time we hit both of those at the same time.",
			"So it triggered both of those being deleted.",
			"But this guy is still alive.",
			"So after it stops moving, which is similar to how",
			"it behaves in the original game, it's going to let us try again to shoot.",
			"So if we try one more time.",
			"And then we launch and hit it, we kill it and then we get a victory.",
			"So that's the overall underlying foundation for what Angry Birds is.",
			"Obviously we're using a very simple representation.",
			"It doesn't have a lot of the frill that Angry Birds does.",
			"But we could easily build upon this and create a fully fleshed out",
			"game very similar to Angry Birds.",
			"So thanks, Steven.",
			"I appreciate the demonstration.",
			"",
			"So that's our goal today.",
			"We'll be talking about how to construct a very basic but functional simulation",
			"of what Angry Birds is at its core.",
			"Which is just flinging things into obstacles, destroying them,",
			"and ultimately destroying the things that they're protecting,",
			"the aliens, the pigs that are in the base game.",
			"So here's a shot of what the different sprite sheets we're going to be using",
			"are.",
			"There's a really great sprite sheet that I got off of Open Game Art.",
			"Kenny is the artist.",
			"He makes a lot of great art.",
			"If you notice, it's very similar looking to the art",
			"that we use in the Mario lecture.",
			"Actually, it's the same artist.",
			"So if you're ever looking for assets, he's got a ton of awesome assets",
			"on open game art.",
			"So we have a set of aliens, square and round shaped.",
			"I decided just arbitrarily we made the round shaped aliens the birds.",
			"So we shoot those into the structures that are",
			"protecting the square shaped aliens.",
			"The square shape aliens will be the bad guys in this case.",
			"And then we have another sprite sheet down here below on the left side.",
			"Which just, I used the tile here just to make a ground element.",
			"The rest of these you could easily include in the game if you wanted to,",
			"but we're only using the ground here.",
			"And then notice here, we have this large sprite sheet",
			"which has a bunch of different shapes and sizes of materials.",
			"The whole sprite sheet comes with metal and explosive and glass sheets as well.",
			"But just for simplicity we only use the wood here.",
			"But notice that we have entirely whole pieces",
			"and then we have pieces that are partially destroyed",
			"and then pieces that are hollow.",
			"You could easily model all of these in your game and use them.",
			"But we only decided to use just a couple of these,",
			"which was just the horizontal and the vertical ones that",
			"are completely whole.",
			"These, unfortunately, don't have quite the same systematic layout",
			"as the sprites that we used before.",
			"They're not laid out in a grid evenly spaced.",
			"So in this case, in util dot Lua, I ended up hard",
			"coding the different XY width and height quads",
			"for each of these, which is what you have to do in a situation",
			"where you're interacting not with tiles per se,",
			"but with more organic shaped objects.",
			"So it can take a little more time to end up",
			"constructing all of the quads for your objects",
			"when you have a sprite sheet like this.",
			"But, fortunately, you only have to do it once.",
			"Here's a few useful links before we get started in talking about what Box2D is",
			"and how to use it, and basically how it's called love dot",
			"physics, effectively, in love2D.",
			"The first two links are documentation for love 2D,",
			"what the functions and objects are that we'll be talking about.",
			"And a simple tutorial that talks about how to make a ball",
			"bounce in love 2D using Box2D.",
			"The third is a great resource that I used actually",
			"to learn most of what I know about Box2D, especially",
			"in the context of this lecture.",
			"So it talks about a lot of different concepts.",
			"It talks about all the things that we'll be talking about.",
			"And then it goes into a lot more detail about how",
			"you can go about constructing a lot of really cool, crazy things like tanks",
			"and pulleys and a whole bunch of different things",
			"that are worth looking into if you're looking into potentially making",
			"a physics based game.",
			"Obviously we won't be going into things of that complexity here.",
			"But you could easily do it with Box2D.",
			"It makes it very, very possible.",
			"So the very first thing that we should talk",
			"about when we want to construct a game, or simulation,",
			"or whatever we want to do, with Box2D is we",
			"need some sort of system that will actually perform the simulation for us.",
			"And the fundamental core of what a Box2D app or game is, the core is the world",
			"object.",
			"So there is a world that you can think of as sort of being your world,",
			"but what it effectively is is a machine that simulates all of the pieces",
			"that you've told it interact with each other in Box2D.",
			"So Box2D has a set of objects called fixtures and bodies.",
			"Those perform the physical interactions.",
			"And it's up to the world to update all of those",
			"and apply the relevant forces and physics calculations",
			"that resolve collisions and do all sorts of things.",
			"All of the things that Box2D does for us, the world",
			"takes care of this for us.",
			"So we don't have to manually go through and update every single object",
			"with its velocity that we've done before and check for collisions.",
			"The world does this for us, and resolves them",
			"based on how we tell it to resolve them.",
			"And the world also possesses, like an actual world",
			"would, gravity on the x and y-axis.",
			"In this case, we have gravity applied on the y-axis going down,",
			"so it's a positive value.",
			"We set it to 300 in this distro, but you can set it to whatever you want.",
			"Setting a lower gravity would have the effect",
			"of making it feel like we're on the moon or something.",
			"Making it feel like we're on a different planet.",
			"So that's what the world is.",
			"The world simulates everything.",
			"And we'll go through just a few terms here",
			"before we look at some source code.",
			"But there's a few terms that we need to understand before we can really",
			"understand what Box2D is doing.",
			"And this is the function that we use to create a new world in love2D.",
			"Very simple, love dot physics dot new world.",
			"And this love dot physics is just a name space that",
			"encapsulates all of the Box2D functions and objects that love2D has access to.",
			"So anything that you see in love dot physics is effectively",
			"a wrapper for Box2D.",
			"And to clarify about Box2D, Box2D is just a library that's written in C++",
			"that you can plug-in pretty much anywhere you want to.",
			"Unity uses it and, actually, most 2D game engines",
			"that I've ever seen including Live GDX, for example, which is a very large Java",
			"2D game framework uses Box2D.",
			"You can use it anywhere.",
			"In this case we're using love2D's own wrapper for it.",
			"So the people that created love 2D, they took Box2D",
			"and then they just put a bunch of Lua functions",
			"around them, around all the objects and functions",
			"to make it possible to use it in the same style",
			"that we use the rest of the framework.",
			"This is how you create a new world.",
			"This is the first step in getting your Box2D simulation working.",
			"So any questions so far as to how we can get that going?",
			"OK.",
			"So beyond the world object, which is the foundation, sort of sets up our stage,",
			"you can think of it as our stage, we need bodies",
			"to actually interact with each other.",
			"So a body is just an abstract container.",
			"It basically holds a position and a velocity.",
			"And you attach things to it via what are called fixtures",
			"that allow you to give the body a shape, and therefore a collision box,",
			"and therefore allow it to interact with other things.",
			"But a body is essentially all the disparate things in your scene interact",
			"with each other and move around.",
			"And so to create a new body we just do love dot physics dot new body.",
			"We pass in the world, so therefore when we do this,",
			"the world has a reference to this body now.",
			"And every time we call update on our world, which",
			"we'll see in the source code, it will know, OK,",
			"I have a reference to this body, perform all of the relevant checks",
			"on the collision for that body and all the fixtures that it contains.",
			"Update its position, updates velocity, and so forth.",
			"And not only a world, but it also gets an x and a y,",
			"which will place it in the world on instantiation.",
			"The last parameter here, type.",
			"There are three fundamental types of bodies",
			"which we'll see in love 2D, static, dynamic, and kinematic.",
			"And that basically influences how it'll interact with the other objects,",
			"the other bodies, in our scene.",
			"So we have the world, which encapsulates everything,",
			"all the bodies, all the fixtures.",
			"And then we have the bodies, which are the entities in our game world",
			"that have position and velocity, effectively.",
			"The last key ingredient here that will allow",
			"us to create interactions between the bodies that we have are fixtures.",
			"And fixtures, all a fixture is, is this abstract object",
			"that will allow you to attach a shape to a body.",
			"So bodies are shapeless by default. They don't have a shape.",
			"They are just a container that has position velocity, effectively.",
			"But they don't interact with anything else.",
			"And they don't know how to interact with anything else",
			"until you give them a fixture.",
			"And the fixture you will give the body and a shape.",
			"So for example, if you want the bird that we",
			"were looking at earlier, the alien, the round alien, we create a body for it",
			"in our world, which doesn't mean anything yet.",
			"But we say, I'm going to attach a fixture to that alien.",
			"I'm going to give it a circle shape.",
			"And it'll then know whenever it performs any calculations,",
			"that that alien should interact with things as if it were round.",
			"And therefore trigger collisions based on a circular hitbox,",
			"as opposed to a rectangular or polygonal hitbox, as we'll see.",
			"Fixtures, in addition to attaching shapes",
			"to bodies, which will, as said here, influence",
			"how they collide with other bodies, they have density, which we'll see.",
			"So that things with higher density obviously",
			"will fall faster, or not fall faster, but they will influence things",
			"as if they have more weight.",
			"They will push things farther when they collide with them.",
			"They also have friction and they have restitution.",
			"Restitution is bounciness.",
			"So if something, if we had our alien, no restitution when it hits the ground",
			"it'll just fall flat.",
			"But if we give it a higher restitution it",
			"will actually bounce when it hits the ground.",
			"And therefore interact with the world a little bit differently.",
			"So when we want to take a fixture and apply a shape to a body,",
			"we have a few different shapes that we can",
			"apply to it that are given to us by default in love 2D.",
			"So circle shape, rectangle shape, edge shape.",
			"These are just, effectively, how we define how",
			"our bodies interact with other bodies.",
			"How, for example, if it's something that's circular",
			"it should roll when it's moving along the ground.",
			"Or when it hits something the corner obviously of it",
			"won't hit something because it's rounded, as opposed to something",
			"that has a square hit box, it'll affect things in a slightly different way.",
			"And we can define arbitrarily shaped hit boxes, thanks to the polygon shape.",
			"If we want something to be shaped like a pentagon, for example,",
			"and have it roll around and behave like such,",
			"we can just define a polygon via a set of vertices.",
			"And then affix that to a body and it will",
			"behave as if it were pentagon shaped.",
			"And this is how you would instantiate just as we've",
			"seen with love dot physics dot new world and love dot physics dot new body,",
			"love dot physics dot new fixture takes in a body and a shape,",
			"and will apply that shape to the body.",
			"And the world after that will know exactly how to collide with things.",
			"And so the last thing, the last slide we'll",
			"look at here before we start looking at source code",
			"is what the different body types are.",
			"So I alluded to having three different body types before, static, dynamic,",
			"and kinematic.",
			"So a static body will exist in our world but not actually be affected by gravity",
			"or the collision of anything else.",
			"Things can hit it and bounce off of it and do their own thing,",
			"but the static body will never be influenced by something else.",
			"It exists as some sort of permanent structure, almost like the ground.",
			"You don't really affect the ground by moving into it and bouncing into it,",
			"unless you do it with enough force.",
			"But in our Box2D world, a static body cannot be influenced by anything else.",
			"A dynamic body is the opposite.",
			"It has the full simulation of Box2D.",
			"Gravity affects it, things collide into it, it will bounce off of them.",
			"It'll do what you would expect a normal body to do.",
			"If I throw a ball in this room and it hits the wall, it's a dynamic body.",
			"The walls are the static bodies in this case.",
			"And then a kinematic body is a hybrid between the two.",
			"It's something that can move and can rotate and do things,",
			"but it's not influenced by other objects colliding with it.",
			"So, for example, if I have a platform that's just spinning indefinitely,",
			"but it's not being affected by gravity and it doesn't move when I hit it,",
			"that's a kinematic body.",
			"It's still moving and it's semi-static and it influences other things,",
			"but it's not purely static.",
			"It does have a little bit of behavior that it can grant it.",
			"So let's go ahead and look at a few examples",
			"now and see how this actually looks in code.",
			"So I'm going to go into an example, if you're looking in the distro,",
			"there is an example called static.",
			"So we'll take a look here and see what a static body looks like in our scene.",
			"And for all of these examples leading up to Angry Birds,",
			"we're just going to render everything with shapes for simplicity.",
			"But this, as anti-climactic as it is, is a full Box2D world",
			"with just a single static body.",
			"And it's just this square here, colored white.",
			"The static body doesn't move, it doesn't do anything.",
			"Nothing can influence how it moves or behaves.",
			"But it exists in our world as a permanent fixture.",
			"And if we had dynamic bodies and we threw a dynamic body at it,",
			"for example, the dynamic body would bounce off,",
			"the static body would stay there permanently.",
			"So let's go ahead and take a look at what",
			"the source code looks like for that.",
			"So I'm here in main dot Lua of our static file.",
			"And just as we've seen before, we needed to find a world.",
			"So I have a world here on line 45.",
			"Love dot physics dot new world, no x-able gravity,",
			"but we are going to have 300 units of positive gravity on the y-axis, which",
			"is going from top to bottom.",
			"We need a body for our square that's in our game world, our static square.",
			"So we're going to go ahead and define a new body here.",
			"Love dot physics dot new body takes in the world,",
			"recall, because that's how our world's going to have a reference to that body,",
			"doesn't know about it unless we pass it into here, our new body constructor.",
			"And then I'm just going to put it right in the middle of the screen.",
			"So virtual width divided by 2 and virtual height divided by 2.",
			"The difference between Box2D bodies and things",
			"that we've drawn before or seen before is",
			"that everything is defined by its center point, as opposed to its top left.",
			"So I'm able to say virtual width divided by 2",
			"and virtual height divided by 2 here.",
			"But I don't actually need to say virtual width divided by 2 minus whatever",
			"the half of that square is.",
			"By default, the center point is the XY of that object.",
			"And this last string here in the constructor for our new body, static,",
			"tells the constructor that this is going to be a static body specifically,",
			"not a dynamic body and not a kinematic body.",
			"So we have a body and it's static, but it doesn't have a shape,",
			"it doesn't really know how to interact with anything else in our world.",
			"So we're going to give it a--",
			"we're going to create a new shape first.",
			"So love gives us a few functions in the form of new X shape.",
			"We have new rectangle shape, new circle shape, new edge shape,",
			"a few other ones.",
			"We're just going to create a new rectangle of width and height of 10.",
			"So that's what the 10 and 10 are here.",
			"Then we're going to create a new fixture.",
			"We're going to affix the box shape to our body with this function.",
			"And then once we do that, all we have to do is then render a polygon with fill",
			"and then we get the coordinates for our-- or the vertices for our polygon",
			"by saying, body get world points.",
			"So that's a function off of any Box2D body",
			"that will basically get where it is in the world and all of its vertices.",
			"And then you just pass in the shape that you want to get the points for.",
			"And that will end up just exploding here into a set of vertices",
			"that fill up this love dot graphics dot polygon.",
			"And the end result of that is we get a square.",
			"And we specifically use polygon instead of love",
			"dot graphics dot new rectangle because that's what the get",
			"world points function explodes out to.",
			"It doesn't explode out to the number of arguments that would satisfy",
			"love dot graphics dot rectangle.",
			"So not a very exciting example.",
			"But this is basically the foundation of a full Box2D application.",
			"So any questions as to how this works at all?",
			"AUDIENCE: Yeah.",
			"I'm wondering.",
			"How does it determine the center of a abnormal shape?",
			"Not like a polygon, square, rectangle, or circle.",
			"COLTON OGDEN: The center of an abnormal shape.",
			"I'm not entirely sure.",
			"The circle is just--",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Yeah.",
			"I'm not entirely sure about a polygon though.",
			"I haven't looked into that into too much detail.",
			"I can explore that and see.",
			"That's something that I think Box2D is--",
			"the actual library implements that and calculates that.",
			"Probably based upon calculating the area of--",
			"and to repeat for the camera if I didn't repeat already, it's",
			"how does Box2D calculate the center point of something non-symmetrical,",
			"like a polygon?",
			"And best I can understand is that it would do an area calculation off of it",
			"and figure out where all the vertices tend towards, I guess.",
			"But, yeah, that's something that's implemented in the library.",
			"I'm not entirely sure.",
			"I can look into it and see and then I'll post in the Slack.",
			"AUDIENCE: It seems like [INAUDIBLE] you did have that,",
			"it would be difficult to place in a very precise spot.",
			"COLTON OGDEN: Yeah.",
			"If it were-- yeah.",
			"If we did have an odd shape to get it placed in a exact spot.",
			"Yeah, I'm not entirely sure.",
			"I'd have to explore that a little bit.",
			"Interesting idea though.",
			"",
			"But, yeah, that's essentially how we get a Box2D world up and running.",
			"We have a static body.",
			"It's not terribly interesting.",
			"But with one change--",
			"so I have a separate example called dynamic in the source code distro.",
			"But all we need to do to really see the difference",
			"between a static and dynamic body is on line 48, just change static to dynamic,",
			"save it, and then rerun it.",
			"And then we'll immediately see that it's affected by gravity",
			"and it moves downwards as we've told the world that our gravity is",
			"set to positive 300.",
			"And so that behaves how we would expect it to.",
			"Now, there's nothing else in the scene so it's not particularly interesting.",
			"So I've created a another example called ground.",
			"So let's go ahead and look at that.",
			"",
			"So if we want more interesting behavior, what do we need to do in a nutshell?",
			"AUDIENCE: Have more shapes and make a ground.",
			"COLTON OGDEN: Some more shapes and make a ground.",
			"Exactly.",
			"That's a simple way we can start to get instantly",
			"a sense of how powerful Box2D is.",
			"Just introduce more shapes that interact with each other in different ways.",
			"So ground is an example that just introduces a ground into our scene,",
			"so that we can see the box fall down and actually collide with something else.",
			"And Love2D makes this nice and easy.",
			"Excuse me.",
			"They have a actual edge shape that will allow us",
			"to basically form where the ground is.",
			"Anything that collides with this-- it's effectively a line.",
			"But no matter how fast anything moves in are scene,",
			"the body will not move past that line.",
			"So it's a nice, easy way of getting a ground in our scene",
			"without having to implement a polygon that maybe has two vertices going",
			"left to right on the screen.",
			"So that's what we do here.",
			"We have a ground body, which is a static body, recall.",
			"Because the ground shouldn't move.",
			"We're going to change the box into a dynamic body,",
			"but the ground shouldn't move.",
			"The ground should be unaffected by anything.",
			"It's going to be static in our scene.",
			"And it's going to have an edge shape.",
			"So notice here, we take 0, 0 as the XY.",
			"And then a virtual width is zero.",
			"So with shapes, when we define them here,",
			"it's not going to draw the shape at 0, 0, at virtual width in 0.",
			"This is relative to wherever the body is located.",
			"So wherever our body is, this shape will be",
			"drawn with these coordinates, this X and Y and this width and height,",
			"relative to that.",
			"And specifically, relative to the center point of wherever we place a body.",
			"So if this ground is set to 0, 0 at virtual width and zero,",
			"where do we need to place the actual body for it",
			"to render the ground appropriately?",
			"AUDIENCE: The middle bottom.",
			"COLTON OGDEN: Yeah, so we place it towards the middle bottom.",
			"So we actually end up placing the body itself here at virtual height minus 30.",
			"And when we affix this edge shape to the body, we'll end up,",
			"even though it says 0, 0 virtual width zero,",
			"it's relative to wherever the body's XY are.",
			"So it's actually going to be 0 virtual height minus 30,",
			"virtual width zero will be where that edge exists.",
			"And then lastly, just as we did with our box,",
			"we need a ground fixture so that the ground body knows how",
			"it should interact with other things.",
			"So we're going to affix the edge shape, which is just a line,",
			"to our ground body.",
			"And then here we do love dot graphics-- just",
			"as we did with the love dot graphics dot polygon for our box,",
			"we're going to do love dot graphics dot line for our ground body.",
			"And we're going to do the exact same thing, get world points",
			"and get points passing the edge shape here.",
			"And I'm also setting a line width of 2 just",
			"so we can see it a little bit better.",
			"And I'm going to color it red.",
			"Again, I colored the box up here green.",
			"So go ahead take a look at what this looks like.",
			"So I'm going to go into ground.",
			"",
			"And so notice-- and I also added a little bit of restitution",
			"to the-- as I said before, restitution is a quality that a fixture can",
			"have which gives it bounciness.",
			"So rather than just falling flat down onto the ground,",
			"it bounces a little bit as well.",
			"And we can see the interaction, so I'll play it one more time.",
			"It starts in the middle.",
			"And then as soon as it hits the ground body",
			"that we created before, the edge shape, it bounces a couple of times.",
			"But it shows that the box is dynamic, but the ground is static.",
			"Nothing influences the position of the ground.",
			"It gets hard set and will stay there permanently.",
			"So that shows a nice, easy simple demonstration",
			"of an interaction between a static and a dynamic body.",
			"I'm going to go ahead and pull up another example here.",
			"So kinematic, recall, what was the difference between a kinematic",
			"and a static or dynamic body?",
			"AUDIENCE: Kinematic can move but not influence other shapes.",
			"COLTON OGDEN: Correct.",
			"So a kinematic body can move.",
			"You can ascribe it positional velocity or angular velocity, it's rotation.",
			"But when something collides with it, it's not going to be influenced by it.",
			"It's going to influence the body that it collides with.",
			"It's going to affect it in some way, but nothing",
			"colliding with the kinematic body is going",
			"to have an effect on its position or its velocity.",
			"It's something that exists and does something programmed",
			"and will just do that indefinitely, but it",
			"will interact with other dynamic bodies as we have programmed.",
			"And it will not interact with other kinematic bodies either.",
			"They will almost pretend that each other doesn't exist.",
			"If you overlap a static and a kinematic body or kinematic and a kinematic body,",
			"they render on top of each other, but they don't actually",
			"influence each other's position or anything like that.",
			"So I'm going to go ahead and run the kinematic example.",
			"",
			"So here we have a few things going on.",
			"We have the box body that we had before, the dynamic box that",
			"falls from the middle of the screen.",
			"We have the ground on the very bottom to catch it.",
			"But we have three kinematic boxes in the very center that",
			"are spinning that influence the green box",
			"when the green box collides with them.",
			"So as you can see, it tosses it around and then",
			"the green body falls back to the bottom.",
			"And in this example I've taken away its restitution.",
			"So as soon as it hits the ground, it just falls flat.",
			"Just like that.",
			"And so, as you can see, these blue bodies, they're moving.",
			"They have angular velocity indefinitely.",
			"Specifically 360 degrees per second.",
			"And they will stay in that exact position and rotate in that exact way",
			"forever.",
			"But as soon as they interact with a dynamic body,",
			"they actually cause a collision with that dynamic body.",
			"And the collision resolves and this green body",
			"gets tossed around because it's dynamic.",
			"It will basically do whatever it can to interact with the game world",
			"as long as it's interacting with other bodies",
			"and resolving its collision that way.",
			"",
			"And so that's the key example between what the three different bodies are",
			"fundamentally.",
			"And with these three body types you can construct pretty much any scene",
			"that you want to.",
			"And obviously the bodies and the fixtures can get insanely complex.",
			"I mean, we can look back here at this first example.",
			"These structures are a composition of many different types of dynamic bodies",
			"that have been given anchors and joints and all sorts of other things",
			"to make them look as if they're big constructions.",
			"But at the end, they're all just a bunch of little bodies",
			"that are welded together, fixtures that are welded together.",
			"",
			"And these fundamental building blocks are how you construct scenes like this.",
			"Put a bunch of these blocks together, weld them together with joints,",
			"in this case.",
			"We won't cover joints in the context of this lecture.",
			"But if you're wondering how all of these individual things",
			"can be collideable while still constructing these massive scenes",
			"and having physics applied to them, they're",
			"just jointed together using weld joints or other types of joints, pulley joints",
			"depending on what they are.",
			"In this case, there is two circle shapes here, circle fixtures,",
			"that are the wheels on this cart and then",
			"they're welded to the flat constructions here.",
			"Allowing those to be dynamic allows the wheels to roll, and therefore",
			"carry the other load with it.",
			"Same with this bridge.",
			"I forget the exact name of the joint, but it's a chain of fixtures together",
			"that are welded by a specific kind of joint.",
			"And by putting them together in this way,",
			"you get a bridge and all sorts of things that you could think of,",
			"including tanks, which is in the notes here.",
			"This third link, one of them talks about how",
			"to implement a tank by having treads going",
			"around circles and then a massive body.",
			"You could do anything with Box2D, it's an awesome library.",
			"In the context of Angry Birds, really we just",
			"scratched the surface for what is possible here.",
			"",
			"So I'm going to demo now.",
			"Actually, I enjoyed, I think, this demo, this bit of code,",
			"more than I enjoyed the Angry Birds implementation.",
			"And it's a program that I wrote called Ball Pit.",
			"Oh, by the way, before I get into that.",
			"So I'll leave that as a little teaser, I guess.",
			"Looking at kinematic, really quickly.",
			"We're going to look and see that I've created",
			"a table for the kinematic bodies, a table for the fixtures,",
			"and then one shape.",
			"Because you only need one shape actually,",
			"and you can apply one shape to as many bodies",
			"as you want to as long as they all have the same shape.",
			"I just create three kinematic bodies here.",
			"So spacing them out relative to the center with this math here.",
			"They get the string kinematic.",
			"And that's really the key difference.",
			"And then before finishing, I make sure that I",
			"set them to have an angular velocity.",
			"So this is how you spin something.",
			"If you want to set something to spin indefinitely,",
			"just set an angular velocity.",
			"In this case, 360 times degrees to radians.",
			"And that's just a formula written out as a constant, which is just the number--",
			"I forget offhand what exactly the formula is.",
			"But it's up here.",
			"It's degrees to radians 0.01745329, et cetera.",
			"But just like pi, it's a number that you can",
			"use to multiply a number in degrees, and you'll get a number in radians.",
			"And there's the reverse up there as well.",
			"We have to do this because Box2D expects, for any types of rotation,",
			"it expects it in radians.",
			"I prefer thinking in degrees.",
			"So I passed in 360 times degrees to radians.",
			"And so we render down here, just as we did with the box body.",
			"We render the kinematic bodies, polygon fill, kinematic bodies at i",
			"get world points kinematic shape get points.",
			"Nothing terribly different.",
			"The only real key difference is that we've added kinematic as a string",
			"to the constructor for the body.",
			"And we've added some angular velocity.",
			"And recall, this will make it spin indefinitely,",
			"but it will never be influenced-- its angular velocity will never",
			"be influenced, its position will never be influenced",
			"by anything else in our scene.",
			"So now with that out of the way, I'm going to pull up Ball Pit.",
			"",
			"And maybe I'm just a little bit too excited about this.",
			"But I enjoyed this a lot.",
			"So what it is, is this is like a bigger demonstration",
			"of putting all these pieces together.",
			"We have a bunch of circle shapes.",
			"They're all interacting with each other.",
			"They all have physics.",
			"And then I have a larger shape here, this square,",
			"which has a higher density than everything else.",
			"And by pressing Spacebar I can just dive into--",
			"throw it into the ball pit, and it'll cause an interaction",
			"with everything else.",
			"And a bug slash feature that I discovered",
			"about this is that if you press Spacebar over and over again,",
			"it never resets its velocity.",
			"So it just slams down into the ball pit.",
			"So it's just kind of fun, and I think there might actually",
			"be possibly a game idea in here.",
			"But, I mean, well, what are the pieces here?",
			"What's different about this?",
			"",
			"AUDIENCE: They're all dynamic shapes.",
			"COLTON OGDEN: Yeah.",
			"So they're all dynamic shapes.",
			"Except for the ground at the very bottom.",
			"And also, hidden from view are actually two more static shapes",
			"on the left and right.",
			"Because if we didn't have those, all of the balls",
			"would fall to the side out of view.",
			"But yeah, we have the static delimiters for our scene.",
			"But we have a bunch of dynamic bodies, the balls are all dynamic.",
			"And then the square is also dynamic.",
			"And then, like I said before, the only real difference between them",
			"is that obviously the square is a rectangle.",
			"But it also just has a higher density.",
			"And so by giving it a higher density it pushes everything else-- oh,",
			"what happened there?",
			"That was weird.",
			"It pushes-- I think it went to sleep because we didn't do anything",
			"for a while.",
			"But it's able to fall through everything else",
			"because it knows that it's heavier, and that it should push and apply",
			"a larger force to everything else that's around it.",
			"And so by using these fundamental building blocks of what Box2D is,",
			"you can construct a lot of really cool simulations and other fun programs",
			"and actually get interesting game ideas.",
			"I'm inclined to believe that Angry Birds started out as somebody messing around",
			"with the Box2D, or physics engine like this.",
			"And it was inspired by some other game that I should look into a little bit.",
			"But the creators of that game, presumably, found this physics engine",
			"and were like, oh, this is cool.",
			"I'm going to put a tower of blocks here and just throw something at it.",
			"And then they realized, oh, we can make a game out of this.",
			"And so I encourage you, if you're ever curious to just experiment with things",
			"like that.",
			"We could probably turn this into a game.",
			"I don't know.",
			"I like this a lot.",
			"It's a good segue from the abstract, for lack of a better word, examples",
			"that we used earlier, and merges it more into the realm",
			"of how can we make something fun with this?",
			"And so that's how we're going to start moving into the distro today.",
			"So the main topic of today's lecture is Box2D and how we use it to make a game.",
			"Another thing that we should consider is mouse input.",
			"We haven't really used it yet.",
			"And I believe I've mentioned it before, slightly offhand.",
			"But Love2D makes it super easy.",
			"It's just like we do with keyboard input.",
			"We just have a couple of callbacks that are in main dot Lua,",
			"mouse pressed and mouse released.",
			"The difference between these and key pressed and key",
			"released is that they also get an X and a Y. Because usually,",
			"when you click the mouse or release the mouse,",
			"you want to know where it happened because that's",
			"obviously pertinent to what you're doing when you're using a mouse.",
			"So these are fired by Love2D every time you click or release a mouse button.",
			"And they get the X the Y and the key, and you",
			"can do whatever you want with those.",
			"And just as we've done in prior lectures so",
			"that we can use mouse input in other modules besides main dot Lua,",
			"there's a function called love dot mouse dot key pressed and key",
			"released that I implemented in main dot Lua.",
			"You can check those out.",
			"They're very similar to how we did the input tables for the keyboard before.",
			"But they allow us to use this functionality inside",
			"of other functions, other modules, besides main dot Lua.",
			"So let's go ahead and start looking at--",
			"this is where we're going to start looking at the distro for Angry Birds",
			"and how we can take all these pieces and form them into an actual game.",
			"So the first thing we'll do, we'll take a look at just a couple of things",
			"and then we'll take a short break and then we'll",
			"get more into the meat of it.",
			"But let me go ahead and clear out all of these.",
			"",
			"And then we're going to pull up-- so the distro is in Angry 50.",
			"And so main dot Lua is here.",
			"So not a whole lot is different in here.",
			"So we have two states in our game.",
			"So we had a start and a play state, as we saw before.",
			"The start state is like we've done before.",
			"The only difference is in this start state, well, for one,",
			"it's running a Box2D simulation.",
			"And two, we're actually using mouse input.",
			"So actually, let's look at main so you can",
			"see where I've added this, which is different than before.",
			"So we have love dot key pressed, as we've seen before.",
			"But we also have mouse pressed and mouse released.",
			"And then mouse was pressed and mouse was released.",
			"So those are the main differences in main dot Lua this time, as opposed",
			"to last prior lectures, which we only had keyboard input.",
			"And as you can see here, we have input tables for keys pressed and released",
			"on the mouse.",
			"And so we initialized those to empty on every update frame",
			"just like we've done with the keyboard.",
			"And then the input tables get updated in the callback functions",
			"as we've done before.",
			"And so that's basically all that's different about main dot Lua this time.",
			"And that's how we've tied together the new mouse functions that we've just",
			"looked at into our game.",
			"",
			"The states that exist in our game are play state and start state.",
			"So very simple.",
			"Very similar to last week where we looked at Zelda,",
			"we only basically had a start state and a play state.",
			"The start state, we can see here, just to tie together",
			"the last bit of our usage of the mouse.",
			"Love dot mouse dot was pressed 1.",
			"Does anybody know what this 1 is?",
			"AUDIENCE: Is that left click?",
			"COLTON OGDEN: It is left click.",
			"So Love2D assigns integer values to all of your mouse buttons.",
			"And 1 is traditionally the default value for left click.",
			"Some frameworks will use 0.",
			"But Lua, 1 index so start with 1 instead of 0.",
			"The thing about the start state here that's kind of cool and interesting.",
			"So I'm going to go ahead and play it again, the game.",
			"So we start off and right off the gate, just to make things interesting",
			"rather than just have a static screen that says",
			"Anger 50 click to start, we're actually running a Love2D,",
			"a Box2D simulation here.",
			"It's a world with a bunch of squares.",
			"And so what kind of bodies are all of these?",
			"AUDIENCE: [INAUDIBLE].",
			"COLTON OGDEN: They're all dynamic bodies.",
			"And we've encapsulated them all, just as we did before in the ball pit example,",
			"with some invisible static bodies on the left, right, and bottom of the screen.",
			"Because if we didn't have those static bodies",
			"they would just fall all the way down.",
			"And the nice thing is we don't actually have to render anything.",
			"So if you want maybe an invisible barrier for something in your game,",
			"or you want to encapsulate something, something physical,",
			"you don't have to render anything.",
			"You can just have arbitrarily shaped and positioned static bodies.",
			"And that will act as a container.",
			"So that's all we're doing there.",
			"We have a container set for all of our little square alien guys.",
			"And by creating, I think, a hundred of them and just letting them drop,",
			"we have this interesting visual start to our game",
			"with very, very minimal effort.",
			"So we can take a look at this.",
			"So in our start state init, as I said before, we have a world.",
			"We obviously need a member of new world.",
			"Anytime we do any Box2D stuff you have to start",
			"by having a love dot physics dot new world,",
			"else you won't be able to run any simulations.",
			"Going to create a ground, walls, and then a bunch of aliens.",
			"So this here, we can see that we have a table that we're inserting aliens into.",
			"But we have a class called alien.",
			"So anybody want to ballpark what an alien class ultimately",
			"encapsulates or ultimately is?",
			"",
			"AUDIENCE: Probably the way it looks, like the skin.",
			"COLTON OGDEN: It is, yeah, that's definitely a part of it.",
			"So the way it looks, or it's skin.",
			"So it does have a reference to that.",
			"And then more functionally, it also possesses a body and a fixture.",
			"So rather than having a bunch of bodies and fixtures",
			"that are separated out and maybe just in tables",
			"at the surface level of whatever, our level, just wrap them in a class.",
			"And then we just can maintain a reference",
			"to each individual alien's body and fixture that way.",
			"So it's a little bit more encapsulated.",
			"It's a little bit more object oriented, little bit cleaner in my opinion.",
			"The alien class can take square or round as its--",
			"well, it can take anything you want to as its type.",
			"So this will ultimately decide how it's rendered and what shape it gets.",
			"But if it's square, which is the default, so if you just",
			"create an alien with no type, it will get",
			"a love dot physics dot rectangle shape.",
			"So as we saw before, that's just a box.",
			"And then if not, we just default to circle shape.",
			"But you could program it to take in whatever shape you want,",
			"and then just give it that shape.",
			"And you don't really have to do much in terms",
			"of coding how it interacts with anything else in terms of collision, at least.",
			"Because, thankfully, Box2D will know, OK, it's a circle.",
			"It should spin around and interact with things like a circle.",
			"Or it's a rectangle so it should interact with things like it's a box.",
			"Just nice and convenient.",
			"And then we'll just create a fixture here.",
			"This set user data function here is important",
			"because we'll see in the context of how we actually resolve collisions",
			"in a customized way, we'll need user data",
			"to be able to differentiate what gets collided in our world.",
			"But at the moment you can just know that this basically allows us to pass in--",
			"to set arbitrary data onto a fixture.",
			"So we can say, fixture set user data alien, the string alien.",
			"And what that means is that fixture has some customized metadata about it that",
			"says, this is an alien.",
			"It's whatever we want to do with it.",
			"We could give this a table as well.",
			"We could just say, the user data is a table",
			"and then has a bunch of information that we can then use at collision time",
			"to perform different work on it.",
			"But this set user data function is how we",
			"are able to resolve collisions between obstacles and aliens differently than,",
			"say players and aliens, or even the alien and the ground.",
			"Because when we do any Box2D collision, right, the world's",
			"taking care of the collisions for us.",
			"How do we tell the world, OK, when I hit the ground I want to play a sound,",
			"but not do anything.",
			"If I hit this box at this velocity, I want it to destroy it.",
			"If I hit the alien, I want the alien to disappear",
			"and I want to show a victory label.",
			"How do we do all these different things?",
			"We do that with what are called collision callbacks",
			"in the context of Box2D.",
			"And we'll see how that works.",
			"But suffice to say, user data will be very important coming forward.",
			"And then this launched false, actually we don't end up",
			"using this so this is irrelevant.",
			"But it has a render function here, which just takes in the bodies X and Y",
			"and will draw it at the angle that it's at.",
			"So that's an important thing.",
			"When we before, what we were doing is drawing things via shapes.",
			"So love dot graphics dot polygon, love dot graphics dot circle,",
			"love dot graphics dot line.",
			"But if we want to draw a sprite instead, we",
			"need to draw it at the right position, first of all, right?",
			"And then things also rotate in Box2D.",
			"So we need to draw it at the right angle.",
			"So what we do is we can actually query the body for its X.",
			"We can query the body for its Y. And we can also query the body for its angle.",
			"And then we can draw the texture and the quad",
			"that we want to using those XY and the angle,",
			"and that will have the effect of drawing a sprite in the world that",
			"mirrors what's going on in Box2D, rather than just a simple shape.",
			"So that's as simple as it is for drawing a sprite instead of a shape.",
			"You can see here, the 17.5 17.5.",
			"Does anybody know what that's for?",
			"AUDIENCE: Not sure.",
			"COLTON OGDEN: So 17.5 17.5 at the end is half of the width",
			"and half of the height of the aliens.",
			"So aliens are 35 by 35 in this game.",
			"We pass those in.",
			"This is the center of origin.",
			"So when we rotate something by center of origin,",
			"it basically describes where the rotation is going to take place.",
			"So if it's rotated about the top left and we rotate something,",
			"it's going to have the effect of the sprite going around",
			"in a circle in sort of an odd way.",
			"If we rotate the sprite based on the center of origin of the actual sprite",
			"itself, that will have the effect of rotating the sprite on its center.",
			"So you can set that origin wherever you want to",
			"and it'll perform a 360 degree rotation about that point.",
			"And we're setting that point to half--",
			"to basically the middle of where we're drawing the sprite.",
			"So that will have the effect of when we give it this angle here,",
			"self dot body to get angle, the rotation will take place in place.",
			"It won't take place-- it won't be some sort of weird about the top left corner",
			"rotation, which is not what we want.",
			"So when you see center of origin being modified like that,",
			"you can assume that it's because we have an offset",
			"and we're trying to find the center of where we're drawing",
			"and rotate about that to do an in place rotation.",
			"But not necessarily, you could also draw something.",
			"You could also, maybe you want something some sort of magical ball of energy",
			"to rotate about a rod or something.",
			"And so you want it to rotate around a different center,",
			"or whatever you want arbitrarily.",
			"But typically, at least mostly that I've seen,",
			"this is useful for making sure that your rotations, your in place rotations,",
			"are accurately rendered.",
			"So any questions about how the alien class works?",
			"",
			"All right.",
			"So that's the alien class.",
			"That's the basically the fundamental building block of our game.",
			"The other part is the obstacle.",
			"We have obstacles and we have aliens.",
			"The obstacles and aliens are actually very similar.",
			"So what's the difference between--",
			"I mean, ultimately, how are they similar?",
			"",
			"AUDIENCE: They're both dynamic [INAUDIBLE]..",
			"COLTON OGDEN: They're both dynamic bodies, yeah.",
			"Really, the only thing that's different about a obstacle and an alien",
			"is what we do with them in our scene and how they're rendered.",
			"But they function very similarly.",
			"They're just dynamic bodies that we give a shape to",
			"and we render them with that shape.",
			"",
			"In this case, the obstacle constructor, we've",
			"decided to design it such that it could take a shape horizontal or vertical,",
			"which is similar to the type that we saw before with the alien,",
			"where it could be square or circular.",
			"In this case, if we look back at our sprite sheet back here,",
			"we can see there's a ton of different shapes.",
			"But the only two shapes that we're going to use in the context of this game,",
			"just for this demonstration, are the horizontal, clean wooden shape here",
			"and the vertical one that's right here.",
			"And so in order to find those out I had to open up",
			"basically this sprite in my sprite editor,",
			"figure out where the XY width and height were, and then create",
			"a quad manually off of that.",
			"And then I edited the util dot Lua-- or not util dot Lua,",
			"the dependencies dot Lua here.",
			"Normally we just create gframes and then we use generate quads.",
			"And you can do that like with the aliens and with the tiles, the tiles",
			"being this sprite sheet that--",
			"this one right here.",
			"These are 35 by 35.",
			"These are 35 by 35.",
			"These are not 35 by 35.",
			"These are a bunch of different shapes and sizes.",
			"So I went through and gframes wood is for manually created quads here.",
			"And then there's four because I also added the semi broken shapes as well.",
			"But we don't actually use those.",
			"But you could decide to turn these into these on collision,",
			"perhaps maybe if the velocity isn't strong enough to break it necessarily,",
			"but you want to have some sort of feedback that you collided with it.",
			"You can just set maybe the frame to 1 or 2 on collision for that object,",
			"instead of 2 and render it appropriately.",
			"But if you're dealing with a sprite sheet",
			"and that sprite sheet has odd distribution of its sprites,",
			"sometimes you have to figure out where the offsets are manually",
			"and do it that way.",
			"The ideal is that you don't have to and that you can do it programmatically.",
			"But it really depends on the game, what your domain is",
			"and what objects you're interacting with in the scene.",
			"Any questions on the why or how as to that?",
			"",
			"Cool.",
			"So back to the obstacle.",
			"So they're horizontal or vertical, and what that does",
			"is it sets the frame to 2 or 4.",
			"And the 2 or 4 being in gframes that would, the 4 quads that I had a hand,",
			"figure out the coordinates for.",
			"",
			"And really, it's not a whole lot different at that point.",
			"If it's a horizontal or a vertical shape,",
			"then we need to set its width and height appropriately.",
			"Because it's going to have a different width and a different height.",
			"If it's vertical, obviously the height is higher than the width.",
			"And if it's horizontal, the opposite is true.",
			"But they're both a rectangle shape.",
			"So you can pass in the width and the height",
			"after you calculate that, and give it the right shape,",
			"and then ascribe it a fixture.",
			"And then set user data in this case, we set user data to obstacle.",
			"So now that obstacle, the fixture specifically,",
			"knows that it's an obstacle, as opposed to being an alien, as opposed",
			"to being anything else, as opposed to being the ground.",
			"And so when we explore in a few minutes what the custom collision, world",
			"collision callbacks, that we can actually",
			"define all this interesting collision behavior for,",
			"this user data is going to be relevant.",
			"And then we render it just like we render the alien as before.",
			"So any questions on obstacles and aliens, how they differ,",
			"how they're the same?",
			"",
			"Cool.",
			"All right.",
			"Let's take a five minute now.",
			"When we get back, we're going to actually look at the play state.",
			"We're going to look at what makes a level.",
			"And we're going to actually look at how we can customize the world",
			"to resolve collisions in ways that are relevant to our game behavior.",
			"As in, how to make things break when we collide with them,",
			"how to make the victory screen pop up when we've destroyed the bird,",
			"so on and so forth.",
			"",
			"All right.",
			"Welcome back.",
			"So before we took a break, we were talking",
			"about the aliens and obstacles that are in our game",
			"world that interact with each other.",
			"They are the backbone of what makes our games slash Angry Birds work.",
			"You throw aliens into the obstacles, obstacles break,",
			"the bad pigs slash aliens die and then you score points.",
			"But we actually have to model these interactions",
			"and we have to tell our game, our world, what",
			"to do when these collisions happen in order for things more interesting",
			"than just things bouncing off each other to work.",
			"That's the default behavior.",
			"Box2D's goal, by default, is when two things overlap,",
			"assuming that they're dynamic or at least one of them is dynamic,",
			"is to push the dynamic bodies away until they no longer overlap",
			"via either position or rotation.",
			"But that's not the gist or the goal of our game.",
			"Because what we want to have happen is different things happen",
			"and certain things to disappear and to break and all sorts of other things",
			"to happen when different kinds of objects",
			"interact with different kinds of objects at differing speeds.",
			"So in order to do this, we need to define collision callbacks",
			"for our world.",
			"So a callback, recall, is a function that gets",
			"called back when something happens.",
			"It's just something that will get called at a specific time or later on.",
			"And we can define these callbacks for our world",
			"such that when two things collide with each other,",
			"it will execute this call back and then perform the corresponding logic",
			"that we've defined therein.",
			"And with every collision in Box2D, there are four callbacks that take place.",
			"There's begin contact, so when two things begin to overlap",
			"or begin to contact one another.",
			"End contact, so once that ends, once two objects",
			"are pushed away from each other.",
			"Presolved, which happens right before the collision actually gets",
			"solved in Box2D, meaning that the things get pushed away from each other.",
			"And then postsolved, meaning right after they get pushed away from each other.",
			"And the postsolved in particular is interesting",
			"because it gets the information about how the collision needed to resolve.",
			"So how much velocity or rotation needed to happen within that interaction.",
			"And we will not be using end contact, presolve, or postsolve.",
			"We will only be using begin contact because, really, that's",
			"all we need in order to model the behavior that we're looking for.",
			"Because anything that happens in our game",
			"we can just figure it out as soon as two objects touch each other.",
			"",
			"And these are things, if you're interested in a tutorial that",
			"goes over these in perhaps a little bit more detail,",
			"there's a link here in the slides.",
			"But I'll show you how to actually implement these callbacks yourself.",
			"You do this via a function called world set callbacks,",
			"in this case, F1, F2, F3, F4.",
			"And recall, because Lua is a dynamic language where functions",
			"are first class objects, you can pass in functions as arguments",
			"to other functions.",
			"And that's what we're doing here.",
			"So this is assuming that we have four functions",
			"we've defined called begin contact, end contact. presolve, or postsolve.",
			"Their actual names don't matter at all.",
			"These are just the de facto names for them.",
			"What matters is that you have the logic there and you pass in function objects",
			"that perform something.",
			"And you can pass in all empty functions and Box2D will still behave as normal.",
			"These are only for when you want more complicated behavior out of your game",
			"than just things bouncing off of each other",
			"and moving relative to one another.",
			"So does that make sense?",
			"So we'll see how this actually works.",
			"We're going to go ahead and open up level dot Lua.",
			"So level dot Lua is a container class that",
			"basically has our game level in it, including",
			"the world and all the entities.",
			"And we update it and are able to model, effectively,",
			"like a level from Angry Birds.",
			"That's really what it is.",
			"It has a world.",
			"So the level has its own world with 300 positive Y gravity, as we saw before.",
			"It has a table called destroyed bodies.",
			"And we'll see that in a second.",
			"And then here we have four functions.",
			"Starting on line 22, we have begin contact, which is a long function.",
			"And then we have end contact, presolve, and postsolve.",
			"Those are the four callback functions that I",
			"alluded to just a few seconds ago.",
			"They take in slightly different signatures.",
			"The first three take A, B, and collision.",
			"And then the last one takes in A, B, collision, and then a normal impulse",
			"and a tangent impulse, which are the forces that it needed to apply in order",
			"to push apart the two objects.",
			"Like I said, we won't be using these three functions.",
			"But there might be a situation where you need to use those functions.",
			"Maybe you want end contact because, in your game, two objects attached",
			"to one another, when they collide maybe they're magnetic or something,",
			"and then once they pull apart maybe you want a particle effect",
			"or something to show that they've separated or something.",
			"And then presolve and postsolve.",
			"Presolve, offhand I can't think of a use case,",
			"but postsolve could be useful for, depending on your game,",
			"whether you need to just figure out maybe the amount of force",
			"that they needed to separate.",
			"Maybe you multiply that by some amount and cause some sort of dramatic effect.",
			"Those are ultimately dependent on the domain of your game.",
			"The important function that we'll be using today",
			"is the first one, begin contact.",
			"And notice, that we've defined these four functions,",
			"even if these three are just empty.",
			"But we pass in, as I said before, the set callbacks",
			"function takes in those four functions.",
			"And notice another interesting thing, because of Lua's dynamic nature, line",
			"11 you can see that we have level init, which",
			"is the constructor for our level class.",
			"Within the constructor we are defining more functions.",
			"You can define functions as many layers deep as you want to.",
			"And you can even return functions from functions, which",
			"are called higher order functions.",
			"Really do whatever you want to.",
			"In this case we're just defining the collision callbacks here inside",
			"of our init.",
			"But you could put the most anywhere you want to.",
			"You can have them outside of the class, you can have them wherever you want.",
			"You can have them be global functions in your main dot Lua,",
			"which I don't know how I feel about that.",
			"But you can do whatever you want to as long as the functions exist",
			"and you can reference their symbols, you can pass them",
			"into self dot world set callbacks.",
			"And now, whenever a collision happens in the world period,",
			"it's going to call all four of those functions",
			"at each stage of each collision.",
			"So you could see that potentially getting a little bit",
			"hairy if you were to scale high enough with all of your logic.",
			"If you had a million lines of code in each of these",
			"and its executing million lines of code per collision,",
			"you could run into trouble.",
			"But, fortunately, we're not going anywhere near that.",
			"The gist of begin contact, so it takes in an A and a B and a collision.",
			"We don't end up using the collision itself, we just use the A and the B",
			"because that's all we need for our game world.",
			"The A and the B are what?",
			"Do we know what the A and the B are?",
			"AUDIENCE: Probably the two objects [INAUDIBLE]..",
			"COLTON OGDEN: The two objects.",
			"Do you know whether it's a body or a fixture?",
			"",
			"AUDIENCE: It would the fixture.",
			"COLTON OGDEN: It would be the fixture.",
			"The fixtures collide with each other, not the bodies.",
			"So when you have a body, recall that the fixture attaches the shape to a body.",
			"The body is just a position and velocity container for a bunch of fixtures,",
			"the body is.",
			"Each individual fixture collides with other things,",
			"other fixtures in your game world.",
			"And so, recall that before we had fixture",
			"set user data because that's what we ended up",
			"needing to have data on when we do the collisions.",
			"We check to see via get user data what something is",
			"or what metadata we've given to that fixture.",
			"And then we can then separate different classes of objects this way.",
			"We can say, oh, this object was an alien, or this object was an obstacle,",
			"or this object was the ground.",
			"And then we can say, oh, did we collide with an alien?",
			"Was the collision between an alien and the ground?",
			"If it was, OK, let's play a bounce sound effect.",
			"And if it was between an alien and the other alien, the player",
			"and the other alien, and the velocity was fast enough,",
			"OK, the alien should die.",
			"Right?",
			"We can do arbitrary things.",
			"And so the way that I've programmed it here such that we",
			"can see what two things interacted with each other,",
			"and this is a very simple use of user data.",
			"All we we're doing in this code base is just assigning strings to fixtures,",
			"but you could assign tables to fixtures with arbitrary amounts of data",
			"and do all sorts of things.",
			"In this case, we're only using strings.",
			"So I create a table, an empty table, and then I just",
			"assign at table, at that string, true.",
			"And then I can just query that table.",
			"Do I have a key player and a key alien?",
			"Do I have a key obstacle and a key obstacle?",
			"This is how you can figure out what your two objects were.",
			"Because A could be a player and B can be an obstacle.",
			"A can be an obstacle and B could be the player.",
			"So you have to take both of that into consideration.",
			"So it allows us to do if types obstacle and types player, so",
			"a collision between the player and an obstacle, if it's fast enough, then we",
			"can destroy the obstacle.",
			"This is what we do here.",
			"So I take the absolute value of the velocity on the X and Y.",
			"So I do vel X vel Y gets the body's linear velocity.",
			"So linear velocity is just where it's moving in the world.",
			"And it returns two values because velocity has an X and Y component.",
			"And then we sum it here by taking its absolute value of both parts",
			"and adding it together.",
			"So if it's moving fast on the x-axis, but not fast on the y-axis,",
			"or if it's not moving fast on either, or if it's moving fast on both,",
			"we have a sense, in general, what's the average velocity of our object.",
			"If it's moving fast on any of the axes, we",
			"can assume that that's sufficient force to cause an object",
			"to get destroyed, right?",
			"So we do if the velocity is greater than 20, just an arbitrary value",
			"that I came up with that seemed appropriate,",
			"then we're going to do this.",
			"Table dot insert self dot destroyed bodies, which we saw earlier.",
			"And then the obstacles body.",
			"Now, why are we inserting that value here as",
			"opposed to, maybe just destroying it inside this function?",
			"",
			"AUDIENCE: Destroying the fixture.",
			"COLTON OGDEN: Destroying the body.",
			"The fixture, yeah, in this case.",
			"AUDIENCE: I mean the fixture, sorry.",
			"Because you're still referencing it later in the code.",
			"COLTON OGDEN: You're still referencing later in the code.",
			"Box2D maintains a reference to all of the bodies, all",
			"of the fixtures in your world, regardless of",
			"whether you've deleted them or not.",
			"But if you delete them while it's in the middle of a,",
			"like checking for collision, it'll try to do another collision",
			"with that destroyed body and you'll get a crash or a stack overflow error.",
			"I found I experienced both of those.",
			"You don't want to ever delete or destroy anything while inside a collision",
			"callback for your world.",
			"It will cause horrible things to happen.",
			"So what we do is we maintain a reference to everything that we're",
			"going to destroy by just inserting it.",
			"So if we do table dot insert the body of whatever we want into destroyed bodies,",
			"we can then loop over that after the world updates.",
			"And then just destroy them one by one outside of the update function.",
			"And the reason that we are passing in the body and not the fixture",
			"is when we destroy a body, it destroys all the fixtures",
			"associated with that body as well.",
			"So we're just destroying the top level container here.",
			"In this case, it doesn't matter too much whether we destroy a fixture or a body",
			"because it's a one to one relationship.",
			"But if you had, let's say, a body that has five fixtures on it.",
			"And if that entire thing collides with something else",
			"and you want to destroy that entire thing,",
			"you want to destroy the body, not an individual fixture.",
			"Because when you destroy the body, it destroys all the fixtures, not just",
			"the one fixture.",
			"So that's we're deleting the body, adding the body to destroyed bodies,",
			"and then later performing a delete off of that.",
			"The function is destroy here.",
			"So on line 157--",
			"well, 155 to 159, this is where we actually",
			"iterate over everything that we wanted to flag,",
			"or that we've flagged as destroyed, and we destroy it.",
			"So if not body is destroyed, destroy it.",
			"And then once we destroy it, we're going to go down here and end up",
			"actually removing the obstacle and the alien class",
			"from our list of aliens and obstacles.",
			"Because that maintains a reference to what we're drawing",
			"and we want to also delete that.",
			"So not only do we want to delete the object from the world,",
			"we want to delete the objects that we've created",
			"that are a wrapper for the bodies and fixtures",
			"and also the drawing of our aliens so it no longer gets drawn to the scene,",
			"basically.",
			"",
			"So yeah, don't ever delete a body or a fixture inside your callbacks.",
			"Always flag them and delete them afterwards.",
			"Basically, don't delete in the middle of a world update function",
			"call, which we see here.",
			"Notice that this takes place, 152, were doing self world update.",
			"And then on 155 to 159, we've populated destroyed bodies via the collision",
			"callback that we defined up above.",
			"So in here, this is where we can actually destroy everything.",
			"This is outside of the update function, here, the world update function.",
			"We don't need to worry about stack overflow or a segfault, which",
			"we get by deleting something while it's in the middle",
			"of processing its collisions.",
			"So unfortunate bug.",
			"If you ever find yourself running into stack overflows or segfaults",
			"in your collision callbacks, make sure you're not deleting anything.",
			"But we can see here, it's very similar, the behavior",
			"we defined between obstacles and the player, between obstacles and aliens,",
			"and between the player and alien.",
			"Ultimately, it's check to see whether the average of its velocity",
			"is greater than a certain number, in this case, 20.",
			"And if it is, flag it as destroyed.",
			"So if the player hits the alien, destroy it.",
			"If a obstacle hits the alien, destroy it.",
			"And it's similar to how it works in Angry Birds.",
			"When you throw something at a structure in Angry Birds and a piece of debris",
			"falls off of it and hits the pig, usually kills the pig too.",
			"And if your bird hits the pig, that usually kills the pig.",
			"But if you're not moving fast enough or if a piece of debris",
			"isn't moving fast enough, it'll just nudge the pig,",
			"it won't actually kill the pig.",
			"So that's why we're taking all of this into consideration.",
			"We're not just doing a blind delete off of the body's in our code,",
			"we're actually making sure, is it also moving fast enough, i.e.",
			"does it have enough force?",
			"And if it does, then perform the code, then perform the deletion or flag it",
			"as being deleted.",
			"And so once again, that's why user data is important.",
			"Because that's how we're able to-- because notice in the callback",
			"we just get an A and a B. And those are always going to be fixtures.",
			"Fixtures, in order for it to know what kind of a fixture",
			"it is, whether it belongs to a player or an alien,",
			"we need to give it some information.",
			"So the set user data flags the fixtures as being of a specific type.",
			"And then we can fetch it here with get user data",
			"and then actually perform the relevant game logic.",
			"Any questions as to how this works?",
			"AUDIENCE: Are you checking for if two obstacles knock into each other?",
			"COLTON OGDEN: Am I checking with two obstacles collide with each other?",
			"I might not be.",
			"In that case-- you should.",
			"In that case, since we're not, they'll just bump into each other.",
			"But, yeah, if we wanted two wooden obstacles",
			"to destroy each other if they hit fast enough,",
			"you would just do the same thing here.",
			"If types obstacle, I guess.",
			"But in this case, because they're both the same key,",
			"you would have to do if types--",
			"let's see how we're doing it again.",
			"So types obstacles is true, types obstacles is true.",
			"You would say if types obstacle and not types alien, not types player, not--",
			"there's a cleaner way to do it.",
			"AUDIENCE: Like a series of [INAUDIBLE] statements.",
			"COLTON OGDEN: Yeah.",
			"AUDIENCE: [INAUDIBLE] statements.",
			"COLTON OGDEN: Yeah.",
			"That's true.",
			"Yeah, there's a lot of ways.",
			"And if I were to re-engineer this, I would also abstract out this code",
			"and make it a function.",
			"Because it's pretty much the same code between all three of these.",
			"But just to illustrate and just for simplicity",
			"because it's pretty similar interactions,",
			"didn't really put too much engineering forethought into it.",
			"Definitely if you expand upon it, I would recommend doing that.",
			"But that's the gist of making our world behave beyond just resolving",
			"collisions and pushing obstacles away from each other, which",
			"is the default behavior.",
			"So we set the callbacks.",
			"We're good.",
			"Now things, when we interact with each other, they'll behave differently,",
			"they'll trigger different behavior.",
			"We have this thing called a launch marker, an alien launch marker.",
			"Anybody know what that might be?",
			"",
			"AUDIENCE: Is that the little dots that show the trajectory?",
			"COLTON OGDEN: Yeah, so it's the dots that show the trajectory.",
			"It's one, the alien being rendered on the left side of the screen",
			"without any physics applied to it, that's click and dragable.",
			"And it also renders a trajectory.",
			"And when you release the mouse, it launches an actual Box2D alien",
			"traveling in the direction that that trajectory foretells.",
			"If we look at alien launch marker here, it basically maintains a reference to",
			"whether we're aiming or not.",
			"So it's got a couple of states.",
			"It's got a launch state and an aiming state.",
			"An alien that we'll have a reference to eventually, which",
			"will spawn and will give it an impulse.",
			"So an impulse is effectively setting its velocity immediately to some value,",
			"as opposed to something over time.",
			"We can apply force to an object, which would",
			"be like you driving your car up against something",
			"and then gradually accelerating, that's applying force.",
			"And we can also apply impulse by going full speed with our car",
			"and hitting an object, and that will have",
			"the effect of applying an impulse at a certain velocity.",
			"When we drag our alien and then we release it,",
			"we want to apply an impulse in the opposite direction of where we're",
			"dragging based on a certain amount.",
			"I scaled it by 10, but you can have it be arbitrary.",
			"And then the trajectory models where it's going.",
			"And the trajectory is calculated via these lines here.",
			"So from line 90 to 104.",
			"There is a formula for, in that Box2D set",
			"of tutorials, that actually shows you how",
			"to calculate an estimated trajectory given a starting impulse and a starting",
			"position.",
			"Which is this formula here.",
			"It's semi-complicated.",
			"The article goes into detail as to how it works,",
			"but it effectively calculates 1/60 of a second,",
			"assuming that we're running our simulation at 1/60 of a second,",
			"it will, over 90 iterations here, 1 to 90,",
			"calculate each individual step of that simulation.",
			"And then I only render every 5 here.",
			"So if i is mod 5 s 0, then I'll actually end up",
			"drawing a circle at trajectory X, trajectory",
			"Y. Trajectory X and Y being here.",
			"Shifted X, shifted Y being the starting location.",
			"And then we multiply i by 1/60 of a second, which will give us",
			"the scalar for this impulse here.",
			"And then with gravity we have to do this i squared plus",
			"i times 1/2 times the gravity on the y-axis times 1/60 squared.",
			"The article goes into a little bit more detail as to how it works.",
			"But that's it converted into source code.",
			"But it's effectively a gravity simulation",
			"and a velocity simulation over time.",
			"And by rendering it based on 90 iterations, which",
			"is one and a half seconds, at 1/60 of a second",
			"we can forecast where exactly we're going.",
			"And then when we apply this impulse, X and Y, the ball will actually travel,",
			"the alien will actually travel in that direction at that exact trajectory.",
			"",
			"That's the complicated part of the launch marker.",
			"The other part is that it has a couple of states, like I said before.",
			"So when we click and we're not launched, it should go into aiming mode.",
			"And so if we're aiming then we're going to set a rotation to--",
			"actually, rotation is not relevant because this was before I ended up",
			"using the predictive trajectory method.",
			"The shift at X and Y though, those are relevant because that's the starting",
			"location for your trajectory.",
			"That's wherever your mouse is.",
			"And we clamp it so that it doesn't go past a certain limit",
			"on the left or the right, so that it stays within a box area.",
			"But this will be whenever you let go of the mouse, that",
			"will be where we spawn the Box2D alien and apply",
			"an impulse in a negative direction relative to where we move the mouse.",
			"So if we move the mouse to the left and down,",
			"it's going to negate that with an impulse going up",
			"and to the right, if that makes sense.",
			"And that's what's shown by the trajectory.",
			"",
			"And then, aside from that, it renders different things",
			"depending on whether or not--",
			"what state we're in.",
			"So if we haven't launched, it will render just the alien.",
			"If we're in aiming mode then it should actually render and calculate",
			"the trajectory.",
			"Otherwise, it would just render the alien.",
			"And so once we release the mouse, so was released 1 and were aiming,",
			"launched is true, spawn an alien.",
			"So we create a new alien with self world, it's round.",
			"We started at shifted X and shifted Y. We",
			"set its linear velocity to the same values that we calculated before.",
			"So it's base X minus shifted X times 10.",
			"So the times 10 is a scalar amount.",
			"",
			"And then the base X is where we've moved it, effectively.",
			"Or, no.",
			"Base X is where it starts and shifted X is where we've moved it.",
			"And so by subtracting shifted from the base,",
			"we get the negative direction that we want to effect the impulse.",
			"And then the impulse is set here with linear velocity.",
			"And then we also set it to have a restitution of 0.4.",
			"Recall, restitution is bounciness.",
			"So our alien bounces a little bit when it hits the ground.",
			"And then anybody know what angular damping might be?",
			"Any guesses?",
			"Angular damping is when it rotates, basically, friction on its rotation.",
			"So that when it rotates on the ground, it doesn't roll indefinitely.",
			"If we don't set that, it'll just roll forever and ever and ever and ever.",
			"Which is not what we want.",
			"We want it to stop at a certain point because once it stops,",
			"we know, OK, now we can get the next alien ready to launch.",
			"",
			"And that's the gist behind the launch marker.",
			"How we render trajectory.",
			"For the math on that, a little bit more in detail, I would explore that URL.",
			"It goes into it into pretty good detail.",
			"I use that as a reference for creating this bit of code here.",
			"But yeah, effectively, is it's just rendering",
			"a bunch of circles with that trajectory and calculating it",
			"over 90 ticks, 90 frame iterations.",
			"Back to the level.",
			"Sorry, any questions overall as to how the launch marker works?",
			"AUDIENCE: No.",
			"COLTON OGDEN: Cool.",
			"All right.",
			"So then we have an alien's table, an obstacles table,",
			"edge shape for the ground.",
			"And then we just create an alien to destroy.",
			"Spawn a few obstacles here.",
			"So in this case, two vertical obstacles and a horizontal one.",
			"Positioned such that the horizontal one is over the vertical ones",
			"and they're spaced apart such that the aliens are in the middle of them.",
			"Then the ground here, we give the ground some friction, 0.5.",
			"And that's pretty much it for setting up our level.",
			"So if we wanted to, after this point, we have the foundation",
			"necessary to really spawn arbitrary levels with admittedly simple obstacles",
			"at this point.",
			"But we could set--",
			"because all we're doing here is just simple insertions to our aliens",
			"and obstacles table, we could create pretty much any level just by, maybe",
			"in data, specifying level could be like a table",
			"and then aliens could be another table.",
			"And then maybe all it is just a like X equals some value,",
			"and then Y equals some value.",
			"And then obstacles is the same thing.",
			"And then all we do is just we iterate over this level definition",
			"and we just say, new alien for every table here.",
			"And then new obstacle for every table in here.",
			"And then now your levels are data driven.",
			"It's easy just to make levels.",
			"You don't have to code, really, much.",
			"And you can put this in a separate file.",
			"Be like, levels dot Lua, and then just load individual levels at a time.",
			"Level 1 equals-- levels would be the top level container.",
			"And then you would have 1 equals all of this, and then 2",
			"equals another one, 3 equals another one.",
			"And then you're not really programming as much",
			"as you are just laying things out in data.",
			"Super nice and concise.",
			"That's a nice thing about a language like Lua, is that you can,",
			"and it's the same thing in JavaScript with JSON,",
			"you can just define things as data and then write",
			"a script to go over it and construct your actual relevant data structures",
			"that way--",
			"in your code that way.",
			"When you have the foundation like we have now",
			"where you can think in terms of obstacles and aliens,",
			"you can construct levels like so.",
			"And obviously you could go a lot more complicated with this.",
			"All we're doing is having very simple almost boring static obstacles.",
			"They're not static in a technical sense because they're dynamic objects,",
			"but all they really do is just stand there and then fall over.",
			"But if you wanted a pulley system or maybe",
			"something that's shaped in a giant head or something,",
			"you can create arbitrarily complex objects that way using joints.",
			"And if you're curious, I recommend to look into the documentation for Love2D",
			"a little bit more.",
			"Especially their weld joints are what you would use",
			"to combine pieces in arbitrary shapes.",
			"But you could easily take this to the next level",
			"and start to create in that same level definition, arbitrarily shaped,",
			"welded together obstacles.",
			"But that would be, I think, a next step if you're looking",
			"to take this beyond just one level.",
			"I would say, think in terms of, how can I get my game world represented",
			"in a very simple data like way?",
			"Because not only does it make it easier for you to create content,",
			"it allows you to shift that burden to somebody else",
			"and allow you to give the task of creating levels",
			"less to a programmer and maybe more to somebody",
			"who has just a design background who isn't as comfortable writing code.",
			"And allow you to create the engine that constructs the game world based off",
			"of this data.",
			"Any questions as to how we've set things up here?",
			"OK.",
			"So we have the ground, we have a background.",
			"A background is just a simple class that renders a static image",
			"that you can scroll the image with left or right,",
			"but we don't end up using it much.",
			"It's relevant in Angry Birds because in Angry Birds they have a camera,",
			"and the camera pans left to right depending on how far away",
			"the fortress is from your sling shot.",
			"So that's in there if you want to experiment with it at all,",
			"and experiment with a moving camera.",
			"Maybe use timer dot tween to tween the camera",
			"or just to have it track the alien if you want larger worlds.",
			"But we don't end up using it in the distro as much.",
			"Our update function is simple.",
			"We update the launch marker, update the world,",
			"and then we process all the bodies that we flagged as being destroyed,",
			"which we've already seen.",
			"We reset destroyed bodies to an empty table",
			"because we've processed all of them.",
			"We actually remove from our level the obstacle objects",
			"so that they're no longer rendered, and we no longer",
			"try to reference the bodies that are destroyed.",
			"And then notice here too, when we destroy the obstacle,",
			"we're playing a sound effect inside this bit of code.",
			"So we can just do g sounds.",
			"I put five wooden sound effects in there just for variability.",
			"It'll pick a random one.",
			"And then using to string at the number, just",
			"create break one, two, three, four, five here.",
			"And then stop and play it.",
			"Same thing here.",
			"I have a sound called kill for when we destroy an alien.",
			"So when we flag an alien as destroyed and we remove it from the scene,",
			"we should also call that sound effect.",
			"And then if the alien stops moving in our scene, the player,",
			"we can get a reference to it here, self dot launch marker dot alien,",
			"as opposed to any aliens in our scene.",
			"When it stops moving, so we get the average of its velocity",
			"and if it's less than 1.5, so not perfectly",
			"still, because it's tedious to wait that long, but almost still,",
			"we destroy the alien and then we create a new launch marker.",
			"We destroy the alien so that the world doesn't keep a reference to it",
			"and then we just create a brand new marker,",
			"which has the effect of instantiating a new alien there when we relaunch.",
			"And then here, if there are no more aliens in our scene,",
			"if we've destroyed all of the aliens, in this case there's only ever one,",
			"but there could easily, with a little more work,",
			"be a few more aliens in the scene, if it's set to zero,",
			"then go back to the start.",
			"Which we saw before when we finally killed the alien.",
			"And then all we're doing here is deferring",
			"rendering to the individual objects we want to render, the launch marker,",
			"the alien, the obstacle.",
			"We render ground tiles.",
			"So recall, from our ground example before we were just using a line,",
			"an edge shape to represent the ground.",
			"But if we look at our game, it's a little hard to see because I'm in 720,",
			"but there's actually a ground tile here at the very bottom, a bunch of them.",
			"And even though we have all of those tiles,",
			"all we're doing to detect collision is just an edge shape.",
			"So what we're doing is just beyond having the edge shape in our scene,",
			"we draw that tile, which is frame 12 in our sprite sheet",
			"from negative virtual width to virtual times 2.",
			"So three screen widths total.",
			"And then we just do it in increments of 35 pixels",
			"because that's how wide the tile is.",
			"And that'll just create a bunch of the same tile",
			"at the very bottom of our screen.",
			"",
			"So just a graphical thing, not really necessarily functional.",
			"We have the edge shape already in our scene, but just to make the ground",
			"look a little larger than one pixel tall.",
			"And then if we haven't launched anything,",
			"we should display some instructions here.",
			"And then if we're at no aliens left, then we",
			"should display the victory screen.",
			"And the victory thing will last for just a little bit of time,",
			"because even though self dot aliens is zero, this bit of code",
			"doesn't register until after the velocity of our moving alien",
			"slows down sufficiently.",
			"So this will get called when we're just about to finally stop moving,",
			"and then we check to see, oh, OK, do we indeed have no aliens left?",
			"If not, time to go back to the start.",
			"We've completed a level.",
			"And then you obviously would just change this",
			"to go to be next level if you ended up implementing more",
			"levels in your game besides just one.",
			"",
			"Beyond that, that's pretty much all of the code that's in this example.",
			"It's fairly, I would say, unsophisticated relative",
			"to prior examples.",
			"But mainly, the burden is learning how to use",
			"the physics engine, the Box2D physics engine, which",
			"itself is quite a few functions.",
			"It's some of the longest documentation on Love2D's wiki, I think.",
			"But the principles are pretty simple, in my opinion.",
			"I think it's actually quite easy to get rolling with a lot of cool features.",
			"",
			"The vast majority of which I don't think we even really cover,",
			"at least in terms of what you can do with compound objects and joints",
			"and things like that, which really start to go",
			"into the world of more sophisticated and interesting physical simulations.",
			"Things like I alluded to before, pulleys and tanks and other things like that.",
			"Some features that we could look at potentially expanding upon",
			"if we wanted to make our game more interesting,",
			"is more shapes for our objects.",
			"So if we look at our sprite sheet here, we",
			"can see there are things like roofs and circles and things like that.",
			"So more interesting obstacles beyond just square rectangular",
			"shaped obstacles.",
			"",
			"Go back to-- like I said before, compound obstacles.",
			"So a bunch of things put together via joints.",
			"So pulleys, there's motors, weld joints, which you can use to-- you",
			"can affix a roof to a square and then have two pieces that are tied together.",
			"And you can make arbitrarily complex and shaped things",
			"and just be really interesting.",
			"And that big thing, that body with all these fixtures,",
			"will collide just as any other thing would, thanks to Box2D.",
			"As I alluded to before, instead of having levels to be hard coded",
			"into our level class, maybe define them in a Lua file called levels dot Lua.",
			"And then just have aliens be a table, obstacles",
			"be a table, and then whatever else, however",
			"more complicated you want to get with your game.",
			"You can add more things.",
			"But just have it be represented as simple data structures.",
			"So aliens that maybe have different shooting mechanics.",
			"So if you've played Angry Birds you're familiar with the fact",
			"that some birds will split off into multiple birds.",
			"Some birds will dive and go super fast and break through all the obstacles",
			"in their path.",
			"Some birds will explode, and then their explosion",
			"affects all of the obstacles around them.",
			"So there's a lot of different game play mechanics",
			"you can implement using different types of birds or aliens.",
			"And then different obstacle materials is another direction we could go.",
			"And it's supported out of the box with the sprite sheet",
			"that I provided because it has sheets for metal",
			"and glass and explosive material.",
			"So there's a lot of different interesting things",
			"you could do just by changing up what materials you're using in the game.",
			"And obviously those will have different densities and behave in different ways.",
			"So assignment five is a fairly simple assignment.",
			"So this is just as I alluded to before.",
			"The task here is to split the bird that you",
			"shoot by pressing Spacebar when it's in the bird-- the alien, when",
			"it's in the air, press Spacebar and have it split into three.",
			"So you have your one that you're shooting already.",
			"So it should just shoot off two more.",
			"One that's angled higher, one that's angled lower.",
			"And all of those should be interactable with your game world.",
			"And that's really it.",
			"So if you can do that then it'll show that you know",
			"how to effect the Box2D game world.",
			"Next time, next lecture, we'll be talking about--",
			"the theme is going to be Pokemon, but we'll",
			"be talking about more generally RPGs and turn-based games of that nature.",
			"It won't maybe necessarily look quite as pretty as this.",
			"But we'll be striving for a similar over world",
			"that we can walk around and then engage in fairly simple turn-based battles",
			"and stuff like that.",
			"And also, we'll be talking about user interfaces and things",
			"like dialogue and stuff like that.",
			"But that was it for lecture six, Angry Birds.",
			"I'll see you next time.",
			"Thank you.",
			""
		],
		"is_youtube": false
	},
	"video_009": {
		"section": "CS50G 2020",
		"subsection": "Pok\u00e9mon",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000500_DTH.mp4",
			"https://edx-video.net/HarvardXCS50G-V000500/HarvardXCS50G-V000500.m3u8"
		],
		"video_duration": 7254,
		"speech_period": [
			16.29, 3.27, 3.39, 1.92, 2.98, 4.43, 1.724, 2.416, 3.241, 2.499, 1.124,
			3.966, 4.65, 4.56, 3.71, 3.1, 2.01, 3.06, 4.232, 1.708, 2.82, 3.57, 2.82,
			1.95, 2.76, 2.0, 2.791, 1.179, 3.0, 1.53, 1.46, 3.208, 1.782, 2.97, 3.06,
			2.13, 2.0, 3.19, 3.0, 1.83, 4.8, 3.6, 2.73, 3.6, 3.9, 4.27, 3.71, 4.05,
			3.69, 4.02, 3.18, 2.88, 3.45, 1.65, 2.083, 3.857, 4.26, 4.44, 3.3, 4.62,
			4.14, 2.73, 3.63, 3.19, 2.96, 4.11, 2.94, 2.29, 3.53, 1.78, 3.5, 2.31,
			2.53, 1.98, 1.82, 4.11, 3.24, 2.88, 2.515, 2.375, 2.866, 1.874, 1.77,
			2.85, 3.27, 5.64, 1.26, 4.23, 4.53, 4.41, 0.99, 3.15, 2.88, 4.02, 2.09,
			4.36, 4.41, 3.21, 3.25, 3.08, 5.73, 3.91, 1.87, 1.3, 4.11, 1.3, 4.694,
			2.916, 1.17, 1.61, 1.15, 1.74, 2.88, 4.56, 4.05, 4.11, 4.77, 3.84, 1.8,
			3.924, 1.416, 4.53, 0.87, 1.94, 1.24, 3.0, 2.432, 2.458, 1.97, 1.75, 2.2,
			2.93, 1.396, 1.874, 2.34, 3.387, 1.083, 1.083, 2.677, 2.92, 3.202, 2.208,
			1.86, 2.517, 2.583, 3.96, 4.98, 3.06, 4.383, 3.157, 0.81, 1.2, 7.33, 2.0,
			2.958, 3.372, 1.92, 2.85, 2.28, 3.57, 0.84, 2.64, 2.333, 1.977, 2.72, 2.6,
			1.914, 2.166, 2.04, 1.97, 3.43, 2.292, 1.707, 2.971, 2.86, 2.17, 1.539,
			1.671, 2.835, 7.502, 2.833, 3.78, 2.82, 2.702, 2.458, 4.02, 4.26, 3.03,
			2.75, 3.88, 2.44, 3.17, 3.66, 3.462, 2.958, 1.59, 3.84, 2.11, 4.18, 2.56,
			2.78, 3.73, 1.21, 2.194, 2.416, 2.8, 3.02, 3.69, 3.33, 4.95, 2.46, 2.416,
			3.644, 3.75, 3.842, 2.458, 1.0, 3.44, 1.82, 2.47, 2.4, 2.836, 1.874, 2.82,
			5.34, 4.41, 4.23, 4.92, 2.79, 1.12, 2.66, 5.31, 3.81, 4.26, 2.04, 5.39,
			1.97, 3.56, 2.1, 2.52, 2.64, 3.15, 3.21, 6.03, 3.9, 3.51, 5.31, 4.08,
			3.14, 2.78, 5.21, 2.85, 1.8, 3.27, 4.77, 3.6, 3.33, 3.37, 3.95, 2.52,
			3.291, 1.989, 4.02, 5.19, 3.33, 3.936, 2.124, 2.13, 3.39, 3.124, 1.916,
			2.73, 3.81, 2.672, 2.458, 1.81, 2.0, 4.29, 1.73, 2.74, 3.839, 2.041, 2.07,
			3.88, 5.41, 3.73, 3.75, 2.91, 2.4, 2.43, 2.307, 1.833, 2.1, 4.35, 4.89,
			2.37, 2.07, 2.89, 3.5, 1.92, 3.96, 2.97, 2.1, 3.01, 1.91, 3.54, 2.88,
			3.66, 2.91, 6.45, 0.6, 2.61, 4.32, 1.86, 3.66, 3.0, 2.13, 4.62, 6.18, 2.7,
			2.85, 2.22, 5.31, 2.55, 2.64, 3.0, 3.09, 3.18, 5.85, 1.8, 2.208, 2.962,
			2.0, 3.18, 2.82, 3.18, 2.88, 3.72, 2.67, 4.56, 2.129, 1.681, 3.42, 3.99,
			2.19, 4.14, 4.14, 2.235, 0.935, 2.458, 2.742, 2.35, 5.05, 3.28, 3.87, 2.4,
			4.44, 4.034, 2.506, 2.61, 4.99, 6.31, 3.71, 1.942, 3.318, 2.37, 2.45,
			5.16, 2.42, 3.87, 1.33, 3.41, 3.45, 4.14, 4.74, 4.68, 3.45, 2.987, 1.333,
			2.333, 5.107, 3.48, 2.76, 4.92, 2.88, 5.49, 3.36, 3.24, 3.66, 4.71, 4.24,
			4.08, 2.84, 2.38, 2.34, 3.749, 1.791, 3.66, 3.24, 1.05, 3.36, 2.519,
			2.291, 2.24, 3.72, 2.1, 6.45, 3.48, 2.82, 2.19, 2.79, 7.02, 4.77, 4.53,
			4.68, 5.91, 4.71, 2.88, 3.78, 3.7, 2.735, 4.935, 3.27, 2.91, 2.19, 5.13,
			3.9, 4.881, 2.749, 2.4, 4.43, 2.58, 1.7, 3.25, 3.0, 3.48, 2.67, 3.78,
			1.44, 3.48, 3.78, 2.73, 4.02, 3.2, 2.44, 4.56, 3.78, 6.99, 2.98, 4.411,
			0.499, 2.829, 2.541, 1.74, 1.8, 2.91, 2.89, 2.886, 3.379, 2.375, 1.235,
			2.625, 1.69, 4.14, 3.36, 2.91, 3.6, 3.6, 2.73, 3.42, 7.544, 2.416, 4.02,
			2.61, 5.13, 3.78, 4.35, 6.69, 1.83, 2.46, 3.42, 4.65, 3.24, 4.66, 2.96,
			5.04, 1.72, 2.69, 2.37, 3.14, 1.704, 2.166, 6.07, 4.99, 0.5, 2.91, 3.15,
			2.85, 2.887, 0.833, 2.76, 3.15, 4.54, 3.02, 4.2, 4.02, 11.81, 5.5, 3.26,
			2.27, 4.18, 3.07, 3.26, 3.91, 3.787, 0.583, 5.97, 5.37, 5.19, 3.18, 1.92,
			3.31, 2.06, 2.22, 7.2, 6.08, 2.41, 3.63, 0.95, 2.52, 1.544, 1.416, 2.79,
			1.65, 2.25, 6.99, 1.887, 1.833, 2.34, 7.29, 2.895, 3.525, 3.15, 4.2, 2.46,
			4.38, 11.02, 2.73, 3.21, 5.18, 2.25, 4.084, 2.666, 3.19, 2.484, 1.916,
			3.09, 4.59, 2.18, 2.26, 3.39, 3.09, 4.03, 2.15, 3.96, 2.34, 5.46, 5.85,
			2.046, 1.374, 2.57, 1.75, 1.26, 2.07, 0.9, 3.21, 5.43, 2.95, 3.65, 4.02,
			3.01, 6.29, 2.85, 3.54, 4.65, 3.93, 2.58, 3.54, 2.61, 3.55, 3.17, 1.907,
			2.083, 1.99, 2.37, 1.06, 4.41, 2.4, 2.4, 4.77, 2.61, 2.05, 3.77, 0.63,
			3.84, 1.25, 2.56, 6.45, 3.33, 0.61, 4.039, 1.291, 2.166, 3.234, 1.92,
			4.165, 3.125, 0.97, 4.31, 3.06, 1.93, 2.87, 3.552, 2.208, 4.02, 3.9, 5.52,
			3.36, 3.25, 2.02, 3.4, 0.934, 1.916, 6.54, 5.37, 2.28, 4.38, 4.51, 5.72,
			5.32, 1.29, 3.41, 2.609, 3.881, 2.84, 4.29, 4.15, 4.009, 1.661, 2.629,
			3.81, 4.261, 5.67, 4.529, 3.331, 2.442, 2.958, 8.73, 3.01, 4.52, 2.172,
			4.338, 3.21, 4.38, 3.0, 3.352, 1.108, 4.15, 4.68, 4.6, 6.29, 1.98, 2.83,
			5.24, 4.15, 3.98, 3.168, 1.032, 4.31, 1.14, 6.56, 2.67, 3.57, 3.91, 2.885,
			4.425, 2.15, 4.947, 2.083, 2.88, 7.44, 3.33, 3.03, 3.54, 3.39, 3.39, 1.48,
			1.5, 3.65, 1.81, 5.51, 1.95, 1.92, 2.7, 2.19, 2.7, 5.31, 3.15, 4.52, 1.56,
			4.99, 2.4, 6.28, 3.26, 5.13, 2.76, 4.442, 0.958, 4.65, 4.565, 2.625, 2.04,
			3.0, 1.917, 1.833, 2.021, 1.999, 2.28, 3.78, 5.41, 3.62, 2.86, 1.94,
			4.017, 1.083, 2.652, 1.458, 3.36, 0.5, 3.555, 5.865, 2.91, 3.284, 1.291,
			2.505, 2.34, 1.749, 2.541, 5.59, 6.39, 4.31, 7.98, 5.326, 2.624, 1.29,
			2.4, 3.13, 5.96, 3.757, 2.333, 3.21, 2.49, 4.74, 2.07, 3.15, 3.78, 3.33,
			4.44, 1.08, 1.59, 2.64, 5.52, 3.43, 4.65, 3.17, 4.65, 3.12, 1.06, 2.54,
			1.17, 9.96, 3.75, 2.801, 0.499, 3.0, 3.561, 2.289, 6.19, 3.01, 4.84, 3.84,
			3.12, 3.27, 2.58, 6.57, 4.47, 4.14, 3.36, 3.09, 5.58, 3.21, 3.84, 1.72,
			1.958, 1.962, 2.81, 1.94, 3.74, 1.62, 4.98, 2.13, 3.42, 3.576, 3.124,
			3.29, 5.55, 5.495, 2.139, 2.166, 2.85, 4.63, 3.36, 6.83, 3.99, 3.45, 3.66,
			3.51, 2.34, 5.31, 3.816, 6.095, 0.499, 3.04, 2.33, 1.85, 2.407, 1.083,
			1.322, 4.048, 2.4, 2.72, 2.95, 3.719, 1.791, 2.5, 2.041, 2.909, 4.35,
			3.54, 1.932, 1.208, 2.985, 2.875, 2.01, 4.02, 3.51, 3.33, 3.21, 2.93,
			4.73, 7.22, 2.94, 4.23, 3.85, 2.54, 2.97, 2.666, 1.054, 2.52, 3.479,
			2.291, 4.19, 3.47, 4.51, 6.95, 3.235, 3.945, 4.84, 4.59, 4.057, 2.083,
			6.72, 2.85, 4.14, 2.21, 4.12, 3.42, 2.145, 3.735, 3.6, 4.92, 2.04, 3.005,
			2.125, 1.89, 3.825, 1.875, 3.06, 3.0, 2.18, 1.75, 2.06, 2.58, 4.72, 3.51,
			3.66, 6.39, 2.69, 2.92, 2.64, 3.63, 1.54, 3.77, 2.0, 3.37, 2.63, 2.44,
			2.7, 2.5, 6.2, 3.282, 1.708, 1.91, 3.29, 2.74, 4.5, 2.95, 2.66, 4.83,
			3.13, 2.36, 2.32, 3.59, 4.63, 4.32, 4.73, 5.01, 3.33, 3.66, 7.33, 2.27,
			6.99, 2.73, 2.89, 3.46, 4.78, 4.41, 5.793, 6.127, 8.35, 2.82, 3.21, 2.25,
			4.147, 2.333, 3.81, 3.27, 2.01, 5.493, 1.876, 1.915, 1.546, 2.29, 5.45,
			2.43, 4.11, 6.6, 3.76, 1.704, 1.916, 3.6, 4.05, 6.06, 8.52, 4.21, 4.64,
			5.25, 3.37, 3.68, 5.58, 2.64, 2.82, 6.22, 7.49, 2.37, 3.12, 4.17, 1.59,
			2.73, 4.53, 3.9, 3.5, 2.47, 2.1, 2.79, 3.741, 2.499, 1.84, 3.68, 2.49,
			5.76, 3.74, 3.91, 3.01, 2.175, 2.375, 4.942, 3.208, 3.01, 5.22, 3.194,
			2.916, 3.72, 5.55, 2.023, 2.742, 2.406, 3.249, 0.86, 5.52, 7.29, 3.27,
			2.72, 4.21, 3.43, 5.25, 4.91, 0.96, 3.99, 2.82, 4.26, 7.26, 2.25, 3.45,
			3.96, 3.222, 1.708, 2.46, 2.0, 1.46, 3.673, 4.077, 1.48, 1.77, 4.01, 3.42,
			3.59, 1.75, 2.8, 3.38, 3.12, 2.31, 4.56, 3.0, 8.95, 3.2, 3.91, 2.72, 3.01,
			2.93, 3.907, 3.083, 1.68, 1.59, 3.166, 2.984, 3.23, 4.48, 3.78, 4.006,
			1.874, 3.63, 2.37, 1.95, 3.89, 4.16, 3.791, 2.499, 2.88, 2.28, 4.019,
			1.291, 1.5, 3.87, 3.81, 1.77, 8.23, 3.29, 7.65, 1.009, 2.291, 0.614, 1.62,
			1.666, 3.66, 4.98, 1.92, 3.0, 4.157, 1.333, 3.06, 1.56, 2.91, 3.07, 2.9,
			4.33, 0.5, 2.017, 1.583, 1.38, 2.066, 2.166, 5.744, 2.624, 2.7, 3.0,
			1.725, 1.155, 2.07, 3.45, 4.5, 6.27, 0.96, 3.21, 2.04, 4.71, 3.675, 2.625,
			6.319, 1.541, 1.654, 0.826, 3.55, 3.49, 2.13, 2.381, 1.749, 4.26, 6.27,
			2.58, 2.06, 1.69, 3.18, 3.08, 5.01, 2.79, 2.31, 3.21, 3.51, 3.45, 3.21,
			1.26, 2.14, 3.17, 3.12, 2.32, 3.184, 3.166, 0.87, 3.449, 2.041, 2.73,
			2.475, 1.875, 3.13, 4.7, 2.43, 1.68, 2.92, 0.8, 5.2, 1.13, 4.05, 4.65,
			3.6, 3.48, 5.64, 5.31, 6.15, 5.04, 1.5, 1.639, 2.291, 2.85, 5.7, 5.34,
			4.98, 2.82, 7.84, 3.02, 6.0, 0.5, 2.333, 3.169, 1.458, 4.41, 1.59, 3.78,
			3.63, 4.03, 2.93, 3.33, 6.27, 1.15, 3.5, 2.647, 2.333, 2.49, 6.54, 5.76,
			4.38, 4.35, 3.63, 4.35, 2.6, 2.1, 1.66, 4.36, 2.36, 4.11, 2.28, 3.607,
			1.583, 3.309, 1.791, 4.02, 4.15, 3.35, 2.07, 3.33, 3.6, 1.92, 2.61, 3.69,
			4.17, 3.57, 2.31, 4.62, 1.38, 3.285, 2.985, 4.35, 2.642, 1.958, 3.48,
			1.88, 4.29, 3.06, 3.07, 1.97, 5.01, 4.47, 5.73, 6.089, 6.87, 2.46, 2.561,
			2.479, 1.531, 2.49, 5.24, 1.9, 2.61, 2.33, 8.2, 3.3, 4.35, 1.95, 5.29,
			0.5, 2.291, 3.558, 3.96, 3.5, 2.71, 2.749, 3.342, 3.85, 2.72, 1.93, 4.64,
			1.099, 3.461, 2.28, 2.76, 5.22, 1.98, 3.24, 2.73, 2.97, 1.68, 2.52, 3.24,
			4.68, 5.52, 5.19, 4.23, 2.88, 2.699, 2.041, 3.12, 1.39, 2.79, 2.06, 4.11,
			2.16, 3.69, 3.57, 2.76, 6.86, 2.1, 1.647, 3.493, 1.027, 2.333, 1.0, 2.3,
			2.13, 1.87, 3.2, 1.98, 2.49, 4.06, 2.51, 5.88, 0.93, 3.96, 3.93, 1.68,
			2.0, 2.8, 3.84, 4.68, 3.21, 2.445, 1.755, 3.75, 3.552, 2.778, 1.965,
			1.475, 3.86, 3.95, 2.41, 2.87, 2.58, 3.81, 2.91, 2.67, 3.21, 2.38, 3.47,
			2.64, 7.05, 2.01, 2.84, 2.636, 1.874, 1.89, 4.05, 1.006, 1.934, 7.47,
			1.36, 1.916, 2.774, 3.34, 3.5, 4.09, 2.37, 2.62, 1.73, 4.11, 3.95, 2.74,
			4.2, 3.63, 3.39, 2.46, 5.22, 2.16, 5.76, 4.362, 2.208, 2.25, 3.78, 2.43,
			3.36, 6.61, 3.47, 1.59, 3.13, 2.72, 4.56, 3.87, 6.87, 6.36, 1.57, 3.08,
			5.94, 4.92, 2.7, 2.79, 6.066, 4.914, 1.83, 2.85, 3.78, 3.27, 2.07, 3.15,
			2.4, 2.73, 3.3, 2.61, 7.17, 1.53, 2.67, 2.835, 1.5, 2.525, 1.75, 3.33,
			5.25, 3.63, 1.32, 2.87, 5.89, 3.99, 4.69, 2.9, 2.49, 3.75, 5.7, 2.46, 2.8,
			3.68, 3.27, 3.81, 1.68, 1.75, 2.259, 3.041, 1.625, 1.165, 0.5, 2.6, 2.63,
			3.18, 5.25, 3.71, 4.99, 2.1, 9.24, 3.85, 4.25, 1.95, 3.15, 3.96, 2.91,
			1.75, 4.43, 1.23, 5.58, 2.84, 5.92, 2.32, 3.07, 6.94, 8.01, 3.84, 2.88,
			1.592, 2.708, 1.57, 2.63, 3.43, 2.51, 2.58, 2.31, 2.401, 2.999, 1.11,
			2.01, 3.99, 3.06, 1.77, 4.264, 1.916, 2.98, 5.6, 3.81, 1.8, 1.526, 2.374,
			1.84, 1.682, 1.458, 0.625, 3.045, 3.63, 2.827, 1.833, 3.677, 2.333, 1.62,
			2.46, 1.54, 2.78, 2.241, 2.499, 1.916, 2.334, 3.249, 0.841, 3.36, 3.51,
			6.09, 1.08, 5.22, 2.67, 1.895, 1.855, 4.05, 2.25, 4.2, 1.98, 7.26, 3.69,
			2.13, 1.65, 5.31, 5.82, 5.97, 2.12, 1.114, 3.506, 1.0, 2.58, 6.51, 3.52,
			4.65, 2.0, 3.344, 2.541, 1.705, 5.61, 5.04, 2.79, 3.3, 4.14, 4.32, 2.82,
			3.18, 2.88, 2.73, 4.38, 4.38, 3.72, 2.74, 5.132, 2.958, 1.56, 3.041,
			2.419, 4.26, 2.43, 2.52, 6.78, 2.04, 3.12, 3.78, 2.85, 3.57, 4.54, 4.64,
			2.73, 2.52, 2.65, 5.9, 2.73, 4.14, 7.8, 3.315, 5.295, 8.79, 3.84, 2.7,
			3.27, 3.6, 4.23, 1.585, 2.135, 0.687, 1.833, 2.28, 2.52, 3.42, 2.88, 4.62,
			3.75, 2.85, 2.85, 4.469, 1.291, 3.484, 1.916, 2.34, 3.42, 6.99, 8.07,
			4.12, 4.34, 3.8, 2.44, 4.59, 3.19, 2.0, 2.31, 2.505, 2.625, 0.833, 2.377,
			0.5, 2.405, 2.615, 1.726, 1.994, 1.0, 4.52, 3.179, 0.541, 1.41, 2.34,
			2.049, 1.791, 4.5, 2.56, 3.71, 0.53, 2.374, 5.166, 2.41, 3.942, 1.958,
			3.48, 5.48, 2.5, 12.01, 4.22, 2.43, 3.24, 0.9, 1.95, 2.73, 2.43, 3.64,
			6.08, 2.61, 0.97, 5.29, 2.96, 2.242, 1.958, 2.19, 1.49, 1.33, 1.77, 2.79,
			2.67, 1.5, 3.93, 4.05, 3.11, 2.04, 3.19, 2.05, 3.626, 1.874, 1.2, 4.632,
			1.208, 4.87, 0.5, 2.365, 2.125, 3.515, 2.125, 2.19, 1.912, 1.338, 1.19,
			2.46, 3.15, 3.0, 3.19, 0.86, 2.46, 1.96, 1.86, 3.89, 1.64, 3.05, 3.56,
			3.449, 1.291, 1.333, 3.122, 0.975, 1.677, 3.083, 3.75, 2.85, 1.927, 1.583,
			2.26, 2.99, 2.37, 1.67, 1.69, 1.86, 4.66, 1.67, 3.552, 2.208, 3.0, 3.56,
			4.3, 3.806, 2.868, 1.916, 4.77, 2.12, 1.0, 1.2, 1.916, 2.194, 2.05, 1.82,
			2.43, 3.03, 2.366, 1.358, 2.166, 1.69, 2.637, 0.583, 1.708, 4.382, 1.49,
			1.72, 3.85, 2.636, 1.545, 1.749, 1.708, 1.642, 2.245, 2.106, 0.999, 2.85,
			2.01, 4.37, 0.64, 5.12, 4.04, 4.04, 3.54, 5.057, 1.583, 7.61, 3.76, 3.062,
			2.46, 0.828, 2.166, 1.764, 2.14, 2.89, 3.22, 3.78, 5.88, 3.6, 2.76, 4.17,
			2.22, 3.0, 3.54, 0.81, 4.325, 2.125, 2.37, 2.59, 2.25, 2.06, 3.48, 3.03,
			3.63, 6.48, 2.29, 2.18, 3.24, 0.66, 3.249, 2.601, 1.35, 6.48, 1.08, 4.26,
			3.03, 2.22, 2.94, 2.295, 2.055, 5.25, 3.51, 3.54, 1.56, 3.78, 2.46, 3.44,
			1.25, 3.69, 3.92, 4.03, 4.4, 3.74, 2.8, 3.39, 4.83, 2.38, 3.56, 5.1, 7.23,
			0.87, 2.16, 3.84, 2.22, 3.2, 1.87, 2.88, 3.98, 9.37, 3.12, 2.879, 1.291,
			1.791, 3.729, 0.97, 4.34, 2.88, 2.94, 4.71, 1.42, 2.78, 2.05, 2.77, 2.74,
			3.09, 1.8, 3.115, 1.875, 3.626, 1.374, 2.46, 3.12, 4.14, 3.18, 1.53, 3.12,
			1.92, 4.279, 2.291, 1.23, 5.25, 2.04, 1.9, 5.96, 2.71, 2.26, 3.88, 6.66,
			1.27, 6.21, 5.99, 3.62, 2.61, 2.812, 2.958, 1.56, 3.06, 3.0, 1.892, 1.708,
			3.48, 2.94, 3.72, 4.005, 1.924, 3.381, 0.615, 4.525, 4.33, 2.32, 3.24,
			5.82, 2.69, 3.79, 1.02, 3.34, 3.17, 2.0, 2.02, 5.19, 5.19, 2.31, 4.08,
			0.99, 3.78, 2.95, 3.44, 4.8, 2.79, 4.92, 5.58, 3.57, 5.41, 2.94, 4.52,
			3.24, 4.22, 1.22, 4.17, 5.97, 4.39, 4.16, 3.21, 1.94, 2.62, 4.38, 4.93,
			4.07, 3.75, 3.72, 1.155, 1.875, 4.12, 6.62, 5.76, 2.16, 2.516, 1.374,
			2.35, 1.916, 2.544, 0.83, 0.55, 3.23, 2.503, 3.627, 4.62, 3.73, 2.38,
			2.774, 1.628, 2.458, 6.47, 4.295, 2.125, 3.3, 3.39, 10.62, 3.24, 3.15,
			5.56, 3.846, 1.874, 2.2, 5.36, 3.53, 2.14, 5.69, 2.41, 3.94, 1.8, 2.03,
			4.17, 3.48, 2.55, 3.09, 3.96, 3.99, 3.24, 3.34, 2.54, 2.266, 1.124, 4.971,
			1.749, 2.1, 3.18, 5.55, 3.49, 0.77, 1.209, 1.291, 5.659, 1.791, 4.0,
			1.118, 2.047, 1.41, 5.255, 2.726, 1.618, 1.25, 3.356, 2.72, 4.12, 3.12,
			2.64, 4.14, 2.56, 3.407, 1.833, 3.12, 4.98, 2.34, 8.04, 6.39, 4.14, 2.94,
			3.64, 3.31, 2.05, 2.76, 2.43, 2.67, 4.5, 4.17, 2.82, 2.11, 2.75, 3.81,
			1.796, 4.386, 2.708, 2.51, 4.35, 5.37, 3.42, 2.34, 3.81, 6.16, 0.5, 2.208,
			2.082, 5.37, 5.28, 6.93, 5.88, 3.3, 2.24, 3.58, 3.06, 3.4, 6.47, 1.85,
			2.44, 1.791, 2.859, 2.827, 1.583, 2.44, 3.64, 3.67, 3.5, 4.29, 4.14, 3.0,
			3.21, 1.11, 7.02, 0.937, 2.982, 4.981, 2.271, 2.499, 2.24, 1.882, 1.458,
			2.989, 0.791, 1.171, 2.249, 1.561, 1.499, 4.19, 6.31, 4.11, 1.217, 2.083,
			1.583, 3.907, 1.95, 4.111, 3.059, 3.45, 4.26, 2.01, 2.67, 2.47, 1.604,
			0.666, 2.58, 3.45, 4.678, 3.896, 4.383, 6.473, 2.712, 1.268, 6.37, 2.85,
			5.11, 3.65, 2.61, 4.71, 2.26, 1.958, 5.052, 2.37, 2.77, 3.67, 4.47, 3.17,
			5.84, 3.645, 2.625, 5.22, 1.29, 3.35, 5.74, 5.64, 3.39, 3.09, 1.53, 4.59,
			1.66, 5.3, 3.33, 3.51, 3.51, 3.63, 6.87, 3.87, 1.93, 3.17, 2.76, 2.58,
			2.79, 2.94, 4.14, 5.67, 2.25, 4.56, 3.45, 2.32, 1.67, 2.92, 4.237, 2.083,
			3.42, 4.14, 2.1, 5.72, 1.5, 2.17, 3.81, 3.87, 5.43, 2.13, 2.04, 3.36,
			2.37, 5.52, 2.04, 3.3, 0.984, 2.166, 1.66, 1.58, 2.85, 1.31, 1.875, 3.445,
			4.65, 2.28, 3.51, 2.55, 3.66, 4.11, 4.35, 4.29, 3.09, 3.51, 2.94, 3.09,
			1.95, 3.332, 0.958, 2.58, 3.03, 3.33, 1.65, 3.54, 3.024, 2.916, 2.224,
			2.666, 2.041, 3.189, 6.02, 2.73, 2.45, 4.024, 2.916, 1.57, 5.12, 2.91,
			1.86, 2.58, 4.17, 2.89, 2.75, 3.63, 6.12, 5.66, 2.74, 4.462, 2.708, 3.97,
			3.44, 2.79, 3.31, 4.09, 4.12, 3.0, 1.56, 2.13, 2.31, 1.86, 4.35, 1.86,
			3.96, 4.2, 1.98, 2.73, 2.31, 1.25, 1.875, 1.175, 1.645
		],
		"transcript_en": [
			"",
			"SPEAKER 1: All right, welcome to GD 50, lecture 7.",
			"This week we'll be talking about one of my favorite franchises of all time,",
			"a core part of my childhood--",
			"Pokemon as shown by the Poke Ball on the screen there.",
			"So back in 1997 I think it was, the first Pokemon",
			"game was released, Red and Blue.",
			"I believe it was released a year earlier in Japan where it",
			"was released as Red, Blue, and Green.",
			"And the overall goal of the game was fairly straightforward.",
			"You were a Pokemon trainer.",
			"Your goal was to go out into the world and try and capture",
			"any number of 151 different types of these creatures called",
			"Pokemon that were based on a whole bunch of different types of creatures.",
			"Shown in the screenshot here, there's a Weepinbell fighting and Geodude.",
			"A Geodude was a rock type, Weepinbeel was a grass type.",
			"You had different types of Pokemon.",
			"When they fight each other, some types were better than other types,",
			"like this sort of very large rock, paper, scissors relationship.",
			"And it was just a very addicting formula.",
			"You'd have a team of these creatures that you had caught and raised",
			"and battled, and you'd fight other trainers.",
			"And the awesome part of this was you could go",
			"and you could actually fight your friends,",
			"or trade Pokemon with your friends that they had caught.",
			"And you would often share stories back and forth",
			"about the different rare creatures that you would have encountered,",
			"and all sorts of things.",
			"You'd have a customized party that was sort of a part of you.",
			"And so this is Pokemon Red.",
			"The series has evolved over time.",
			"This is a screenshot of Gold and Silver, which was released a couple of years",
			"afterwards for the Gameboy Color.",
			"Again, this was released for the regular Gameboy.",
			"Gold and Silver introduced a bunch of new features including breeding,",
			"and a day, night cycle, and a lot of other things",
			"that became part of the core series.",
			"Here is Ruby and Sapphire, which was for the Gameboy Advance",
			"and got a significant graphical update, but the core formula",
			"stayed much the same.",
			"Here is Diamond and Pearl, which is for the DS, which",
			"it made use of two screens, as seen on the top and bottom there.",
			"Here is Black and White, which was another step forward",
			"in that it introduced three dimensional graphics for the over world,",
			"so you could actually see some sort of 3D for the first time in the franchise.",
			"And then more recently, we've seen for the 3DS, games like X and Y,",
			"which is shown here, and Omega Sapphire, Alpha Ruby--",
			"Alpha Sapphire and Omega Ruby, and Moon and Sun.",
			"And so this is a great illustration of why",
			"the RPG genre of video games, role playing game,",
			"even though it's sort of its own unique take on the formula.",
			"But it allows us to, we can sort of dissect this and take a look",
			"at what makes an RPG and what makes a Pokemon game altogether",
			"for a nice cool demonstration.",
			"So today, we'll be talking about a few new things.",
			"We'll be doing things a lot differently in this lecture example",
			"relative to other examples, because we're transitioning away from the state",
			"machine and talking about a construct called the state stack, which",
			"is effectively a more advanced version of the state machine.",
			"Whereas before, we had a state machine that was in one state at a time,",
			"whereby we could be in the play state or the start state or what",
			"not, we can now actually have multiple states",
			"that exist in parallel that are on a stack of data structure, which you've",
			"seen in CS 50 if you've taken, where we can have,",
			"for example, the field state, the play state at the very bottom,",
			"which is always there, and then we can push states onto the stack",
			"as we need to for example, a dialog state",
			"so that we can actually display some dialog,",
			"some text to the screen without getting rid of the play state",
			"that we had there before.",
			"It allows us to render multiple things at the same time,",
			"and then also return back to prior states,",
			"rather than completely create new states every time",
			"we want to make a transition.",
			"We'll be talking about turn based systems.",
			"So an RPGs like Pokemon and others, there",
			"are often battle systems that are usually",
			"turn based in this particular genre where you're fighting-- you have",
			"one team or one character fighting against against one other team or one",
			"other character, and you take turns fighting each other.",
			"And you have an indefinite amount of time to make your decision",
			"and then form some sort of strategy as to how",
			"you want to approach the problem.",
			"We'll be taking a look at a very primitive turn based system,",
			"but a fully functional one today.",
			"Another huge aspect of this genre is graphical user interfaces or GUIs",
			"as they're shortened.",
			"Things like panels, and scroll bars, and text boxes, and menus, all",
			"sorts of these things that allow us to get a more visual sort of look",
			"at our data, and allow us to navigate a much more complex game ecosystem more",
			"efficiently.",
			"And to tie it all together, RPG mechanics at large,",
			"we'll be looking at things like leveling up and experience",
			"and how to calculate the damage that one party does to the other party",
			"throughout the course of a battle.",
			"And so it will be a fairly complicated set of examples,",
			"but fairly illustrative of the genre as a whole.",
			"So I'd like to demonstrate sort of the example that I put together.",
			"If I could get a volunteer from the audience to come up and take a look.",
			"Tony that'd be awesome, thank you so much.",
			"So this is my simple but fully featured, more or less, demonstration of Pokemon.",
			"So if you want to enter or return.",
			"So this is a--",
			"so here we have a--",
			"we can see right off the bat, we have a text box and a play state",
			"like we did before.",
			"So this text box is actually a state that's layered above the place.",
			"So you can see it has some instructions about, if you want to press P,",
			"you can heal your Pokemon.",
			"You can press Enter to dismiss.",
			"So if you go ahead and press Enter, you'll",
			"be able to actually move around now.",
			"And so something to note is before, input was actually",
			"halted while the dialogue was on the top of the screen for the play state.",
			"You're actually not allowed to access or update this bottom state,",
			"because the state stack is only allowing input to the top state.",
			"And so I have limited the play here just to this box,",
			"but if we walk in the tall grass down here, in Pokemon,",
			"in order to actually initiate an encounter",
			"with another Pokemon or another wild Pokemon, you walk in the grass.",
			"So here we've walked in the grass.",
			"There's a random chance for this to happen, there's a 1 in 10 chance",
			"basically.",
			"So it's saying that a wild Bamboon appeared.",
			"So a wild creature appeared.",
			"He's level 5, we're level 5, should be a fairly even battle.",
			"So you can press Enter, and it will say go",
			"the name of your Pokemon, which is an Aardart in this case,",
			"and it's randomly allocated at the moment.",
			"So go ahead and press Enter one more time.",
			"Now we can see on the bottom right, we have a menu.",
			"So we can fight or we can run, so those two choices.",
			"So we can go ahead and fight.",
			"So we fight, whichever Pokemon has the higher",
			"speed will go first and do damage.",
			"We obviously, do a lot more damage, but he's a little bit faster,",
			"so he's going to go first.",
			"So we fight one more time.",
			"",
			"We should be able to knock him out.",
			"So as soon as we do, we get a victory message, we get a victory song.",
			"If we press Enter, we'll actually get some experience",
			"for defeating that enemy.",
			"So we've got quite a bit of experience, we got 65 XP.",
			"In that bottom bar, we can see we have all these GUI elements,",
			"we've got a panel here, we have text boxes, we have progress bars,",
			"all these pieces are coming together to give us sort of this turn based system.",
			"And so after this, we may level up just to demonstrate",
			"leveling, which is part of the RPG mechanic side of this game.",
			"So we have to press this one more time.",
			"We did, perfectly.",
			"So they leveled up.",
			"And so now we're level 6, so we can see the 6 changed above our progress bars.",
			"So now will be a little bit stronger every time.",
			"And the stats aren't shown here, it's actually a part of the assignment",
			"is to create a menu that will actually show you how you leveled up,",
			"what stats actually increased.",
			"But underneath the hood, behind the scenes,",
			"you actually are getting stat increases.",
			"And so here we can see that if we our HP goes all the way down to zero,",
			"we faint.",
			"And when we faint, the screen instead of fading to white",
			"will actually fade to black to illustrate the difference",
			"between the two transitions.",
			"And so that we can keep playing indefinitely,",
			"the game will restore your Pokemon back to full health.",
			"And so this will go on forever.",
			"This is effectively what the simulator is, it's just",
			"a simple series of infinite battles.",
			"There are random Pokemon in the grass.",
			"There's five total that you can fight.",
			"But all the core pieces of what make the game are here.",
			"So actually, let's illustrate running too",
			"if you wouldn't mind, just so that we can see if there is a difference.",
			"So we can actually flee, and then battle we'll get cut short there.",
			"We won't get any XP, we won't faint, but we still",
			"get taken back to the play state.",
			"So that's all for the Pokemon demo.",
			"Thanks so much Tony for coming up to demo it.",
			"Well, there's a lot of pieces involved here, but as we will see,",
			"once we have a lot of these sort of foundational pieces implemented,",
			"it's not too difficult to start layering more and more of these",
			"onto the game to make it even more rich.",
			"In fact, the assignment is to--",
			"and we'll see this at the end, I'll recap this at the end--",
			"but the assignments goal is for you to implement a menu--",
			"similar to the menu that we saw where fight and run were shown--",
			"that will show you what your current stat is for each of your stats,",
			"there's attack, defense, speed, and your HP.",
			"It will show you what your stat is before leveling, the amount",
			"that it will increase by, and then the final amount,",
			"which is sort of similar to how the actual Pokemon games work,",
			"so you can see rather than just seeing, oh I increased my level from 5 to 6,",
			"6 to 7, you can see, oh, my strength increased from 12 to 14.",
			"I'm a little bit stronger, I'm going to do more damage on the next play",
			"through.",
			"So our goal here, we're going to take a look at the field state, the play",
			"state, and the battle state.",
			"And there's a common dichotomy in most of these sorts of games,",
			"be it Final Fantasy, or Dragon Quest, or Pokemon",
			"where there is a field, where you are walking around,",
			"you're character interacting with a game world with NPCs, going through towns,",
			"and what have you.",
			"And then a battle mode, sort of a battle state",
			"where you're actually fighting against some sort of enemy,",
			"or a series of enemies, a party or a single creature.",
			"And so we've implemented simple versions of both of these to illustrate",
			"and also the transitions between them.",
			"Before we start, I want to make another sort of plug",
			"for this howtomakeanrpg.com, this book, I actually learned a lot from this",
			"and about using LUA in the context of game development.",
			"And I pitched this I think in one of the earlier lectures,",
			"but if you want a deeper dive into a lot of these constructs,",
			"and to sort of get a sense for how you might do something like cut scenes,",
			"or more complicated battle layouts, and a lot more like--",
			"it goes into a lot of detail about a lot of awesome things,",
			"definitely check it out.",
			"It's not free, but if you're interested in this genre, which I am,",
			"it's definitely worthwhile.",
			"Here's what the sprite sheets look like that we'll be",
			"using for this sort of demonstration.",
			"The Pokemon aside, which are individual textures.",
			"Here we're using a simple sprite sheet, which",
			"just has a bunch of tiles, most of which we did not use.",
			"Note that the bush, the tall grass is not on any sort of background.",
			"And therefore, we need to layer, basically",
			"have two separate tile maps as opposed to one, which we didn't do last time.",
			"And we were reusing the sprite sheet that we used in the Zelda lecture.",
			"Before, we used it for all the enemies, the skeletons, ghosts,",
			"and slimes, et cetera.",
			"But now we're actually using it for the PCs that it contains.",
			"Specifically, just the male NPC here, which is our main character.",
			"The foundational class that we're using in this lecture",
			"that sort of everything else revolves around and makes this work",
			"is the state stack.",
			"And so before, what we had was a state machine, right,",
			"where we were in one state at a time.",
			"So you can almost think of it like, we have a box here,",
			"and it just has one socket.",
			"And then we're always looking at this one socket,",
			"whether it's the play state, or the battle state,",
			"or a transition of some kind.",
			"And now we're transitioning into the idea of, instead,",
			"of just one state that we can only see at once, we'll make it a stack.",
			"And so what we can do with this is, rather than just having one,",
			"we can therefore render multiple states at a time, right?",
			"So let's say this is like the field, right, or the play state.",
			"And then maybe this is like a dialogue, or something, right?",
			"Like we saw before in the field, we had a text box.",
			"We can actually layer things on top of each other.",
			"And then maybe this is like a fade out, right, or a fade in.",
			"So we start with the play state maybe, and we're walking around,",
			"and we interact with in NPC.",
			"Rather than transition the play state to a dialog state,",
			"which would, in our previous model, completely eliminate the play state,",
			"because there's only one state that could be active at a time.",
			"Now we just render, however many states we have in our stack,",
			"we just render them sequentially based on the order that they were popped in.",
			"We would rendered this first, we basically render from the bottom up.",
			"Render the play state, then the dialogue, then the fade in.",
			"And this will have the effect of doing a whole bunch of different things, which",
			"we'll see in the distro.",
			"But we only really ever need to update one state at a time,",
			"right, because if we have the play state active and the dialog state active",
			"and the fade in state active, in this order, as a stack,",
			"right, we were pushing the operation for pushing for getting something",
			"onto the stack is called a push, and getting it off",
			"is called a pop if unfamiliar.",
			"If we're pushing all of these states on, then usually,",
			"we only need to update whatever's on top, right?",
			"If there's no fade in for example, and we only",
			"have a dialog state active, or a dialogue and a place",
			"state in that order top to bottom, then we usually",
			"don't want him update what's going on in the play state.",
			"We're only concerned with the dialogue that's taking place.",
			"We only want that to take input.",
			"And when we press Spacebar, Enter, or whatever",
			"button clears that dialog state, we pop it off, right,",
			"and then we're back to the play state.",
			"Then we're just updating the play state.",
			"And so being able to update just what's on top while",
			"being able to render everything that's on bottom.",
			"And this doesn't hold true for all game formulas,",
			"there's certainly some games where you can have a dialogue and a play state",
			"both get updated, but that's still using a state stack of sorts,",
			"you're just then updating things in a top down way.",
			"But this allows us to do all kinds of things like transitions,",
			"and preserving-- like for example, the fact that we have a play state",
			"and we can pop a battle state on top of that,",
			"where we don't see the play state underneath it,",
			"we only see the battle state, and that's all updating.",
			"But it is we pop the battle state off, we're",
			"right back where we just were in the play state.",
			"It's preserved its state, for lack of a better word, from before.",
			"And this is something that this model affords us comfortably.",
			"And so that's sort of the foundational class that's",
			"implemented in this distro, which will allow",
			"us to do all kinds of awesome things.",
			"So let's go ahead and take a look at what that looks like.",
			"I have state stack open here.",
			"So state stack has just a set of states here.",
			"",
			"And then whenever we want to insert a state,",
			"it's going to be at the end of the state stack.",
			"So it's going to be whatever the last--",
			"so if we're looking at it as a series of states in a table,",
			"it'll be whatever the last index is in the table.",
			"That will be our, the top of our stack.",
			"And you can implement this either way in reverse if you wanted to.",
			"It's just easier, because you can just do a simple table.remove to get rid",
			"of the--",
			"",
			"table.remove on that table to get rid of the last state",
			"without having to shift back everything.",
			"So if we did it starting at index one, you'd have to shift everything back.",
			"And it would also be a little bit weird, because you would start at one,",
			"and then things would go left.",
			"But basically, in order to update whatever our end state is,",
			"we just do at #self.states, which will be however large our state stack is,",
			"we just call update on that state.",
			"And then process AI is here, although we're not using it.",
			"But if you had AI, it would be the same thing",
			"as basically an update for artificial intelligence for your state.",
			"Rather than rendering just one state at a time,",
			"we iterate through all of our states here",
			"using ipairs, which will iterate through them numerically",
			"starting at one going to the end.",
			"So we call for istate, and ipairs of self.state, render it,",
			"so that will render everything back to front, or bottom to top,",
			"and allow us to get this layered look where",
			"we have a play state going on underneath for example,",
			"and then a dialogue on top.",
			"Or we have a battle state going at the very top,",
			"and maybe that battle state itself pushes a dialogue",
			"state to the top of the stack, or a bunch of other states,",
			"a transition, whatever you would like.",
			"To clear it, we just reset the table to an empty table.",
			"To push a state, we just do an insert on that state, and then",
			"we call enter on that state.",
			"As we did before, sort of similarly with state machine, when we changed a state,",
			"we would call enter on it and exit, but now we're",
			"just calling enter when we push.",
			"And then to pop, all we do is call exit on whatever",
			"the last state is in our state stack, and then just",
			"call table.remove on self.states.",
			"And by default, when you call table.remove on a table, just a table",
			"with no other arguments, it'll remove whatever",
			"the last index is of that table.",
			"Does that makes sense?",
			"Anybody have any questions as to how the state stack works?",
			"",
			"All right, awesome.",
			"So let's take a look then at the start state.",
			"So this is the start date.",
			"",
			"Fairly simple, we just have a couple of text labels,",
			"and then we have just a randomly assigned sprite going left to right.",
			"How do we think we're achieving the movement?",
			"Yep, timer.tween, and then we're just drawing",
			"an ellipse, right, pretty simple.",
			"And then when we press Enter, note the transition.",
			"Notice that there's a fade to white, and then fade to transparent.",
			"And so if we recall from when we looked at match three, how do we do this,",
			"do we remember?",
			"AUDIENCE: [INAUDIBLE]",
			"",
			"SPEAKER 1: Exactly, and the rectangle was stored where?",
			"",
			"Sorry, to repeat for the camera, we had a rectangle",
			"that filled the entire screen, and we just tween the transparency for it,",
			"which is true.",
			"The rectangle there before though was stored",
			"in whatever state was active at the time, which was like the start date,",
			"or the I think begin game state was the name.",
			"The actual state that wasn't necessarily relevant at the transition.",
			"But using a state stack, we can actually decouple this idea.",
			"We can take the concept of a transition, and because imagine",
			"if we wanted to make a transition between every single state",
			"that existed in our game, right?",
			"If we wanted to transition from the battle to the field,",
			"or the field to the battle, or whatever else we might want, like the start",
			"to the field, we would need a rectangle in every single one",
			"of those that has an opacity that we're keeping track of.",
			"And that's not necessarily germane to the purpose of that state, right?",
			"So because we now have a state stack, we can actually",
			"abstract out this idea of a transition, and turn it into its own state.",
			"We can have a transition state.",
			"And recall that since we're just layering everything",
			"[? off ?] all these states, and we're rendering them sequentially,",
			"having a state that possesses it's own for example, opacity rectangle,",
			"we can just layer that, push that onto the stack, and render that,",
			"and it'll give us the illusion of having this transition.",
			"But we don't need to actually have it be part of the state",
			"that we're trying to transition out of and into.",
			"Does that make sense?",
			"So let's take a look, for example, at the--",
			"let's take a look at the start state first,",
			"just so we can see where that actually gets kicked off.",
			"So the start state, we kick off some music, we have a sprite,",
			"and a sprite x and y.",
			"These are values that are relevant to the sprite that's moving, actually,",
			"we only have one sprite ever moving left to right.",
			"It just gets teleported to the right edge of the screen",
			"as soon as it gets taken to one edge.",
			"So we only have one sprite, one x and y.",
			"And then every three seconds as we see here,",
			"we have a callback function that will tween the sprites x to negative 64",
			"over 0.2 seconds, so really quickly.",
			"And then on finish, teleport it to the right.",
			"And then do the same exact thing, but tween it",
			"to the center over 0.2 seconds.",
			"And then as soon as we press Enter or Return, note this here,",
			"we have gStateStack, not a gStateMachine anymore,",
			"and we're pushing on to it a fade in state,",
			"which takes an RGB, a duration, and a callback function.",
			"Now if you look at main.lua, this is relevant,",
			"because now we no longer have a state machine, right?",
			"We previously had a global state machine, gStateMachine.",
			"We would give it a list of indexes into functions, anonymous functions.",
			"Those would return the instantiation of a state.",
			"And then when we called change, the state machine will",
			"index into its list of states, and call that anonymous function,",
			"which would have the result of changing the state to some state",
			"that we've implemented as a class, right?",
			"Now we just create a state stack and we just",
			"push a new start state onto the class.",
			"And so what this will do is effectively the same thing, only now",
			"we can layer things onto the start state, right, or play state,",
			"or whatever we want to, and we're not going to ever get rid of it.",
			"I mean, we can get rid of it, but we don't have to.",
			"For the play state, especially, we want that to pretty much never get",
			"popped off the stack, because that's going",
			"to preserve all of our information.",
			"We're going to default back to that to store all of our character information,",
			"our Pokemon information, whatever else we might",
			"want to add onto this shell of a game in inventory,",
			"et cetera, a world state at large.",
			"We want to preserve that and keep that consistent across all of our battle",
			"states and so forth.",
			"And the battle states will just pull information from that world,",
			"from that play state, and construct a battle as needed.",
			"Does that makes sense?",
			"OK, so here we're effectively, the only real changes we've made to main",
			"are no longer a state machine, now we have a state stack,",
			"going to push start state, that start state",
			"has some behavior just like any other state that we've implemented before.",
			"",
			"And what I was about to get into before was here on line 36 of the start state,",
			"we're pushing another state onto the stack.",
			"So there's already a start state, and it's from within the start state itself",
			"actually.",
			"",
			"We're going to take that stack, which is just one level deep,",
			"and then we're going to make it two levels deep now.",
			"So now we're going to add a fade in state.",
			"And the fade in state as we can see, takes in an RGB.",
			"Does anybody have a guess as to what the RGB is relevant for?",
			"",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: To whether you want to fade in black or white?",
			"Yes, any color.",
			"We can make this, we can make it a fade to red if we wanted to,",
			"or fade to blue.",
			"But we don't have to create two separate classes for a fade in white,",
			"fade in black, fade out black, fade out white.",
			"We can just give it a color.",
			"And then I mean, we could even go a level further with this,",
			"and make it take in an opacity as well, so that we don't need a fade in state,",
			"or a fade out state, we just need a fade state, right?",
			"And the fade state will determine, based on whatever",
			"last opacity parameter we give it, the right way to fade in and out.",
			"But in this case, the difference between the fade in state",
			"and the fade out state is one knows to go to 0, one knows to go to 255.",
			"That's really the only key difference.",
			"And then this 1, the duration, right, we need to tell it how long to fade.",
			"And then this last bit here is a function.",
			"We're giving it an anonymous function, this is a callback function,",
			"because the fade in state by nature is an asynchronous state.",
			"It does its behavior over time.",
			"So we need a way, we need to tell it, OK,",
			"when you finished doing what you're doing, call this bit of code",
			"here, so that we can do something not immediately,",
			"we can sort of defer its execution till later.",
			"And this is something that we'll see common throughout this lecture,",
			"because we have this implemented also in like dialogue for example,",
			"because we don't know when the user is going to press Spacebar on the dialog",
			"state and clear the window.",
			"But what if we want that window, the clearing of that dialog",
			"to trigger some sort of event, right?",
			"For example, if they press Enter when they're in the battle,",
			"we want it to go to the next action.",
			"We don't necessarily know when it's going to happen,",
			"so we'll just pass in an anonymous function to that dialogue state",
			"that the class will call whenever the close function is called on that dialog",
			"state.",
			"It says, when closed, execute this anonymous function.",
			"And then that anonymous function can do whatever you want to do.",
			"It could pop another other several states onto the stack.",
			"But this is what allows us to chain asynchronous behavior.",
			"That's the key here.",
			"",
			"So this anonymous function-- so we'll take a look now actually",
			"at the fade in state, just so we can see what this looks like.",
			"So we see here, fade in state, right, takes in the color.",
			"We saw before, that will be the color we fade to.",
			"The length of time that it'll take us to actually perform the transition.",
			"And what are we using for the transition do we think, timer.tween, right?",
			"So most everything that we'll do actually",
			"throughout the course of this lecture that has asynchronous behavior,",
			"we can implement it with timer, which is nice.",
			"It allows us to fairly succinctly and declaratively tell",
			"right out what exactly we want to have happen over time.",
			"In this case, we're going to tween over the course of time",
			"the opacity of our self to 255.",
			"So the fade in is going to fade into the full color of whatever we",
			"have given it.",
			"So it's going to go from 0, which is shown here by default, to 255.",
			"And then as soon as we finish that tween,",
			"that is when we pop the fade in state.",
			"We're going to pop ourselves off the state effectively, off the stack",
			"effectively.",
			"And then here, we're calling on fade complete.",
			"And that's where the anonymous function is.",
			"On fade complete is passed in here.",
			"So by putting that function into the finish function of the tween operation,",
			"we've allowed ourselves to defer that function that we've written up in the--",
			"it's in the start state.",
			"We defer the execution of this function until after that tween operation",
			"takes place.",
			"Does that make sense?",
			"OK, awesome.",
			"And that's effectively what it is.",
			"And that's a common theme that we'll see if you're looking through the distro,",
			"you'll see it in a lot of places.",
			"Anonymous functions or callback functions",
			"rather being passed into things like the dialogs, and the fades,",
			"and a few other places.",
			"In the take turns state for example, there's",
			"a function that takes in at a callback function as well.",
			"And that's effectively how you can chain asynchronous behavior that",
			"executes over time, rather than it being blocking.",
			"Does anybody have any questions so far as to how this works, at all?",
			"",
			"All right, so when the fade is done--",
			"we're still the start state here--",
			"at this point, the fade is done, we're executing this anonymous function.",
			"We're going to pop the start state off of the stack in this case.",
			"And then we're going to push a--",
			"we're going to do two pushes here.",
			"One is to push a play state, which recall is where the NPC [INAUDIBLE]",
			"character walking around.",
			"And another one is to push a dialogue state.",
			"And so what this will have the effect of doing is rather than us",
			"immediately going into the play state and being able to walk around,",
			"we're actually put right into a world where",
			"there is a message waiting for us that we have",
			"to press Enter on in order to continue.",
			"And when we press Enter, because we're pushing the play state first,",
			"and then the dialogue state, the dialogue state",
			"is at the top of the stack, right, because things",
			"get pushed onto like a stack of plates.",
			"You put a play state plate on the bottom and then another plate on top,",
			"and that plate is the dialogue state in this case.",
			"And you can only interact with the top--",
			"we're only updating the top plate at once in this model.",
			"We could obviously make a more complicated state",
			"stack that allows us to have several layers of states being updated at once,",
			"but for simplicity, we only opted to allow the top layer to be updated.",
			"The dialog state is going to be the active state,",
			"it's going to be receiving input.",
			"All of them are going to be rendered, so we're",
			"going to render things from the bottom up.",
			"We're going to render the play state, then",
			"we're going to render the dialog state, but the dialog state's",
			"going to be active.",
			"We're only going to be able to press anything on that state.",
			"And then lastly, actually, even beyond the dialogue state,",
			"we're pushing another state, we're pushing a fade out state.",
			"And in this case, it's the opposite of the fade in state,",
			"it just takes in an RGB, and we'll go from 255 opacity",
			"to zero opacity in that case.",
			"And so what that allows us to do for playing right,",
			"we're here in the start state, pressing Enter.",
			"That's our fade in state was there.",
			"And then we pushed to the play state and the dialogue state and the fade",
			"out state at once, so you would almost think",
			"that we push a fade in and then the fade out,",
			"but we have to lay that foundation before we",
			"put the fade out state on top of the stack,",
			"right, because the top layer gets updated.",
			"So we have to push the fade out state on top of all of those.",
			"That will get updated, that will fade out,",
			"and then we're back to the two states that we push",
			"before we pushed the fadeout state.",
			"Does that make since?",
			"OK.",
			"Does anybody have any questions as to how that sort of flow works?",
			"Cool.",
			"All right, so that's the gist behind, I mean,",
			"that's essentially the core of what we're doing today",
			"is the state stack pushing multiple states.",
			"And then just figuring out the right order",
			"the need to push them in to get the desired appearance that you want,",
			"right?",
			"We push the fade out state while we're in the start state,",
			"or fade in state rather.",
			"That will take us to white, and then like sort",
			"of, almost like underneath the-- behind the curtain, we're popping everything,",
			"and then we're adding the play, dialogue, and then another fade out",
			"state.",
			"And so you sort of have to balance the order that you put things in in order",
			"to achieve the desired results.",
			"It may not necessarily be exactly as you intuitively",
			"think until you think about just how we're updating and rendering",
			"things on a stack.",
			"And so that's the ultimate hurdle I think in really getting comfortable",
			"with the distro, but once you've gotten that, everything else sort of falls",
			"into place.",
			"That and the sort of abundance of asynchronous functions, as we'll",
			"see pretty shortly when we look at GUIs, and how we've implemented",
			"a lot of basic GUI functionality.",
			"A lot of that is very, very call back driven,",
			"just because of the nature of it being based on user input, right?",
			"You don't know when the user's going to do any input,",
			"so defer whatever happens with that GUI code",
			"with the triggers involved when the user presses Spacebar,",
			"Enter, and then call that function that you've passed into that GUI widget.",
			"All right, so we've taken a look at the state stack.",
			"We've taken a look at the start state, the fade in state,",
			"let's take a look now at the play state.",
			"",
			"So the play state--",
			"a lot of this is actually very similar to what",
			"we did back with Zelda, which is a very similar type of game top down.",
			"View, the only difference really with that was RPGs of this nature--",
			"Final Fantasy, Pokemon, Dragon Quest, they're",
			"tile based to the degree of even your movement is tile based.",
			"And so we've striven to implement that with this lecture.",
			"So when we move our player, our character,",
			"it doesn't have free motion like we did with Zelda for example.",
			"So I'll demonstrate this.",
			"So I can go to the field state here, the play state, sorry.",
			"And then when I move, if I press right, he",
			"moves in that direction at a perfect grid interval.",
			"So if I move up, I'm taking my hand instantly away,",
			"he's going to keep moving, and he's going to stick hard set to this grid.",
			"And that's just a sort of trend that these games have implemented.",
			"It allows you to stay perfectly aligned with the grid, and helps you",
			"I guess certain game--",
			"I don't think it's strictly necessary for probably",
			"most of the games that choose to implement this.",
			"I think it was a symptom of tile based games from the NES and Gameboy",
			"era being easier to design and implement,",
			"because they're very tile based systems.",
			"But I mean, even as an aesthetic choice, I suppose it makes sense,",
			"because everything aligns very perfectly.",
			"So that's the core difference really with the field state in this game.",
			"So how can we go about implementing a grid aligned movement system like this",
			"with our player relative to how we did it in Zelda for example?",
			"",
			"How do we think-- sure yeah?",
			"AUDIENCE: So we don't x and y's, we just have the tile positions.",
			"SPEAKER 1: So you don't have x and y's, we just have the tile positions.",
			"Close, I would say it's more focused on the tile positions,",
			"but you still do need an x and a y, because you still",
			"need to draw that sprite at that exact position.",
			"Right, yes Tony?",
			"AUDIENCE: Well, when you need to move the sprite, instead",
			"of moving at every update, you tween it between the two tile locations.",
			"SPEAKER 1: Exactly, so rather than moving the sprite",
			"at exact pixel positions per update, you tween the sprite when you receive input",
			"to a specific location.",
			"And then we actually stop input at that point as well.",
			"There's no use for us having any input when we're not exactly at a given tile,",
			"so we disable input while he's walking effectively.",
			"And so this is implemented, if we're looking at the distro in the entity",
			"class, there is a--",
			"I believe it's in here--",
			"",
			"maybe player, hold on.",
			"",
			"Oh sorry, no it's entity walk state, not the entity.",
			"Entity is just a container for the information that's relevant.",
			"So here in the entity walk state, we have attempt move.",
			"And so what attempt move does is essentially",
			"it looks to make sure that we're within the bounds of the map, right?",
			"And then if we are--",
			"every entity in this game now has a map y and x, and a regular y and x.",
			"And so the regular y and x, we still need in order",
			"to draw our sprite at a specific location on the map.",
			"We still need to draw it going between 240 something and 230 something, right?",
			"But we need a map x and a map y to basically say, OK,",
			"the sprite should be at this position on the map.",
			"And then we'll just tween it between that position times 16,",
			"and it's the position plus or minus x or y",
			"times 16, which will give us the exact x and y value that we",
			"need to draw it onto the map.",
			"And so that's what we're doing here.",
			"So were going to call attempt move on input.",
			"So anytime we do any input--",
			"and this is done in the player like idle, or player, yeah, player",
			"idle class--",
			"player idle state.",
			"We change the animation to write animation.",
			"And then we get it's current map x and y.",
			"And then based on whatever direction the player is looking,",
			"or the entity is looking, we could use this for an NPC class, or the like.",
			"We just modify our 2x and 2y.",
			"So to 2x and 2y is going to be the value that we're tweening towards times 16,",
			"right?",
			"And so if we're trying to go outside the map boundaries,",
			"just changing us back to idle won't let us do that.",
			"Otherwise, set our map y and map x to that position immediately,",
			"right, because that's just a minus or plus one operation.",
			"And then over the course of 0.5 seconds, actually tween to that value.",
			"And we can see here, we're tweening to the tile size,",
			"and actually to the tile size minus self.entity.height divided by 2.",
			"Do we know why that is?",
			"",
			"We do that, because if we're looking at the field, we can see here,",
			"notice that we're not perfectly lined up with the grass, right?",
			"It's kind of like we're halfway above it,",
			"because it looks just a little bit more natural this way,",
			"this is how most sort of games look.",
			"And if you're in a game like this and you're",
			"like walking up against a wall for example,",
			"this will allow you to sort of look as if you're",
			"up against the wall rather than sort of being",
			"at the edge of where the bottom of the wall is, and kind of looks unnatural.",
			"Hence why we minus 1/2 our height right there.",
			"And then when we're finished, we actually",
			"test to see whether we're still pressing a key, and if we are,",
			"then change our state to walk again, which",
			"we'll just repeat this process depending on which direction we're looking at.",
			"And that's effectively it.",
			"And that's what allows us to get this grid based movement.",
			"Any questions as to how this works?",
			"",
			"Cool.",
			"",
			"Let's take a look then at the play state, let's go back to it.",
			"So we have a level, the level contains our entity,",
			"and it can contain all of our entities, and whatever",
			"objects you want it to contain.",
			"",
			"In this case, when we're in the play state as well,",
			"we're going to check to see if we press P,",
			"because that's recall, where we can heal our Pokemon,",
			"just a little game hack just to make demoing it a little bit easier.",
			"But if we press P, we play the heal sound, we take our--",
			"and we'll look a little bit more detail as to this, all this in a little bit.",
			"But self.level.player.pa rty.pokemon@index1.currenthp",
			"equals self.level.player.party.pokemon@1.hp.",
			"So the difference is current HP is whatever you currently have,",
			"you could have taken damage.",
			"HP is whatever your max HP is.",
			"And this is like in a nutshell how you get",
			"like stat changes in games and RPGs, and health and mp differences.",
			"You've got to keep track of a max and a current value for all of those things,",
			"and then depending on whether you're buffed or debugged,",
			"or whether you have taken damage or not, or used spells or not,",
			"you can have an accurate reflection of where",
			"your character is and then always return back to that state",
			"whenever you need to.",
			"The interesting thing here, the slightly more complicated thing",
			"is when we press P, we want to show a dialog that says,",
			"and I'll demonstrate this, we want to show a dialog just",
			"like this one that says, we press P, your Pokemon has been healed, right?",
			"Now I can't move.",
			"I'm pressing the arrow keys.",
			"I can't move my character at all, because this dialog state--",
			"we're in a new state, well, we've pushed a new state onto the state stack.",
			"And that's the dialog state here, which has taken a value.",
			"And because it's the top layer of the stack, it can't get updated,",
			"or it's being updated, and we can't update the play state, right,",
			"based on how we've modeled our state stacks operation, or how it works.",
			"And then as soon as I press Enter, it gets popped off,",
			"we've just popped it off.",
			"Now the place states at the top, I can move again.",
			"So that's what's going on.",
			"So the dialog state then is actually very similar in a sense, to the fade",
			"in and fade out state in that, notice that it takes an anonymous function.",
			"When does this anonymous function get called?",
			"Do we know?",
			"",
			"At the end of what?",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: Yeah, well, when the user closes the dialog box, correct.",
			"So let's take a look at the dialog state then.",
			"And we can see, it's actually pretty simple, it's pretty small.",
			"We have a text that it takes and a callback, right?",
			"The text is used here.",
			"We instantiate, and this we'll see in detail when we start looking at GUIs,",
			"and all the widgets they've implemented here.",
			"This text box gets put at a hard coded position, and it receives this text.",
			"And then we set our self.callback to that callback function.",
			"If we have closed the text box, meaning, we're",
			"looking to see at self.textbox.isClosed, which",
			"is a function of the text box class.",
			"If it's closed, then execute self.callback, and then pop",
			"this dialog state of the stack, right?",
			"So it's similar in a sense, to the fade in and fade out,",
			"and then it takes anonymous function.",
			"The only difference is in how it gets executed.",
			"With the fade in state, the anonymous function",
			"was called at the end of the finish function, which",
			"is part of the tween object.",
			"In this case, we're executing the callback function explicitly when",
			"we've closed the text box.",
			"So we're waiting for user input versus waiting for some asynchronous operation",
			"to finish.",
			"And then of course, we call text box render,",
			"and then we'll see all of these methods shortly as part of these widgets,",
			"but at a glance, this is all that's really happening with the dialog state.",
			"Very simple, using the same pattern that we've",
			"seen of deferring future behavior to anonymous functions.",
			"Any questions as to how this works, or anything so far?",
			"Cool.",
			"All right, let's take a look back at the play state,",
			"I believe we're getting close to being finished with the play state.",
			"Yes, so everything, that's basically what the play state is in this game.",
			"And then a lot of what's going on takes place in a level as well.",
			"So in a nutshell, we have two maps, two layers, right,",
			"because the grass in the tile sheet is its own sort of [? alphaed ?]",
			"out object, it's got transparency around it.",
			"We keep a layer of the base, a layer of the grass underneath,",
			"and then a separate layer for the tall grass.",
			"And then we can just look and to see when",
			"we're walking in the player walk state when we've walked over tall grass.",
			"And then what do we need to do to start a random encounter?",
			"",
			"Yes?",
			"AUDIENCE: [INAUDIBLE]",
			"SPEAKER 1: Yes, how do we initiated though?",
			"That what are we looking for?",
			"We do push a battle state as soon as we've triggered one,",
			"but how do we trigger one?",
			"What are we looking for?",
			"AUDIENCE: [INAUDIBLE] player is in the grass.",
			"I don't know if it's on moving to a new grass,",
			"or if it's time spent in the grass.",
			"Yeah, we do a random chance whenever the players on grass.",
			"And it's whenever they start to walk and there on grass in this case.",
			"But you can do it either way, you can do it",
			"when they're leaving the grass, walking into the grass.",
			"In this case, it's whenever you press the button,",
			"and they happen to be on grass, it'll do a random chance, one in 10.",
			"And if it's equal to 1, 10% chance it'll trigger an encounter.",
			"So that's the gist behind triggering a random encounter,",
			"and a lot of these games really--",
			"some games do it differently.",
			"They'll sometimes make it more likely the more steps you've taken,",
			"they'll like sort of keep a counter to say, oh, I've taken 100 steps,",
			"it should be a lot more likely now.",
			"Some games will just be completely random, 1 in 10, 1 in 5,",
			"depending on how the developers decided to implement their game.",
			"The former is a bit more robust.",
			"But for simplicity, we just chose, math.random10 equals 1.",
			"",
			"So yeah, we create the tile maps here, pretty straightforward.",
			"And then the actual random encountering takes place in the player walk state.",
			"So here we have check for encounter.",
			"And so what this does is whenever we enter the walk state, which",
			"is we press the button to enter, or to walk,",
			"this entire function gets called, because we",
			"do the transition to the player walk state in the state machine.",
			"All of the entities are still using just a regular state machine",
			"not a state stack.",
			"Wasn't necessary for this demonstration, though I'm sure",
			"there are some used cases for using a state stack for an entity.",
			"In this case, we're just using a regular state machine.",
			"So when we change to the walk state, we are calling enter as we've seen.",
			"And then we call self, checkForEncounter.",
			"And so self, checkForEncounter will set a flag",
			"if we have not started an encounter basically and will allow us to move.",
			"And if we have checked for an encounter, it will,",
			"or if we have triggered an encounter, it will push in checkForEncounter,",
			"it'll actually push a battle state onto the stack.",
			"So checkForEncounter just basically does what we said before.",
			"If the grass layer, because we have two layers,",
			"right, we have the base layer and the grass layer.",
			"So if the layer at yx where yx is are entities map x and map y.",
			"If the ID of that is equal to tall grass,",
			"and we have just a global constant table called",
			"Tile IDs, which has all these IDs.",
			"And math.random10 is equal to 1, OK, change the entity state to idle,",
			"so don't let them keep walking.",
			"Pause the field music rather than stopping,",
			"so that way when we come back to the field later and we press play,",
			"it will be at the exact point that it was before.",
			"Triggered the battle music, and then, we've seen this already, fade in state,",
			"push to the stack, right?",
			"So over one second, we're going to fade to white.",
			"So this will have the effect of the music starting,",
			"but we're fading to white right away, which",
			"is very sort of similar to how most RPGs do it.",
			"And then we have our callback function, which",
			"will execute as soon as the fade in state's done, right?",
			"In this case, push to battle state.",
			"Battle state takes an entity, and the entity",
			"has all of our Pokemon information, that's",
			"why we're passing that into the battle state.",
			"So the battle state can say, oh, what Pokemon do you have?",
			"OK, I'll be able to look at your party and say, OK, your first Pokemon",
			"is this, send him out to battle, et cetera, right?",
			"And then lastly, push a fade out state, right,",
			"because now we've got the battle state on top of the play state,",
			"but we want to fade into it, right?",
			"So we're going to fade, we're going to put the battle state first,",
			"and then because we're using a stack, we're",
			"going to put the fate out state on top of that, and then fade out to that,",
			"pop that off the stack.",
			"And then we have our battle state that we just pushed, right?",
			"And then self.encounterFound get's set here.",
			"And that's creating an encounter, checking randomly,",
			"pushing the right things under the stack, battle state,",
			"fade state, fade in, fade out.",
			"And then you're set to go.",
			"So that's effectively what the--",
			"it's known in RPGs as the field versus the battle or encounter state.",
			"Even though we're calling it play state here, we've left the field,",
			"we've gone into the battle at this point.",
			"And so now we've seen basically everything",
			"that the field has to offer us.",
			"And we've covered everything that's relevant there.",
			"So we're going to take a break now for five to 10 minutes,",
			"and then when we get back from the break,",
			"we'll talk about GUI elements, panels, text boxes,",
			"and then we'll dive into the sort of mechanics of the battle state.",
			"All right, welcome back to lecture 7, Pokemon.",
			"So before the break, we talked about the play state,",
			"we talked about the states stack more importantly,",
			"and then we talked about how a anonymous functions are",
			"sort of the backbone to how we get a lot of this asynchronous",
			"and deferred behavior for our game, which is very common in RPGs,",
			"and I mean, a lot of genres, a lot of complicated genres of this sort.",
			"Another big key part of games like this are the graphical user",
			"interfaces, or GUIs as they're shortened to.",
			"Things like panels on the screen, things like labels--",
			"text labels that move around, things like lists, text boxes, scroll bars,",
			"and you can get a lot crazier with it.",
			"In this particular lecture, we'll be talking mostly about panels, labels,",
			"text boxes, and scroll bars--",
			"progress bars rather, not scroll bars.",
			"But the sort of the first I think corner--",
			"or the first sort of like keystone GUI widget",
			"that we should take into consideration is the panel.",
			"So a panel is [INAUDIBLE].",
			"",
			"So if we look at this in a game--",
			"just pretend this is a panel I guess.",
			"So this is effectively all a panel is, right?",
			"It's just sort of a rectangle.",
			"It allows us to-- if you're looking at most user interfaces,",
			"like text boxes on your screen, or if you're on Facebook",
			"and you're looking at almost anything, like your little message",
			"window, a lot of those things at the very core, the very bottom,",
			"the foundational part is just a panel.",
			"So any guesses to how in Love2D, we can make a simple panel?",
			"AUDIENCE: Two rectangles of different colors.",
			"SPEAKER 1: Two rectangles of different colors,",
			"that's exactly what we end up doing.",
			"So that's effectively how we can make a panel.",
			"There's another way of making a panel, which we won't do in this lecture,",
			"but it's called--",
			"we use as a construct called a nine patch.",
			"So a nine patch is--",
			"imagine taking this little image here, and it's of some arbitrary size,",
			"but it's very small.",
			"And this is very similar to how a lot of games",
			"implemented their panels or their graphical user",
			"interfaces back in the 80s and 90s, I mean, to a lot of games till this day.",
			"But back when hardware was fundamentally tile based,",
			"you could take a image like this, split it up into nine pieces--",
			"nine patch is where the terminology comes from.",
			"And sort of similar to how we actually constructed the Zelda dungeon, recall,",
			"where you have corner pieces, and then a top, bottom, right, and left side.",
			"You just layer this, one of each of these,",
			"first off, right, of the corner pieces.",
			"And then however many you need of these on the sides",
			"to create this rectangle, right?",
			"So imagine we've created--",
			"these are all, if we can visualize these as being a bunch of tiles, right?",
			"",
			"So just imagine that we've taken these corner pieces,",
			"these are the corner pieces, we've taken one of each of those.",
			"And then we take these side pieces, and we just like draw a bunch of them",
			"like that.",
			"And then we take this centerpiece, and then we",
			"can either layer it, or tile it a bunch of times, or just stretch it.",
			"And stretching it has a bunch of nice bonuses associated with it depending",
			"on how you've set your filter mode, love.graphics.setdefaultfilter,",
			"if you set it to bilinear versus nearest,",
			"you can actually get a nice gradient.",
			"And if you set it to nearest, you get a nice pixelated look.",
			"But you'll see this often, and Unity has nice support for this.",
			"Take an image that has maybe more complicated than you could",
			"get with just two rectangles, right?",
			"Something that actually has a design and maybe a gradient color, and actually",
			"layer--",
			"I mean, create a arbitrarily sized text box to fit your needs.",
			"And if these aren't even increments or whatever your tile size",
			"is on your 9 patch, you could just scale the top, bottom, left, and right side",
			"as well just to keep it scaled, the centerpiece.",
			"So does that makes sense.",
			"So this is common, we won't be using that in our lecture,",
			"but it's a very, very common piece to a lot of graphical user interface design.",
			"In a lot of games, you'll see it a lot if you get more into game development,",
			"so it's definitely worth talking about.",
			"Another piece that we'll be talking about today is the text box.",
			"So I mean, what's a guess as to what the text box,",
			"how we can implement a text box, and how we will implement a text box?",
			"",
			"So what foundational piece can we start with?",
			"We already have-- yeah?",
			"AUDIENCE: You just put use the love print",
			"to the screen over one of those boxes.",
			"SPEAKER 1: So use the love print to the screen over one of the boxes, exactly.",
			"Yep.",
			"So maintain a list of text items, right, text.",
			"And then just draw them inside a panel, and there's a text box.",
			"You've taken two ideas, and sort of mix them together.",
			"A selection is kind of the same thing.",
			"It's a the only difference being that with a selection--",
			"so a selection is another thing if we think about,",
			"for example a menu where we have fight, and like run,",
			"and it may be in a more fleshed out game, we have like an item thing,",
			"right?",
			"So that's a menu effectively.",
			"It is very similar to what we get with a text box,",
			"but it's got a set of ingredients here, fight, item, run,",
			"which they aren't set to wrap, they're not one like contiguous set of text.",
			"It's just a bunch of items.",
			"And then nice thing about a selection is that you can",
			"have a cursor on your selection, right?",
			"And then what do we need to associate with like, for example,",
			"if we want this to actually do something,",
			"and if we think about what we've been doing so far,",
			"how do we go about implementing functionality",
			"with a selection like this?",
			"Like what needs to get associated with each of those entries in our selection?",
			"",
			"Callback function, right?",
			"Just as we've done with everything else.",
			"If you have a fight item here, each of these, if we think of the selection",
			"as being just this part of what we're looking at,",
			"right, because this background part is just a panel, we don't care about that.",
			"We care about the selection at the moment.",
			"The selection is the items and the arrow, right?",
			"When as we'll see in the assignment, your goal will actually",
			"be to take selection and get rid of the arrow functionality,",
			"because for the assignment, you don't need",
			"or want to have a selection active, a cursor active.",
			"You just want a list of things.",
			"But based on what the cursor is pointing at and when we press Enter or whatnot,",
			"we should index into the selection, and then",
			"execute a callback that's associated with each of these items.",
			"And that's how we can get behavior out of the selection,",
			"rather than just being a list of things that we render to the screen.",
			"If we have fight, and we click Enter, a callback",
			"is set to maybe push a state onto the stack that",
			"will trigger an interaction between the two entities on the screen, right?",
			"The first one will attack the second one,",
			"the second one will attack the first one.",
			"And that's sort of its own asynchronous set of states that do its own thing,",
			"but it's kicked off via an anonymous function",
			"that we've associated with each of these things, right?",
			"An item pushes another state, which is like an item mini state, where then you",
			"open up a brand new set of menus that you can look through all your items,",
			"and each of those items has a callback associated with it, right?",
			"Your potion has a callback associated with it",
			"that says, when I click on this, either by default,",
			"just restore the HP of my active Pokemon,",
			"or let me choose who to restore.",
			"So therefore, push another state, which is like a select Pokemon",
			"screen with its own set of callbacks associated with each of those.",
			"It's just in order to get all of this sort of complicated behavior",
			"that you need to, it's really ultimately just pushing states",
			"and adding callback functions to all of these different options",
			"that you can select.",
			"And then run, push a fade state, and then pop this state,",
			"and then push a fade out state.",
			"And that's really all we're doing.",
			"And so this look at all of these GUI widgets",
			"here is just sort of a conceptual look, but we'll take a look very shortly",
			"at some actual implementation.",
			"The last one that I want to look at is the progress bar.",
			"So a progress bar for example, the HP that we've",
			"seen in the actual battle where when we take damage, it goes from right to",
			"left.",
			"Any guesses as to how we've implemented a progress bar?",
			"Yes, Tony?",
			"AUDIENCE: Once again, two rectangles.",
			"SPEAKER 1: Two rectangles, yes, exactly.",
			"One, and then the nice thing about rectangles in Love2D",
			"is you can set the edges on them to be rounded or not",
			"via an optional parameter.",
			"So without anything more complicated than a rectangle",
			"we can just create these sort of almost ellipsoid progress",
			"bars, very simple progress bars.",
			"Ones the red, right, the red that's the background.",
			"And then ones the outline, the black.",
			"And one is set to fill with the first parameter,",
			"one's set to line with the first parameter.",
			"Now how do we go about animating whether or not,",
			"how do we animate the decreasing amount of health when we take damage?",
			"Yes?",
			"AUDIENCE: Between the width.",
			"SPEAKER 1: Between the width, exactly.",
			"And what are we tweening it by?",
			"How are we tweening it?",
			"How would we calculate how much we need to tween it?",
			"AUDIENCE: Well, you could just have your width equal your health remaining.",
			"SPEAKER 1: If your width is set to equal your health remaining,",
			"then your health is maybe 10.",
			"And you want your health bar to be like 100 pixels",
			"long, how is that going to work though?",
			"AUDIENCE: Multiply it.",
			"SPEAKER 1: You could multiply it, but if you",
			"know the width that you want your progress bar to be,",
			"you can just multiply the width by the ratio of the max",
			"value of your HP, or sorry, the ratio of your current HP over your max HP,",
			"right?",
			"So if you're missing-- if you have 50 HP, and you're missing 5 HP,",
			"your ratio is 45 over 50.",
			"And if you multiply that by your width, you get the exact amount of width",
			"that you need regardless of how wide you want the bar to be,",
			"if you want to be 1,000 pixels, if you want it to be 50 pixels,",
			"as long as you multiply current health over max health times the width,",
			"you'll get that ratio no matter what.",
			"Does that makes sense?",
			"Cool.",
			"So that's a look at all the GUI widgets that we're looking at, how they sort",
			"relate to what we're doing.",
			"We'll take a look at their implementation here.",
			"So I'm going to go ahead and open up the panel.",
			"And I'm going to move a little bit quickly",
			"so we can get into sort of the meat of the battle here.",
			"The panel is as we've said before just two rectangles, right?",
			"It takes in an xy within a height.",
			"And then we would just draw two rectangles.",
			"One is larger than the other.",
			"The bottom rectangle is slightly larger than the top rectangle.",
			"So the first rectangle gets drawn and it's whitish.",
			"And then-- oh, I'm sorry, sorry about that.",
			"We have a xy within a height.",
			"And then we're drawing two rectangles to the screen.",
			"We have the background rectangle, which is drawn first,",
			"which is going to be the full xy width and height of the panel.",
			"And then we're going to draw that at a white color, and then draw--",
			"in the context of this game-- we're drawing everything at the same color,",
			"but we can change the color.",
			"If we wanted to parameterize it, we could do that.",
			"We could set, we could have a color option here in the constructor.",
			"We're not doing that, we're just drawing everything the same color.",
			"But that's how you would get like customized menus,",
			"some RPGs let you do that.",
			"And then what we're doing here is we're just within a small slightly smaller",
			"boundary.",
			"So just two pixels smaller on the x and y.",
			"Where you are going to draw the second rectangle,",
			"which is a kind of dark shade of gray.",
			"And that is a panel, that is all panel is.",
			"And then we could just have a function called",
			"toggle, which sets it to visible or not visible.",
			"And if it's visible, get rid of it, or if it's visible, sorry, draw it.",
			"Otherwise, don't draw anything when it gets rendered.",
			"So that's a panel in a nutshell.",
			"Any questions?",
			"Cool.",
			"So the next thing that we should look at is the text box.",
			"So a text box--",
			"so the text box is a little bit more complicated than a panel.",
			"A text box in a nutshell needs to take in some arbitrary body of text,",
			"and it needs to chop it up based on how wide your text box is.",
			"And if it surpasses the height of your text box,",
			"right, ideally, you should page your text so that you can press Space bar,",
			"Enter and go through pages of text until you've exhausted all of your text.",
			"And you press Enter one last time, and you get rid of that text box.",
			"And so we have a panel here, which we have an xy width and height",
			"in our constructor for the text box.",
			"And we have our text as well.",
			"And then we have a font if we want to explicitly decide",
			"what font we want to use.",
			"In this case, or at large, we're going to say",
			"that we instantiate a panel at xy width and height, nothing too fancy.",
			"And then the fancyish part, the slightly more complicated part",
			"is here on line 20 where we say, underscore",
			"self.textChucks gets self.font, getWrap, self.text, self.width minus 12.",
			"So anybody know what this function does or want to take a guess?",
			"",
			"Yes?",
			"AUDIENCE: Is that the page thing you were talking about?",
			"SPEAKER 1: Exactly, it's the paging of the text.",
			"Is the chunking of the text rather.",
			"Not the paging of the text, so much as is the chunking of the text, which",
			"we will use to page the text.",
			"So we take some you know arbitrarily large body of text,",
			"it can be as large as we want it to be, and given--",
			"this is actually a function of to Love2D font object.",
			"So this is given to us from Love2D.",
			"Get wrap will return two values, the second of which",
			"is all of the pieces of text that the main big body is divided into",
			"based on the width.",
			"So this self.width of minus 12, that's how wide",
			"it's going to divide our text into chunks of up to,",
			"it could be slightly smaller than, because it divides it",
			"based on the word.",
			"But no piece of text will ever exceed self.width minus 12 width.",
			"And this will allow us to then render several lines of text within our text",
			"box, and they will never exceed the boundary, right?",
			"And so the paging functionality is actually in next chunks.",
			"So we call self next here at the end of [? knitt ?] function.",
			"And then self next basically checks to see, OK, are we at the end of the text?",
			"If we are, then we're not going to display any text,",
			"and we're going to close the window.",
			"We're going to close the panel.",
			"But if we are not at the end of the text, like we still get text left,",
			"what we want to do is new table.",
			"And then we're going to, up to three iterations,",
			"we keep track of where we are in our chunks, right?",
			"We get self.text chunks equal to all of those chunks, right.",
			"And that could be an arbitrary number.",
			"It can be only one chunk, there could be like 30 chunks, right?",
			"We need a counter to keep track of where we",
			"are in terms of like based on what page we're on, right,",
			"and however many lines we rendered to the screen thus far.",
			"So starting at I, and I get's chunk counter,",
			"and chunk counter will get incremented by three",
			"every time we call next chunks, which is every page.",
			"We could have easily just called this next page as well.",
			"It's going to insert into that chunks table",
			"that we just created, self.textChucks at i.",
			"And once we've reached the number of chunks total",
			"that we returned from get wrap, we're going to flag end of text",
			"as being true, and then we're going to return it.",
			"And so what this will do is, eventually, we're",
			"going to be equal to the number of chunks that we got from font get wrap,",
			"right?",
			"And once we are, that will signal with next",
			"that it's time to close the text box, because end of text",
			"will have been set to true at the end of that last chunking process.",
			"And then we can see here, when we update text box,",
			"and that whenever it's on the top of the stack,",
			"remember, we're looking for a Space or an Enter press,",
			"and then we just call self next.",
			"And that will have the effect of eventually closing our text box.",
			"And then is closed recall, we looked at that earlier, we checked",
			"to see it is the text box closed?",
			"And that's just a flag that we set here.",
			"And then for rendering purposes, we render the panel first.",
			"And then for each of our displaying chunks, so we only have up to three",
			"displaying chunks at one time, which gets set by the next chunks function.",
			"We just print that to the screen using i as a multiplier on our y.",
			"And so that will render up two or three lines, i, i plus 1, i plus 2.",
			"Any questions as to how the text box works?",
			"",
			"It's a little more work than the panel for sure,",
			"but it's fairly straightforward.",
			"We're just keeping a list of a bunch of text things,",
			"and then we're just chunking them based on how wide the text",
			"box is, the dimensions thereof.",
			"",
			"And then let's take one look at this selection.",
			"So a selection is basically, a list of text items with a cursor, right?",
			"And as I said before when we were looking at the screen over there,",
			"each of those text items has a text value and a callback function.",
			"And the callback function is what allows us",
			"to assign behavior to this selection object beyond just displaying things,",
			"right?",
			"Because when you have a menu, when you have a selection",
			"and you select something, you want behavior to happen, right?",
			"So each of these items indef.items will expect to have a callback function.",
			"",
			"And then here, when we update the selection, what we're doing",
			"is we're updating whatever our current selection is, which is just",
			"a number between 1 and the number of items in that selection making sure",
			"that if we're at one and we go minus one, that we go back to the bottom.",
			"And if we're at the bottom when we press, and we go up,",
			"we go back to the top.",
			"And we play sounds, cutesy, things like that.",
			"And then for each--",
			"and for our selection here, from one to number of items,",
			"we calculate how much padding that we need.",
			"And we draw the cursor at our current selection,",
			"and then we draw each item based on i and whatever our gap width is",
			"of our panel, which we assign it to.",
			"So we divide our panel up, and then basically just",
			"keep track of where current y is and draw",
			"the actual selection and the cursor if that's",
			"the current selection to the screen.",
			"",
			"Any questions as to how a selection sort of works?",
			"",
			"Notice here, if we press Return, if our selection is being updated,",
			"self.items at self.currentSelection.onSelect.",
			"So it's expected that that item will have an onSelect function, which",
			"is that callback function.",
			"OK, and lastly, we'll take a look at the menu.",
			"And then we'll finally take a look at the battle,",
			"which is where sort of everything kind of comes together with all of this.",
			"And that'll be it.",
			"And then we'll talk about the assignment.",
			"So the menu is a panel and a selection together.",
			"That's the gist behind what a menu is in this game.",
			"You can define a menu to be a lot of things,",
			"and you can get a lot more complicated with a menu, but in this example,",
			"in this implementation, we're just saying a menu is a selection",
			"and a panel put together as one item.",
			"And we've seen it in the game, [? if we're ?] going to run it.",
			"That's just a text box.",
			"Going to look for a battle.",
			"",
			"OK, so here's a battle.",
			"That's just an empty panel at the bottom, regular panel,",
			"but now it's a text box.",
			"We push the text box onto the stack.",
			"Push another text box onto the stack.",
			"And so this is a menu right here.",
			"Notice that there is a cursor and there's",
			"a selection embedded within a panel.",
			"And each of those items, the fight and the run,",
			"those have a callback associated with them.",
			"The purpose of the fight callback is to trigger a new state",
			"where the two Pokemon asynchronously attack each other, in chain behavior",
			"one after the other.",
			"And then run pushes a dialogue, then pushes a fade state,",
			"then pops both of them, and then pushes a fade out state",
			"and puts us back to the play state.",
			"So that's effectively what's going on and that's",
			"an example of what the menu looked like.",
			"And so a menu, just a selection with a panel put together.",
			"When we draw the menu, we draw the panel and then the selection.",
			"And then when we update the menu, we only update the selection,",
			"because that's all we care about.",
			"And that's basically it.",
			"And so the menu itself will get a def, that def",
			"should have items, that items will get passed to the selection.",
			"",
			"That's pretty much, that's it for the--",
			"oh, progress bar as well.",
			"We'll look at progress bars when we get to the actual battle state.",
			"So now, let's take a look at a few of the classes and data structures",
			"that are pertinent to the Pokemon themselves.",
			"So if you look at party as are first class, very",
			"simple class, literally just this--",
			"self.pokemon is def.pokemon is just a container at this point.",
			"You can take this--",
			"I mean, even in I think a fully fleshed game,",
			"you wouldn't really need much more than just this.",
			"But if you needed to expand upon this idea at all",
			"and you know preserve metadata that exists for the party,",
			"this would be a perfect way to do it.",
			"The actual pokemon class itself is not a whole lot more than effectively",
			"a bunch of stats.",
			"And that's a lot of what an RPG is.",
			"This genre is-- it's mostly just numbers.",
			"You're just comparing numbers against numbers",
			"and then adding a roll of the dice.",
			"That's effectively, that's what Dungeons & Dragons, a lot of it is.",
			"And that's-- yes?",
			"AUDIENCE: Would it make more sense to store",
			"just delta per level and your initial one, so you can have fewer variables?",
			"SPEAKER 1: Say it one more time.",
			"AUDIENCE: Wouldn't it make more sense, instead",
			"of storing your HP and everything for each level",
			"to store your initial stats in each area,",
			"and how much you would go up per level.",
			"SPEAKER 1: Would it make more sense to store the amount that you go up",
			"per level for your Pokemon?",
			"Yes, that is what we're doing.",
			"So we have a base--",
			"so here's how the split works for the stats in this case, right?",
			"We have base HP, base attack, base defense, and base speed.",
			"A level 1 Pokemon has-- a level 0 Pokemon",
			"has these stats of this species, right?",
			"Every Bamboon or whatever Pokemon that we choose",
			"will have whatever we've allocated it to be it's base HP,",
			"base, attack, base defense, base speed.",
			"And then the thing about Pokemon and I mean, a lot of RPGs",
			"will sort of do this thing, but we need some way",
			"of leveling up the Pokemon in an necessarily non-deterministic way.",
			"Like two Piggies that level up may not have the same stats, right?",
			"One might have slightly higher attack than the other,",
			"one might have slightly higher defense than the other.",
			"We do this using what's called an IV, and that's what Pokemon itself does.",
			"And it's short for individual value, this is sort of",
			"like the DNA of your Pokemon, right?",
			"So this HP IV is separate from your base attack, base speed, base et cetera.",
			"And this basically, it gets compared against a dice roll every time",
			"you level up three times.",
			"",
			"And this is how I've programmed it, it's not necessarily",
			"how Pokemon itself does it, but you will roll a dice six times,",
			"or three times, one through six like a normal die.",
			"And you'll look to see if that roll is greater than your IV, right?",
			"Or it'll check to see whether your IV is less than or equal to that dice roll.",
			"And if it is--",
			"or sorry, if it's greater than or equal to that dice roll.",
			"And if it is, it will increment that stat by 1 for those three dice rolls.",
			"So you can get up to three more, or you can increase the stat",
			"by up to three times per level.",
			"But you can only have an IV up to five.",
			"So you're rolling against a six, and you will occasionally not roll a 6.",
			"It checks to see whether or not the IV is",
			"greater than or equal to the dice roll.",
			"And if it's not greater than or equal to the dice roll in the event",
			"that it is a six, or if the IV is up to a four",
			"for example, which means a five or six will go against it,",
			"then it will not get a stat increase.",
			"And this is a sort of simple way of implementing this DNA based system.",
			"It's randomized, but it's a weighted, right?",
			"If you have a higher IV, you have a higher likelihood",
			"of being greater than or equal to the dice roll.",
			"And so that's how we implement stat increases.",
			"And then we need a way of keeping track of what our stats are,",
			"like our actual stats.",
			"So our actual HP, our actual attack, our actual defense,",
			"and actual speed that's been calculated level by level,",
			"we need a way to keep track of that.",
			"We need level, we need our current XP, and then",
			"we need our-- and the amount of XP to gain",
			"a level, which will get higher and higher per level, as you can see here,",
			"because it takes in the self.level times self.level.",
			"And then it multiplies that by five times 0.75.",
			"And then your current HP.",
			"",
			"So we're really not storing our value level by level,",
			"we need the base because we need to know what our base was.",
			"I mean, we could effectively globally reference these variables,",
			"but it's minor efficiency gains at that point.",
			"But we need the IVs and we need the--",
			"I mean, we need a reference to the IVs, we need a reference to the base HP,",
			"and we need to keep track of whatever our actual stats are,",
			"and then our current HP always, because our current HP",
			"can differ from our actual HP.",
			"And in the actual game, you can have your attack, defense,",
			"and speed also vary match by match, because you",
			"have moves that lower your speed, lower your attack,",
			"lower your defense, et cetera.",
			"In this case, we haven't implemented that,",
			"so we don't have a current attack, current defense.",
			"But in a more complete implementation, you would have that sort of thing.",
			"Does that sort of answer your question?",
			"Is that in the right vain?",
			"OK.",
			"",
			"And so here's the level up code.",
			"So like I said, three dice rolls, one to three.",
			"If six is less than or equal to our IV, so it could be a six, in which case,",
			"it would be greater than what are max IV could possibly be.",
			"IVs range from one to five, but if it's less than or equal to that IV,",
			"then we're going to consider that a stat increase.",
			"It's a weighted odd to determine whether or not we get a stat boost.",
			"And it does this for every stat, and then it returns all of the increases.",
			"And this is relevant, this line 95 for a return HP increase,",
			"return attack increase, defense increase.",
			"This will be relevant for assignment 7, because your goal is",
			"to take these increases and actually display them to this user in the battle",
			"state when he gets a victory, or he or she gets a victory",
			"and has gained a level.",
			"You will display a menu with a selection that has all of these things,",
			"and you'll need this value.",
			"So it returns these values here, and you'll be calling this function any way",
			"from your battle state stats level up.",
			"Or we'll be calling level up rather, which returns self stats level up.",
			"And that's all a Pokemon is.",
			"It's effectively mostly a data structure.",
			"And we use this in our battles to throw dice effectively back and forth,",
			"and have a victor and a loser, and then gain XP and gain levels that way.",
			"So any questions as to how a Pokemon object class works?",
			"",
			"Cool.",
			"We'll take a quick look at what the actual definitions look like,",
			"which you can probably take a guess.",
			"It's very simple, just key names.",
			"And then we have the actual name, we have the sprite names,",
			"we have the HP, attack, defense--",
			"all the things that get put into the actual object,",
			"they need a reference to in the definitions.",
			"And so Pokemon ultimately are just this, they're",
			"just data, right, which is what we talked about in a prior lecture, data",
			"driven design.",
			"The more you can take all of your Pokemon",
			"and make them into, or anything, Pokemon or any object,",
			"and turn it into an easy to write data structure like this,",
			"the easier it is for you to add more.",
			"We could easily add, it wouldn't take too long to create 150 of these.",
			"I mean, they wouldn't be all that interesting,",
			"because we don't have moves implemented yet.",
			"But in an ideal world, we'd find a way to also model moves as data,",
			"and therefore, you can just link moves to your data structure,",
			"to your Pokemon object like this.",
			"Yes Tony, did you have a question?",
			"AUDIENCE: Well, I just wanted to mention that the paradox",
			"games are very good about that.",
			"[INAUDIBLE]",
			"SPEAKER 1: Oh, like Crusader Kings?",
			"AUDIENCE: Yeah.",
			"",
			"SPEAKER 1: The comment was Paradox Games are very good about data driven design.",
			"I'm assuming you've dug through their files?",
			"AUDIENCE: To some extent, and also it's just",
			"if you play their games for awhile, it's everywhere, like to the extent",
			"that sometimes on the Wiki, they put the source code up.",
			"SPEAKER 1: Oh, yeah.",
			"Yeah, no, it's just good game design.",
			"Ultimately, if you want to--",
			"and their games are large, they have a lot of content.",
			"If you want to have a lot of content in your game,",
			"you need to find a way to take the burden off the programmer",
			"and put it onto the designer, or at least make",
			"it easier for the programmer, because making source code",
			"and debugging source code all day long, especially for very complicated things",
			"is not easy.",
			"And it's ultimately not a desired thing to do, right?",
			"It's a lot easier for me to whip up a new creature in 10 lines of code",
			"here and feel good about it than hard coding a lot of these sort of things,",
			"right?",
			"So shifting as much of it to data as you possibly can should be your end goal.",
			"So that's what Pokemon defs look like.",
			"Before we get into the actual battle, we want",
			"to take a look at what a battle sprite is.",
			"So a battle sprite is what was rendering onto the screen, right?",
			"So we take a look here.",
			"That's not a battle sprite, but almost a battle sprite.",
			"That was just a texture.",
			"So if we get into a battle, slowly but surely.",
			"All right, so these are battle sprites, and they don't look much different",
			"than a regular sprite, and they're not that much",
			"different than a regular sprite.",
			"But they have some functionality that's important, mainly that functionality",
			"where one is flashing, and then one was being opaque, right?",
			"So in order to do both of those things, we need to store some sort of data",
			"within our sprite, right?",
			"Yes?",
			"AUDIENCE: Zelda for the invulnerability flashing.",
			"SPEAKER 1: Yes, exactly.",
			"For what we used in Zelda for the invulnerability flashing.",
			"For the enemy, or I should say, for whoever is getting attacked, yes.",
			"They are getting an opacity flag stored.",
			"They have an opacity flag stored in their object that we can tween, right,",
			"we can tween on and off over the course of time.",
			"That's what we did with the entity in Zelda when it took damage.",
			"And we set it to invulnerable, and while it was invulnerable,",
			"it was flashing on and off.",
			"But we can't necessarily do that with the sprite that's blinking white,",
			"because there's not really a like white flag, right?",
			"We can't make something completely white with just a flag.",
			"That's something that we actually need to use a shader for.",
			"And so a shader, and we're not going to get into too much detail about this,",
			"shaders are pretty complex, a little arcane at first.",
			"But what they are is effectively a little program that",
			"runs on your graphics card, and that looks at when you're drawing something,",
			"it looks at every pixel depending on what kind of shader you're doing.",
			"But for the sake of this demonstration, we'll look at every pixel",
			"that you're drawing to the screen, and perform some sort of function",
			"on that pixel, and produce a new value, right?",
			"And this is how you get a lot of really crazy awesome things to happen,",
			"but it can be pretty insane.",
			"Shader Toy, I think is the website that has a ton of really cool--",
			"I'm not going to pull it up now, just 'cause I don't remember the name,",
			"I believe it's shader toy.",
			"There's a website where people post all the shaders that they've written,",
			"and you can see a lot of really crazy stuff, things",
			"that you would never imagined were possible with just code like this",
			"effectively, looking at positions of pixels",
			"and [? pictures ?] on the screen and whatnot.",
			"But effectively what this does, this is a white shader, the goal of this shader",
			"is to just turn a sprite completely white.",
			"That's all the goal of this shader is.",
			"So it gets a float called white factor, which [? you'd ?] say here.",
			"And then white factor effectively is just",
			"going to be summed onto whatever the RGB is",
			"of that pixel, whatever pixel that we're drawing when the shader is active.",
			"What that has the effect of doing is, white factor, if it's equal to 1.",
			"Here's the thing about shaders and a lot of this stuff,",
			"a lot of the data structures within shaders",
			"are based on floats that are from zero to one.",
			"So if we assign the RGB of something to a vec 3 that's 1, which is 111,",
			"that's going to be 255, 255, 255.",
			"Therefore, that pixels RGB is white, pure white, right?",
			"And so what we're doing here is on our battle sprite, self.blinking",
			"and one or zero, remember, that's the LUA [? turnerri ?] operations.",
			"So we're saying, if self.blinking is true, one else zero.",
			"So send our shader white factor based on whatever value self.blinking is.",
			"And so that will have the effect of the shader getting a one or a zero,",
			"and adding a one or a zero to the RGB of that sprite.",
			"And if blinking is set to true, the sprite's",
			"going to basically be drawn every pixel at 255, 255, 255.",
			"Otherwise, it'll get drawn with whatever that image's pixel value is",
			"at that position.",
			"Does that makes sense?",
			"OK.",
			"The syntax is a little bit weird, but that's",
			"what's happening here in this shader.",
			"And there's a link here where I found the shader,",
			"but it's a very simple, very simple shader,",
			"probably like one of the simplest shaders you could write.",
			"But it's a great example of what you can do with a shader, and pretty simply.",
			"And it's nice, because you can take like texture coordinates and do math",
			"based on that, or pixel coordinates and do math based on that.",
			"You can pass in like a sine function for example, in your file,",
			"and have that sine function perform work on like RG or B value of your sprite",
			"and do all kinds of cool stuff.",
			"It's really neat, like the possibilities are limitless with shaders.",
			"But that's how we get it to blink, because you",
			"can't do that outside of this--",
			"I mean, there's probably some weird way could get it to work as well,",
			"but this is probably the simplest way we can get our sprites blinking white.",
			"And so self.blinking just gets a timer.every0.1 or whatever.",
			"We'll actually see that in the attack state.",
			"But that'll flick to self.blinking between true and false.",
			"It'll negate itself over and over again.",
			"All right, so that's the battle sprite.",
			"Last thing we'll look at is another extremely simple class, opponent.",
			"All the opponent is is it has a party, that's it.",
			"But in a fully fleshed game, your opponent",
			"might have a like trainer sprite.",
			"A message that it says, like a full party",
			"of Pokemon, a gold value that will give you when you defeat it,",
			"all kinds of things.",
			"But it's here just as a simple illustration.",
			"Yeah?",
			"AUDIENCE: [INAUDIBLE] put a method for on defeat",
			"if you want to maybe have it kind of collapse",
			"the room or something like that.",
			"That would be another thing that you could do.",
			"SPEAKER 1: Oh, a method?",
			"Yeah, we can associate a method with an opponent called on defeat,",
			"or whatnot that will do arbitrary things, collapse the room,",
			"or otherwise.",
			"Yes, absolutely.",
			"Or even push a new state, like to like teleport",
			"us to a new location in the world map.",
			"Maybe we like cleared the elite four and we",
			"want to get teleported to like the end credits, exactly.",
			"Limitless possibility.",
			"So let's go ahead and take a look now while we have just like 20 more minutes",
			"or so left.",
			"We'll take a look at the battle state, because the battle",
			"state and the states that they're in are probably the more complicated side",
			"of how this works.",
			"So a battle state, we have a player, we have a bottom panel, the bottom panel",
			"for when we start the state just for that part,",
			"but otherwise, we're always pushing things onto it.",
			"Whether we've started the battle or not, because when we are fading in--",
			"sorry, yeah.",
			"Because when we initialize this state, we also push a fadeout state onto it.",
			"But we don't want to trigger the tween of the Pokemon sliding",
			"from left to right until after that state gets popped.",
			"So we have a flag here, which will get set to true on the very first update",
			"iteration.",
			"And then when that gets set to true, we'll",
			"actually tween the Pokemon going left to right,",
			"and kick off all the other sort of asynchronous processes",
			"that exist thereafter.",
			"But let's look at the battle one more time just to see what's going on.",
			"So I'm going to walk until I get into a battle.",
			"OK, we got a battle.",
			"So notice here, the fade in happens as soon as the--",
			"the slide in happens as soon as the fade starts, right,",
			"as soon as the fade finishes, I should say.",
			"We get a message popped onto the screen, right?",
			"It says a wild X appears.",
			"Right, that's the enemy Pokemon.",
			"We hit Enter.",
			"Turn this down a little bit.",
			"We hit Enter, and then we pop another--",
			"push another state onto the stack, another battle message, which",
			"is very similar to a dialog state.",
			"Says go our Pokemon.",
			"And then we push a menu onto the screen, right?",
			"We've got a menu that says, fight or run, a selection.",
			"It's a menu, which has a selection.",
			"And then now, this is the top of the stack, right?",
			"So it's the only thing getting input.",
			"Everything else is rendering beneath it, but nothing's getting input.",
			"So we have the option to either fight or run.",
			"Let's say we fight.",
			"We fight, we got a new state now, we're in an attack state.",
			"Several things just happened.",
			"So what happens as soon as we kick off the attack state?",
			"Yeah?",
			"AUDIENCE: You get a text box saying, x attacked y.",
			"SPEAKER 1: Yep, so the first thing we have happened",
			"is, a text box that says, x attacked y, where",
			"it could be either us or the opponent, because it's",
			"based on whoever has the higher speed.",
			"And then what happens next?",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: Well, it does.",
			"So let's take a look at it right now and tell",
			"me what exactly happens as soon as the text box pops up.",
			"",
			"So what were the pieces that happened there?",
			"AUDIENCE: Flash.",
			"SPEAKER 1: OK, so the attacker flashes white,",
			"right, which is the shader that we looked at.",
			"That's the shader blinking on and off.",
			"There's some timer that says, every 0.1 seconds, blink on or off.",
			"And then what happens?",
			"AUDIENCE: Then the damage is dealt. [INAUDIBLE]..",
			"SPEAKER 1: Well, damage is dealt, yes, but what happens visually as soon",
			"as the white blinks?",
			"AUDIENCE: The other one blinks.",
			"SPEAKER 1: The other one blinks.",
			"What's the other one blinking?",
			"AUDIENCE: I'm not sure.",
			"SPEAKER 1: So it's opacity, right?",
			"So remember, we're doing the exact same thing we just did with that white,",
			"with the blinking, but we're tweening every 0.1 seconds",
			"the opacity of the defending Pokemon.",
			"And then we take damage.",
			"Then what happens when we take damage?",
			"AUDIENCE: The reverse basically.",
			"SPEAKER 1: Well, what gets animated when the thing takes damage?",
			"We've animated the blinking, we've animated the opacity.",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: The health bar drops, right?",
			"So we're chaining several things together.",
			"We're chaining-- first, we're doing them every 0.1 seconds for six times,",
			"blink white.",
			"Then blink the other thing opacity, right?",
			"And we're playing sound effects at the same time too,",
			"we're playing a sound effect for the attack, sound effect for the hit.",
			"And then once that's finished, tween the health bar, right?",
			"So we've modified the health of the defending Pokemon.",
			"And then what happens after the first one, after that process is finished.",
			"",
			"AUDIENCE: Repeat for the other side?",
			"SPEAKER 1: Exactly, repeat the exact same thing, but for the other side.",
			"But what are we doing in between each of those?",
			"We have to do something.",
			"AUDIENCE: Checking if somebody dies.",
			"SPEAKER 1: Checking if somebody dies, exactly.",
			"And if somebody dies--",
			"let's say we die, what happens?",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: Well, we yeah, we go back to the play state.",
			"We fade out to black, and then we go back to the play state.",
			"What happens if we knock out the enemy?",
			"AUDIENCE: Go to this screen.",
			"SPEAKER 1: Exactly, and what happens on this screen?",
			"So what's the first thing that happens?",
			"Well, so recall, what happened when the Pokemon died?",
			"What happened?",
			"AUDIENCE: It fell off its platform thing.",
			"SPEAKER 1: Exactly, so that's a tween probably, right, on his y value.",
			"Then what happens?",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: Exactly, we've pushed a battle message state onto the screen.",
			"And then what happens when we press Enter?",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: What just happened right there?",
			"AUDIENCE: [INAUDIBLE] text box that says,",
			"you earned whatever experience points.",
			"Then you get your XP goes up.",
			"And presumably, it checks if you leveled up.",
			"SPEAKER 1: Yes, correct.",
			"AUDIENCE: [INAUDIBLE] to level up.",
			"SPEAKER 1: Exactly, so when push a dialogue",
			"to the screen that says you've earned x experience points, the XP bar tweens,",
			"right?",
			"We've gone up to however our ratio of current XP to next level XP is.",
			"We animate our text bar that way, or progress bar that way.",
			"Then we push a fade in state, right, to white.",
			"And then we have to pop everything off the stack,",
			"and then push a fade out state to the top of the stack,",
			"and then we're back to the play state.",
			"But if we do level up, we need to play the right music, play the right sound,",
			"and then part of the assignment will be actually, in that exact function,",
			"you're going to need to add some behavior that will do what?",
			"AUDIENCE: [INAUDIBLE] display the change basically,",
			"and what the new one will be.",
			"SPEAKER 1: Yes, and what are we going to need to do.",
			"What will we need to do in order to?",
			"AUDIENCE: [? Explain, ?] what was it called?",
			"The selection box, but without the selection part basically.",
			"SPEAKER 1: Yes, so once we've taken-- once we've leveled up",
			"and we're in that victory state of the battle state, right,",
			"we need to push a new state, a new menu state, which",
			"has all of those stats and the amount that they've increased.",
			"And then when we press Enter, presumably, we",
			"should pop that off, and then pop everything else back to the play state,",
			"and then do the fade in as normal.",
			"And that is the battle state in a nutshell,",
			"a lot of pieces that sort of are waiting on each other and input and stuff",
			"like that.",
			"But fairly easy to understand, just because a lot of it is very simple",
			"things that are just chained together over and over",
			"again to produce this sort of interesting behavior.",
			"",
			"So here we have sprites, recall the sprites are what",
			"we're going to need to animate those.",
			"We have health bars, which are progress bars, which",
			"are just two rectangles that are--",
			"ones a line, a black line, and ones a fill that fills beneath the line,",
			"so that we get a sense of how much is missing, right?",
			"We get the width, the height, a color.",
			"We can give our progress bar any color we want to,",
			"which is how we get the difference between, say, a health bar and an XP",
			"bar.",
			"We just make one red and one blue, and we draw them in different spots, right,",
			"but they're both equally progress bars.",
			"And then they get a value.",
			"Their value is whatever sort of determines how much of the rectangle",
			"is scaled.",
			"And the max is how much that should be divided by in order",
			"to produce a ratio for the total width--",
			"a scaler for the total width, which will allow us",
			"to get the sense of an amount missing.",
			"",
			"And then a player circle x, opponent circle",
			"x for the ellipses, just the graphical details for the actual Pokemon,",
			"so that we can get their stats, so that we can actually do dice rolls, or not",
			"really dice rolls in this case, but so that we can add or subtract",
			"HP based on attack and defense.",
			"",
			"And so here was the update, so trigger slide in.",
			"So what trigger slide in does, is a one second tween,",
			"which you talked about, right?",
			"The Pokemon going left to right, or left to right, right to left.",
			"There x values, just tweening in over one second.",
			"As soon as that's finished, we're going to trigger starting dialogue.",
			"So the starting dialogue is push a battle message state onto the stack.",
			"The battle message state is just like a dialogue state in that it gets a string",
			"here, so a wild something appears.",
			"It gets a callback function for once we press Enter on that.",
			"And the callback function is itself another push of a battle message state",
			"that says, go, and then our Pokemon.",
			"So notice that we're referencing the self.opponent.party.pokemon there,",
			"and self.player.party.pokemon there to get the actual name.",
			"And then once we've popped that off, then we push a battle menu state here,",
			"right?",
			"So let's take a look at the battle menu state.",
			"So this is interesting, because this is where we actually define",
			"the behavior for our menu works, right?",
			"Recall, we need something to tells us what happens when we press Fight,",
			"and what happens when we click Run.",
			"So when we click Fight, notice here items,",
			"right, self.battlemenu gets menu, and menu expects items.",
			"This items key, this table gets fed right into the selection, right?",
			"And the selection, it expects remember, a text,",
			"because it has to know what to render at that index.",
			"And then an on select function.",
			"And that on select function is the callback",
			"that gets executed when you press Enter at that particular location",
			"in the menu.",
			"In this case, fight, what that does is it pops this battle menu state where",
			"we no longer need the menu, so pop it.",
			"And then push a new take turn state.",
			"And then take turn state in this game is the Pokemon fighting each other, that's",
			"what the take turn state is.",
			"And it could have been called fight state, for example,",
			"but take turn state is a little more versatile.",
			"If we wanted to maybe make, maybe one Pokemon wants to run,",
			"the enemy wants to run and we want to fight, right?",
			"But you can't always run, so they should try to run,",
			"and then we can still fight them.",
			"Or they can use an item, or we can use an item, right?",
			"There's a lot of different things you can do.",
			"Or we want to throw a Poke ball at them, and if we fail,",
			"then they should fight us, right?",
			"Take turn is just a general purpose state",
			"that we could repurpose for whatever use we",
			"want to with any interaction between us and the opponent,",
			"whether it's fighting, running away, or using items, catching them, any",
			"of these combinations of things.",
			"But in this case, for the sake of this example, for simplicity,",
			"we've only implemented fighting.",
			"The we and the opponent fight each other during this state, which",
			"is, one attacks the other, and then we check for deaths",
			"in between both of those.",
			"And then go to victory or feinting depending on which of those holds true,",
			"if either.",
			"Running is slightly different.",
			"So if we run, I've programmed it to be 100%, it will 100% of the time work.",
			"In Pokemon, you actually have a chance to run",
			"based on what the delta is between you and your enemy.",
			"So if they're stronger than you, you actually aren't guaranteed to run away.",
			"So what we do here in my implementation is, we just pop the battle menu,",
			"so it's gone.",
			"And then we push, you fled successfully to the screen, this battle message.",
			"But there's a difference here versus the other battle messages that we've shown.",
			"I mean, it's not really different, but it's something to keep in mind.",
			"So I'm going to get into a battle.",
			"",
			"And so first of all, with that message that you just saw on the screen,",
			"I had to actually press Enter, right?",
			"I discarded it explicitly by pressing Enter.",
			"",
			"And that holds true also for these messages.",
			"It won't do anything until I press Enter.",
			"So I press Enter, and then I press Enter, and it does it's thing.",
			"But notice the difference between when I hit Run.",
			"I'm going to hit Run, I fled, and it does it on its own.",
			"It's not waiting for input, right?",
			"So how have we implemented that?",
			"",
			"Yeah?",
			"AUDIENCE: Using timer, you'd automatically",
			"do it the same way you would afterwards, instead of waiting for you input,",
			"you just wait for the timer to end.",
			"SPEAKER 1: Exactly, so we use a timer, and then when the timer is finished,",
			"we pop the battle message just like we would have popped it by pressing Enter.",
			"This false flag is what allows us to do that.",
			"We press false and false is, can we input or not?",
			"And we can't.",
			"So actually, if we didn't do any timer thing after this,",
			"and we just did that false flag, the battle message would be there forever,",
			"and we could never get rid of it, ever.",
			"It would get stuck forever.",
			"So we got to be responsible and say, OK, we're going to put a timer,",
			"we're going to call timer.after 0.5 seconds immediately after that.",
			"We're going to push a fade in state.",
			"And then we're going to do these two pop operations here as soon as that fade in",
			"happens.",
			"This first pop will pop the message, right, this message here",
			"that we didn't pop through input.",
			"So this is actually garbage collecting, in a sense, for us.",
			"It's discarding the message that we couldn't discard automatically.",
			"And then we're going to pop the battle state, right?",
			"So running will push the battle message, trigger a timer tween",
			"for our timer.after five seconds, sorry, push a fade in state.",
			"And then after the fade in states done, then pop both of those states.",
			"The message and the battle state take us back to the play state.",
			"And that's where we'll be as soon as that's all done.",
			"And that's all that's in the battle menu state.",
			"Any questions as to how the battle menu works, the difference between fight",
			"and run and sort of how those operate?",
			"OK.",
			"So let's take a look then at the take turn",
			"state, which is the last piece and the largest piece I would say.",
			"This is the most relevant to the assignment.",
			"So we maintain a reference to which Pokemon is first or second to go,",
			"which sprite is first or second to go, and which progress bar is",
			"first or second to go up here.",
			"And we do that, like I said, based on speed.",
			"So whichever Pokemon is faster, and we could have also",
			"made this a little bit shorter, just by keeping the sprites and the progress",
			"bars as members of the Pokemon object, or the class,",
			"but since they're kind of separated, like we don't necessarily",
			"want a Pokemon to have a reference to it's progress bar at all times,",
			"or I mean, you could.",
			"There's nothing preventing you from doing it.",
			"It would only serve the purpose of shortening this code here.",
			"But we need to keep a reference to this so that we can call attack here,",
			"which is this large bit of code twice, without needing",
			"to duplicate all of that code twice.",
			"Does that makes sense?",
			"So Tony, did you have a question?",
			"AUDIENCE: Well, I was just thinking, you could probably",
			"put that into a helper function where you just",
			"change the order you pass it in.",
			"SPEAKER 1: Sorry?",
			"Say it again.",
			"AUDIENCE: I just kind of feel like, I guess you could take the code,",
			"and you could avoid duplicating that I guess.",
			"'Cause it's just reversed, so what you could do is you could--",
			"if you passed into a helper function, which you would just,",
			"instead of passing it first--",
			"instead of passing it, opponent Pokemon, player Pokemon,",
			"you would pass it, player Pokemon, opponent Pokemon.",
			"And that would probably work I think.",
			"SPEAKER 1: Well, you also have to take into consideration--",
			"so the comment was, you could pass in the player Pokemon and the opponent",
			"Pokemon into a function, and then you reverse them in that function,",
			"I'm assuming, have reverence them and reverse them.",
			"But the sprites are decoupled from the Pokemon,",
			"and the progress bars are also decoupled from the Pokemon.",
			"So we could shorten this by making these four things here fields",
			"of the Pokemon objects, but they're not strictly",
			"pertinent to the operation of the Pokemon object.",
			"And it sort of kind of makes the Pokemon objects a little",
			"too, not basically abstract or lightweight enough,",
			"and it only serves the purpose of this point,",
			"of just shortening this bit of code.",
			"There's probably a more elegant way to do it, but it's hard to say.",
			"If this code were to get larger, maybe.",
			"But the gist of this is basically to have",
			"a pointer to whatever Pokemon, progress bars, and sprites should operate first",
			"in the attack versus what should operate second.",
			"And then the two will trade blows in order based on who's first and who",
			"second.",
			"So when we enter the take turn state, we're",
			"going to trigger that attack, here this function attack, which we'll take in",
			"first, second, first, second, first, second for the Pokemon",
			"sprite and progress bars.",
			"And then anonymous function, which get's executed as",
			"soon as the attack is finished, right?",
			"So this is a code that will pop a message that gets pushed in attack,",
			"and then this is where we actually check deaths, right?",
			"And it will determine whether we go to victory or faint screen or not.",
			"If not, and we return if so.",
			"If not, we're going to do another attack, but see,",
			"everything is reversed now.",
			"Now it's second, first, second, first, second, first.",
			"So we have the same function, self attack,",
			"which just takes in the attacker.",
			"And it's effectively, attacker, defender, attacker, defender, attacker,",
			"defender for the Pokemon sprites and progress bars.",
			"And so the attack function here first pushes a--",
			"well, OK.",
			"What does the attack--",
			"let's go over it one more time.",
			"What do we think the attack function does in order.",
			"We covered them just a moment ago, but what",
			"was the order that happens when something attacks another thing?",
			"Yeah?",
			"AUDIENCE: The attacker blinks white.",
			"SPEAKER 1: Attacker blinks white.",
			"AUDIENCE: Then the defender blinks opacity.",
			"SPEAKER 1: The defender toggles it's opacity.",
			"AUDIENCE: And the health bar shrinks.",
			"SPEAKER 1: Health bar shrinks.",
			"",
			"Exactly, and then that's basically it for attack, right?",
			"Blink, play a sound, blink, play a sound, shrink the bar,",
			"and also we're doing damage in that function as well.",
			"We actually have to change the status of the Pokemon.",
			"",
			"So this is effectively where it starts, right?",
			"We place a battle message state onto the stack that says,",
			"the attacker name attacks the defender name.",
			"",
			"Notice that it gets false just like the run message",
			"did, because we're not accepting input here.",
			"But it's up to us actually, it done up here at line 42 of the enter state.",
			"But we're going to after 0.5 seconds, play the attack animation.",
			"So power up sound every 0.1 second.",
			"We're going to member the blinking flag on the sprite,",
			"we're going to toggle it by setting it not to itself.",
			"So if something is not itself, if it's a truthy value, it becomes falsy,",
			"if it's falsy, it becomes truthy.",
			"So basically, toggling between true and false.",
			"Limit of six, right, because remember, every will",
			"do something every amount of time indefinitely,",
			"unless you pass in a limit of some value, in this case, a limit of six.",
			"So we're saying, only execute this code six times, only blink six times, right,",
			"only toggle six times, blink three times, right,",
			"because it has to go on and off.",
			"And then as soon as those six iterations are completed,",
			"we call the finished function on that timer object,",
			"which takes an honest function.",
			"As soon as that happens, we do the opacity bit, right?",
			"We blinked the attackers, so now we've got to blink the defender.",
			"So we play the hit sound.",
			"We do the exact same thing that we just did for the blinking, only now,",
			"every 0.1 second, we are setting its opacity to either 64 or 255,",
			"depending on what the value of its opacity is, right?",
			"So we are toggling between 64 and 255.",
			"Limit of six, take a function, calculate damage,",
			"which we've just very simply done it, attack minus defense, right, up to 1",
			"though.",
			"So if the defense is actually higher than the attack,",
			"which will still do at least one damage.",
			"And then over 0.5 seconds, we take the defenders bar,",
			"and we tween the value equal to their current HP minus damage, right?",
			"And then that will set in the bar, in the progress bar, it'll set its value.",
			"And even though the progress bar is behind state wise,",
			"right, it's on the bottom of the stack, because it's on the battle state.",
			"And we're in currently the take turn state,",
			"but because we're still manipulating the values of that state,",
			"and we're rendering every state, we're actually still manipulating",
			"that state regardless of the fact that it's not on the top of the stack.",
			"So that allows us to shrink that Pokemon's progress bar regardless of it",
			"being on the top of the stock or not.",
			"Then once that's finished, once the tween is finished,",
			"actually set the current HP to that amount,",
			"because we're only tweening the progress bar's value, which is",
			"independent from the Pokemon's value.",
			"And then that's the end of the attack.",
			"The attack is completely finished at that point.",
			"So any questions as to how the attack works?",
			"Just a chain of tweens basically.",
			"So we do an attack, then check deaths is the next function.",
			"And we're almost finished, I'm going to kind of go quickly here, it's at 7:30.",
			"Check deaths is the player Pokemon current HP less and equal to 0,",
			"or is the opponent Pokemon current HP less and equal to zero.",
			"If the former's true, we need to faint, and if the latter is true,",
			"we need to go to victory.",
			"So faint is effectively a battle state, right, when it says, you fainted.",
			"And then what?",
			"Remember what happens when we faint?",
			"AUDIENCE: [INAUDIBLE] text box, and then it leaves.",
			"SPEAKER 1: It leaves, do you remember how",
			"it leaves as it differs from like running away, for example?",
			"AUDIENCE: [INAUDIBLE].",
			"SPEAKER 1: Well, beyond that, aesthetically,",
			"do you remember how it's different?",
			"AUDIENCE: [INAUDIBLE] differently to black, I think.",
			"SPEAKER 1: It does.",
			"It fades to black instead.",
			"So that's how we can differentiate when we're fainting",
			"versus when we're running away.",
			"And so that's what we're doing here.",
			"Notice that the fade in state RGB is zero, all of those.",
			"So it's going to fade in to 000255, as opposed to 255, 255, 255, 255.",
			"So it's going to be a black fade in versus a white fade in.",
			"And then once we've--",
			"this it just sort of a thing that I implemented so",
			"that we can keep playing indefinitely.",
			"But once that's finished, restore the player Pokemon to full health,",
			"resume all the field music stuff.",
			"And then once we've pushed a fade out state, 000,",
			"and then we've gone back to the field, let's push.",
			"Notice that here it takes a function, right, after the fade out state's done.",
			"Once the fade out is finished-- so as soon as we're back to the play state,",
			"push a dialogue state that says, your Pokemon",
			"has been fully restored, try again.",
			"Which will take the context, and we'll [INAUDIBLE]",
			"to press Enter to get past it.",
			"That's fainting.",
			"",
			"Victory is a little bit more robust.",
			"So victory is-- do you remember what happen when we get a victory?",
			"",
			"AUDIENCE: Well, it has to check leveling up as well.",
			"It says, you've defeated your opponent, then your XP bar increases.",
			"Then if you've leveled up, it tells you that you leveled up,",
			"and then it leaves.",
			"SPEAKER 1: So it tells you you defeated your opponent, XP bar increases,",
			"checks for a level up, and then leaves.",
			"After displaying the level up message or not, it leaves.",
			"It pops everything back to the play state, exactly.",
			"So remember, the very first thing that happens",
			"though, the opponent sprite gets tweened over the course of 0.2 seconds,",
			"it's y value to virtual height, which means,",
			"all the way to the bottom of the screen, right?",
			"The typical defeated your opponent from Pokemon sort of animation.",
			"Once that's finished, play victory music,",
			"push a battle message state that says, victory, right?",
			"Once that's popped of the stack, calculate the XP,",
			"which is, I just chose arbitrarily sum all the IVs of that Pokemon times",
			"it's level, and that's the XP you got.",
			"Push a state that says, you earned x XP, right?",
			"It's false, so that means it doesn't take input.",
			"So that means it's up to us in order to pop that off the stack.",
			"So after 1.5 seconds, we play a sound, and then we tween that XP bar going up,",
			"right?",
			"So that's what's going on here, self.battleState.playerxpbar,",
			"we're tweening of the math.men, of the XP plus XP,",
			"or XP to level, because if we don't, it could go past the edge of the XP bar,",
			"because we could go over our XP to level, right?",
			"Let's say we have 10 XP till we gain a level, we could gain 20 XP.",
			"We'd be 10 XP overboard.",
			"So we don't want to tween our XP bar past the edge of the XP bar,",
			"it would be a graphical glitch.",
			"So a math.men our XP plus XP, and our XP to level,",
			"which will take the lesser of the two values.",
			"Once that's done, it's tweened, we're going to pop the message off,",
			"and then we're going to actually add the XP, level up.",
			"So this is where we level up if the XP is greater than XP to level.",
			"Play a sound, set the XP to the current XP minus our 2 level XP,",
			"which will mean that we'll have some carry over, right?",
			"And then actually call the level up function.",
			"Now here is where--",
			"oh, and also after that, congratulations, you've leveled up.",
			"Fadeout white, which is just a white fade out here.",
			"I used it twice, so I made a function for it.",
			"Just pushes a fade in state.",
			"Stop the victory music, play the field music, pop, push a fade out state.",
			"So either way, when we've got a victory, we're going to push a fade out white,",
			"or we're going to call fade out white, correct?",
			"So push a battle message state, and then as soon",
			"as we press Enter, because we leveled up, fade out to white.",
			"And if we didn't level up, but we still got to victory,",
			"we still need to fade out white.",
			"And so this is where your assignment is, assignment 7.",
			"Assignments 7 is, notice that we have self.playerPokemon level up.",
			"The key thing that we are going to need to do here",
			"is add a menu that shows us how we leveled up.",
			"And if you recall, playerPokemon level up returns all the stats",
			"that you've increased this level.",
			"So you can show a menu that just says, your HP plus that amount, right?",
			"You're going to get all four values.",
			"It's going to explode to all four of those values.",
			"And then you're going to create a new battle--",
			"or not new battle menu, but a new menu of whatever you want,",
			"but probably on the right side of some vertical height for items.",
			"The only difference here, the only key thing",
			"that you're going to take into consideration",
			"is, and I'll go back to the slides, because we're actually",
			"done at this point going over the code.",
			"But the selection items, you won't be able to actually select anything,",
			"it's just going to be purely visual.",
			"So you're going to need to edit selection to have the option",
			"to not have a cursor.",
			"And this is detailed in the spec, which was actually",
			"released before lecture today.",
			"So you can take a look at that.",
			"But you'll need to make a change to selection.",
			"But all the pieces are there.",
			"It should be a fairly easy assignment as long",
			"as you understand how the states work, how the menu works,",
			"and how to create a menu based on those values,",
			"and how to actually get the values from level up.",
			"So some missing features that we didn't talk about, which we didn't implement",
			"are, for example, the detailed level of screen,",
			"which is your assignment, monster catching, right?",
			"We only have a party of one Pokemon throughout this whole entire thing,",
			"but one of the arguably main appeals of the game is to be able to catch more.",
			"So that would be something to add, to prioritize probably adding to the game.",
			"A field menu so can actually look at all the Pokemon you've caught.",
			"That would be nice, so you can actually see how much HP they have.",
			"In item inventory, because the game, the regular games have items.",
			"You can use potions, you can find gold nuggets",
			"that you sell for a ton of money.",
			"Different abilities, currently we only have basically one fight operation,",
			"which is like a tackle.",
			"And the game itself, the regular game has",
			"like over 100 different moves that have elemental attributes,",
			"and do different things, and cause status effects,",
			"buff you or your opponent.",
			"So adding those is appealing, and maybe being",
			"able to represent them as data is nice to.",
			"Trainers that you can encounter in the game that have their own preset",
			"or randomized Pokemon for to fight.",
			"Monster evolution, because that's like one of the funnest things",
			"is taking a really weak Pokemon, and like raising",
			"it to become really strong, and evolving it at a certain level.",
			"Towns, routes, other levels beyond just our basic square area.",
			"Monster breeding, which is introduced in the second series,",
			"so that you can take two Pokemon and have a chance",
			"to get an egg with really good stats or a really rare Pokemon from it.",
			"And then like a day night cycle maybe where different Pokemon come out",
			"at different times of the day.",
			"So you are incentivize to play at different times",
			"of the day for that purpose.",
			"But that was it for Pokemon.",
			"Next week we'll actually be diving into Unity.",
			"So we're actually done with LOVE 2D, which is a lot of fun,",
			"but now we'll be going into how to make 3D games.",
			"So this is a screenshot from the game we'll be making next week,",
			"which is a 3D sort of side scrolling Flappy Bird esque helicopter",
			"game based on a famous web game called Helicopter Game.",
			"And it was sort of one of the early ancestors to Flappy Bird.",
			"On the Wikipedia page, it actually says that too.",
			"I remember playing, it was back in like 2007, or 2006, or something like that.",
			"But your goal in this game-- this is a modified version of that--",
			"your goal is your-- everything is 3D, but it's a side scrolling perspective.",
			"So this is called 2.5D for that reason.",
			"You're controlling a helicopter, you're the purple helicopter.",
			"And your goal is to in an infinitely scrolling world.",
			"So we'll revisit infinite scrolling, but in 3D, avoid skyscrapers.",
			"So you can see there is a green skyscraper, crudely modeled.",
			"Collect coins, so you can see there's a coin there, it's a 3D coin,",
			"it will always be spinning.",
			"Your coins are up at the top right.",
			"You'll see a background that's infinitely scrolling.",
			"And then you'll have jets that will randomly",
			"fly above you to sort of give you another sort of layer or dimension",
			"of obstacles to watch out for.",
			"And this will teach us a lot of the basics of how unity works,",
			"so we can start getting into even more interesting things like a first person",
			"like sort of core exploration game.",
			"And then lastly, when we end the semester with Portal,",
			"we'll look at a couple of fancy things there.",
			"But that was it for Pokemon.",
			"Thanks for coming, and I'll see you guys next",
			"time.",
			""
		],
		"is_youtube": false
	},
	"video_010": {
		"section": "CS50G 2020",
		"subsection": "3D Helicopter Game",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V001000_DTH.mp4",
			"https://edx-video.net/HarvardXCS50G-V001000/HarvardXCS50G-V001000.m3u8"
		],
		"video_duration": 7015,
		"speech_period": [
			3.493, 12.917, 1.0, 1.44, 1.08, 2.97, 2.13, 3.42, 6.24, 1.01, 2.0, 4.52,
			2.35, 1.972, 1.708, 1.375, 1.072, 1.333, 2.91, 1.53, 1.57, 1.43, 2.458,
			2.822, 3.33, 2.1, 0.38, 1.291, 3.859, 2.0, 3.18, 4.35, 2.91, 1.83, 2.43,
			3.69, 2.1, 2.699, 2.041, 2.28, 2.833, 2.974, 2.833, 2.43, 3.78, 1.259,
			2.791, 4.35, 3.27, 4.59, 1.92, 5.67, 2.74, 0.731, 1.749, 1.708, 4.082,
			2.435, 2.875, 2.82, 3.03, 2.82, 3.66, 2.74, 3.02, 4.0, 2.75, 4.819, 2.291,
			2.22, 3.12, 2.52, 3.3, 3.02, 1.833, 1.867, 2.04, 3.12, 2.426, 2.676,
			0.898, 1.61, 1.23, 2.51, 2.41, 3.81, 2.91, 1.98, 1.71, 3.57, 2.22, 3.272,
			3.618, 2.22, 4.105, 2.411, 1.025, 0.499, 1.227, 1.083, 0.916, 2.234, 2.67,
			2.7, 1.77, 3.45, 2.559, 1.041, 0.99, 2.82, 2.49, 2.296, 1.374, 2.18, 4.77,
			3.51, 4.83, 3.615, 2.625, 2.102, 1.708, 2.79, 2.71, 4.13, 2.855, 2.375,
			0.71, 3.18, 2.61, 3.27, 3.45, 0.81, 2.083, 4.717, 1.0, 1.65, 3.36, 2.13,
			1.719, 1.291, 2.81, 2.14, 2.69, 0.75, 1.583, 3.557, 1.47, 5.47, 4.615,
			2.125, 6.24, 1.26, 2.1, 2.97, 2.79, 3.6, 1.9, 3.92, 4.08, 2.67, 3.73,
			1.82, 2.0, 2.08, 2.94, 2.04, 4.6, 2.96, 2.28, 1.499, 1.291, 3.15, 2.79,
			1.69, 2.284, 3.166, 3.23, 0.76, 2.46, 2.81, 2.08, 2.34, 3.33, 1.32, 2.16,
			3.12, 3.15, 3.03, 0.57, 6.11, 1.75, 0.875, 2.995, 1.055, 2.125, 2.04,
			5.21, 2.29, 1.708, 3.122, 1.38, 4.35, 2.625, 2.835, 2.19, 2.71, 3.83,
			2.977, 3.083, 2.992, 1.958, 2.541, 3.039, 6.93, 1.62, 2.64, 2.692, 1.958,
			2.989, 1.041, 2.63, 3.0, 3.45, 1.67, 5.15, 1.79, 3.42, 5.444, 0.916, 3.57,
			4.59, 2.31, 3.24, 2.61, 2.97, 4.29, 4.404, 2.166, 1.83, 1.71, 2.67, 3.29,
			3.19, 1.404, 2.916, 1.5, 3.262, 1.958, 1.708, 3.032, 3.109, 3.041, 1.23,
			1.62, 3.19, 1.75, 3.12, 2.85, 1.86, 1.92, 2.607, 1.833, 1.612, 1.708,
			2.79, 1.75, 2.01, 4.427, 2.833, 3.9, 3.84, 2.07, 3.32, 2.1, 3.13, 4.08,
			1.8, 2.524, 1.916, 2.11, 1.91, 4.34, 0.5, 1.21, 1.125, 0.72, 0.525, 0.63,
			0.5, 3.12, 2.576, 1.624, 2.69, 6.27, 2.1, 4.605, 1.875, 4.08, 1.98, 6.24,
			2.34, 2.76, 2.37, 4.07, 3.36, 2.56, 3.39, 3.12, 3.43, 6.2, 1.649, 2.041,
			1.96, 4.13, 1.56, 5.1, 2.13, 2.61, 1.09, 3.92, 4.38, 2.07, 3.795, 3.445,
			3.26, 5.1, 1.2, 4.41, 3.72, 2.44, 3.03, 2.54, 2.58, 2.53, 4.73, 5.13,
			2.46, 1.68, 3.96, 3.36, 2.29, 3.324, 1.166, 0.75, 2.1, 2.76, 1.98, 2.49,
			2.49, 1.53, 1.41, 1.04, 1.3, 3.51, 6.78, 5.22, 2.012, 0.958, 1.434, 2.916,
			2.64, 3.19, 1.88, 2.04, 2.7, 1.24, 3.14, 2.19, 3.26, 2.92, 4.24, 3.38,
			4.06, 2.39, 1.93, 3.03, 3.11, 7.93, 0.5, 5.94, 3.64, 3.89, 1.799, 2.56,
			2.541, 2.166, 4.584, 3.51, 2.37, 1.98, 2.61, 2.91, 1.41, 6.06, 3.51, 3.24,
			2.31, 4.407, 1.583, 4.66, 5.55, 3.18, 2.97, 3.029, 2.041, 2.48, 1.75,
			1.24, 1.87, 3.17, 2.34, 3.6, 2.28, 3.22, 0.5, 2.94, 2.58, 1.8, 4.26, 2.34,
			2.36, 5.04, 3.41, 3.29, 3.81, 3.27, 3.21, 1.35, 2.4, 0.87, 1.41, 2.12,
			2.32, 4.17, 3.534, 0.916, 1.97, 2.045, 1.375, 1.916, 2.764, 3.36, 2.642,
			0.958, 4.8, 2.75, 1.96, 0.12, 0.5, 0.64, 2.8, 2.12, 0.7, 0.5, 0.833,
			2.797, 2.862, 2.208, 2.1, 2.76, 3.16, 4.02, 3.78, 2.94, 5.0, 2.34, 2.25,
			3.09, 2.58, 3.0, 2.46, 1.5, 2.61, 3.03, 1.29, 2.31, 1.05, 3.54, 6.12,
			3.18, 3.36, 6.87, 4.38, 4.26, 3.99, 3.0, 4.05, 1.57, 1.85, 2.31, 3.21,
			4.83, 4.57, 3.209, 3.041, 2.04, 4.03, 4.17, 3.84, 4.77, 2.01, 3.9, 3.48,
			2.19, 3.579, 1.791, 3.45, 0.782, 2.892, 3.856, 1.842, 3.952, 3.966, 4.53,
			2.835, 2.465, 2.006, 1.874, 2.82, 3.15, 3.06, 7.26, 3.18, 1.86, 1.68,
			5.56, 1.77, 1.382, 1.958, 5.8, 2.79, 4.81, 4.78, 3.29, 3.02, 4.32, 3.48,
			1.71, 0.958, 3.482, 2.19, 4.03, 1.73, 3.45, 3.42, 7.34, 1.0, 1.254, 2.916,
			1.29, 3.33, 2.85, 1.29, 5.03, 4.66, 1.84, 4.7, 4.12, 4.52, 1.39, 1.984,
			2.486, 2.45, 5.31, 4.77, 4.17, 4.5, 3.0, 3.63, 2.054, 2.916, 3.64, 3.45,
			3.03, 3.72, 1.59, 2.52, 2.03, 1.51, 2.23, 2.66, 2.52, 2.13, 1.65, 4.08,
			3.6, 2.52, 1.92, 2.82, 2.09, 1.6, 4.08, 1.63, 2.555, 0.75, 3.385, 5.19,
			1.77, 0.7, 3.4, 5.53, 1.32, 3.09, 3.96, 4.38, 3.6, 3.45, 2.85, 2.28, 6.78,
			5.49, 2.55, 0.96, 5.19, 2.49, 4.62, 3.377, 2.833, 1.86, 4.39, 6.02, 4.64,
			3.46, 5.08, 1.17, 0.5, 1.291, 4.119, 0.5, 1.583, 5.417, 6.23, 1.26, 2.74,
			2.18, 1.69, 3.83, 1.78, 1.91, 2.73, 5.37, 3.79, 1.73, 4.02, 2.59, 2.154,
			2.166, 2.6, 1.89, 2.51, 2.69, 1.885, 2.475, 3.1, 1.7, 2.5, 3.71, 3.55,
			3.17, 1.54, 3.34, 2.66, 4.05, 1.38, 2.29, 2.03, 2.574, 1.416, 3.73, 0.5,
			2.46, 0.75, 4.02, 3.54, 2.82, 6.63, 3.39, 3.42, 4.14, 3.63, 3.57, 3.6,
			1.44, 2.7, 2.04, 3.76, 4.084, 0.916, 3.64, 3.44, 2.21, 3.16, 2.61, 3.51,
			4.66, 2.06, 1.166, 3.848, 1.916, 5.11, 0.5, 7.05, 1.43, 3.22, 1.29, 5.94,
			5.74, 2.76, 4.05, 2.22, 1.56, 2.94, 4.86, 4.17, 3.039, 1.791, 4.08, 4.32,
			2.43, 3.44, 2.02, 3.35, 3.42, 3.34, 2.701, 0.999, 3.9, 4.47, 2.15, 4.07,
			1.369, 1.68, 3.701, 3.2, 4.09, 3.62, 1.8, 1.791, 3.079, 2.569, 3.301,
			2.05, 2.48, 2.041, 3.089, 5.53, 2.78, 3.121, 1.499, 3.69, 1.65, 2.46,
			2.49, 2.572, 1.958, 3.664, 1.541, 2.411, 2.124, 1.874, 2.666, 3.48, 2.97,
			2.31, 1.125, 3.146, 2.879, 0.5, 1.62, 2.5, 2.409, 2.291, 3.33, 2.922,
			2.208, 1.77, 5.31, 3.18, 3.09, 3.87, 2.49, 4.86, 4.11, 1.56, 2.979, 1.791,
			4.44, 2.19, 3.24, 3.06, 2.67, 2.64, 1.86, 1.77, 4.02, 2.67, 4.1, 5.35,
			1.31, 2.146, 2.124, 4.882, 1.958, 2.8, 2.127, 1.583, 5.28, 4.17, 3.306,
			2.874, 2.0, 1.619, 2.291, 1.98, 1.86, 4.23, 6.09, 1.47, 3.96, 2.98, 2.962,
			3.208, 0.6, 3.6, 4.48, 0.5, 4.28, 1.75, 3.9, 4.27, 2.0, 3.64, 1.85, 2.58,
			3.51, 0.5, 2.208, 2.722, 3.5, 1.98, 0.821, 0.499, 3.57, 1.0, 2.041, 3.679,
			3.06, 5.22, 1.59, 4.47, 0.77, 2.899, 1.791, 1.458, 4.972, 3.526, 2.374,
			2.4, 3.03, 4.11, 3.3, 2.25, 3.48, 1.68, 4.74, 3.405, 2.625, 4.62, 2.71,
			4.37, 1.291, 2.249, 6.6, 2.79, 5.16, 3.57, 1.7, 1.708, 1.572, 4.08, 4.68,
			3.24, 5.64, 2.82, 2.58, 1.57, 2.72, 4.14, 2.32, 3.2, 3.63, 4.02, 6.33,
			4.11, 2.37, 2.49, 5.79, 4.5, 2.76, 2.5, 3.557, 1.333, 2.435, 2.625, 2.4,
			7.2, 3.78, 4.17, 4.26, 2.37, 2.83, 2.372, 2.958, 0.958, 2.822, 6.57, 2.76,
			2.61, 1.92, 6.93, 1.5, 2.55, 4.89, 2.88, 3.12, 3.03, 2.7, 3.57, 2.64,
			2.152, 1.208, 3.3, 4.139, 2.041, 5.28, 1.2, 1.41, 3.42, 2.724, 2.166,
			2.44, 2.335, 2.125, 2.333, 1.547, 1.94, 2.52, 3.24, 4.26, 7.59, 5.22,
			6.93, 1.42, 4.92, 3.92, 0.5, 0.715, 1.125, 3.555, 1.875, 3.57, 3.46, 2.24,
			5.01, 2.73, 4.137, 1.333, 2.57, 6.87, 2.289, 1.791, 2.384, 0.984, 3.452,
			1.061, 2.589, 0.916, 3.704, 5.73, 2.03, 1.84, 4.98, 2.73, 3.39, 3.2, 2.14,
			2.97, 2.22, 2.44, 1.67, 1.65, 2.4, 2.55, 4.44, 2.46, 2.01, 6.51, 2.955,
			4.229, 2.416, 3.36, 3.39, 5.18, 4.75, 2.85, 3.66, 4.11, 1.74, 0.53, 4.12,
			2.395, 2.375, 2.73, 3.12, 5.25, 2.13, 6.27, 4.05, 1.65, 3.03, 5.05, 8.46,
			2.79, 2.34, 1.01, 2.82, 4.99, 2.286, 1.874, 8.25, 3.849, 1.041, 2.416,
			2.153, 1.791, 1.45, 1.34, 2.37, 2.34, 3.12, 1.8, 1.89, 2.97, 5.07, 3.04,
			3.11, 2.01, 7.92, 3.06, 4.59, 2.01, 4.44, 2.63, 1.66, 3.17, 1.25, 2.999,
			2.571, 3.0, 5.49, 4.2, 2.73, 2.88, 1.6, 2.91, 3.32, 2.44, 4.83, 2.882,
			0.708, 2.466, 1.374, 4.26, 4.29, 6.7, 1.09, 3.85, 3.21, 6.48, 3.203,
			2.821, 1.916, 1.24, 5.52, 2.97, 4.08, 3.75, 2.04, 2.7, 1.958, 1.792, 4.17,
			3.51, 3.89, 5.401, 1.249, 2.93, 1.65, 5.305, 2.625, 5.81, 4.842, 3.139,
			1.999, 3.72, 4.29, 2.79, 2.91, 2.13, 3.87, 3.27, 4.23, 2.55, 4.28, 1.728,
			2.872, 3.24, 3.81, 2.94, 7.57, 3.77, 3.81, 1.465, 0.625, 1.666, 3.174,
			3.87, 3.63, 3.21, 2.341, 2.249, 2.59, 0.5, 2.416, 1.414, 3.19, 2.25,
			5.334, 1.416, 3.24, 2.61, 2.22, 1.95, 2.52, 2.35, 3.74, 3.78, 3.2, 3.55,
			3.24, 4.38, 3.42, 2.43, 2.624, 2.416, 3.15, 2.39, 3.14, 0.5, 3.18, 3.33,
			2.7, 1.872, 3.208, 3.087, 0.833, 4.46, 3.96, 2.5, 2.53, 2.81, 3.99, 2.61,
			3.12, 1.096, 2.624, 4.32, 1.62, 2.17, 2.09, 1.98, 3.18, 5.85, 3.45, 2.7,
			1.92, 3.55, 2.63, 6.06, 3.9, 3.961, 0.833, 0.796, 0.85, 2.47, 2.4, 2.85,
			2.76, 6.12, 2.824, 1.416, 2.0, 6.06, 4.78, 3.15, 1.5, 3.4, 3.43, 2.83,
			1.68, 3.72, 2.97, 3.54, 5.24, 5.02, 4.74, 3.0, 3.93, 1.95, 3.09, 5.32,
			2.59, 1.75, 1.87, 5.07, 1.49, 1.2, 1.41, 1.47, 3.91, 3.65, 1.929, 1.041,
			2.1, 1.75, 2.291, 2.37, 1.749, 1.98, 1.374, 2.266, 0.5, 1.38, 3.0, 1.89,
			2.7, 3.27, 1.5, 4.29, 1.829, 2.041, 1.445, 2.625, 3.206, 1.874, 5.476,
			1.874, 1.53, 2.55, 1.56, 3.03, 3.54, 1.98, 1.44, 2.62, 2.54, 2.75, 3.01,
			4.174, 1.166, 3.85, 2.7, 3.26, 2.36, 0.511, 2.355, 4.884, 0.75, 0.78,
			2.291, 3.259, 3.75, 1.56, 4.02, 4.23, 4.57, 2.75, 2.2, 2.0, 1.62, 1.35,
			2.85, 4.53, 5.85, 1.26, 3.6, 3.21, 2.727, 1.833, 3.48, 1.542, 3.041,
			1.327, 5.55, 1.26, 3.66, 3.8, 1.75, 2.22, 3.65, 2.77, 2.08, 2.58, 3.09,
			4.17, 0.5, 0.99, 1.75, 4.294, 1.916, 1.98, 3.03, 4.86, 3.54, 2.29, 3.2,
			3.3, 4.05, 1.99, 3.65, 3.73, 2.24, 2.055, 2.565, 2.66, 1.76, 2.09, 3.522,
			2.458, 2.624, 5.146, 3.98, 4.2, 2.4, 2.97, 5.43, 3.78, 3.75, 2.28, 4.38,
			1.86, 4.842, 2.208, 3.75, 3.12, 3.73, 3.03, 1.801, 2.749, 6.21, 2.73,
			0.93, 2.28, 1.98, 2.04, 3.45, 1.05, 4.872, 2.958, 1.71, 5.37, 7.77, 1.41,
			3.69, 2.85, 5.34, 2.1, 2.37, 7.09, 3.14, 2.983, 2.583, 0.932, 3.725,
			3.768, 2.525, 2.041, 3.976, 4.97, 2.997, 0.958, 1.512, 5.764, 2.666,
			3.654, 1.666, 1.67, 3.78, 3.589, 3.291, 2.21, 2.52, 4.92, 4.71, 3.46,
			3.256, 2.374, 2.01, 4.082, 1.208, 5.25, 4.505, 2.375, 4.184, 2.416, 2.789,
			1.541, 2.84, 2.25, 3.839, 2.791, 1.93, 2.68, 1.168, 0.5, 3.012, 2.73,
			2.179, 1.791, 1.429, 2.011, 5.07, 4.666, 3.124, 4.24, 0.599, 1.411, 1.72,
			0.499, 1.2, 1.541, 3.98, 2.31, 2.64, 2.279, 2.731, 4.5, 3.63, 4.38, 5.4,
			1.44, 9.78, 7.47, 2.36, 3.91, 2.8, 3.32, 2.7, 3.03, 3.587, 2.083, 5.13,
			3.72, 0.86, 4.4, 2.794, 0.916, 3.012, 2.958, 2.22, 4.41, 2.28, 10.08, 1.8,
			2.85, 2.43, 2.64, 3.9, 2.58, 3.51, 5.59, 4.16, 4.42, 3.38, 1.72, 4.464,
			0.996, 0.708, 2.902, 2.29, 3.44, 0.8, 2.8, 3.774, 1.166, 2.67, 0.5, 0.66,
			1.25, 4.53, 0.78, 2.7, 2.19, 4.121, 0.499, 1.51, 4.29, 4.01, 1.81, 1.43,
			3.0, 4.11, 1.92, 4.514, 1.916, 3.125, 4.845, 3.27, 4.68, 2.25, 2.91, 2.01,
			4.98, 3.51, 1.44, 3.39, 2.62, 4.1, 3.9, 6.61, 2.85, 3.54, 2.06, 5.25,
			2.65, 3.944, 0.916, 2.3, 1.32, 4.8, 0.78, 3.33, 6.45, 1.285, 2.375, 3.0,
			2.471, 0.499, 1.77, 1.47, 3.57, 4.8, 1.68, 2.07, 2.58, 3.78, 4.77, 2.86,
			3.06, 1.94, 2.64, 4.65, 1.852, 1.958, 1.457, 2.083, 1.56, 1.8, 3.24, 4.08,
			3.3, 4.06, 4.44, 5.38, 0.67, 2.73, 2.88, 2.67, 3.46, 2.87, 1.59, 4.41,
			5.07, 1.09, 3.53, 3.9, 3.06, 3.33, 3.04, 3.44, 2.49, 3.93, 5.13, 3.39,
			5.46, 3.87, 6.54, 4.44, 4.5, 2.47, 2.18, 2.46, 3.78, 3.93, 5.28, 1.92,
			1.92, 2.34, 1.56, 4.77, 3.0, 0.5, 4.88, 0.95, 2.45, 3.61, 0.945, 1.155,
			3.224, 0.5, 3.693, 1.333, 0.619, 1.916, 2.458, 4.478, 0.499, 6.75, 6.34,
			3.315, 2.375, 1.25, 2.09, 1.5, 5.67, 2.52, 2.93, 2.085, 1.125, 0.499,
			3.098, 1.833, 2.16, 4.59, 3.12, 5.67, 2.77, 2.12, 3.81, 2.2, 0.5, 3.401,
			0.749, 3.74, 5.19, 6.12, 3.45, 3.939, 2.541, 3.24, 6.09, 4.86, 3.31, 4.04,
			4.53, 2.55, 1.791, 4.509, 2.31, 6.84, 3.85, 2.0, 3.291, 3.789, 3.57, 2.04,
			3.96, 1.4, 4.45, 3.909, 2.541, 2.58, 4.32, 4.292, 1.958, 3.53, 1.41, 2.82,
			1.13, 1.9, 0.72, 3.12, 4.56, 3.78, 3.36, 4.02, 4.93, 1.77, 3.7, 4.43,
			3.41, 3.44, 3.88, 3.21, 4.11, 2.37, 2.87, 3.212, 1.208, 2.88, 2.94, 2.297,
			2.083, 5.52, 2.14, 2.42, 3.51, 1.672, 1.958, 4.35, 3.3, 1.38, 3.66, 3.34,
			3.35, 4.12, 3.65, 3.16, 1.19, 3.36, 1.44, 2.25, 1.92, 7.02, 2.16, 2.34,
			2.34, 3.69, 5.275, 2.333, 1.502, 2.29, 6.99, 4.781, 0.499, 1.532, 2.458,
			4.32, 1.72, 2.99, 1.93, 1.416, 3.044, 3.72, 0.52, 1.749, 3.491, 3.09,
			3.75, 4.86, 4.86, 3.89, 2.17, 5.73, 7.1, 5.5, 3.12, 4.38, 2.825, 0.625,
			2.97, 5.25, 1.99, 3.38, 1.23, 4.11, 3.717, 1.833, 4.11, 2.85, 3.36, 5.71,
			3.1, 4.16, 2.49, 4.27, 2.96, 2.97, 7.2, 4.26, 0.57, 1.64, 5.71, 2.34,
			4.74, 2.67, 5.36, 4.54, 3.84, 3.94, 2.09, 1.916, 2.104, 2.1, 3.96, 2.82,
			5.85, 4.76, 5.34, 5.62, 4.89, 1.88, 5.048, 0.5, 6.842, 0.77, 5.79, 3.12,
			3.18, 2.07, 2.43, 3.3, 4.95, 6.4, 4.62, 1.38, 2.44, 5.93, 5.67, 1.83,
			2.43, 3.9, 2.91, 0.63, 4.26, 2.61, 1.26, 1.23, 3.54, 2.2, 3.53, 6.025,
			4.615, 1.5, 2.124, 1.746, 4.17, 2.448, 4.682, 3.22, 2.25, 2.34, 2.75,
			2.34, 3.48, 2.53, 4.61, 1.455, 1.905, 3.397, 3.083, 2.124, 2.626, 2.27,
			8.61, 3.15, 3.78, 2.46, 1.458, 2.952, 3.66, 2.73, 3.12, 1.714, 2.666,
			2.22, 1.26, 1.89, 1.5, 3.39, 5.79, 2.7, 4.66, 4.61, 3.33, 4.26, 1.89,
			1.08, 0.5, 2.15, 2.0, 3.9, 3.18, 1.53, 1.229, 2.041, 2.49, 3.729, 1.791,
			3.48, 0.54, 3.42, 7.136, 4.924, 3.4, 3.37, 1.21, 2.37, 4.71, 6.09, 2.91,
			3.51, 4.56, 2.37, 6.18, 0.81, 2.73, 4.49, 2.7, 3.85, 2.58, 3.72, 4.05,
			2.97, 6.15, 4.32, 5.79, 4.8, 3.44, 2.68, 3.24, 2.19, 2.82, 3.06, 2.85,
			4.95, 3.0, 4.92, 2.25, 1.53, 1.57, 6.23, 2.82, 2.21, 3.69, 3.87, 1.547,
			1.333, 3.45, 2.072, 1.708, 0.45, 1.08, 0.75, 1.17, 1.25, 2.68, 3.9, 3.42,
			1.49, 2.56, 3.65, 4.03, 4.41, 2.01, 2.82, 3.12, 2.13, 3.81, 4.35, 3.54,
			2.28, 2.684, 0.916, 2.431, 0.499, 2.898, 3.382, 2.25, 1.5, 3.63, 4.29,
			2.01, 3.0, 2.2, 5.0, 3.16, 2.18, 1.112, 2.458, 3.54, 4.8, 2.79, 2.43,
			3.18, 3.6, 4.59, 2.376, 2.874, 2.611, 2.999, 1.48, 2.63, 3.339, 2.541,
			1.44, 2.79, 2.74, 2.48, 1.08, 2.8, 4.34, 1.95, 3.66, 5.04, 4.095, 1.875,
			3.27, 2.01, 1.98, 2.28, 3.57, 2.97, 1.36, 2.041, 3.049, 3.43, 1.25, 8.7,
			4.89, 2.61, 2.85, 2.94, 5.64, 0.5, 2.286, 4.574, 2.769, 3.041, 0.499,
			2.801, 1.02, 4.86, 3.957, 3.333, 0.958, 2.982, 2.27, 4.29, 2.13, 1.69,
			2.21, 3.21, 2.49, 3.39, 3.65, 4.09, 3.18, 6.21, 1.75, 2.25, 1.78, 3.857,
			2.333, 3.014, 1.666, 4.21, 4.58, 2.16, 1.2, 4.2, 1.98, 5.4, 1.354, 3.976,
			3.719, 0.791, 2.124, 2.81, 2.416, 4.59, 2.96, 1.75, 1.95, 3.39, 2.402,
			2.417, 2.291, 4.421, 0.749, 2.492, 2.208, 3.54, 5.694, 3.166, 2.419,
			2.791, 2.77, 2.12, 2.01, 3.21, 3.9, 5.01, 1.93, 4.16, 3.087, 1.833, 2.204,
			2.416, 2.49, 4.37, 2.185, 3.395, 1.16, 0.64, 1.95, 3.14, 3.826, 1.374,
			4.23, 3.81, 1.72, 1.575, 3.395, 4.365, 3.405, 1.41, 3.09, 3.81, 3.27,
			2.79, 4.11, 3.45, 2.82, 2.2, 1.37, 1.59, 3.45, 2.7, 1.77, 3.54, 3.69,
			1.41, 1.92, 1.996, 2.124, 2.64, 3.23, 1.06, 2.877, 1.208, 2.575, 2.06,
			4.32, 4.35, 3.33, 2.43, 2.91, 2.43, 2.91, 2.01, 3.78, 2.65, 2.06, 1.583,
			3.817, 3.78, 1.77, 1.17, 2.507, 1.333, 4.35, 4.14, 5.43, 3.3, 2.97, 2.13,
			4.557, 1.083, 3.84, 2.17, 2.76, 1.804, 2.416, 2.85, 2.13, 2.37, 1.77,
			3.29, 1.18, 3.21, 3.69, 3.96, 6.75, 2.28, 4.05, 2.16, 3.33, 3.99, 2.72,
			3.43, 1.43, 1.81, 0.93, 3.27, 2.67, 1.8, 2.25, 2.91, 3.93, 2.13, 1.83,
			4.27, 8.46, 4.414, 2.666, 2.084, 1.316, 2.55, 0.64, 4.47, 3.45, 1.59,
			2.25, 5.37, 2.59, 3.962, 0.708, 2.577, 1.833, 3.52, 2.587, 1.333, 2.42,
			2.714, 1.416, 1.56, 7.25, 1.71, 5.52, 2.25, 5.85, 4.05, 5.73, 2.97, 4.59,
			2.45, 3.01, 2.25, 1.56, 4.05, 3.72, 2.58, 2.14, 2.13, 4.34, 1.92, 3.39,
			0.945, 2.125, 2.54, 1.846, 0.749, 1.215, 1.806, 1.824, 2.375, 2.364,
			0.541, 1.44, 2.04, 1.38, 2.19, 1.708, 3.622, 1.75, 3.51, 2.04, 2.63, 3.37,
			2.317, 2.333, 3.33, 4.6, 1.28, 2.61, 4.87, 6.02, 0.57, 5.845, 3.125, 0.66,
			3.25, 3.66, 4.1, 1.524, 2.916, 3.51, 3.335, 2.875, 2.88, 2.11, 5.125,
			0.625, 3.54, 1.6, 5.66, 5.98, 3.87, 1.98, 4.56, 1.23, 2.16, 2.46, 1.41,
			2.43, 1.65, 3.24, 2.2, 5.887, 1.333, 2.61, 4.522, 1.208, 2.55, 2.817,
			0.708, 1.865, 1.66, 2.79, 4.41, 3.9, 1.71, 5.314, 0.896, 2.041, 3.059,
			2.25, 3.96, 2.97, 2.37, 4.02, 2.73, 4.17, 7.14, 0.81, 1.02, 2.37, 4.47,
			3.652, 2.458, 1.57, 2.49, 3.48, 2.55, 3.93, 2.52, 3.52, 2.24, 3.15, 1.71,
			5.01, 4.18, 4.7, 5.58, 3.54, 1.95, 3.12, 1.38, 2.49, 3.66, 1.47, 2.655,
			3.075, 1.83, 6.21, 2.37, 3.615, 2.627, 1.708, 4.65, 3.33, 4.02, 1.98,
			2.52, 4.56, 2.92, 0.5, 0.541, 1.909, 1.553
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: All right.",
			"Welcome back to GD50.",
			"This is Lecture 8.",
			"Today we're going to be diving into the world of Unity",
			"for the first time, which I'm excited about.",
			"Going to be a whirlwind tour, but I'll try to cover as much as possible.",
			"Transitioning away from 2D and away from Lua and LOVE 2D into 3D and C#",
			"in the context of Unity.",
			"Today we'll be talking about Helicopter Game 3D.",
			"So Helicopter Game is a 2D game that was really famous in the 2000s.",
			"It was a web game.",
			"I was sponsored on a bunch of websites.",
			"Addictinggames.com still has it on there,",
			"and a few other websites have it.",
			"It was a flash game.",
			"But I remember playing it a lot.",
			"It was the old precursor to Flappy Bird, which",
			"was mentioned on the Wikipedia page.",
			"There's a reference to it there.",
			"And this is what the game play looked like.",
			"It was very similar to Flappy Bird-- a little bit different",
			"in that, instead of trying to avoid pipes, you're in a cave,",
			"and you're trying to avoid the ceiling and the ground of the level.",
			"And there were these little obstacles that would spawn in the middle,",
			"as well.",
			"So you'd have to navigate that.",
			"But it was the same exact mechanic-- the sort of like, click to go up.",
			"And then, when you didn't click, your helicopter",
			"would just sink down via gravity.",
			"Today we'll be talking about a bunch of brand new topics, things like Unity,",
			"first and foremost-- the ecosystem with which we'll be doing",
			"a lot of the things we'll be doing.",
			"C# is the primary language we'll be using.",
			"So we're going to take a step away from dynamic languages and move towards",
			"statically-typed languages--",
			"languages like C#, and Java, and the like.",
			"Blender is a program we'll look at briefly today,",
			"just because, in the context of 3D development,",
			"you're going to want to have a tool that will let you create models.",
			"And so the 3D software that I like to advocate for the most, especially",
			"for folks that are just starting out, is Blender, because it's free,",
			"and open source, and it has much the same feature",
			"set as any commercial software, like 3D Studio Max, and Cinema 4D,",
			"and the like.",
			"We'll talk about what components are-- entities and components, how",
			"they relate in this model that Unity has adopted for all of its programming.",
			"Components are little pieces of behavior that you can then",
			"combine to form a whole, that will then drive the behavior of whatever object",
			"in your scene you want, rather than having",
			"to customize its behavior via a long chain of inheritance and instantiation.",
			"Colliders and triggers are important in 3D--",
			"and 2D.",
			"But today we'll be talking about colliders",
			"and triggers-- things like the helicopter",
			"colliding with coins, and buildings, and other planes that are flying.",
			"Each of those has to have a collider.",
			"And certain things have to be considered triggers in order to trigger",
			"certain behavior with other entities.",
			"Prefabs and spawning-- prefabs is a huge concept in Unity.",
			"So prefabs are basically prefabricated objects",
			"that you can customize as you want to-- lay them out in the editor,",
			"rather than having to necessarily code all the details.",
			"And then you can instantiate them in the actual scene,",
			"via code programmatically, in a way that fits the model you're striving for.",
			"Texture scrolling is something we'll look at briefly, because it's",
			"the way that we accomplish the infinite scrolling aesthetic or behavior.",
			"And we'll look at how we can do that in a different way",
			"than we've done before, using u-v coordinates,",
			"and specifically looking at materials, and modifying",
			"certain attributes of those materials.",
			"And lastly, to tie everything together as we've done before,",
			"we'll look at audio-- things like audio listeners and audio sources--",
			"what the difference is between them, and how",
			"to add them easily to our game project.",
			"But first, a demo-- if there would be anybody",
			"willing to come up and take a look and play the 3D helicopter game that I",
			"put together, that would be awesome.",
			"Anybody?",
			"Steven?",
			"Awesome.",
			"Thank you so much.",
			"Let me go ahead and actually get it--",
			"so I've pre-built it.",
			"So let me go ahead and.",
			"So the nice thing about Unity is, it exports to multiple platforms.",
			"And right out of the gate, you can get just a--",
			"I didn't put an icon for it.",
			"But you can create just a native application very easily.",
			"And so whenever you're ready, go ahead and hit Play,",
			"and Up and Down will move your helicopter.",
			"",
			"So this is the 3D helicopter game.",
			"And I don't think we have sound live, but there should be audio.",
			"Oh, I might have actually-- here we go.",
			"[MUSIC PLAYING]",
			"There we go.",
			"That was my bad.",
			"So there is music playing.",
			"There's sound effects.",
			"So notice that we have a 3D model.",
			"This is what's called a 2.5D game.",
			"So even though everything is in 3D--",
			"the models and so forth--",
			"the actual axes upon which we're bound are just two.",
			"We're just bound to, I believe, the x and the y.",
			"Could be the z and the x.",
			"I don't recall offhand.",
			"But we're bound to just simply two axes of movement.",
			"But all the models, as we can see by the camera,",
			"are in 3D, including our helicopter.",
			"So we have a few things going on.",
			"We have skyscrapers that are scrolling by.",
			"We have coins that are also going by at the same speed as the skyscrapers.",
			"We have a background that is infinitely scrolling.",
			"We have, of course, our helicopter which has a rotating set of blades.",
			"And when we collide with a coin, notice that we get a little--",
			"it might be hard to see in house, but we have a little particle",
			"effect that plays.",
			"There's airplanes that are flying up top,",
			"so we're instantiating those, as well, to fly past us",
			"to provide another layer of obstacle.",
			"And if we collide with an airplane, notice that we get de-spawned,",
			"and then we trigger another particle effect to imitate an explosion.",
			"And then, notice we also have a couple of other elements.",
			"We have a GUI.",
			"We have two GUI elements-- a coin total at the top right,",
			"and then a game over here in the middle of the screen, which",
			"only shows up once we have died.",
			"And the explosive behavior-- if you want to collide with a building,",
			"you'll see that.",
			"It also triggers when you collide with a building.",
			"So there's two things looking for these explosions-- the airplanes up top,",
			"and the buildings below.",
			"Those are our two obstacles.",
			"But when they collide with the coins, we should increment our coin total,",
			"and then display a different particle effect.",
			"And then this goes on ad infinitum.",
			"You can press Space to restart.",
			"So we have keyboard input that's based on what",
			"we press, different things happen.",
			"And so that's effectively the demo that I've put together today.",
			"So thanks, Steven.",
			"I appreciate you coming up to demo it.",
			"",
			"So that's the 3D helicopter game.",
			"It's got most of the same mechanics as the web version from before--",
			"I would say, maybe even more features just to illustrate a few new concepts.",
			"But that's effectively what we're going with today.",
			"We're just a pretty simple, Flappy Bird esque differently-themed game,",
			"based on the same principles.",
			"Fly forever, avoid obstacles.",
			"And in this case, even get little collectibles.",
			"And so notice that there are also effectively two states",
			"in our game, which are just the playing state, and then the game over state.",
			"The two are almost effectively the same.",
			"The only real difference is that one doesn't have the helicopter present,",
			"and displays a different GUI element in the middle of the screen.",
			"If you haven't downloaded Unity already, there's two links here.",
			"So the top link is just the catchall download link.",
			"And then the second link is the beta link.",
			"So we're actually using the beta in this course,",
			"because Unity has started transitioning away",
			"from a numerical system for their releases,",
			"and is now going yearly with their releases.",
			"So the last long-term release candidate was 2017's version.",
			"But now that we're almost halfway through 2018,",
			"the newest beta is the 2018 version.",
			"It has a bunch of new features.",
			"So go ahead and check that out.",
			"And everything's been well tested, and runs very well--",
			"very smoothly on Windows and Mac--",
			"with the new beta.",
			"So what is Unity?",
			"The difference between what we've done so far and what we're doing today is,",
			"now we're actually using a full-fledged game engine--",
			"this system.",
			"It's got a built in editor and all this awesome, cool",
			"functionality that we really didn't get with Love2D before.",
			"What we were doing before was using a framework,",
			"and just implementing everything purely in code.",
			"And as we'll see today, everything that you want to do that's customizable",
			"effectively is--",
			"or can be-- done via code.",
			"But there are a lot of more efficient and more user-friendly",
			"ways to accomplish the same thing, which we'll take a look at.",
			"So Unity has a tremendous market share right now.",
			"I forget.",
			"I think in 2016 it had like 43% of all games released were done in Unity.",
			"I don't know what the current numbers are.",
			"I couldn't find them.",
			"But there are other engines that are also very well used--",
			"Unreal being among them.",
			"And Unreal actually may have more market share now,",
			"because of games like Fortnite, and because it's",
			"been improved a lot over the last couple of years, and really marketed well.",
			"But Godot, CryEngine-- there are a lot of game engines",
			"that are similar to this that provide you",
			"this all-encompassing way of dealing with your game scene",
			"and with all your game data.",
			"But Unity is a very easy engine to start getting used to,",
			"and cranking things out, and being productive with,",
			"without the tremendous learning curve that some",
			"of the other engines like Unreal might have.",
			"Unreal does have a more user-friendly way of doing things.",
			"But if you want to get down into the nitty gritty with Unreal,",
			"you're coding in semi-arcane C++.",
			"So for folks who aren't used to it and aren't used to 3D game development,",
			"it can be kind of a large board to get onto.",
			"The nice thing about Unity, aside from the fact",
			"that it's fairly easy to get started with, is that it's free.",
			"And you can use it completely with all of its features",
			"until you start making over $100,000 in gross revenue releasing Unity products.",
			"And then there are other tiers.",
			"The next tier above that is if you start making $200,000,",
			"and you get new features with these other tiers.",
			"But if you want to just start up a new company,",
			"and use Unity, and take something to market--",
			"completely free to do so.",
			"And once you get over $100,000, that's a good problem to have.",
			"It's not necessarily too much to ask to start",
			"paying Unity to use it as a means of getting",
			"onto the market in the first place.",
			"And especially in mobile and VR, Unity's sort of like the forefront.",
			"It's got even higher percentage.",
			"It's like 60-something or 70% market share on mobile.",
			"And then VR-- from the beginning, it's marketed itself very strongly",
			"towards the use of VR.",
			"And we'll actually use VR in the next lecture.",
			"And the way in which we will accomplish all of the programmatic aspect",
			"of this-- getting things actually implemented in code--",
			"is via C#, which is very different than what we've used so far,",
			"which we've used Lua, which is a dynamic scripting language,",
			"very much like JavaScript.",
			"So C# is very similar to Java, in which things actually have types.",
			"And so here's a couple of screenshots of what the Unity editor looks like.",
			"So the nice thing about the Unity editor, actually--",
			"which we can see right off the gate here--",
			"is that it's very customizable.",
			"So on the top, that's the default view.",
			"You have a bottom panel that shows you all your resources,",
			"all your assets, things like scripts, and shaders, and models,",
			"and textures, and sounds.",
			"You have a nice file browser there on the left-hand side, which allows",
			"you to easily navigate your project.",
			"You don't have to go looking through your Windows or Mac computer, using",
			"your finder, or whatnot, or your File Explorer,",
			"and actually look through all your files.",
			"You get a nice view there, so that you stay integrated",
			"within the Unity ecosystem right there.",
			"On the right-hand side, you can see all the behavior for whatever objects",
			"you might have in your scene.",
			"You get a nice big scene view.",
			"So rather than having to run your game live, and look",
			"at the behavior that way, you can actually",
			"see in advance what your scene looks like, and analyze",
			"your game objects that way, and their appearances,",
			"and whatever you want to do with them.",
			"And lay them out perfectly, rather than have",
			"to programmatically figure things out.",
			"And on the left-hand side there, you can see",
			"a full list of all the game objects.",
			"And then on the bottom right screen shot,",
			"you can see that the editor is heavily customizable.",
			"So you can lay things out however you want",
			"to to fit your style of development.",
			"I often like to have a panel on top, which shows me my scene view,",
			"but then have a panel right below that, that shows me the game view.",
			"So if I'm actually running a game and seeing it happen live,",
			"I can also see it in the scene, and rotate around in this god mode",
			"that you can get in a lot of games.",
			"And actually analyze and see things that way,",
			"and analyze their behavior frame by frame,",
			"even if I want to, in a way that's not possible with however",
			"I might have coded the camera in the actual game itself.",
			"So C#.",
			"So has anybody in here used a static language,",
			"or is familiar with statically-typed languages",
			"versus dynamically-typed languages?",
			"[INAUDIBLE], Steven.",
			"So what languages have you guys used, just out of curiosity?",
			"Steven.",
			"STEVEN: Java, C, C++.",
			"COLTON OGDEN: Java, C, C++.",
			"Donny?",
			"DONNY: [INAUDIBLE]",
			"COLTON OGDEN: C and C++.",
			"OK.",
			"So to you guys, this will be pretty similar.",
			"So C# is very similar to Java.",
			"Almost looks identical at first glance.",
			"There are some features that are different.",
			"But it was Microsoft's initiative to compete with Java.",
			"It's a Microsoft language, first and foremost.",
			"But there are ways to run C# code on other platforms,",
			"primarily with the use of what's called Mono.",
			"So Mono is an open source implementation of what's called the CLR--",
			"the common language runtime--",
			"which is how Microsoft allows several of its languages, like F#, and C#,",
			"and Visual C++, Visual Basic.",
			"They all compile to this intermediary format,",
			"like how Java compiles to bytecode.",
			"And you can run any of those languages' code--",
			"their version of the bytecode-- with the CLR.",
			"Mono-- what Mono is, and what Unity relies on",
			"to allow its use across multiple operating systems,",
			"is a CLR that's not just Windows specific.",
			"It actually runs on Mac and on Linux machines, as well.",
			"And you'll actually see evidence of its existence via the nomenclature used",
			"for Mono behavior.",
			"So within Unity, there's this thing called a Mono",
			"behavior, which we'll take a look at.",
			"From the beginning, actually, Unity was developed for Mac platforms",
			"exclusively.",
			"But in 2012 or 2011 they ended up making it usable across all major desktop",
			"operating systems.",
			"But C#-- suffice to say, very similar Java.",
			"We'll look at its syntax.",
			"But it's different from Lua in that, with Lua, you could just say,",
			"oh, x equals 10, or object equals-- and then create",
			"a table with whatever you want.",
			"C# is a lot less flexible in this sense, in that you have to actually tell it",
			"in advance what each data type is that you're trying to make.",
			"So you can't just create a table or a integer.",
			"You actually have to say, int my_int, or x equals, and then 10,",
			"and then semi-colon.",
			"So there's also more syntax to be conscious of.",
			"And so really quickly, I can show you just what some C# looks like.",
			"We'll take a look at this again going forward.",
			"But as you can see here, we have public.",
			"So that's another thing about C#.",
			"In Java, if you're familiar with Java, they're",
			"object-oriented programming languages.",
			"And as such, there are objects that are public and private,",
			"and you have access specifiers for different variables and classes",
			"that will tell other variables and classes whether or not",
			"they can communicate effectively.",
			"So public class just means effectively anybody can see this class.",
			"Other classes can see this.",
			"But then you have--",
			"see if I have one of these that has a private variable.",
			"I know there's at least one.",
			"Here we go.",
			"So private, Text, text here, for example.",
			"So first of all, notice that these are variable declarations",
			"like we've seen before.",
			"We're saying, this is a variable that I'm going to use.",
			"In this case, public GameObject helicopter.",
			"So I'm just defining it.",
			"Or I'm declaring it.",
			"I'm not defining it.",
			"It doesn't equal anything yet.",
			"But I'm saying, this is going to exist, right?",
			"You can say equals something, and then define it on the same line.",
			"But in this case, we are just declaring in advance what different variables",
			"we're going to need later on.",
			"Like for example, here.",
			"We see, in our start method.",
			"And we'll go over what all these methods are and how they're relevant.",
			"But we can see here, text equals--",
			"and then we're calling some function called GetComponent.",
			"And then we have some funky syntax here--",
			"less than, Text, greater than--",
			"and then function call syntax--",
			"two parentheses.",
			"So we can see that there's a lot more syntax.",
			"But all of the same principles still hold true.",
			"It's still much the same way to think about programming.",
			"It's just, there's a little bit more to stay conscious of.",
			"And we trade off this dynamism for more performance.",
			"So that's ultimately what it comes down to-- static versus dynamic languages,",
			"you're trading flexibility for performance, in this case.",
			"Though C# obviously is a lot faster than Lua.",
			"We can do a lot more with it.",
			"And actually, Unity isn't itself programmed in C#.",
			"Unity itself is programmed in C++.",
			"But it allows us to program any behavior that we want to with C#.",
			"All right.",
			"So that's a look at C# so we can see also what I was alluding to up here.",
			"We have our private, public, and we do things with them.",
			"And then, depending on what we've declared public or private,",
			"these things also transfer into the editor.",
			"We'll see how all of that comes together soon.",
			"But suffice to say, that's a look at C#-- what it looks like.",
			"And we'll use it, and we'll get comfortable with it.",
			"But it's a little bit different than what we've done thus far.",
			"Away from programming, we'll a very brief look at what Blender is.",
			"So I have it installed here.",
			"And this isn't required for the course.",
			"I will provide you with all the models and all the assets",
			"that you need to get working.",
			"But this is what Blender is.",
			"So Blender almost looks, at first glance, very similar to Unity.",
			"The big difference is, this is meant to create new assets.",
			"And technically, Blender does have a built-in game engine,",
			"but it's not used for that purpose very much.",
			"But the sole purpose that we would be using it in this course",
			"would be just to create new 3D models.",
			"So as you can see here, I can click on these vertices, and move them around.",
			"And I'm not a guru by any stretch of the imagination when it comes to Blender.",
			"But the helicopter, and jet, and skyscrapers,",
			"and those kind of simple models, I made all of those in Blender.",
			"And those are bundled with the project, if you",
			"want to take a look at how those are implemented.",
			"And you can download Blender at the--",
			"I forget what the exact link is, actually.",
			"Let's take a look.",
			"Blender dot org.",
			"",
			"And then, if we just go down here, download Blender,",
			"2.79 looks like the most recent version.",
			"Blender 2.8-- I guess it's in development.",
			"But there's nothing concrete about that on the front page.",
			"But yeah.",
			"If you want to model 3D assets, and you're curious,",
			"and you want a free piece of really awesome software,",
			"can't recommend Blender enough.",
			"But like I said, I'm going to spend too much time on it, because it's not",
			"something that will actually be required in the course",
			"to implement 3D models, to create 3D models,",
			"since I'll be providing all of that to you in the project in the GitHub repo.",
			"And so here is a screenshot of basically what we just saw.",
			"So the fundamental part of Unity.",
			"So first of all, let's take a look at the Unity editor.",
			"So we can see here much of what we saw in the screenshots.",
			"But here, I am live looking at my scene, right?",
			"I have a helicopter.",
			"I have this background back here.",
			"I have a camera--",
			"that's right here.",
			"You can see that it's a camera, because it's got the little camera icon.",
			"But it's effectively just an invisible game object.",
			"It's not actually going to be rendered to the screen ever.",
			"And notice that there are no skyscrapers, no coins, no jets,",
			"or anything like that.",
			"Those are all instantiated dynamically.",
			"But this is the beginning of our scene.",
			"And it's all laid out in advance.",
			"And we can see here with this camera preview--",
			"which is kind of hard to see because it's really small--",
			"but here's a larger view of what it looks like.",
			"And then we've got a GUI element here, we've got coins here.",
			"We have our helicopter.",
			"But all of this is a marked difference from what we've gotten",
			"used to, which is, program everything, and sort of load it,",
			"and, oh, did I put this in the right position?",
			"No.",
			"I didn't.",
			"So I got to.",
			"If I wanted to come over here and just move",
			"the helicopter a little bit which--",
			"like that.",
			"Whoops.",
			"I just triggered it.",
			"If you click on something, by the way, it",
			"will play any particle systems that are associated with it.",
			"So you can actually get a preview for those, as well.",
			"But I can easily just move it here, to the right,",
			"or to the left, before the game actually starts.",
			"And if I click on the camera, we can see it there.",
			"It's a little bit shifted to the left, as opposed to what it was before.",
			"But if I just press Command-Z couple of times, take it back to normal.",
			"So game object is an important concept.",
			"So a game object is basically everything in Unity.",
			"So the camera is a game object.",
			"The helicopter, which is right here, is a game object.",
			"Everything, by the way, that you want to see in your scene in Unity",
			"is on this left-hand hierarchy right here.",
			"So helicopter, the game object.",
			"There's got to be a light source in a 3D scene in order",
			"for you to actually see things.",
			"So directional light-- that's a game object.",
			"Background skyscraper spawner-- we don't see it anywhere.",
			"But that's also a game object.",
			"It's just an invisible one.",
			"A coin spawner.",
			"There's something called a canvas, which if we double-click that,",
			"we can see we have this obscenely large GUI here that, paradoxically,",
			"isn't on top of our scene.",
			"Unity does a very interesting thing with all of its GUI elements,",
			"in that it basically maps the canvas to one pixel",
			"being equal to one Unity unit, which is usually equivalent to a meter.",
			"And it draws this in a different draw call than it",
			"draws all of the actual 3D stuff--",
			"all the stuff that's down here, basically-- in World Space.",
			"So when you create a canvas and you see it's gigantic,",
			"that's just Unity's way of doing GUI.",
			"It's strange.",
			"But apparently they do it for performance reasons,",
			"because they don't have to calculate like fractional points of where",
			"the UI is supposed to be in World Space, which can get really small.",
			"But the canvas is a game object.",
			"Notice that helicopter has children.",
			"It's got blades, a body, and then a blades collider, which actually could",
			"have been part of the blades object.",
			"Canvas itself has two children-- coin text and game over.",
			"And those are the text on the top right, and \"game over\" in the center.",
			"So those are just two text objects, which",
			"are labels, that we can just populate with whatever text data we want.",
			"The event system is an object.",
			"That just gets added to your scene automatically when you add a canvas.",
			"Airplane spawner, explosion particles, and explosion sound.",
			"So we have all these different objects.",
			"They're all part of our scene, and they all do different things.",
			"But at the core, they're just game objects.",
			"That's the core-- like the bottom type.",
			"Yes?",
			"AUDIENCE: So I would imagine you're not actually using",
			"a helicopter [INAUDIBLE].",
			"COLTON OGDEN: Correct.",
			"AUDIENCE: So should you actually reset the position",
			"of the background [INAUDIBLE]?",
			"COLTON OGDEN: So the question was, since we are maintaining",
			"a consistent position with the--",
			"I'm going to try and scroll in, there we go.",
			"The nice about Unity 2 is, if you right click,",
			"you can use W-A-S-D to move around the scene,",
			"which is super easy and convenient.",
			"But the helicopter here stays in one spot.",
			"And the camera always stays in one spot forever.",
			"So do we move the background image, like we",
			"do in our Love2D implementation of Flappy Bird,",
			"where we reset its position?",
			"And the answer is--",
			"I will play it right now in scene view, and let you decide for yourself.",
			"So let's go to Window.",
			"I'm gonna go to Layouts.",
			"So I like the two by three, like I said before,",
			"so you can see the scene and the game running live at the same time.",
			"I'm going to move my camera in the scene so that I'm",
			"looking at this from back here.",
			"And then I'm going to play the game.",
			"[MUSIC PLAYING]",
			"But so.",
			"Here's where we-- I'm just going to hold it still.",
			"So what do we think is happening?",
			"Does it look like our thing is moving?",
			"Or is it staying still?",
			"",
			"It is staying still.",
			"Any guesses as to how we're achieving this?",
			"Changing the texture.",
			"We are scrolling its texture.",
			"So when you take a texture and apply it to a 3D surface,",
			"you map the texture coordinates to the 3D coordinates of the object",
			"that you want to render.",
			"It's called UV Mapping.",
			"They call it UV, because usually, when you're dealing with 3D objects,",
			"you have your x, y, z.",
			"And then you want to think of your texture separately from the 3D objects.",
			"So you use u, v instead of x, y, since you already have x, y, z",
			"allocated for your 3D object.",
			"",
			"Basically, there's an offset part of the texture--",
			"the material that holds the texture--",
			"there's an offset field that will reposition the UV mapping",
			"of that texture onto the 3D surface.",
			"And when you offset it, it will just sort of wrap itself around,",
			"if that makes any sense.",
			"So what we do is we--",
			"and I can actually show you in the code where this is.",
			"This is going to be mentioned at the end of the lecture.",
			"But we have the scrolling background component here.",
			"And there's this thing on each material called a texture offset,",
			"which basically shifts the UV mapping of your texture to your 3D object.",
			"And so, by setting that texture offset to some value offset,",
			"which is very similar to what we've done before.",
			"Notice that offset is just scroll speed times time--",
			"Time.time, in this case.",
			"And I don't mean to overwhelm with, necessarily, all the details here.",
			"But the bigger picture is that we're taking time--",
			"the amount of time since the beginning of the game is started--",
			"and we have some scroll speed that we've pre-determined.",
			"And we can just scroll the texture offset here.",
			"We're just placing it here at the x.",
			"So this new Vector2, offset 0--",
			"just think of these two as an x and y--",
			"a vector 2, vector 3.",
			"Vectors are just combinations of numbers.",
			"So 1, 2, 3, 4-- however many you want.",
			"A Vector 2 offset in 0.",
			"So we don't want to scroll on the y-axis.",
			"We just want to scroll left to right.",
			"So we're going to apply no texture offset to our y-axis,",
			"but we want to apply a texture offset to our x-axis.",
			"So that's what their offset there is.",
			"And I included it also here--",
			"notice there's a Bump Map texture offset.",
			"There's no Bump Map actually on our texture.",
			"So a Bump Map is effectively--",
			"I can maybe find a good Google image for it,",
			"if you're not familiar with a Bump Map.",
			"",
			"Let me go in here.",
			"",
			"I'm going to hope that there's no shady images on Google Images, but a Bump",
			"Map--",
			"can we see it?",
			"Well, it's kind of hard to tell.",
			"But in a lot of 3D games, you'll see like bumpiness and shininess",
			"on surfaces.",
			"And that's accomplished the majority of the time using Bump Mapping.",
			"Because obviously, if you were to model every single tiny little bump or model",
			"in a surface, it would get extremely difficult to render large objects.",
			"Because you're looking at thousands of polygons for a surface",
			"that was actually this detailed in a game.",
			"So what you do is, you take what's called a Bump Map,",
			"and the Bump Map gets--",
			"during lighting, it will effectively skew the surface normals of a 3D mesh.",
			"So effectively, it will pretend as if your 3D mesh has a bunch of bumps in it",
			"for the lighting.",
			"Only for the lighting.",
			"And so when it gets lit, and it gets shaded, it looks as if it's bumpy,",
			"but you're still dealing with a completely flat, completely",
			"simple cubic mesh in this case, or whatever mesh you want.",
			"And so the long story short, here, if you",
			"wanted to include a Bump Map on whatever surface you want to scroll,",
			"or if you want to edit the Bump Map, this",
			"is here just because you can also manipulate the Bump Map texture offset.",
			"It's an included field in a material.",
			"So any questions as to how this works at large?",
			"We still have a lot to cover before we go into a lot of the specifics.",
			"But conceptually, do we understand how this sort of works?",
			"OK?",
			"Cool.",
			"So let's go back to the slides.",
			"",
			"Right.",
			"So we were talking about game objects.",
			"So all of those things that we saw before were just game objects.",
			"So let's go back to the default layout, and then we can look back at our scene.",
			"So this is our scene.",
			"All of those things were all of our game objects.",
			"Those are ultimately containers.",
			"I talked about this in a prior lecture.",
			"But this is the beginning of an entity component system, in which case,",
			"these game objects are our entities.",
			"They are the entity class--",
			"container class-- for what drives behavior.",
			"And the thing that allows us to actually get interesting behavior out",
			"of this sort of abstraction is the use of components.",
			"And we'll talk about that.",
			"So components are all of the things on the right-hand side,",
			"by default of the Unity editor.",
			"So if we're looking at our camera, for example,",
			"and we take a look at all these things on the right,",
			"we can see that we have something called a transform,",
			"we have something called a camera.",
			"A GUI layer deprecated, so that's by default.",
			"It was imported from a prior version of Unity,",
			"so you could actually delete this.",
			"A flare layer, which we're not using.",
			"An audio listener-- I believe that comes with all cameras by default,",
			"though, in case you do want to use it.",
			"An audio listener and an audio source.",
			"So all of these different pieces are components.",
			"They are what drive the behavior of this game object.",
			"We can create just a brand new, empty game object-- oops,",
			"I created it as a child.",
			"We can create a brand new, empty game object here.",
			"It's just a game object in our scene.",
			"And it's right where our mouse is.",
			"Well, it's right here.",
			"And it does nothing.",
			"It has one component.",
			"And that component is the transform.",
			"Anybody guess what a transform is?",
			"",
			"Yeah.",
			"AUDIENCE: Is that position, rotation, scale, et cetera?",
			"COLTON OGDEN: Yes.",
			"It is the position, rotation, and scale of a game object.",
			"Something that was before put into six fields--",
			"or in this case, nine fields, potentially, or maybe",
			"three fields with children, is now an object that we can modify at will.",
			"Well, it's a component that we can modify at will.",
			"So if I do this-- notice, I'm just scrolling the x.",
			"It's just moving that transform, which is just the position of that object.",
			"And Unity knows to look at the transform component,",
			"and render our object based upon where its transform lies,",
			"rather than us having to manually set all these things, which we still",
			"can do in the code.",
			"We can just modify them in the Unity editor",
			"directly via a graphical interface.",
			"It's just an interesting, helpful layer of abstraction.",
			"So a transform is a component-- a camera, in this case.",
			"It's just a component.",
			"We can attach this to anything we want to, and it becomes a camera.",
			"And then we can set it to be either the default camera or not.",
			"The camera has a bunch of different things.",
			"And I can't claim to know all of the fields of every object",
			"in Unity, because there's just a tremendous number of things.",
			"But clear flags, background, culling mask--",
			"all these things that are relevant to how the camera does its job--",
			"they are all things that we have complete access",
			"to here in the Unity editor.",
			"We don't even need to touch code, really, for a lot of things.",
			"An interesting fun thing we can take a look at",
			"is if we go to Layouts-- go back to two by three, and take a look at our game",
			"again.",
			"So we have our camera currently looking at the screen here.",
			"It's just always in one spot.",
			"And it has a way of projecting the scene.",
			"It can do one of two things.",
			"It can be perspective projection or orthographic projection.",
			"Does anybody know what the difference is between the two, at least visually?",
			"So perspective projection-- what that does",
			"is it models how real cameras, real lenses, the human eye, et cetera,",
			"behave in real life.",
			"Things distort a little bit.",
			"And so you see things, depending on where you're looking at them,",
			"they look wider or skewed, and not completely geometrical,",
			"like you would if you were just to draw them at a certain distance.",
			"Things have vanishing points, et cetera.",
			"Orthographic-- things look a lot different.",
			"So notice instantly, so we can see here, perspective",
			"doesn't really change a whole lot visually with our helicopter.",
			"Things do change a little bit with the background,",
			"because the view angle is different between the two--",
			"the perspective and the orthographic camera.",
			"But if we make this a little bit larger.",
			"So I'm going to increase the size like that.",
			"",
			"And I play.",
			"One thing we'll notice--",
			"what's the first thing that folks are noticing?",
			"You can actually see the difference between the top and the bottom.",
			"Whoop.",
			"How, in particular, I'll put your attention towards the buildings.",
			"How do the buildings differ?",
			"AUDIENCE: You can't see the side.",
			"COLTON OGDEN: You can't see the side anymore.",
			"The lens sort of curves a bit.",
			"And so I'm not entirely familiar with all the math involved.",
			"But at the end of the day, what it boils down to is, with a perspective camera,",
			"you can actually gauge things as distance",
			"relative to each other a little bit better.",
			"With a orthographic camera, everything is completely flat,",
			"and no matter how far away from you it is",
			"on the access that's completely perpendicular to you,",
			"it's going to look the exact same.",
			"So these buildings are always going to look the exact same, no matter how far",
			"away they are, no matter which position they are.",
			"Because everything is just looked at completely flat.",
			"And the view matrix is calculated in a different way.",
			"And so, just with a simple button, you can",
			"change how your game looks completely.",
			"You've probably seen a lot of games.",
			"I believe Crossy Road does everything with a orthographic camera,",
			"versus a perspective camera.",
			"It has a very distinctive look, especially",
			"once you skew things a little bit.",
			"But that's just one thing that you can change just",
			"without having to touch a single line of code--",
			"how your game looks via just the camera's implementation.",
			"Let's take things back to how it was.",
			"",
			"And there's a lot of things like the field of view.",
			"So if you want to see more of the game world.",
			"So things like in Quake and other shooters,",
			"you can change this view, usually in your menu settings,",
			"just so you can see more around you.",
			"And it looks a little like a fisheye lens a little bit,",
			"depending on how you do it.",
			"And that's just more distortion of the perspective projection.",
			"",
			"Yeah.",
			"All of these things, they all have--",
			"I don't know necessarily what every single one of them does,",
			"just because there's just a lot involved.",
			"And generally, you don't have to mess with it too much.",
			"It just ultimately depends on what you are trying to accomplish in your game.",
			"And you'll end up finding specific areas of the editor",
			"and specific areas of the code base and documentation",
			"that you dive deeply into.",
			"But this essentially is what a component affords you the ability to do.",
			"When you create a component and you attach it to a game object,",
			"you can easily not only combine different things",
			"to create this emergent new behavior and combination",
			"of behaviors for your game objects.",
			"But Unity allows you, via different ways of programming the components,",
			"to modify them, depending on how customizable you want them to be,",
			"in the editor itself.",
			"So you don't have to touch any of this in code.",
			"You can just go into the editor and quickly",
			"whip things up because of the way that you've modeled all your components.",
			"And so we see other things like the audio listener.",
			"An audio listener is something that will literally listen for audio,",
			"and play it back like a microphone to the game player.",
			"And then an audio source is an actual source of audio.",
			"And so it will play that audio at the location",
			"of whatever that game object is.",
			"So we've combined all these things.",
			"So now we have a camera that is projecting everything",
			"with perspective projection.",
			"And it's an audio listener, so it's going to listen for audio in our scene.",
			"And it's also going to play an audio source and listen to itself.",
			"And that's just the beginning.",
			"We have a whole bunch of other components",
			"here, which we can take a look just really quickly.",
			"So the directional light has a light component.",
			"And so a light, you can do all kinds of things.",
			"You can make a spotlight, directional light, point light.",
			"All these look a little bit differently.",
			"You can make it have a specific color.",
			"So maybe if you wanted a really dark scene, you could have a dark light.",
			"Or you could even emulate dawn or dusk with an orange light.",
			"That's sort of how you'd go about doing that.",
			"You can bake your lighting, which means that you just pre-compute it,",
			"so that you don't have to render it in real time",
			"when you actually play it on hardware.",
			"A lot of different things, a lot of different settings.",
			"We don't have time necessarily to go into all of them.",
			"But looking through all of these, you can",
			"see all these game objects are just combinations of these components.",
			"And those combinations of components are responsible for the behavior",
			"that we get in our game.",
			"That's the ultimate essence of what Unity is, and how it does what it does.",
			"And to illustrate the difference, we've talked about this before.",
			"This is an inheritance chain, where Monster",
			"inherits from Creature, which then goes to Goblin, Goblin Chief, Elite Goblin",
			"Chief.",
			"In Unity, you could create a game object,",
			"and then give it a creature component, a goblin component, a patrol component--",
			"right?",
			"So maybe you want different things to patrol.",
			"In Unity, it would be kind of complicated.",
			"But you could create basically a pathway,",
			"and then have your entity follow that pathway at a specific time.",
			"And then, depending on how you've programmed it,",
			"you could specify all these different characteristics in the editor.",
			"So you could just say on the editor, OK, I",
			"want you to go patrol from this range to this range.",
			"And I want you to do it with this length of time, pause for this long--",
			"right?",
			"And then you can give that to anything in your scene.",
			"You could make a camera patrol if you wanted to,",
			"and then have that be demo code for the beginning of your game.",
			"The flexibility is just insane.",
			"Elite component.",
			"Right?",
			"If you want, maybe, certain enemies or certain objects, if they're elite,",
			"maybe they shine bright.",
			"And maybe they drop more experience or something.",
			"A chief component maybe has better weaponry than a non-chief component.",
			"And then a toxic component, maybe, is an enemy that, when it dies,",
			"it sprays toxic gas or toxic liquid all over the place.",
			"But the flexibility is there.",
			"You can ascribe any component to any object to get any sort of behavior",
			"that you want to.",
			"It's on you, of course, to implement all these components, right?",
			"You're not going to get all these for free.",
			"You're going to get a lot for free.",
			"Unity gives you a ton of components-- really good components.",
			"But you're ultimately going to need to program your game logic.",
			"And so you'll have to implement all these things-- elite,",
			"goblin, what it means to be all these things.",
			"But thankfully, it's not terribly painful.",
			"The way at which we go about doing all of this-- and by the way,",
			"are there any questions so far as to how Unity's model works,",
			"the difference between composition versus inheritance,",
			"anything we've talked about this far?",
			"All right.",
			"The way at which we actually go about making our own components,",
			"which is probably what you'll spend the most of your time doing,",
			"at least in the beginning, when you're bootstrapping your game,",
			"is programming what's called a MonoBehaviour.",
			"And so we talked about Mono before.",
			"So Mono is the open source implementation of the CLR.",
			"And MonoBehaviour, I imagine--",
			"I tried to look this up and see where it derives from.",
			"I imagine it's because it was originally a Mac exclusive project, Unity.",
			"And so because everything was implemented in Mono,",
			"and because this is way it's scripted, MonoBehaviour became the name.",
			"But a MonoBehaviour is what a component is.",
			"They are effectively one and the same.",
			"The difference being that a MonoBehaviour",
			"is how it's illustrated in code.",
			"In C#, if you want to program something to be a component that you can then",
			"attach to a game object, it needs to be inherited from MonoBehaviour.",
			"",
			"So if we go to coin spawner, here.",
			"And you can see the difference between what's built in to Unity",
			"and what's your own via--",
			"it'll say script here.",
			"So in this case, I have a coin spawner object, right?",
			"It's just an empty object, at least in terms of what it displays.",
			"It's got a transform, which is irrelevant.",
			"It could be literally anywhere in our entire scene.",
			"The only difference between this and the empty game",
			"object that we saw before is that it has a coin spawner.",
			"And this coin spawner has this thing here.",
			"All components that you add would have this script field here,",
			"just to show you that that's the script that it's",
			"getting it's code behavior from.",
			"But also, we have this field here called prefabs, which has a size of 1.",
			"And it's actually calculated based on how many elements",
			"the list that it's responsible for has.",
			"And we have one element, as it says, here.",
			"And it's got a coin pre-fab, which is here.",
			"And notice that I clicked on it.",
			"It took me right to it in my assets.",
			"And so prefabs and all of that-- what that means and how to get",
			"that all working-- we'll talk about that.",
			"But a coin spawner script has to exist in our code base",
			"before we can actually add it to any game objects, right?",
			"So in my project I do have--",
			"usually, you have assets, a folder called Assets in your Unity Project.",
			"And then I typically create a Resources folder.",
			"It's not mandatory that you do so, but just for organization, I'll",
			"create a Resources.",
			"And then I'll have a bunch of folders for all sorts of different things",
			"like we've done before.",
			"Where in the Love2D project, at the parent level,",
			"you have like a Fonts, a Music or Sounds, and then a source directory.",
			"In this case we have Fonts, Materials, Models,",
			"all the different assets that we will need in our game,",
			"but also a Scripts folder.",
			"And all the C# scripts here that we'll use amongst all of our components--",
			"all of our game objects.",
			"And so you could easily just go to any of these,",
			"rather than have to go into your operating system, open up a new window,",
			"and find your file, and navigate through all the files",
			"that Unity generates for you, which can be kind of a pain.",
			"You can just double-click on a coin script, for example.",
			"And it'll open in your default editor.",
			"And so one thing that I'll just mention here",
			"is, if you go to your Unity preferences--",
			"on Mac, it's Unity and then Preferences--",
			"you can go to External Tools.",
			"So by default, starting in 2018, Unity is transitioning away",
			"from its prior IDE, which was called MonoDevelop, which was a good IDE.",
			"There's transitioning away from that, and they're",
			"making it focused on Visual Studio as the default IDE.",
			"I don't use Visual Studio.",
			"I like VS Code.",
			"So what I did was-- and what you can do is--",
			"you can choose your external script editor here,",
			"if you prefer a different script editor-- like Atom,",
			"or VS Code, or Sublime Text.",
			"And then just browse for it on your file system,",
			"whether you're on a Windows, Linux, or Mac machine.",
			"And then you can easily just choose which file you want.",
			"In this case, I chose VS Code.",
			"And so that effect that that has is, whenever",
			"I double-click on a script within Unity, it",
			"will actually open the IDE or text editor",
			"that I have assigned to it in Unity's preferences.",
			"And so here is the Coin component that I have created for this example.",
			"And notice that every component, first of all, is a class.",
			"And actually, everything effectively in C#, just as in Java, is a class.",
			"It's a public class.",
			"And notice that I call it Coin, and I got this colon, and then MonoBehaviour.",
			"So this colon-- anybody know, anybody take a guess what the colon means?",
			"Tony?",
			"TONY: Extends.",
			"COLTON OGDEN: Extends, yes.",
			"Extends or inherits from MonoBehaviour.",
			"So anytime you have a component that you want",
			"to create, you want to add it to Unity, and allow you to see it in the editor,",
			"and allow you to actually drive behavior of an object,",
			"you need to inherit from MonoBehaviour.",
			"Like it says here on my VS Code, since I have the extension for OmniSharp,",
			"it will actually tell me, MonoBehaviour is the base class",
			"from which every Unity script derives.",
			"There's a couple of things here.",
			"So notice that we have a few methods.",
			"So void Start, void Update, and void OnTriggerEnter.",
			"So anybody take a guess as to what--",
			"ignoring OnTriggerEnter-- does anybody have",
			"a guess as to what Start and Update do?",
			"Yeah.",
			"AUDIENCE: Could it be just like that and [INAUDIBLE] update [INAUDIBLE]??",
			"COLTON OGDEN: Sorry, say it one more time.",
			"AUDIENCE: Would it just [INAUDIBLE] an update or [INAUDIBLE]??",
			"COLTON OGDEN: Exactly.",
			"It would be just like we did before when we created objects",
			"in our Love2D projects, where we had an init function assigned to every class,",
			"and an update function assigned to every class.",
			"And we would call those ourselves.",
			"Every MonoBehaviour can have a Start method.",
			"In this case, it's empty, because every time you",
			"create a new script by the Unity editor, it will automatically-- first of all,",
			"it will automatically create a brand new file for you.",
			"So let's just say I want to create a new script.",
			"So if I'm in the Unity editor, and I go to my assets--",
			"I right-click Create.",
			"And then I want to create a new C# script.",
			"It'll create it there.",
			"I can say, maybe I want this to be--",
			"I don't know-- Test Component, right?",
			"",
			"So this should have the effect of, when I open it in my VS Code,",
			"this Test Component-- this was auto generated for us.",
			"We didn't have to write any of this boilerplate.",
			"But every script that you create, by default,",
			"is a MonoBehaviour, which it strictly does not have to be.",
			"You could create a class of your own, that maybe you call behind the scenes,",
			"or maybe it just represents a data structure or something.",
			"But by default, anytime you create a new script in Unity,",
			"it'll save you the hassle of typing out all this stuff by hand.",
			"And it'll give you an empty Start method and an empty Update method.",
			"And so, like Tony said, the Start method gets called as soon as the object",
			"that it's assigned to gets instantiated.",
			"Well, as soon as this component gets instantiated, rather.",
			"Which often is the case that it gets instantiated",
			"at the same time as a game object.",
			"Not always.",
			"You can create game components on the fly.",
			"But this Start method will get called.",
			"Anything that you put in here will get called right away.",
			"And then this Update method, Unity will-- every frame,",
			"go through every component on every live game object--",
			"and will call the code that's contained within this Update function.",
			"And you don't have to call this anywhere yourself.",
			"Just by assigning this component to a game object in your scene,",
			"you get the update, and start, and all this other functionality",
			"given to you for free.",
			"And MonoBehaviours are actually much more complex",
			"than just Start and Update.",
			"So if you go to MonoBehaviour here, we can see that--",
			"by the way, I want to shout out Unity's documentation.",
			"Unity has amazing documentation--",
			"docs.unity3d.com.",
			"You will go through pretty much everything",
			"you possibly could ever want with every object implemented in Unity, in quite",
			"a good detail, with a lot of examples.",
			"But here we can see, just in the description,",
			"it will tell us, the MonoBehaviour will get start, update, fixed update, late",
			"update, on GUI-- all of these functions called for us, assuming",
			"that they're implemented.",
			"And you don't have to implement them if you don't want to.",
			"If they're not implemented, they just won't happen.",
			"If there's no start method, then that means",
			"there's no start logic for this component.",
			"So it doesn't need to execute.",
			"If there's no update, maybe it just needs to start at the very beginning,",
			"but never update after that, don't implement update.",
			"And update will not be called.",
			"All of these are optional.",
			"That's just a small chunk of MonoBehaviour,",
			"though, because you also have messages.",
			"So messages are functions that you override.",
			"As you can see, there's a whole lot of them.",
			"And all of these messages get called, depending on certain things that",
			"happen in the game scene.",
			"So OnTriggerEnter, for example, if our object is a trigger, and we enter it,",
			"then the behavior will get called in that function, which",
			"will allow us to do things like-- if our helicopter enters a building,",
			"we can call that helicopter's explode method,",
			"which is literally what we do in this project, thanks to this function.",
			"And all we really need to do is just a couple of lines of code.",
			"It's very simple.",
			"OnPostRender, OnPreRender-- all these different things",
			"are called at different times.",
			"You can look into all of these, if you want to, just by clicking on them",
			"and looking at their documentation.",
			"LateUpdate is called after all update functions have been called.",
			"This can be relevant for certain physics calculations.",
			"But there's a whole lot of different things you can do.",
			"You don't necessarily need to do a lot of things yourself,",
			"if Unity provides you with the function that gives you",
			"the effect that you're looking for.",
			"And so if you're curious, MonoBehaviour, and then the docs at large.",
			"This is just all the documentation-- just an insane amount of documentation.",
			"And that's just in the classes.",
			"There's all these other little side areas, as well.",
			"And so that's sort of what MonoBehaviour is.",
			"It's a component.",
			"It gets a lot of these functions called for you.",
			"You don't have to implement them.",
			"But if you do, you get a lot of functionality for free, basically.",
			"Any questions as to what a MonoBehaviour is, how it works, and so forth?",
			"Or any of the syntax we've seen thus far for creating a MonoBehaviour?",
			"All right.",
			"And so, here in our coin, for example, which we were looking at before,",
			"notice that I'm referencing something called a transform.",
			"Transform.position.x is less than negative 25, destroy a game object.",
			"If this is the coin, what do we think that this is accomplishing?",
			"",
			"AUDIENCE: It goes off the screen [INAUDIBLE]??",
			"COLTON OGDEN: Yep.",
			"So the transform, recall, was our component",
			"that encapsulates our rotation, scale, and position.",
			"So we can just say, if transform.position.x is less",
			"than negative 25, destroy game object.",
			"Because we're spawning the coins dynamically.",
			"When they get off screen-- just like we did with the pipes, if you remember.",
			"And I had a screenshot, actually, in that slide",
			"that showcased what that looked like.",
			"We can see that exact thing live here.",
			"If I go to Layouts, two by three, and we play the game again,",
			"and then I'll just die at some point.",
			"But if we do this, we're seeing our scene live.",
			"So we're following this-- yep.",
			"See how the coin-- as soon as the building, and the plane,",
			"and the coins all get to this point--",
			"this is negative 25 in Unity units, not in pixels.",
			"Everything in Unity is based on Unity units, which, by default,",
			"1 is equal to one meter, as opposed to-- we've been thus far using just pixels.",
			"But pixels aren't viable in 3D.",
			"[MUSIC PLAYING]",
			"But that's effectively what that component does.",
			"It's checking, in our Update function-- void Update--",
			"if transform.position.x less than negative 25.",
			"And notice that we don't actually have to declare transform",
			"anywhere, which is interesting.",
			"That's because MonoBehaviour, by default, gives you",
			"access to its game objects transform just by default.",
			"That's just something you get for free.",
			"And then, notice gameObject-- we also haven't declared gameObject anywhere.",
			"Because by default, we have access to gameObject.",
			"It's the game object that this script belongs to.",
			"That this component belongs to.",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: This would be the actual--",
			"so the interesting thing about the classes",
			"is, you don't have to explicitly say this.",
			"Because if you had int myNumber equals 10, and you just say, myNumber--",
			"the difference between Lua and C# and Java is that,",
			"it will already know what myNumber is, this is myNumber.",
			"It will know its this objects.",
			"AUDIENCE: Yeah.",
			"COLTON OGDEN: You don't have to do that.",
			"",
			"Sort of a nice little thing to save you a little bit of time.",
			"Because you could then just say, myNumber plus equals 10.",
			"Another nice thing about C#, by the way, which we didn't get in Lua--",
			"you can do compound assignment operators.",
			"So you can do plus equals, minus equals, times equals.",
			"That's one of my little pet peeves I have with--",
			"oh.",
			"And notice that also, the nice thing about the fact that I",
			"have OmniSharp-- it'll underline.",
			"And this is just a trait of most IDEs, honestly.",
			"So you get this with a lot of places.",
			"But it'll tell you myNumber is not assigned, with the underlining,",
			"and also just by hovering over it.",
			"The named myNumber does not exist in the current context.",
			"But I can just say, int myNumber.",
			"And then it's gone.",
			"A little bit more that we have to worry about,",
			"and a little bit less that we have to worry about.",
			"A little give and take.",
			"But still, I think, overall, C# is going to be a lot more syntax-heavy.",
			"You do have to worry about things like braces, and semi-colons,",
			"and putting everything in a boilerplate.",
			"And then, obviously, type declaration, and return type declaration.",
			"It can be a little bit more than we've gotten used to so far.",
			"But it's honestly not too bad, just given that you can use IDEs.",
			"First of all, the fact that you're statically typing everything,",
			"you can detect a lot more errors in advance.",
			"If you're trying to do something with some type",
			"that you're not supposed to do, like some function accepts",
			"some object of some type, but you're passing in some other object,",
			"you'll catch that in advance.",
			"And so that's a really nice thing.",
			"But yeah.",
			"It is a give and take.",
			"And also, IDEs will give you, like I said,",
			"a lot of the functionality-- a lot of the autocomplete-- that",
			"makes a lot of this more sustainable.",
			"And it's not to say, of course, that Lua and Love2D don't have their own IDE.",
			"Like ZeroBrane Studio is popular, from what I understand.",
			"Haven't used it yet.",
			"But particularly when you venture into Java, and C#, and compiled languages,",
			"static languages-- having those features does save you a lot more time,",
			"relatively speaking, than when you're in a dynamic language.",
			"",
			"So that's what MonoBehaviours are.",
			"Every component of our game effectively has-- like the helicopter",
			"has its own script, a Heli Controller.",
			"The coin has its own script-- the Coin Spawner, the Skyscraper Spawner,",
			"the Skyscraper--",
			"they all have their own scripts that drive their game behavior.",
			"But they also have scripts and components that are part of Unity core,",
			"as well.",
			"Including Colliders and Triggers.",
			"So if I'm looking in Unity--",
			"so I'm going to go to--",
			"and this will actually be the last thing we look at before we take a break.",
			"But if I'm in Unity, and I'm going to go back to my default layout,",
			"just because it's a little cramped on a 720p.",
			"Go to my helicopter.",
			"Helicopter's got a couple of pieces to it.",
			"So let's actually go to where I can see it here.",
			"So one of the awesome things I love about Unity",
			"is, it gives you a lot of this editor magic-- this editor sort of sugar.",
			"It shows you visually where a lot of the things are in your game world.",
			"So the green rectangles-- anybody know what those are, or can guess?",
			"AUDIENCE: Hit boxes?",
			"COLTON OGDEN: Yep.",
			"Hit boxes.",
			"Exactly.",
			"These are colliders.",
			"So the blades-- it doesn't have a collider.",
			"That blades collider is actually separate.",
			"The box collider here is this collider right here.",
			"And so a collider is literally just something",
			"that collides with something else.",
			"And you can set it to be a trigger or not.",
			"If it's a trigger, then it actually won't trigger the OnTriggerCallback",
			"function that we briefly saw earlier.",
			"So the things that you want to activate triggers,",
			"you should make those not triggers.",
			"And then triggers, all you have to do is just click this little Trigger button.",
			"So what a trigger is is just a region that you've determined--",
			"or some object that you've determined-- should cause behavior",
			"when it gets triggered.",
			"So in this case, I've assigned--",
			"",
			"actually, I'll just play it.",
			"But the airplane has a trigger, right?",
			"",
			"All of these things have colliders, whether they're triggers or not.",
			"The helicopter-- its blades and its body--",
			"there are two colliders, two boxes.",
			"The coins all have colliders.",
			"The skyscrapers will have colliders, and the airplanes have colliders.",
			"The difference is that-- oh, and by the way, another cool thing.",
			"It's easy to get very sidetracked, just because there's",
			"so many cool things to talk about.",
			"You can pause the game while it's running.",
			"So it's paused right now, but it's in the exact state that I left it.",
			"So there's three coins there.",
			"I got my helicopter there.",
			"I can freely go about the scene.",
			"I can analyze things.",
			"I can actually modify this in real time.",
			"So I can change its rotation, if I want to.",
			"Probably don't want to do that.",
			"But I could if I want to.",
			"I can change its position, right?",
			"So I can move it left to right, like that.",
			"And notice that I actually have just the body selected,",
			"so the blades are kind of separate.",
			"I don't even know what kind of crazy stuff",
			"would happen if I just messed with this and just let it run.",
			"I haven't tested it that crazily.",
			"But you are allowed to step through.",
			"Oh, OK.",
			"It looks like they both just go.",
			"Oh, yeah, because they're parented to the helicopter object.",
			"So they're both going to align.",
			"They're going to move at the exact same rate,",
			"regardless of how far apart they are.",
			"The individual objects.",
			"But you can just step through your game's execution frame by frame,",
			"and get a sense of--",
			"if you're trying to pinpoint a bug, maybe, that's",
			"position-based or something that's tricky",
			"and you just haven't been able to find exactly what's going on.",
			"",
			"You can look through your whole scene and all",
			"of the fields of every object in step time,",
			"just by stepping through-- this button here--",
			"assuming that you're in pause mode.",
			"And then just looking at all the components here on the right side.",
			"Because those will all still update.",
			"All these fields will update any time you perform",
			"any changes in the actual scene.",
			"So super helpful for debugging.",
			"I know I've used it a bunch.",
			"And then if I start again, or if I stop it,",
			"the nice thing is, any of the changes that you",
			"make while it's running to your object, they",
			"don't get applied when you actually go back to the game.",
			"So notice that I messed with the two pieces, I separated them.",
			"And then I stopped the game.",
			"It ended up going right back to where it was in the very beginning.",
			"So all this gets just basically saved like a snapshot.",
			"You can do whatever you want during your game, and then come back to it,",
			"and it will all get reverted back to where it was.",
			"Yeah.",
			"TONY: So [INAUDIBLE] if you hit single player,",
			"and I kept making changes while I'm not involved [INAUDIBLE]..",
			"COLTON OGDEN: Yes.",
			"So, yeah.",
			"Tony just basically echoed what I just said, which was,",
			"if you make changes in your game while it's running,",
			"and you're trying to maybe tweak them such that it's perfect when you're",
			"actually done, they don't get saved.",
			"So you have to actually make a conscious effort to remember what you've done,",
			"how you've changed different fields, to fix any bugs, if they do exist.",
			"But it is something that can be disheartening or frustrating, if you",
			"finally fix something, and then you forget what it is you changed.",
			"And then you have to mess with it a whole bunch.",
			"So remember all the changes you make, if they're",
			"pertinent to your actual game's execution",
			"and the debugging of your game.",
			"",
			"And then there's also a console, as well, which is nice.",
			"If you want to output things like JavaScript style on the web,",
			"you can do console.log.",
			"You can do the same thing with a debug call here in Unity.",
			"I don't have any of those calls in the actual game.",
			"But it is something that we'll look at going forward.",
			"And it is something that can be very helpful",
			"if you want to measure something or output something that you can't",
			"necessarily look at in the inspector.",
			"In the case of this game, most of anything that we want to take a look at",
			"is visible in the inspector.",
			"But if you have an algorithm, maybe you have a generator that's not visual,",
			"like a level generator.",
			"And you want to make sure that the data structure representing your level",
			"is generating things properly, you can output everything maybe via hashmarks",
			"or something in your console, and actually",
			"see it that way when you're running the code,",
			"rather than having to run the actual game and look through it that way.",
			"Some things just are hard to model in the editor,",
			"and still need console output.",
			"So the console is there to help you.",
			"And so debug.log is the function, I believe,",
			"that you need to see all that stuff.",
			"Right.",
			"Colliders and triggers.",
			"So we had a little bit of a tangent there,",
			"but the helicopter is comprised of these three things.",
			"But the blades collider should have ultimately",
			"been merged with the blades object here.",
			"But we can think of it as the blades and the body.",
			"The reason they're separated-- well, there's two reasons they're separated.",
			"One core reason they're separated is they're just different sizes.",
			"So the blades are longer than the body.",
			"And so we have, for that reason, two separate colliders.",
			"So we're looking at the helicopter here.",
			"We can see that the collider for the blades",
			"extends a little bit farther than the body.",
			"We don't want to create a box collider for the entire helicopter,",
			"because a box collider right that goes out here, for example,",
			"might not be super fair if we're just coming right",
			"over a building, and our body--",
			"",
			"maybe the building's right here, and we just miss it.",
			"We don't want that to be collided with.",
			"So sometimes you'll need to combine colliders",
			"to accomplish the collision detection behavior you're looking at.",
			"The nice thing about box colliders, which we're using here,",
			"is that they're not very expensive, because they're just boxes.",
			"It's easy to compute 3D box collision with other things that are 3D boxes.",
			"And that's actually a topic in its own is,",
			"taking a complicated model or object, and then breaking it down,",
			"not in terms of what it looks like to be collided with,",
			"but how you can simplify the collision detection of something,",
			"like a character, by just modeling its arms, its body, its legs, as cylinders",
			"or boxes, rather than complicated geometry.",
			"You usually don't want to do peer geometry collision for anything,",
			"because that gets really expensive.",
			"You want to try and aim for simple shapes to be your colliders.",
			"And Unity gives you a lot of simple shapes",
			"by default. If you look at, for example, in our helicopter--",
			"if you wanted to add a component-- which, by the way,",
			"you can easily do here, just in the component inspector.",
			"If you're looking at the bottom right, there's an Add Component button.",
			"So you can add any of the components that you've written,",
			"and also all the components that Unity gives you by default.",
			"So if we look at it by collider, we can see",
			"there's a lot of different colliders that Unity gives us for free.",
			"Polygon collider, mesh collider, box collider, capsule collider.",
			"I try and strive for boxes as much as I can.",
			"Spheres aren't bad.",
			"Spheres are usually fairly easy to calculate, as well.",
			"But boxes are the easiest.",
			"Capsules are pretty easy, too.",
			"A lot of players will be capsule colliders, because characters usually",
			"have rounded heads.",
			"So emulating the collision for their head with a capsule makes more sense.",
			"And we'll look at that, actually, next week, when we use a first-person",
			"component that we can get for free.",
			"The default collider for it is a capsule.",
			"But the blades and the body both have their own collider.",
			"They're not triggers.",
			"But if we look at our prefabs--",
			"which we'll take a look at what a prefab is shortly--",
			"a skyscraper has a box collider which is a trigger, as we can see here.",
			"And the coin is a trigger.",
			"And the airplane is a trigger.",
			"So these things all trigger, except other colliders that aren't triggers.",
			"And if it detects a collision with a collider that's not a trigger,",
			"it will call the OnTriggerEnter function,",
			"which we saw is something that you can get with MonoBehaviour.",
			"Yeah.",
			"AUDIENCE: Could you have two values if you want to call the special",
			"function two at the same time, you'd have the regular [INAUDIBLE]..",
			"Is there an easier way to do that?",
			"COLTON OGDEN: Can you give me a specific example?",
			"AUDIENCE: Well, if I want to have a pinball game or something,",
			"I'd want to model functioning when my ball hits something.",
			"But at the same time, I just don't it to bounce off of stuff.",
			"COLTON OGDEN: Oh, yeah.",
			"AUDIENCE: So you could do that?",
			"COLTON OGDEN: So the question was, can I implement such that, for example,",
			"in a pinball game, if I have a ball that collides with something",
			"and causes a trigger to occur, but also have it bounce off of something.",
			"And you would do that with a rigid body.",
			"So you give it a rigid body.",
			"In this case, I actually gave a rigid body to the helicopter",
			"because the original goal of mine was to have it be affected by gravity.",
			"But it turned out that I actually liked it a little bit better without gravity.",
			"So this rigid body isn't strictly necessary.",
			"But it has a gravity component that you can",
			"assign to it that will actually, then, calculate gravity, and pull it",
			"down wherever-- you have a global gravity definition that's",
			"in your Unity settings that will affect it that way.",
			"And so what you would do is, you would give your ball a rigid body.",
			"And other things that you want it to bounce off of those,",
			"those also have rigid bodies.",
			"And they can be kinematic or not, basically,",
			"which we talked about before.",
			"Kinematic can move, but not be affected by other objects.",
			"And so the object that's a trigger, you still trigger code, it does something.",
			"So your pinball machine, when it collides with something,",
			"and it triggers that thing, it'll still trigger that code.",
			"So whether that's increment your score, or cause something",
			"to flash, a part of it will flash, or play a sound,",
			"it'll do that in your OnTriggerEnter.",
			"But your rigid body will also perform its work,",
			"and bounce off of whatever it--",
			"assuming that you don't destroy it with that OnTriggerEnter function,",
			"it will bounce off of that surface, and behave in the way",
			"that you are alluding to.",
			"Does that make sense?",
			"All right.",
			"Cool.",
			"",
			"So all these things have triggers.",
			"The IsTrigger flag--",
			"I mean, that's as easy as we need it to be.",
			"So you just give a box collider.",
			"And the nice thing about box collider, too,",
			"is if your mesh is a box, or square, or rectangular,",
			"it will usually just fit it perfectly to whatever you're trying to assign it to.",
			"So in this case, I remember adding the box colliders for these skyscrapers.",
			"It just-- because they're all rectangular, or cubical--",
			"I don't know.",
			"What's the rectangular 3D?",
			"I forget the term.",
			"What is it?",
			"AUDIENCE: Rectangular prism.",
			"COLTON OGDEN: Rectangular prism, yes.",
			"Because they're all rectangular prisms, the box collector fits them.",
			"It'll scale the right way.",
			"When you have differently weird shaped objects,",
			"it'll just basically be as big as it needs",
			"to be to completely encapsulate it.",
			"But like I said before, because the helicopter has got some weird geometry,",
			"if we were to do that, it would by default just be this entire box here,",
			"because this is the farthest it goes out on this particular axis.",
			"So we want to combine meshes to produce the collision",
			"behavior that we're looking for.",
			"And the trigger enter bit is relevant because, if your game object is",
			"a trigger, then once we collide with that object,",
			"we want-- and by default, when you do OnTriggerEnter,",
			"it will look for the collider on this object.",
			"It's going to take in a collider other, right?",
			"And what that is is the other collider-- the thing",
			"that's colliding with this object, with this coin.",
			"So the helicopter, because it's the only other object in our scene",
			"that has a non-trigger collider.",
			"OnTriggerEnter-- this is going to be a helicopter.",
			"We can just say other.transform.parent, because our helicopter has children,",
			"which have the actual colliders, and a parent has the helicopter controller",
			"component.",
			"We're going to GetComponent the HeliController.",
			"So we're going to go through our that objects, that other",
			"that collided with us.",
			"We're going to get its transform parent.",
			"We're going to do GetComponent, which is a function that will just look",
			"through all of its list of components.",
			"We specify which component we want using this identifier here.",
			"So of class HeliController.",
			"And these angle brackets are the generic type specifier",
			"syntax, which basically looks for it.",
			"You could pass in any type here, effectively,",
			"and GetComponent will look at whatever type is in here,",
			"and get the component of that type, specifically.",
			"So you do have some sort of type flexibility in C#,",
			"but you have to go the extra mile and specify it,",
			"and implement functions that take generic arguments like this.",
			"Which is similar to Java, and C++, and other languages that do it that way.",
			"And then once we've gotten that component of type HeliController,",
			"with this function call, we execute PickupCoin,",
			"which is a function that's part of the HeliController.",
			"Any guesses as to what PickupCoin does?",
			"",
			"AUDIENCE: [INAUDIBLE]",
			"COLTON OGDEN: Sorry?",
			"AUDIENCE: Increments the coin counter and tells the coin to disappear.",
			"COLTON OGDEN: Increments the coin counter, calls the coin to disappear.",
			"Well, it actually doesn't call the coin to disappear, because we do that here.",
			"AUDIENCE: Oh.",
			"COLTON OGDEN: Destroy game object--",
			"game object is going to be this coin that's executing this function.",
			"There's one more thing, too.",
			"Do you remember what happens when we pick up a coin?",
			"Exactly.",
			"The particle effect.",
			"It triggers a particle effect.",
			"We can go to the HeliController class and take a look at that.",
			"PickupCoin.",
			"",
			"Here, coinTotal plus equals 1.",
			"GetComponent AudioSource.",
			"Play.",
			"So it's a little bit weird.",
			"So with audio source, you can have multiple audio files.",
			"So GetComponents AudioSource is what we need to actually get",
			"the audio attached to this object.",
			"And at index 0--",
			"because there's only going to be one audio source anyway.",
			"And then we just call Play, so that'll play the coin sound.",
			"And then GetComponent, because there's only",
			"going to be one particle system associated with this helicopter object.",
			"We're going to get the particle system object.",
			"And then we're just going to call Play on that, which will actually trigger",
			"an emission one time of its particles.",
			"That's in a nutshell what colliders and triggers are.",
			"It's a lot of syntax at once, because Unity is really big.",
			"But it's pretty simple.",
			"Just make sure that you give the right shapes to your objects.",
			"Make the right things triggers that you want",
			"to cause behavior to happen when non-trigger things touch them.",
			"And then implement OnTriggerEnter with the behavior-- the game logic--",
			"that you need.",
			"In the case of the skyscraper, for example, if we look at the skyscraper.",
			"So I have a skyscraper component here.",
			"And then if I OnTriggerEnter here, it effectively",
			"does the same thing that the airplane does,",
			"which is just go through the others, transform parent game object,",
			"HeliController, and then call Explode.",
			"And so Explode-- similar thing to what PickupCoin does,",
			"and it triggers a particle effect.",
			"But it also destroys the helicopter, and it tweaks the Game Over text",
			"to turn on at that point.",
			"So any questions as to how triggers work, or any of the syntax we've",
			"talked about thus far?",
			"I know that it's a lot.",
			"It's kind of a fast tour.",
			"But moving right along.",
			"All right.",
			"Oh, and here's a screenshot I took just to illustrate the green lines--",
			"the box-- and then the orange is the actual mesh of the helicopter.",
			"So we're going take a break.",
			"And then when we get back, we're gonna talk about prefabs",
			"and spawning them, and dive a little bit deeper",
			"into some of the other parts of the project.",
			"All right.",
			"Welcome back to GD50 Lecture 8.",
			"This is Helicopter Game 3D.",
			"So before the break, we were talking about colliders and triggers,",
			"and also just getting our hands used to using MonoBehaviours, and the editor,",
			"and all sorts of things.",
			"But we haven't really taken a look at prefabs,",
			"which is a major part of this game.",
			"So the coins, the skyscrapers, the airplanes--",
			"those are all prefabricated assets that we have gotten",
			"ready for spawning into our scene.",
			"And we're going to take a look at how that actually works.",
			"So here's a list of--",
			"in our editor view-- all the different prefabs that we have.",
			"So we can see airplane, blades, and body are prefabs.",
			"The coin, all the skyscrapers.",
			"There are three different kinds of skyscrapers.",
			"And then the helicopter.",
			"The helicopter itself we're not using as a prefab,",
			"because I've already created it in the scene,",
			"and it never gets instantiated dynamically.",
			"But we could easily make it so, because I have",
			"created a prefab with the helicopter.",
			"So when we're looking at the scene here, we",
			"notice that we have just the helicopter, and we have the background.",
			"But there's no skyscrapers, there's no coins, and there's no airplanes.",
			"Well, we do have our skyscraper spawner, the coin spawner, and the airplane",
			"spawner.",
			"And the three of those are just empty game objects,",
			"but they have associated with them these spawner scripts.",
			"And the spawner scripts, we've written ourself.",
			"And then, once we've written them, we just simply add component here,",
			"and then chosen the appropriate spawner.",
			"And so what those do--",
			"if we look in our code actually, and we go, for example, to the airplane",
			"spawner, we have a Start method.",
			"We have an Update method.",
			"Notice that the Update method doesn't do anything, paradoxically,",
			"because the airplane spawner is running over time.",
			"We are spawning airplanes over time.",
			"But the way that we do things over time asynchronously in Unity",
			"is a little bit different than anything that we've done so far.",
			"So this Start method here, we see that we're calling",
			"this function called StartCoroutine.",
			"And that function takes in a function called SpawnAirplanes.",
			"And so at a high level, a coroutine is effectively a function",
			"that yields control every time it's called.",
			"So it'll run, and then, rather than go through its entire body of code,",
			"and then end or return some value, and have that just be the end of it,",
			"it'll actually yield, when you use the keyword Yield.",
			"And depending on what you've done with that Yield,",
			"it'll pause for some length of time, or do something for some length of time,",
			"rather than end that function call.",
			"So this SpawnAirplanes function here--",
			"notice that it has a while true.",
			"And so while true is not usually something that you want in a game,",
			"because that's just going to lock your game forever.",
			"But in the case of a coroutine, a coroutine is going to run,",
			"but then it's going to yield control back",
			"to whatever called it for some length of time,",
			"or depending on how we've programmed it.",
			"In this case, you can see here--",
			"yield return new WaitForSeconds Random.Range 3, 10.",
			"Does anybody have an idea of what that does?",
			"Yeah.",
			"AUDIENCE: The logic [INAUDIBLE] waits for between 3 and 10 seconds,",
			"and continues.",
			"COLTON OGDEN: It does.",
			"It yields for 3 to 10 seconds, and then continues its execution.",
			"That's exactly right.",
			"Did you have a question?",
			"AUDIENCE: I was thinking, why do you have three different skyscrapers set",
			"up?",
			"Couldn't you just have one skyscraper and change [INAUDIBLE]??",
			"COLTON OGDEN: You could do that.",
			"Yeah.",
			"I guess for the sake of demonstrating prefabs.",
			"And also, it's a little bit complex more complicated to get",
			"into dynamic material setting, and changing materials in code.",
			"But yeah.",
			"You could effectively just create one skyscraper with one base color,",
			"and then dynamically change its material.",
			"But also to illustrate having multiple different prefabs",
			"assigned to an object, that you can then choose at random",
			"to generate in the game scene.",
			"They might not necessarily be skyscrapers",
			"that will have the exact same color.",
			"It could be a goblin, or a orc, or a troll, or something.",
			"And they're all different prefabs that we've created.",
			"But you can put them in a list, and then dynamically choose",
			"which one we want at random.",
			"So a few different reasons.",
			"But yeah.",
			"In a situation where everything is just effectively differentiated",
			"by a single color and a material change, you",
			"could dynamically swap that as needed.",
			"",
			"This code routine that we've started-- this function that",
			"effectively can pause itself, even though it's being called while true",
			"is in play.",
			"It yields control with this Yield keyword.",
			"And what it does is, it allows us to call something over and over again,",
			"but then pause for some length of time.",
			"Right?",
			"We don't have to maintain a counter for spawn time in here.",
			"Which we could do.",
			"We could do float spawn time equals 0, right?",
			"And then float spawn increment equals like 1,000.",
			"And then while spawn time is less than spawn increment--",
			"we could say in Update, if spawn increment.",
			"Or we would do spawn time plus equals time.delta time first,",
			"to get the length of time that's passed since the last frame.",
			"And then we would say, if spawn time is greater",
			"than spawn increment, instantiate a new airplane.",
			"And then set spawn time back to 0.",
			"And then just rinse and repeat this over and over again.",
			"But coroutines take out this need, much like timer",
			"did, for having anything that you keep track of with a specific timer.",
			"You can do a whole bunch of different things with coroutines.",
			"One of them, in this case that we're doing,",
			"is just pausing for some length of time to do something.",
			"In this case, we want to wait for some time",
			"in between each instantiation of an airplane.",
			"So we'll just yield control back to our game,",
			"because we want to break out of this while true.",
			"But we don't want to break out of it and completely break out of this function.",
			"We want this to keep going over and over again.",
			"So we see here, this Instantiate function is",
			"where the actual instantiation happens.",
			"And Instantiate takes in a prefab--",
			"so a game object.",
			"So in this case, we have a prefabs list here.",
			"GameObject public, GameObject array called prefabs.",
			"So this can take in any number of prefabs that we want it to.",
			"",
			"We're going to return a range between 0 and length.",
			"And then also, we want it to spawn.",
			"We give it a position that we want to spawn in.",
			"So Instantiate-- it takes in an object, it takes in a position,",
			"and it takes in a rotation.",
			"In this case, we want to give it this position.",
			"So it's a Vector3--",
			"it's an x, y, and a z--",
			"at 26.",
			"So off the right edge of the screen 7 to 10.",
			"So within a range of verticality up towards the top.",
			"And then at 11 on the z-axis, which is aligned with our helicopter",
			"and the skyscrapers.",
			"And then this Quaternion.Euler--",
			"so 3D rotation, the math behind it is pretty complex.",
			"And I don't know it well at all.",
			"But Quaternion.Euler allows us to think in degrees,",
			"and actually perform a 3D rotation on something fairly easily.",
			"So if you want to rotate something in 3D, Quaternion.Euler.",
			"Negative 90 degrees on the, I believe it's z, x, y.",
			"In this case, the way that the default rotation of the airplane is,",
			"we want to set it to negative 90, negative 90, 0.",
			"You could also set up your prefab in a way such",
			"that you don't need to pass this in.",
			"You could do Quaternion.Identity in that case.",
			"But this is just to illustrate how, if you want to rotate something",
			"in code, how you would do it.",
			"So Quaternion.Euler is the way that you rotate something in 3D.",
			"",
			"So Instantiate-- global function that you",
			"can call anywhere you want to, as long as you just",
			"give it a actual object or prefab that it knows how to instantiate.",
			"And then WaitForSeconds-- another global object,",
			"which is a asynchronous object that will allow",
			"us to yield for this length of time.",
			"You pass in the length of time here.",
			"It takes it in seconds, because WaitForSeconds.",
			"And then, as soon as this length of time has passed,",
			"it's going to come back up here into this while true instruction,",
			"and then instantiate again.",
			"We don't have to keep track of a time or anything-- any weird boilerplate.",
			"We just have to call StartCoroutine here.",
			"And notice that we explicitly have to call StartCoroutine routine in order",
			"to trigger a coroutine function.",
			"And to do that, it returns what's called an IEnumerator.",
			"And so a lot of these details, you don't need to necessarily know",
			"the low-level details of.",
			"I certainly don't know all the low-level details of everything",
			"that happens in Unity.",
			"But just know if you want asynchronous behavior,",
			"your function needs to return an IEnumerator,",
			"which C# knows is a generator function which will yield control",
			"at predetermined times.",
			"And it will manage it for you.",
			"And to trigger it, you need to StartCoroutine,",
			"which is a function that Unity has defined for you.",
			"So any questions as to how this works at a high level, at least?",
			"AUDIENCE: I'm a little confused on the syntax for Yield.",
			"Does the Yield return--",
			"COLTON OGDEN: Yes.",
			"Yield takes in something, and you get a new to instantiate a new WaitForSecond.",
			"It's just the way the syntax is for yielding an object.",
			"Yield--",
			"AUDIENCE: What is it returning back?",
			"COLTON OGDEN: It's returning this to the Yield instruction.",
			"And the Yield instruction is then yielding that.",
			"It is a little bit weird, though.",
			"But you only really have to--",
			"this is a common pattern that you'll see.",
			"And so you'll just get used to it.",
			"",
			"And honestly, this is probably one of the more syntactically difficult things",
			"about Unity.",
			"So I mean, as soon as you understand this,",
			"pretty much anything else is fairly easy at that point.",
			"I would say this is one of the weirder sides.",
			"Because in Lua, and Love2D, and those kinds of environments,",
			"it's a little bit easier to do this sort of thing with as much syntax.",
			"C#, being a statically-typed environment, to get the same behavior,",
			"you have to go a little bit further.",
			"Do things their way.",
			"But that's getting asynchronous behavior to work in C#.",
			"And in Unity, typically, in order to avoid messy state management,",
			"you will use coroutines, which are IEnumerators, often",
			"with the WaitForSeconds object.",
			"And just make sure to trigger them with StartCoroutine.",
			"And then call that function as if it were an object.",
			"Just like that.",
			"",
			"And the behavior for the airplane spawner, the coin spawner,",
			"and so forth, they're all fairly similar.",
			"So StartCoroutine SpawnCoins.",
			"And then while true.",
			"So coins-- this row just spawns a random number of coins vertically.",
			"So you can have one, or you can maybe have a couple.",
			"And then for each of those, instantiate them",
			"at a random position on the y-axis.",
			"Here, random negative 10 to 10.",
			"In this case, Quaternion.Identity, because we don't want",
			"to rotate them any differently than they already are, which I alluded to before.",
			"So Quaternion.Identity just means no rotation applied to the object.",
			"So whatever its base rotation is as a prefab.",
			"So it'll be whatever it is when you see it in the editor,",
			"and when you create a new one, that's going to be its default rotation.",
			"So basically the equivalent of, don't rotate this by anything.",
			"",
			"And then, same as we saw before, yields a new WaitForSeconds.",
			"In this case, 1 to 5, so a little bit more frequently than the airplane,",
			"on average.",
			"More coins.",
			"As the airplane, I believe, was 3 to 10, so every 3 to 10 seconds.",
			"And that's basically that.",
			"And then we StartCoroutine, just like we did before with the airplane spawner.",
			"And then lastly, the skyscraper spawner.",
			"In this case, we only have one coin prefab,",
			"we only have one airplane prefab, but we have three skyscraper prefabs.",
			"And so the actual Random.Range here comes into play,",
			"because that's how we get the different color skyscrapers spawning at random.",
			"And like I said before, this can be extrapolated",
			"to whatever sort of game environment you want,",
			"where you have multiple types of objects that",
			"are more complicated than just a color swap,",
			"and you want to choose them at random.",
			"We're doing all the same things that we did before.",
			"And also, here, we can see that they have a random chance",
			"1 in 4, so a 25% chance of increasing the speed.",
			"So skyscraper spawner actually has-- and this is relevant to the assignment--",
			"skyscraper spawner has a float called speed here, which is, by default, 10.",
			"And this drives the scroll speed of the skyscrapers, the coins,",
			"and the airplanes.",
			"And so when we call it static, do we know what that means?",
			"Yeah?",
			"AUDIENCE: Well, it's the same for all [INAUDIBLE] objects [INAUDIBLE]..",
			"COLTON OGDEN: Yes.",
			"So no matter how many skyscraper spawners we create,",
			"they're all going to share this field speed,",
			"and it's always going to be equal to the same amount across all instances.",
			"So static means that it's part of the class.",
			"It belongs to the SkyscraperSpawner class.",
			"It does not belong to a SkyscraperSpawner object.",
			"And so we don't ever really want to change that ourselves in this game.",
			"But the airplane, for example, notice that in our Update function",
			"here, if the transform.position.x is less than negative 25,",
			"we should destroy the airplane.",
			"So when it goes off screen, we should destroy it.",
			"But if not, then we want to translate this object",
			"on the x-axis by negative SkyscraperSpawner.speed times 2 times",
			"Time.deltaTime.",
			"So we're translating it on the x-axis, and we're",
			"using the SkyscraperSpawner.speed as our core multiplier.",
			"And then if we look at coin--",
			"same thing.",
			"",
			"I should ask, what is one design consideration",
			"if we're looking at this--",
			"all these components?",
			"And let's say we're trying to get as decoupled as we",
			"can, and well-engineered as we can.",
			"What is a consideration that we can, noticing that, for example,",
			"this exists in coin, and this exists in airplane?",
			"",
			"AUDIENCE: What's the question again?",
			"COLTON OGDEN: So how could we better engineer this?",
			"Notice that we have--",
			"and taking into consideration this component model in Unity--",
			"what could we do with, for example, this?",
			"AUDIENCE: So that Unity better [INAUDIBLE]..",
			"COLTON OGDEN: Well, I'm thinking that, because the airplane and the coin--",
			"well, first of all, it wouldn't belong in the spawner,",
			"because the spawner's job is to spawn coins.",
			"But the coins and the airplanes-- they have their behavior, right?",
			"They have their update behavior.",
			"But they're all doing kind of the same thing, which is scrolling to the left,",
			"and then de-spawning at negative 25.",
			"So a design consideration here would be, maybe we have a scroll component,",
			"right?",
			"Or a scroll and destroy component.",
			"Or just a scroll component with an optional destroy flag.",
			"And then we just put this on anything that we want to automatically scroll",
			"to the left screen and de-spawn, rather than having",
			"to code this in every single class.",
			"So if you're ever looking through your code,",
			"and you're seeing, for example, this and this being the exact same, especially",
			"in Unity, because of how flexible components are,",
			"try and think about how you can make it into its own component.",
			"AUDIENCE: So where would you put the coins [INAUDIBLE]??",
			"COLTON OGDEN: You make it yourself.",
			"So if we went into here, into our Scripts thing, and just",
			"made a new script.",
			"And then we called it Scrollable.",
			"And then we double-click it, it'll open up in our editor",
			"that we've chosen in our preferences.",
			"By default, it's going be Visual Studio with the newer versions.",
			"But now we have a new scrollable behavior.",
			"And then all we need to do--",
			"we would say, oops--",
			"not that.",
			"If-- once again, I can't type.",
			"Transform.position.x is less than negative 25,",
			"destroy game object, right?",
			"And so this is the exact same thing as all that behavior that we saw before.",
			"So now we can take all of that out of coin--",
			"we can take this out, and we can take this out here, and then",
			"just add to the airplane and to the coin prefabs,",
			"we'd just add this new Scrollable prefab,",
			"and it'll take care of that for us.",
			"Yeah.",
			"AUDIENCE: How would you add that?",
			"COLTON OGDEN: So if we're going back to Unity--",
			"so the question is, how would you add the component to the prefab?",
			"So in our prefabs, note that we have airplane, we have coin,",
			"and we have all the skyscrapers.",
			"So these are all prefabs.",
			"Oh, and I haven't actually detailed how to create",
			"a prefab, which I apologize for.",
			"So a prefab-- all you need to do is create an object in your scene.",
			"For example, I did it with this helicopter.",
			"So I'm going to delete the helicopter, because this is just the helicopter",
			"prefab.",
			"It's not going to actually delete the helicopter from our scene.",
			"But if I take this helicopter here, and then I drag it in here,",
			"notice that now we have a prefab here.",
			"We could take this helicopter out, and just add a new one right there.",
			"So now I have two helicopters.",
			"That's all a prefab is.",
			"It's just something that you've made in your scene",
			"that you want to replicate or duplicate in the future, ideally through code.",
			"And notice it's showing here in our hierarchy view.",
			"But obviously you don't want that.",
			"But that's how you create a prefab is, you find something",
			"that you've configured in your game scene, and then in your code,",
			"you're allowed to then instantiate that prefab,",
			"assuming that you've made that prefab a member of whatever class",
			"instantiates it.",
			"So in this case, the airplane spawner.",
			"So notice that we call Instantiate here, like we saw, before on line 24.",
			"But it's looking at prefabs.",
			"It's a list, and it's looking at a random range between 0",
			"and the length of the prefabs.",
			"You have to declare a public GameObject list prefabs here.",
			"And then, once we do that, and we go to our airplane spawner here,",
			"notice that we have this prefabs list here.",
			"So we actually get a editor view of that code, that data structure.",
			"And we can just add prefabs that we want to.",
			"And if we change the size to 2, then we can add a second prefab.",
			"Or if we make the size 10, then we can put 10 different airplanes there.",
			"But we only have one airplane that I modeled, so I was going to make it 1.",
			"But this is the same thing.",
			"This GameObject list is that same list, only",
			"that's the view we have of it in the editor.",
			"And it's just a different way of looking at the data.",
			"And that's the nice thing about Unity is that, if you make",
			"any of your fields public, like this.",
			"If I did public int someNumber, right?",
			"And I save that, and I go back here, my airplane spawner",
			"should get a someNumber right here.",
			"And then I can just set someNumber to whatever I want.",
			"It doesn't do anything right now, because someNumber",
			"doesn't affect the script.",
			"But this is a nice way to take the burden from you out of the code.",
			"You're not experimenting with code.",
			"You're not tweaking some variable in your script.",
			"SomeNumber 10, run me, OK-- someNumber 12, run it.",
			"You can just assign it here in your actual editor view,",
			"and then just tweak it as you want.",
			"So I can just scroll through it.",
			"I can start the game and I can pause the game.",
			"AUDIENCE: So is it that you just make it public?",
			"COLTON OGDEN: You have to make it public.",
			"Exactly.",
			"AUDIENCE: Oh, then that shows in.",
			"COLTON OGDEN: Yep.",
			"And so I can just do this.",
			"And then I should be able to--",
			"I can just change this now, if I wanted to, to 67.",
			"And so if that actually had some sort of effect on my game world--",
			"if my game relied on that number being meaningful--",
			"this would update the scene.",
			"And so you can make whatever-- you can debug this way,",
			"or you can customize your components more this way.",
			"But it's just a tremendous amount of flexibility.",
			"And so that's how we're instantiating this from this list of prefabs.",
			"It's a list of game objects.",
			"We've made it explicit to Unity.",
			"The editor's going to know, OK, these are game objects.",
			"And so prefabs are game objects.",
			"So we can just put any of these into this field",
			"here, this element 0 field, or however many fields we have.",
			"And it will, in the code, randomly choose one of those,",
			"and then instantiate it.",
			"So any questions as to how prefabs work, or instantiation,",
			"or anything like that?",
			"",
			"OK.",
			"",
			"AUDIENCE: Does each prefab have a unique number or not?",
			"COLTON OGDEN: Does each prefab have a unique number?",
			"Not a unique number.",
			"They just are all assets in your folder here.",
			"They have some kind of identifier to Unity that's hidden from you.",
			"It might be visible from you if you look.",
			"They might have some sort of generated ID or something like that, so",
			"that it knows, underneath the scenes.",
			"But it's not something that you worry about in your actual code.",
			"We've created a list here that's just--",
			"it will expect some number.",
			"It doesn't know how many.",
			"And then, in the editor, you can actually tell it how many.",
			"",
			"Because every list that you make visible in",
			"the editor will have this size field.",
			"And that's just part of the editor's abstraction.",
			"The editor has abstractions for a lot of different objects.",
			"You can create a lot of different objects in your MonoBehaviours,",
			"and make them public, and Unity will have a different view for them.",
			"Things like color pickers, and stuff like that.",
			"I don't know the exact object offhand, but if you make a public color",
			"picker in your MonoBehaviour or something like that,",
			"you'll actually get a color picker here that you can choose a color for,",
			"which is pretty awesome.",
			"And there's a lot of different customized views.",
			"",
			"I think, actually, the directional light might be an example.",
			"See this color here?",
			"This is somewhere in code.",
			"There's a public color something.",
			"And then in the editor, when you're actually editing it,",
			"you can choose the color.",
			"And Unity gives you the option to make it wherever you want.",
			"And notice it's actually affecting the background there.",
			"One of the really big strengths of Unity,",
			"and a reason to really make your components customizable,",
			"is this one-to-one mapping between your data, your code,",
			"and your editor view of the data.",
			"Take the burden away from you programming it,",
			"which you're more prone to make mistakes, too,",
			"and also waste a lot of time.",
			"And then just be able to modify.",
			"How much faster is it for me to just say,",
			"I want this red color, rather than color.r equals something,",
			"and then color.g equals something, color.b equals something.",
			"And then assign it that way.",
			"So that's just a simple example to illustrate it.",
			"But there's a tremendous amount of potential involved",
			"in making your components customizable.",
			"And so that's what I did here.",
			"Because I wanted the skyscraper spawner to spawn not just one skyscraper",
			"but several skyscrapers, I created this public prefabs list,",
			"that I can then populate from Unity here.",
			"And say, OK, this object, this object, and this object.",
			"Put that into the skyscraper spawner here, in these slots.",
			"And then my code knows to instantiate it, randomly picking one of those.",
			"Yeah.",
			"AUDIENCE: In the example earlier, how would you",
			"actually go about making something scrollable now that you've made that?",
			"Would you just add component to the coin?",
			"COLTON OGDEN: How would you go about making something scrollable now that",
			"you've--",
			"AUDIENCE: You declared that Scrollable class, right?",
			"COLTON OGDEN: Oh, yeah.",
			"So I have a Scrollable script here.",
			"Oh, do you mean the infinite scrolling background, or the scrollable object?",
			"AUDIENCE: The one where you define it as being destroyed when it's [INAUDIBLE]..",
			"COLTON OGDEN: Oh, yeah.",
			"So in order to do that-- so we've made the Scrollable script here.",
			"So you would just go to-- in this case, since we're",
			"instantiating all of the coins, and skyscrapers, and airplanes as prefabs,",
			"you actually edit the prefab itself.",
			"So I'd go to this coin prefab.",
			"I'd add component here at the bottom.",
			"And I would add Scrollable there, which is a script.",
			"And you can tell it's yours, because it says script there.",
			"Just like coin here is a script, and rotate script is a script.",
			"That's actually an old script that I didn't use anymore,",
			"because I just made it part of the coin itself.",
			"But this is another part of what makes the coin class, by the way,",
			"is this transform.rotate x, y, and z, either relative",
			"to itself or to the world space.",
			"In this case, it shows the world space, because I want",
			"it to rotate on the world's y-axis.",
			"But if you rotate an object, its own x, y, z still exist.",
			"And so you can have something rotate about its own x, y,",
			"and z, regardless of its rotation in the world.",
			"And so I want the coin to always rotate.",
			"So 5 degrees on the y-axis here.",
			"So this is another part that you could take and make it its own script--",
			"just a rotatable script.",
			"Auto rotate script.",
			"And then just make these public fields, like public x, public y, public z.",
			"And then you could change those in the editor,",
			"and then actually customize your objects without having to go into the code",
			"itself.",
			"AUDIENCE: So you don't have to do any collisions, actually, yourself.",
			"You just click the button and type in the Collide function.",
			"COLTON OGDEN: Yeah.",
			"You don't have to do any of the collision yourself,",
			"because Unity comes with a 3D physics engine.",
			"You have to tell it what to do when the collisions happen.",
			"But you don't have to actually code the 3D physics engine yourself, which",
			"is a tremendous amount of work.",
			"One of the big selling points, definitely,",
			"for doing any 3D things in Unity.",
			"I mean, a lot of engines now have 3D engines for free.",
			"There was a time when it was less prevalent.",
			"AUDIENCE: How would you know what you collided with?",
			"COLTON OGDEN: Because there is a collider that it gets.",
			"",
			"Where is it again?",
			"Is it the skyscraper, for example?",
			"So every skyscraper, when it collides with something,",
			"this OnTriggerEnter gets passed in this collider other.",
			"And so that's going to be the object that you collided with.",
			"You can assign a name to an object, and then get its name, as well, in code,",
			"if you needed to do that.",
			"In this case, we wanted to know whether it's the helicopter or not.",
			"So we got the HeliController from it.",
			"But in our game, it's kind of a special case,",
			"because there's only one type of object that",
			"has a collider that's a non-trigger, and that's the helicopter.",
			"So we can assume that this exists when we do get a collision.",
			"But otherwise, we probably want to say, get component of HeliController,",
			"and then test it for equal to null.",
			"And if it's equal to null, then we want to not do something.",
			"If we tried to call explode on a null object,",
			"that's going to be a null pointer exception.",
			"And then you're going to crash your game.",
			"But in this case, we're guaranteed for that not to happen.",
			"Because, like I said, the only collider that",
			"can collide with this that's not a trigger is the helicopter object.",
			"So does that makes sense?",
			"AUDIENCE: Sounds like a physics problem with an exploding element.",
			"COLTON OGDEN: Oh, yeah.",
			"Yeah.",
			"That's all too real.",
			"",
			"In this case, though, all explode is is, thankfully, just destroy game object",
			"and then start a particle effect.",
			"So any more questions as to how instantiation,",
			"prefabs, using the Unity editor, interacting with your model",
			"behaviors, public variables?",
			"Yeah.",
			"AUDIENCE: You get processes, you first enter the data in that to there,",
			"and then it runs the code to load the data,",
			"or can you also put value data in the editor?",
			"COLTON OGDEN: You cannot define--",
			"so the question is, do you first create the data in the editor,",
			"and then the code, and then tie them together that way?",
			"In order to get a new component, you will have to create the class first--",
			"the model behavior that you want--",
			"and give it the public fields that it needs for the editor to actually read.",
			"So the editor reads your script, looks through all the public fields,",
			"and then will create the necessary GUI elements in the editor",
			"to interact with the code.",
			"But this needs to exist.",
			"All this code needs to exist.",
			"Anything that has these public variables that you want accessible in the editor",
			"needs to exist in code first, and then you",
			"have the power to use it in the editor.",
			"And then it's customizable at that point.",
			"Any more questions?",
			"All right.",
			"So that's the prefabs.",
			"So we looked at texture scrolling before.",
			"And we're going to go kind of quickly through this.",
			"But all texture showing was, if we recall,",
			"was I have a scrolling background class here.",
			"It's got a scroll speed.",
			"So if we wanted to, since it's public, we can edit it in the editor",
			"and make it faster or slower.",
			"",
			"But if we maintain a reference to our renderer.",
			"Every object has a renderer-- mesh renderer, typically, for 3D objects.",
			"And the renderer has a material associated with it.",
			"Everything in Unity has a material.",
			"And material doesn't necessarily have a texture.",
			"But in this case, our background does have a texture,",
			"and it's going to be called MainTex by default.",
			"That's the main texture, if we want to assign a texture",
			"to see visually on a material.",
			"So material can just be a color often, but it can also",
			"be a color and also a texture.",
			"So in this case, the background is a texture.",
			"It does have a texture assigned to it.",
			"And notice that if we go to the background,",
			"and then here is where we actually create.",
			"So this is a material here.",
			"It's got a shader.",
			"So we're not going to talk too much about what shaders are.",
			"We've talked about them briefly.",
			"In Unity, you can go quite a bit farther with them.",
			"Well, technically speaking, I guess you could go equally far with Love2D--",
			"2D shaders and 3D shaders, at least in vertex and fragment shaders.",
			"But for all intents and purposes, we're not",
			"going to go into detail on shaders today.",
			"But they're very similar.",
			"In this case, every material has a shader in Unity,",
			"in order for it to render.",
			"Because anything that renders needs to be shaded in Unity.",
			"But notice that here we have a texture.",
			"So this is that main texture thing that we saw before.",
			"And then this is the bump map here.",
			"We don't have a bump map, because our texture isn't bumpy.",
			"It doesn't have any contour detail or anything like that.",
			"But you can just select a texture here.",
			"So I could give it that texture if I wanted to.",
			"Or I have another couple of textures here.",
			"",
			"This texture here.",
			"It doesn't matter which texture you choose, but you can choose a texture.",
			"And then that material will then, it will calculate,",
			"based on the mesh, how to draw that texture best to it.",
			"And you can set every material's texture offset via its SetTextureOffset",
			"function on the x and the y-axis.",
			"And that'll shift it, effectively accomplishing",
			"what a scrolling background needs.",
			"It'll draw it, and then it'll basically wrap around to the other side.",
			"So that's how we get the infinite scrolling texture.",
			"We just set its texture offset.",
			"We specific call SetTextureOffset on the main texture,",
			"and then we pass in a Vector 2.",
			"So just two numbers--",
			"offset and 0.",
			"Because we don't want to touch the y-axis, so it was 0, and then offset",
			"is just some value that increases over time.",
			"And then Time.time, recall--",
			"time since the beginning of the game has started.",
			"Time.delta time-- time since the last frame.",
			"And so we can just do one calculation in here and update every time,",
			"and then multiply it times scroll speed to get",
			"the scroll amount that we want here.",
			"And I've set it to 0.1 just for a semi-slow effect.",
			"But in the editor, if we look at our scrolling background, which is here.",
			"And then I've made it public, so I could just easily make this 1.",
			"And I don't know how fast it's going to be, but 10 times faster.",
			"So probably pretty fast.",
			"Yep.",
			"So it's hauling.",
			"But yeah.",
			"All that is is a shifting how it maps the texture onto the 3D surface.",
			"And this 3D surface, to be clear, is just a plane.",
			"So just a plane.",
			"And notice that it doesn't get rendered from the back.",
			"So anything which is a polygon has one side that gets shaded",
			"and one side that does not get shaded.",
			"So if you see invisibility on one side, and not invisibility on one side,",
			"that's not a bug.",
			"That's a feature.",
			"That's the texture scrolling side of things.",
			"Anybody have any questions as to how that works?",
			"We won't really need it for much going forward.",
			"It's not part of the assignment.",
			"But it ties in to what we've done before.",
			"So I thought it would be interesting to cover.",
			"Last thing we'll look at is audio.",
			"Audio is pretty easy.",
			"All you need in Unity to do audio is an audio source and an audio listener.",
			"So a source plays audio.",
			"So James, if you are an audio source, I'd be an audio listener.",
			"And I'm listening for audio and playing it back",
			"to the speakers when I hear any sort of source of audio in the game world.",
			"So you can have infinite audio sources, but ideally one audio listener.",
			"And it's usually whatever main camera that you're drawing with.",
			"And then sounds in Unity can be either 2D or 3D.",
			"In this case, all the sounds that I've put into this game are 2D.",
			"And that's just this spatial blend here.",
			"Notice that there's a 2D to 3D slide.",
			"And so that'll calculate, based on where the sound is,",
			"how it sounds in the game space.",
			"And it's based on how far away it is, and what side of you it is.",
			"And so the main camera has the audio source for the music.",
			"And so it just starts the music right away.",
			"Notice that we didn't have to code any of this.",
			"I just attached an audio source to the camera.",
			"And then there's a Play On Awake checkbox, and a Loop checkbox.",
			"So normally we've done like--",
			"at the start of our game code, set looping to true, and then",
			"play the source.",
			"In this case, we'd have to do none of those things.",
			"This is just given to us by Unity by default.",
			"AUDIENCE: You put the audio on the camera?",
			"COLTON OGDEN: Yep.",
			"AUDIENCE: You could put it on anything.",
			"COLTON OGDEN: You could put it on anything you want to.",
			"AUDIENCE: The sound is relative to that object.",
			"COLTON OGDEN: The sound is relative to that object, yeah.",
			"",
			"That's audio.",
			"It's pretty simple.",
			"I mean, it's an art form when it comes to how",
			"you want to position things in your game world,",
			"and how you want them to sound, and whatnot.",
			"And you can get more complicated with it.",
			"But that's how you would do basic 2D, in this case, audio.",
			"But you could easily also do 3D audio just",
			"by making this set to 0 from 0 to 1.",
			"And you can make it more or less 3D, too.",
			"If it's not all the way to 1, it'll somewhat be 2D.",
			"So you'll hear some of it no matter what, and some of it will be 3D.",
			"And then setting it to 1, it'll be purely 3D.",
			"So if it gets far enough away, you won't hear it at all.",
			"",
			"The explosion sound, as well, gets triggered.",
			"And so this happens in the--",
			"I forget exactly offhand where it gets triggered.",
			"",
			"I believe it's in the HelicopterExplode function?",
			"Oh, yes.",
			"",
			"I created an object in the scene that has an audio source for the explosion",
			"sound.",
			"And because I made this public, I can just put it on this object.",
			"And so there's a reference to that audio source at all times.",
			"And so I trigger explosionSound.play whenever we call this Explode method",
			"on the HeliController.",
			"For the reason that I didn't put it on this object, because we destroy",
			"this object as soon as we get into a collision.",
			"And so I didn't want to put the explosion sound",
			"audio source on this object, because it would get destroyed in there.",
			"It would not play audio, effectively, as soon as we destroy it.",
			"So we have to have it somewhere else on the scene.",
			"I could have also just made the object invisible, but I didn't.",
			"I destroyed it.",
			"",
			"And so, yeah.",
			"That's this explosion sound object which, if we look at the helicopter,",
			"in the HeliController, which is all the way down here.",
			"Notice that it has a reference to an explosion particle",
			"system and an explosion sound.",
			"And we just have to click and drag the object effectively from here to here",
			"to pair the two of them.",
			"And then the script that this is referring",
			"to will always have a reference to those, as long as these",
			"are set to something.",
			"And notice that we also have coin total we've made public.",
			"So I guess I could experiment with it.",
			"And then speed-- we made this public so that you can make the helicopter",
			"faster, if you wanted to, or slower.",
			"And so you'll find it often useful to make a lot of these fields public",
			"just for you to experiment with.",
			"And then there's never really harm in doing so,",
			"because folks aren't going to be able to actually see this in the editor",
			"when they download your game.",
			"So make as much public as you want for debugging purposes,",
			"and just have fun with it.",
			"But that's audio.",
			"Audio sources produce the sound.",
			"Audio listeners listen to the sound.",
			"And actually make it go through your computer speakers",
			"or whatever your default audio system is.",
			"And here's just a showcase of the two on the camera.",
			"And that's audio.",
			"So any questions as to how the audio works at all?",
			"All right.",
			"A couple of last things before we close out here.",
			"So the Asset Store is probably one of the biggest things about Unity",
			"that sells it.",
			"So oftentimes, it's a lot easier just to get something,",
			"whether it's a library, if you're programming, or something else,",
			"get something that's implemented for you,",
			"so that you don't have to implement it yourself.",
			"In this case, there's an RPG Systems for Rapid Development",
			"something, Visual Scripting system, looks similar to Unreal.",
			"There's a ton of things in the Asset Store-- models, scripts, audio, editor",
			"tool kits.",
			"A lot of cool things.",
			"A lot of it's free, if you want to experiment.",
			"So a lot of the assets that I got to mess with in this game here",
			"are free, like the coin and some of the other stuff that's bundled with it.",
			"There's a lot of really cool things and really cool systems",
			"to help you for $10 or $20.",
			"You can spend a little bit of money, and then",
			"get like 25% of your game done right away.",
			"And then you can actually get closer to shipping it.",
			"So I think it's hugely valuable to be looking at the Asset Store",
			"and thinking about how you can save your time that way,",
			"if you're trying to actually ship a game and get to market.",
			"So definitely look through the Asset Store.",
			"See if there's anything that will make your life easier",
			"when it comes to developing games.",
			"Because I know that I've used it several times, and I rarely regret doing so.",
			"So Assignment 8 is going to be pretty simple.",
			"So for the second part, there's a bug in the game",
			"where, if you die over and over again, the scroll speed never resets.",
			"So it is keeping faster, and faster, and faster, and faster forever.",
			"But it's a one line fix.",
			"And I want you guys to find where to fix it, given that we know,",
			"given what we've seen today.",
			"And there's a hint here about static variables.",
			"So it will also be detailed in the spec as well.",
			"But this is an easy part.",
			"This part's fairly easy, too, because all it really is",
			"is taking the kind of the same stuff we've looked at--",
			"the coin generator and coins--",
			"and then making gems that spawn in addition to the coins at a rarer rate.",
			"And these gems should be worth five coins.",
			"And so when you collide with the gems, just add 5 to the coin total.",
			"And if you collide with a coin, add 1 to the coin total.",
			"And that's basically it for Assignment 8.",
			"So next time, we're going to dive into first-person games in Unity.",
			"So we'll look at some of the features that we get for free.",
			"We're going to implement a simple maze-like game where you can navigate.",
			"And it will be dark and kind of scary, similar",
			"to a game called Dreadhalls, which is a mobile VR game.",
			"And we'll actually test out Unity's VR, and try and get a VR headset in here",
			"so people can check that out.",
			"Cool.",
			"Thanks a lot.",
			"I'll see you guys next time.",
			""
		],
		"is_youtube": false
	},
	"video_011": {
		"section": "CS50G 2020",
		"subsection": "Dreadhalls",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V001100/HarvardXCS50G-V001100.m3u8",
			"https://edx-video.net/HarvardXCS50G-V001100_DTH.mp4"
		],
		"video_duration": 6869,
		"speech_period": [
			16.85, 1.0, 2.73, 3.39, 5.43, 3.06, 4.23, 5.76, 4.29, 5.17, 3.15, 2.6,
			4.65, 2.85, 3.735, 2.295, 5.04, 3.877, 1.833, 1.921, 1.999, 2.27, 2.0,
			3.32, 2.67, 4.02, 2.61, 2.28, 2.77, 3.47, 3.34, 3.5, 2.4, 2.302, 1.958,
			1.41, 4.079, 1.707, 2.374, 2.67, 2.77, 3.71, 5.22, 2.17, 6.166, 2.374,
			3.45, 2.28, 1.59, 4.14, 2.97, 3.15, 2.4, 3.9, 3.3, 1.5, 1.98, 6.1, 2.9,
			3.529, 2.291, 3.27, 4.14, 3.15, 2.64, 3.12, 2.04, 3.12, 3.15, 4.57, 4.49,
			2.467, 1.833, 4.33, 4.66, 2.85, 0.99, 2.19, 3.21, 2.25, 4.29, 1.69, 1.37,
			2.37, 2.01, 2.752, 2.708, 1.234, 2.666, 2.52, 2.91, 3.42, 1.29, 3.6, 4.44,
			3.59, 0.866, 1.124, 4.77, 1.5, 2.73, 1.74, 2.91, 2.76, 6.85, 1.25, 2.74,
			2.083, 3.648, 0.499, 3.1, 0.5, 2.541, 4.539, 1.64, 3.17, 2.78, 2.91, 1.23,
			1.05, 3.42, 2.2, 1.31, 1.59, 2.879, 2.041, 1.99, 1.333, 2.917, 3.3, 2.47,
			4.94, 5.43, 3.3, 4.73, 5.68, 1.665, 2.991, 3.174, 1.52, 3.27, 1.9, 2.73,
			4.772, 2.57, 1.958, 0.51, 2.73, 5.04, 4.71, 3.45, 1.87, 2.58, 2.42, 3.66,
			3.18, 4.11, 4.03, 2.233, 6.523, 0.876, 3.538, 0.97, 2.59, 0.74, 5.08, 3.3,
			4.24, 3.439, 2.671, 2.0, 3.189, 4.141, 3.45, 3.637, 1.833, 2.09, 2.7,
			2.275, 2.375, 4.08, 3.5, 0.76, 4.38, 3.0, 4.0, 4.13, 1.92, 3.99, 3.39,
			3.254, 1.666, 2.625, 1.567, 2.708, 4.47, 4.93, 3.33, 2.11, 4.0, 3.18,
			2.91, 7.59, 5.74, 0.5, 1.8, 1.39, 3.43, 2.29, 3.54, 4.362, 1.708, 1.8,
			1.59, 1.235, 1.395, 2.22, 1.57, 1.91, 3.05, 4.96, 2.819, 2.041, 3.912,
			2.97, 1.708, 0.34, 2.5, 3.27, 2.67, 2.925, 3.215, 2.166, 1.654, 2.9, 3.18,
			2.13, 5.19, 3.69, 2.59, 1.76, 2.43, 3.39, 3.24, 4.8, 2.37, 1.56, 2.31,
			2.7, 1.21, 1.81, 3.76, 3.53, 2.89, 2.04, 3.48, 2.846, 2.374, 3.0, 4.35,
			3.03, 4.24, 3.59, 2.047, 2.333, 2.37, 3.24, 1.71, 3.54, 2.59, 2.727,
			2.333, 4.05, 4.29, 2.73, 2.47, 2.96, 0.93, 4.05, 3.45, 3.55, 2.713, 1.507,
			1.458, 2.816, 1.966, 0.84, 0.84, 1.08, 1.583, 1.297, 5.55, 2.82, 2.01,
			2.67, 2.31, 3.06, 3.39, 3.85, 4.76, 0.96, 2.34, 2.68, 1.97, 2.98, 3.38,
			4.98, 3.61, 2.51, 3.36, 3.972, 2.208, 1.63, 2.15, 4.41, 4.62, 3.87, 2.85,
			3.39, 3.606, 2.124, 3.87, 1.71, 1.849, 1.541, 2.55, 3.12, 1.15, 3.6, 3.85,
			3.02, 1.56, 5.51, 2.1, 1.208, 4.727, 0.875, 2.166, 4.478, 1.916, 3.87,
			3.19, 3.06, 4.11, 2.55, 2.04, 3.01, 3.486, 2.624, 0.899, 2.01, 4.411,
			1.92, 2.07, 3.819, 3.681, 2.88, 6.06, 3.047, 2.083, 1.5, 2.4, 2.083,
			3.977, 10.59, 2.877, 1.833, 1.92, 2.832, 2.208, 4.57, 2.54, 6.87, 2.36,
			2.92, 0.499, 1.476, 3.245, 6.76, 1.49, 2.547, 1.333, 3.06, 4.5, 3.89, 3.4,
			1.04, 1.875, 4.885, 3.14, 7.32, 4.33, 2.03, 1.38, 2.49, 5.31, 2.58, 1.62,
			2.04, 3.78, 4.23, 1.26, 3.0, 5.11, 2.24, 2.25, 0.6, 4.44, 5.8, 2.81, 4.78,
			2.69, 1.049, 0.541, 3.809, 1.291, 1.41, 1.08, 3.09, 2.87, 2.83, 5.22,
			1.87, 3.95, 1.77, 4.14, 4.83, 3.45, 7.35, 4.12, 5.22, 5.06, 5.66, 3.837,
			1.083, 1.25, 2.565, 3.029, 2.926, 0.5, 2.15, 3.42, 1.53, 4.172, 3.208,
			0.5, 4.12, 4.56, 6.03, 4.23, 2.45, 3.37, 1.81, 5.84, 4.85, 2.8, 2.49,
			2.67, 3.53, 2.2, 4.92, 1.81, 0.5, 0.87, 5.22, 4.91, 3.06, 2.14, 3.75,
			11.551, 0.499, 1.208, 2.392, 0.69, 2.4, 0.75, 1.17, 0.5, 2.2, 4.019,
			1.291, 2.041, 1.979, 5.94, 3.73, 0.979, 2.041, 4.59, 5.55, 1.2, 5.04,
			5.32, 1.59, 3.41, 2.59, 2.9, 2.55, 4.5, 2.58, 2.34, 3.6, 3.48, 5.1, 5.49,
			3.21, 2.92, 2.9, 3.4, 0.5, 2.76, 3.96, 5.73, 1.98, 4.92, 3.81, 7.62, 2.89,
			2.171, 1.749, 3.24, 0.75, 5.4, 3.99, 5.85, 2.812, 1.958, 5.07, 4.19, 3.64,
			4.41, 3.19, 2.0, 6.6, 2.406, 1.374, 3.39, 6.96, 5.04, 4.96, 4.698, 5.772,
			4.167, 2.333, 2.0, 6.17, 2.0, 2.55, 2.88, 2.97, 2.28, 4.53, 2.702, 2.458,
			2.208, 5.002, 5.57, 5.52, 4.27, 0.65, 2.7, 1.71, 2.9, 3.61, 2.94, 1.93,
			2.63, 4.98, 3.75, 3.33, 1.775, 2.125, 2.53, 1.17, 5.002, 1.708, 3.54,
			3.23, 2.59, 2.13, 1.47, 3.72, 6.18, 3.45, 2.25, 4.86, 2.134, 2.666, 3.04,
			1.34, 3.44, 3.1, 2.77, 2.75, 2.07, 4.502, 2.458, 1.291, 1.739, 3.63, 1.98,
			3.09, 3.945, 1.875, 3.18, 7.41, 1.89, 4.89, 1.77, 1.74, 5.04, 4.8, 2.13,
			1.8, 4.507, 2.333, 3.48, 3.45, 2.67, 1.35, 1.833, 4.057, 2.56, 4.72, 3.12,
			0.91, 3.47, 4.08, 4.77, 1.71, 2.88, 3.63, 3.06, 3.0, 3.06, 2.52, 3.0,
			2.79, 5.7, 2.58, 2.49, 2.631, 2.499, 2.4, 3.24, 4.8, 1.68, 1.44, 3.05,
			1.119, 1.791, 3.43, 3.35, 4.35, 4.24, 2.33, 2.31, 3.66, 3.45, 1.43, 1.24,
			4.476, 2.874, 2.24, 2.75, 4.54, 2.72, 2.36, 3.02, 3.58, 3.06, 1.32, 5.4,
			2.669, 2.541, 2.96, 5.95, 1.42, 3.41, 2.34, 3.12, 1.44, 2.549, 2.341,
			4.349, 2.551, 3.699, 2.81, 3.611, 2.964, 1.166, 3.51, 2.54, 0.875, 1.055,
			0.45, 1.666, 2.474, 1.0, 3.02, 4.423, 4.347, 3.38, 1.08, 3.75, 3.48, 3.69,
			3.13, 3.65, 4.02, 5.202, 2.208, 1.68, 5.7, 0.5, 3.34, 2.34, 1.08, 2.67,
			7.3, 3.32, 3.51, 5.824, 1.666, 3.58, 2.709, 2.791, 3.08, 4.08, 4.75,
			4.935, 1.625, 4.184, 1.916, 1.874, 4.746, 2.187, 1.833, 2.54, 3.15, 2.52,
			1.86, 2.16, 3.63, 2.46, 3.3, 2.58, 2.94, 3.48, 2.84, 2.14, 2.04, 2.19,
			2.46, 3.33, 2.43, 3.94, 1.65, 2.85, 5.13, 0.95, 2.685, 2.565, 2.02, 2.3,
			2.83, 1.59, 2.804, 2.166, 2.53, 2.99, 4.98, 3.51, 2.04, 1.925, 1.375, 1.8,
			2.92, 2.13, 2.78, 2.13, 3.469, 2.541, 2.61, 1.833, 4.007, 3.435, 1.875,
			2.84, 1.9, 1.02, 3.0, 5.182, 3.208, 1.458, 2.896, 1.416, 2.54, 2.935,
			2.625, 2.19, 3.49, 4.08, 1.91, 6.46, 4.04, 1.56, 4.73, 5.47, 2.46, 1.909,
			1.541, 2.18, 2.64, 3.612, 3.208, 4.845, 2.775, 3.21, 3.24, 1.38, 2.833,
			2.439, 1.208, 5.91, 5.0, 3.285, 1.265, 1.59, 3.689, 1.541, 2.66, 0.76,
			3.89, 1.9, 1.25, 2.4, 4.59, 1.892, 1.708, 2.86, 2.84, 2.01, 2.7, 1.14,
			2.1, 3.87, 2.25, 2.88, 3.33, 2.22, 4.89, 3.33, 3.37, 3.18, 4.11, 4.43,
			2.86, 3.77, 1.53, 2.41, 2.85, 4.096, 2.142, 1.672, 1.77, 1.23, 1.791,
			2.089, 3.56, 2.75, 1.18, 0.6, 1.55, 1.87, 1.53, 3.42, 3.75, 2.07, 2.99,
			3.88, 3.82, 3.73, 1.78, 3.07, 1.5, 6.38, 5.85, 3.72, 4.2, 2.5, 2.81, 1.17,
			3.84, 1.87, 3.65, 2.55, 9.0, 3.0, 6.51, 1.35, 3.32, 1.84, 6.58, 2.63,
			2.37, 3.17, 2.86, 2.1, 2.625, 1.884, 2.541, 3.69, 1.29, 2.25, 1.68, 3.48,
			4.69, 11.93, 1.85, 6.08, 3.25, 3.24, 2.01, 2.28, 1.2, 1.69, 2.48, 1.74,
			2.28, 2.64, 1.5, 4.32, 4.26, 2.28, 2.58, 3.66, 1.01, 3.82, 5.91, 2.19,
			3.66, 4.13, 3.85, 6.03, 3.54, 1.26, 1.875, 1.875, 2.34, 3.63, 4.23, 4.8,
			1.95, 2.25, 2.1, 3.51, 4.6, 4.37, 6.33, 1.89, 1.5, 2.94, 2.939, 2.041,
			4.98, 1.1, 3.88, 3.42, 3.214, 1.166, 3.21, 0.84, 0.72, 2.208, 4.032, 2.55,
			5.76, 3.42, 2.52, 1.516, 2.541, 3.805, 0.958, 2.55, 2.71, 2.54, 3.15,
			4.05, 6.13, 1.25, 4.72, 2.12, 2.97, 2.93, 3.06, 1.73, 3.95, 2.85, 3.28,
			2.86, 2.41, 3.82, 2.9, 3.48, 2.17, 1.55, 2.22, 1.814, 2.416, 2.84, 2.937,
			1.083, 1.22, 3.26, 5.01, 2.79, 2.54, 1.49, 2.39, 3.73, 2.27, 3.33, 2.43,
			2.01, 2.37, 1.958, 2.502, 0.88, 1.65, 3.04, 4.13, 1.267, 1.583, 2.55,
			2.73, 0.62, 0.5, 3.55, 3.14, 2.01, 1.84, 2.41, 0.54, 1.03, 5.217, 1.333,
			3.621, 2.749, 7.14, 3.33, 0.9, 3.42, 3.66, 2.07, 3.24, 2.16, 3.24, 2.31,
			3.72, 3.42, 3.489, 1.291, 3.08, 1.56, 2.74, 3.08, 3.33, 1.376, 2.374,
			1.555, 2.875, 3.58, 2.99, 1.62, 3.89, 3.636, 1.874, 1.266, 2.874, 0.98,
			1.27, 2.04, 4.5, 3.37, 1.666, 2.254, 5.47, 4.53, 2.41, 5.03, 1.42, 1.82,
			4.79, 2.5, 5.88, 1.775, 2.541, 2.764, 4.65, 3.019, 1.541, 2.97, 4.035,
			2.745, 5.05, 2.08, 5.89, 1.23, 3.72, 2.1, 5.19, 1.66, 2.199, 2.291, 3.22,
			2.96, 4.05, 1.25, 2.14, 3.97, 3.2, 4.29, 1.72, 4.12, 1.21, 5.28, 1.14,
			3.96, 2.7, 4.15, 1.76, 2.88, 3.29, 0.5, 0.62, 2.791, 2.249, 0.84, 2.64,
			4.71, 4.54, 1.99, 6.27, 6.51, 0.75, 2.17, 3.68, 2.211, 1.749, 3.0, 3.42,
			1.86, 3.83, 3.475, 4.332, 1.083, 1.061, 0.499, 1.083, 12.067, 3.95, 3.18,
			1.75, 4.25, 1.62, 2.79, 3.75, 2.02, 2.99, 5.05, 2.7, 6.87, 2.12, 2.876,
			2.874, 1.99, 3.21, 7.6, 2.488, 7.212, 0.5, 3.54, 3.12, 2.23, 2.57, 1.74,
			3.083, 2.887, 6.03, 3.01, 4.28, 3.12, 2.31, 1.66, 4.07, 6.27, 3.892,
			2.708, 1.3, 2.45, 3.3, 4.26, 3.54, 4.56, 2.28, 5.22, 2.19, 3.9, 1.216,
			1.874, 2.125, 1.535, 2.53, 5.34, 4.22, 3.29, 3.16, 4.68, 1.962, 1.938,
			4.98, 3.614, 1.666, 2.842, 2.958, 4.1, 7.17, 3.48, 1.44, 2.8, 4.76, 0.949,
			4.131, 1.46, 2.35, 3.174, 2.916, 2.075, 2.818, 1.732, 3.55, 0.5, 0.791,
			3.144, 2.82, 4.32, 2.55, 2.52, 4.02, 3.0, 3.24, 2.289, 2.291, 4.2, 2.59,
			2.88, 2.56, 3.857, 1.833, 5.26, 4.1, 1.53, 2.14, 2.66, 2.19, 4.41, 4.77,
			5.16, 5.34, 1.14, 6.06, 3.15, 1.274, 3.166, 2.94, 3.03, 4.16, 4.3, 3.48,
			5.07, 3.3, 2.86, 2.0, 3.63, 3.69, 0.78, 3.42, 4.59, 5.25, 3.6, 2.52, 5.13,
			1.0, 3.75, 4.94, 2.22, 3.94, 7.55, 5.8, 3.8, 3.46, 2.87, 1.65, 2.67,
			4.178, 2.291, 1.461, 1.791, 2.079, 1.63, 3.12, 1.76, 3.24, 1.42, 4.34,
			2.98, 4.52, 6.27, 4.32, 6.69, 7.53, 2.49, 3.18, 4.79, 2.916, 0.874, 3.33,
			4.23, 2.04, 3.81, 4.5, 4.41, 2.61, 6.33, 3.27, 6.3, 1.24, 7.33, 6.37,
			1.92, 1.26, 3.81, 4.13, 2.17, 2.71, 2.96, 5.76, 1.5, 3.33, 1.89, 3.66,
			3.72, 4.59, 2.549, 6.21, 3.661, 2.29, 1.14, 2.75, 2.76, 4.59, 2.979,
			2.901, 3.63, 4.718, 3.291, 0.721, 2.76, 2.79, 4.87, 3.41, 1.68, 2.91,
			0.801, 0.499, 3.044, 3.166, 2.13, 4.7, 2.86, 1.949, 2.701, 2.46, 4.71,
			1.919, 2.88, 5.071, 3.6, 4.54, 2.7, 0.83, 4.02, 2.49, 4.659, 1.791, 2.166,
			1.134, 2.58, 2.37, 2.28, 4.5, 3.21, 4.2, 5.55, 2.812, 1.208, 2.52, 3.9,
			2.73, 3.8, 3.48, 3.22, 1.359, 2.541, 3.12, 2.482, 1.208, 1.57, 3.38, 4.26,
			2.67, 4.02, 3.0, 5.17, 2.92, 1.75, 2.52, 3.3, 5.16, 5.28, 3.32, 2.29,
			1.86, 5.19, 3.84, 6.39, 1.99, 3.37, 3.5, 3.56, 1.67, 3.61, 2.46, 1.731,
			1.749, 3.87, 2.64, 3.06, 2.706, 1.703, 1.791, 1.208, 2.102, 3.36, 1.35,
			3.24, 1.5, 2.58, 2.49, 2.64, 5.34, 2.947, 0.833, 0.75, 0.69, 2.97, 1.86,
			4.89, 3.78, 2.76, 2.3, 3.4, 1.77, 1.89, 2.67, 3.09, 5.51, 2.78, 3.99,
			1.909, 2.291, 4.47, 2.64, 5.12, 3.52, 3.49, 2.33, 2.31, 4.86, 4.02, 5.9,
			3.73, 3.69, 3.12, 2.1, 5.76, 2.94, 3.384, 2.916, 2.25, 2.74, 2.75, 3.84,
			2.29, 1.91, 3.9, 4.95, 2.88, 2.76, 2.35, 1.237, 2.083, 4.89, 1.88, 1.439,
			3.041, 1.842, 0.708, 2.46, 1.56, 2.28, 4.11, 4.92, 5.2, 2.09, 2.7, 2.125,
			4.115, 2.86, 3.05, 1.62, 7.29, 3.04, 2.0, 1.583, 2.467, 4.17, 2.88, 4.74,
			2.32, 2.58, 2.965, 1.375, 1.99, 2.5, 2.5, 2.096, 2.374, 1.32, 3.54, 1.875,
			4.935, 1.95, 2.33, 1.81, 2.999, 2.79, 2.791, 3.19, 2.069, 2.541, 3.46,
			5.48, 0.5, 2.5, 4.669, 0.791, 3.166, 3.754, 2.257, 1.833, 2.55, 0.51, 4.5,
			1.92, 2.49, 2.35, 2.33, 2.61, 4.14, 1.65, 2.52, 0.63, 3.99, 5.19, 1.22,
			0.5, 1.219, 2.041, 2.449, 1.541, 2.874, 1.995, 1.791, 2.58, 4.74, 3.3,
			3.43, 5.48, 3.42, 1.62, 3.14, 3.45, 1.75, 1.38, 2.76, 1.83, 3.134, 2.416,
			2.43, 4.35, 2.7, 2.31, 2.46, 1.44, 1.78, 1.1, 2.19, 4.41, 4.95, 1.92,
			1.29, 2.71, 3.69, 4.3, 1.75, 0.919, 1.791, 1.01, 3.27, 2.38, 1.98, 1.52,
			0.708, 4.902, 3.94, 4.01, 3.94, 4.58, 4.87, 2.9, 3.24, 5.22, 1.77, 3.42,
			2.57, 3.774, 3.166, 1.44, 5.28, 1.41, 2.67, 2.66, 3.19, 1.75, 3.12, 3.39,
			6.5, 4.87, 4.96, 3.38, 8.37, 3.39, 5.804, 2.416, 1.95, 5.31, 1.66, 5.02,
			2.5, 2.76, 3.4, 2.0, 1.48, 1.824, 2.916, 3.14, 3.96, 5.04, 2.4, 3.637,
			2.333, 3.24, 5.07, 5.64, 5.56, 4.76, 1.89, 2.147, 2.833, 2.16, 1.65, 2.19,
			3.69, 5.28, 2.31, 1.53, 3.72, 4.5, 2.58, 2.7, 3.54, 5.49, 5.12, 2.3, 3.87,
			3.509, 1.791, 1.708, 3.268, 5.604, 2.62, 1.71, 3.41, 5.25, 1.81, 2.34,
			3.06, 4.46, 1.892, 0.958, 1.86, 2.375, 3.325, 2.49, 1.54, 1.916, 2.544,
			2.208, 2.502, 4.47, 1.02, 3.19, 5.96, 3.9, 1.24, 2.289, 2.291, 4.08, 3.09,
			5.28, 2.97, 3.465, 3.675, 3.58, 2.27, 5.7, 3.21, 3.81, 1.34, 2.54, 2.57,
			3.48, 3.23, 4.41, 1.25, 2.125, 1.655, 3.83, 3.15, 2.37, 2.4, 3.64, 2.93,
			4.28, 2.47, 2.64, 4.78, 1.88, 3.74, 3.709, 2.541, 1.584, 2.54, 1.656,
			4.48, 0.99, 4.22, 1.06, 1.66, 3.02, 2.56, 6.05, 2.82, 1.95, 3.57, 2.94,
			4.47, 3.07, 4.31, 2.88, 2.67, 2.22, 3.37, 2.48, 6.75, 5.21, 1.84, 3.01,
			1.19, 1.96, 2.45, 1.47, 2.94, 6.38, 1.24, 3.21, 5.13, 1.96, 1.34, 1.2,
			4.08, 2.58, 2.97, 4.837, 2.333, 2.007, 1.833, 2.88, 2.16, 2.966, 1.624,
			1.32, 3.63, 3.37, 2.65, 0.94, 4.53, 4.98, 2.52, 3.63, 2.54, 3.64, 0.63,
			1.47, 2.77, 2.54, 3.27, 3.24, 7.97, 7.35, 3.96, 4.5, 5.61, 3.33, 4.44,
			2.22, 6.09, 2.74, 2.51, 4.911, 1.749, 3.12, 10.02, 3.62, 4.27, 1.29, 3.57,
			1.89, 4.02, 2.94, 3.33, 1.95, 2.97, 2.16, 1.94, 1.375, 4.425, 4.2, 3.81,
			4.89, 2.38, 7.98, 2.13, 3.5, 2.105, 3.575, 2.33, 2.76, 4.36, 3.56, 3.57,
			1.59, 4.08, 1.89, 4.08, 2.46, 1.62, 3.28, 4.474, 2.416, 4.21, 5.45, 2.4,
			1.83, 7.35, 1.89, 2.53, 10.25, 3.96, 3.87, 2.31, 2.97, 2.19, 3.06, 3.06,
			5.054, 1.666, 2.047, 0.833, 1.86, 0.916, 3.734, 2.05, 2.56, 1.45, 2.7,
			2.439, 2.541, 2.19, 2.38, 2.27, 3.041, 1.969, 3.273, 3.837, 1.25, 3.57,
			3.37, 4.21, 0.5, 0.791, 0.969, 2.35, 3.27, 1.19, 2.25, 2.536, 3.279,
			2.625, 2.28, 5.23, 2.12, 4.93, 7.13, 2.52, 3.39, 2.727, 2.583, 1.64, 1.3,
			4.17, 3.54, 2.73, 2.575, 2.625, 1.5, 2.75, 1.711, 2.249, 3.52, 3.85, 3.64,
			1.47, 2.52, 7.815, 4.495, 2.48, 2.73, 3.12, 2.01, 3.59, 2.84, 4.91, 3.13,
			2.75, 3.06, 4.27, 6.2, 1.47, 2.16, 1.75, 2.72, 2.58, 2.82, 3.27, 7.32,
			6.24, 2.51, 6.28, 2.55, 2.57, 5.36, 2.54, 1.56, 3.96, 5.44, 3.53, 1.497,
			2.283, 2.46, 1.74, 2.13, 2.404, 1.916, 3.42, 2.67, 3.54, 3.09, 4.02, 3.06,
			2.67, 2.89, 2.47, 3.209, 1.041, 2.96, 2.66, 1.42, 0.742, 2.458, 3.99, 2.4,
			2.37, 3.57, 2.82, 4.34, 2.05, 2.782, 2.708, 3.84, 2.16, 3.39, 2.49, 3.28,
			1.64, 2.73, 1.68, 3.54, 2.85, 1.53, 3.06, 1.44, 3.33, 2.94, 6.84, 1.28,
			2.6, 4.37, 2.76, 4.29, 3.75, 3.485, 1.375, 2.735, 2.125, 2.61, 4.05, 2.16,
			1.947, 1.833, 1.98, 4.17, 3.54, 1.78, 1.79, 2.44, 2.375, 2.719, 2.166,
			1.23, 2.24, 4.86, 3.63, 1.53, 4.07, 1.855, 1.02, 1.875, 1.98, 5.74, 1.37,
			4.44, 2.38, 2.41, 1.75, 2.969, 2.791, 3.57, 1.63, 3.61, 3.514, 2.916,
			2.45, 3.88, 3.45, 4.02, 1.92, 2.69, 1.63, 4.29, 1.272, 2.478, 3.15, 1.86,
			4.05, 2.44, 6.29, 3.25, 2.39, 4.9, 3.08, 5.43, 5.43, 3.93, 4.29, 4.98,
			0.96, 2.95, 2.131, 1.249, 1.44, 1.77, 1.77, 2.72, 2.99, 1.01, 1.14, 2.85,
			2.82, 3.99, 2.25, 2.71, 1.69, 4.03, 2.88, 3.87, 2.16, 1.98, 5.07, 3.24,
			2.96, 7.06, 2.73, 2.07, 1.53, 0.54, 2.333, 1.637, 0.75, 3.02, 2.291,
			3.709, 2.74, 2.15, 1.33, 1.13, 1.28, 4.24, 2.587, 1.583, 0.93, 1.89,
			4.395, 2.535, 4.11, 3.79, 3.77, 2.68, 3.56, 1.44, 2.25, 4.12, 2.3, 2.64,
			3.39, 1.843, 3.172, 2.125, 2.814, 1.791, 1.845, 4.42, 2.51, 2.88, 1.47,
			2.97, 4.75, 1.79, 3.95, 2.72, 2.08, 3.56, 3.63, 3.142, 2.558, 2.34, 2.31,
			2.97, 4.78, 4.85, 2.1, 2.91, 4.23, 9.256, 1.874, 4.32, 3.63, 4.14, 4.38,
			4.14, 5.04, 4.68, 1.81, 3.2, 2.05, 2.9, 6.57, 3.66, 1.47, 2.502, 2.208,
			1.86, 2.25, 1.89, 4.99, 6.23, 3.63, 3.45, 5.01, 2.669, 3.041, 1.958,
			2.122, 2.4, 7.67, 3.51, 3.03, 1.38, 3.7, 2.66, 1.8, 3.3, 3.87, 1.87, 4.53,
			0.83, 3.62, 3.31, 3.31, 3.24, 3.11, 2.55, 1.86, 3.15, 4.17, 3.16, 3.56,
			3.0, 3.48, 3.96, 3.141, 0.999, 1.68, 4.05, 2.34, 2.88, 3.274, 2.666, 2.52,
			6.27, 3.967, 0.833, 4.95, 1.56, 3.78, 1.384
		],
		"transcript_en": [
			"",
			"COLTON OGDEN: All right.",
			"Welcome to Lecture 9 of GD50.",
			"Today's topic is Dreadhalls.",
			"So last week we ventured into Unity, our first foray into 3D, and not only 3D,",
			"but also just getting our heads and hands",
			"around the Unity game engine, which is among Unreal and others",
			"sort of the most popular game engines in use for 2D and 3d games.",
			"And last week we did sort of a 2.5D style helicopter game whereby",
			"everything was in 3D, but we were still aligning things based on just two axes,",
			"the x and the y, I believe, possibly the z and the y.",
			"I don't remember, but two axes versus three axes.",
			"Today we'll actually be diving into using all three axes available to us",
			"in Unity 3D in the context of a game called Dreadhalls.",
			"And so what Dreadhalls is--",
			"it was a VR game, actually the first VR game",
			"that I ever played on the Oculus, the gear VR, Samsung Gear VR.",
			"And it pits you in sort of this dark and eerie 3D maze",
			"where you don't really know what's going on.",
			"And you can go around and get collectibles",
			"and encounter creatures and stuff as you can see",
			"in the bottom right screen shot there.",
			"Today's example is going to be a little simpler.",
			"But it allows us to explore things like procedural maze generation",
			"and first person camera control.",
			"So last week recall we were using sort of a third person camera",
			"whereby we were sort of far back on the scene.",
			"Today we'll actually be using a first person camera",
			"where the camera is effectively our eyes as if we were",
			"walking around in the maze ourselves.",
			"Unfortunately, we won't be using a VR demonstration this week,",
			"but next week I hope to put together sort of a VR sampling",
			"using this project so we can see how this works in VR",
			"and how Unity's toolkit works in VR.",
			"So some of the topics we'll be covering today--",
			"we'll be talking about texturing.",
			"So recall last week the helicopter and all of the items in our game",
			"were just sort of flat colors.",
			"They didn't really have any texture associated with them.",
			"We'll talk about how to assign textures to materials",
			"and how to apply those materials to objects in our scene.",
			"We'll talk about materials and lighting, so not only materials but also",
			"the different kinds of lights that Unity supports and a few details about those.",
			"We'll talk about, again, 3D maze generation,",
			"so we'll have a simple but effective algorithm for creating a 3D data",
			"structure to represent our level as opposed to previously",
			"where we had just a tile map that we could",
			"generate to give us the appearance of walking around",
			"in some sort of 2D world.",
			"Now we'll actually perform a similar operation on Data, a 2D array.",
			"But we'll take that array and we'll actually create 3D blocks",
			"and create a maze that we can walk through in 3D space, which",
			"is kind of fun and interesting.",
			"Last week we only had one scene in our game, which was just a play scene.",
			"And even though we had like a game over state within that scene,",
			"we didn't transition between scenes.",
			"We just sort of reloaded the same scene.",
			"Today we'll have a title screen and a play scene, which",
			"is an evolution of the idea that we had in LOVE 2D",
			"where we had a state machine that was governing our entire game in terms",
			"of the different states that we could be in, whether it",
			"was the title, the game over, the play state, and so forth.",
			"Unity does the same thing with scene objects, which are effectively",
			"a snapshot of a series of game objects aligned",
			"in a particular way in the editor.",
			"We'll talk about fog and also global lighting",
			"and certain other things that allow us to create",
			"a atmosphere conducive to the sort of feel",
			"that we want to get in our game today, which is sort of creepy and eerie.",
			"And lastly, when we talk about how to create UI elements in the game,",
			"we'll talk about Unity 2D, its canvas object, and text labels",
			"and some other things and how those all operate,",
			"which is sort of two sides of the same coin.",
			"Unity 3D also comes bundled with Unity 2D,",
			"a set of tools used to make not only 2D games but also 2D interfaces that you",
			"can apply to your 3D games.",
			"So first, a demo.",
			"Now I've been sick for the last week, so I'm not",
			"going to ask for anybody to come up and demo just because I don't",
			"want to get anybody else sick, so I'm going",
			"to just go ahead and show, just this lecture, the game",
			"that I put together for you.",
			"So here I have two scenes.",
			"Notice here I have a title scene and a place scene.",
			"I'm in the Unity editor right now.",
			"I'm going to load up the title scene here, which I've done.",
			"And then notice that it has sort of a game view and a scene view.",
			"I'm going to hit play.",
			"We're going to make sure that it's set to maximize, which it is.",
			"And so we have sound here, so we should hear audio.",
			"And hit play.",
			"And notice that we have sort of like this ambient creepy music track",
			"playing.",
			"We have a very-- we could have easily done this in LOVE 2D.",
			"This is just a black screen with two text labels on it.",
			"And this is done with Unity's 2D UI toolkit.",
			"And so it says--",
			"it tells us to press Enter.",
			"So if I press Enter, We instantly get teleported into like this maze,",
			"this creepy looking maze.",
			"And so I can walk around in this maze.",
			"And there are a few things going on.",
			"So anybody-- can anybody tell me some of the things",
			"they notice about the scene, what jumps out at them?",
			"",
			"What are some of the elements?",
			"If you were to put this together yourself, where would you start?",
			"What are the pieces that we can put together here?",
			"",
			"Yes.",
			"",
			"Yep.",
			"There has to be a ground that you can stand on, and there is.",
			"So we're generating not only walls in our scene, of course,",
			"but we need a ground to sit in.",
			"And also if you look up top, it's kind of difficult to tell,",
			"but we also have a ceiling so ground and the ceiling and walls.",
			"",
			"Some kind of lighting.",
			"Yes.",
			"And so in this case, we're actually using ambient world",
			"lighting as opposed to having a light source.",
			"So we'll take a look at that.",
			"In last week's lecture, we used--",
			"two weeks prior's lecture, we used a directional light object.",
			"But in this case, we have no lights in the scene.",
			"We're actually using Unity's world lighting,",
			"which we'll take a look at soon.",
			"",
			"When we walk around, notice that I can move where",
			"my camera is looking with my mouse.",
			"So we're actually controlling the camera with a first person controller, an FPS",
			"controller, which is actually a component that Unity provides to you.",
			"And then notice eventually if we keep exploring the maze,",
			"we come across this little thing here, which is sort of a pickup.",
			"And when we pick this up, we get like this weird creepy piano",
			"sound and then the scene reloads.",
			"",
			"Does anybody notice anything about what we see in the distance,",
			"like how that's affected?",
			"",
			"Like if I'm looking at this wall right here,",
			"for example, it's kind of hard to tell, but as",
			"opposed to like down this hallway, what's the difference there?",
			"AUDIENCE: The light source is further away, I guess.",
			"COLTON OGDEN: The light source is further away.",
			"Kind of.",
			"So what we're experiencing here-- we're seeing it's",
			"a graphics sort of concept called fog.",
			"And so what fog lets you do is it effectively adds color",
			"to the scene based upon how far away the objects are in the scene",
			"and multiplies color onto them.",
			"And it gives you the illusion of looking--",
			"as if you're surrounded by fog basically.",
			"And it's been around for a very long time, back even as far as the N64 days.",
			"And we'll talk about that later today and it's actually incredibly easy",
			"to add that into a game with Unity and its world lighting system.",
			"Any idea as to how fog, not only in terms of aesthetics,",
			"but how it could maybe help with performance?",
			"",
			"Yeah.",
			"AUDIENCE: Don't need as much pixel clarity because it's already",
			"[INAUDIBLE].",
			"COLTON OGDEN: You don't need as much pixel clarity.",
			"Kind of.",
			"The big thing about fog and the way that it was used a long time ago",
			"is that, because eventually things are completely",
			"opaque beyond a certain point, you don't need far draw distance in your game.",
			"So you can actually like dynamically-- you",
			"can omit rendering things that are a certain distance away",
			"because you wouldn't be able to see them anyway.",
			"And so this was an optimization technique used a lot back",
			"when draw distance was a huge bottleneck on computers",
			"and game video game consoles back in the 90s for example.",
			"Like Silent Hill, the game for PS1, was almost exclusively fog.",
			"And you can see very little in front of you.",
			"And we'll see a screenshot of that later.",
			"And they use that to boost their performance",
			"and also to provide a certain aesthetic.",
			"And then one other thing you might be paying attention to",
			"is there's a sound on a loop, just sort of this creepy sort of whispering sound",
			"and that's to just add atmosphere.",
			"Right.",
			"Just because without it, we would-- it's little things like that, especially",
			"in horror games like this, the atmosphere can be everything.",
			"So with very simple ideas, fog, some whispers, first person controller,",
			"so you have tight hallways, you can produce something that's pretty scary.",
			"Now there are a few things missing from this,",
			"namely there's nothing that's going to come at you and attack you.",
			"But it would be not terribly difficult to add,",
			"but because we're using procedural generation,",
			"you would need what's called a nav mesh.",
			"And you would need to generate that procedurally so that things",
			"could follow you in 3D space.",
			"We might have some time to talk about how to do that a little bit",
			"later today, but that's not implemented in this particular lecture.",
			"But it would be not too infeasible to accomplish.",
			"But those are some of the pieces that we'll take a look at today.",
			"So this is the title scene.",
			"Notice that there's not a whole lot here actually, so if I zoom back out,",
			"we can see canvases are huge in Unity just",
			"because it's more optimized for the engine to render them that way.",
			"But we can see, even though it's a 2D UI, it's very visible in 3D space.",
			"And if you click this button here, we end up getting--",
			"oh, no.",
			"That just brings us into-- sorry.",
			"Click this button here.",
			"That brings us into the 2D Unity 2D mode.",
			"So now we're interacting with things in 2D.",
			"And I can actually click on this label and move it around",
			"in 2D as if we were using a 2D game engine as opposed to a 3D game engine.",
			"So we'll look at that a little bit later.",
			"This is just the title scene.",
			"So the play scene itself--",
			"I'm not going to save that.",
			"The play scene itself--",
			"I'm going to go from 2D back to 3D here--",
			"is pretty much empty.",
			"So we have a first person controller here.",
			"This is the FPS controller object.",
			"Does anybody-- anybody tell what basically constitutes an FPS controller",
			"just by looking at the scene here?",
			"What are some of the pieces that jump out at you?",
			"",
			"AUDIENCE: I thought you just put the camera right where the player is",
			"or right in front of the player.",
			"COLTON OGDEN: Exactly.",
			"You put the camera right where the player is, effectively",
			"where your head should be relative to where their body is.",
			"And their body-- what's constituting their body here?",
			"Can you tell?",
			"AUDIENCE: It could just be a-- it looks like a cube in the middle there.",
			"COLTON OGDEN: It's actually this capsule right here.",
			"I don't know if you can see it.",
			"There's this capsule here, this green capsule.",
			"It's a little bit more organic feeling than a cube necessarily,",
			"but you could use a cube as well.",
			"But a capsule is how character controllers in Unity are represented.",
			"And character controllers come for free in Unity, which is really nice.",
			"They're part of the standard assets.",
			"So if you go to import package, in Unity--",
			"if you go into Assets, Import Package, there's",
			"a lot of packages that come for free that sort of bootstrap you.",
			"Notice there's like 2D packages, the cameras, characters.",
			"The characters package has 3D characters or third person characters,",
			"first person characters, some that are physics based,",
			"some that are not physics based.",
			"This particular controller is not physics",
			"based, meaning that we don't apply forces to it.",
			"We move it around.",
			"It's kinematic.",
			"It is affected by gravity, so in a sense it kind of is physics based,",
			"but it's not strictly physics based like a rigid body and a rigid body would.",
			"And the collisions that occur between this and another rigid body",
			"aren't the same as they would be if we were",
			"to make this a purely rigid body based character controller.",
			"There is a purely rigid body based character controller",
			"that you can import-- haven't experimented with it a lot,",
			"but you could probably figure out a good use for that in terms of a game",
			"or maybe you want to move precisely on surfaces that have different materials,",
			"like icy surfaces or whatnot, and have it apply it",
			"in a very physically realistic way.",
			"And a few things that we have here in our play scene--",
			"we have a dungeon generator object.",
			"So this dungeon generator object is just an empty object",
			"with a level generator script here.",
			"And then we have a few other objects, a floor parent, a walls parent,",
			"and a whisper source.",
			"So we'll get into the details of what all of those mean.",
			"Our goal today will be talking about a few things.",
			"So we'll be talking about-- here's a picture of just our maze.",
			"So we talked about some of those things at a high level.",
			"We'll actually explore how to implement them in Unity today, so making a maze,",
			"making the fog effect, walking through it with our character controller.",
			"We want to be able to have some kind of game play here,",
			"so we have collectibles in the form of this red coin.",
			"This is actually part of another standard assets pack, the prototype",
			"assets pack.",
			"It comes with a prototype little coin object that you can throw in.",
			"Anybody notice anything about this coin beyond the fact",
			"that it's just a red coin?",
			"What else do you know it's about this scene here?",
			"AUDIENCE: It's emitting a glow.",
			"COLTON OGDEN: It's emitting a glow.",
			"Any ideas as to how it's emitting a glow?",
			"AUDIENCE: There's a light source inside of it?",
			"COLTON OGDEN: There's a light source inside of it.",
			"Exactly.",
			"So we'll talk about that.",
			"We'll show you how that's implemented.",
			"Very easy to do in Unity.",
			"And then we'll also talk about, towards the end, our 2D scene, our title scene,",
			"and how to construct it, which is actually very easy in Unity",
			"as opposed to doing something by code.",
			"You very rarely actually for interfaces need to touch",
			"code, at least in terms of how to lay them out.",
			"In Unity you can do everything very visually and with the mouse.",
			"Actually, it's a pleasure to make interfaces",
			"if you're used to just making them in code.",
			"So texturing-- so last week or two weeks ago, we did nothing with textures.",
			"Well, that's not true.",
			"We had one texture on the background, which",
			"was the sort of scrolling background.",
			"But we didn't really look at that too much.",
			"In today's example, you know the helicopter and the coin",
			"and the buildings and all that stuff, those",
			"were all just polygons with flat colors associated with them.",
			"Today we'll be talking about how to actually texture things with materials.",
			"And so this is very easy to do in Unity.",
			"So I'm going to go over to my title scene",
			"here, just because it's lit in a fairly normal way as opposed to the play",
			"scene, which is not lit in a normal way because we're",
			"using environment lighting.",
			"We don't have a sky box.",
			"The title scene has a fairly normal lighting set up.",
			"So if I add a cube here to the scene, you",
			"can see right off the bat by default we do get a material here,",
			"which has what's called an albedo component.",
			"Albedo just means like what's its surface color look like.",
			"It has a much more technical definition.",
			"And you can look up on Wikipedia what albedo means.",
			"It has something to do with the way that light interacts with surfaces.",
			"There's a lot of other elements here.",
			"You can make something look metallic.",
			"You can make it look smooth or rough.",
			"And you can also add normal maps, height maps,",
			"and a few other things, which gives it more of like a bumpy texture,",
			"and so forth.",
			"And you can also make things emit light this way,",
			"which the coin actually not only emits light but also is a light source.",
			"So it does both.",
			"And there's a few other things here.",
			"For example, let's say you have a very large cube and a small texture.",
			"If you put a very small texture on a large cube,",
			"what's it going to look like?",
			"",
			"What's your instinct?",
			"What if we have a very large cube, but a very-- like",
			"say we have a 64 by 64 pixel texture, but our cube is humongous?",
			"What effect is that going to have on the cube?",
			"",
			"It's going to look kind of like an N64 cube, right?",
			"What basically happens is it's going to interpolate between the texture",
			"pixels, the texels when you apply a texture to your cube.",
			"And so when you apply a small texture to a large surface,",
			"it's going to look stretched.",
			"It's going to look stretched.",
			"It's going to look also filtered as like you sort of see in some YouTube videos",
			"if you watch them and they're recorded a very small resolution,",
			"but you blow them up.",
			"They look filtered or if you've ever stretched",
			"a picture in the right software and it looks interpolated in a filter,",
			"it's going to have that look.",
			"So what you can do is you can apply tiling.",
			"So here we can see there's a tiling element x and y.",
			"So a one in the x and y direction, because it only",
			"applies on a flat surface.",
			"So the effect of tiling would be such that if you have a 64 by 64 texture,",
			"you could just tile that texture several times to get the desired",
			"look that you want on whatever surface that you're",
			"trying to look at in your game world.",
			"Maybe it's a very small object or maybe it's a very large object",
			"that you're looking at as a character and you want",
			"to tile bricks for example or stone.",
			"So to apply a texture to a 3D object in the scene, I'm going to go into here.",
			"So you need a material first.",
			"And so these are all Unity material objects.",
			"You can tell because they have a circular--",
			"they all look like as if they've been wrapped around a sphere.",
			"These are all Unity materials as opposed to textures.",
			"Textures are just 2D objects, 2D textures, 2D images.",
			"So this is part of an asset pack that I downloaded",
			"for this lecture called low poly dungeon modules, which is in the asset store.",
			"And so what I'm going to do is I'm going to apply--",
			"let's say I want to just apply this rock material to this object.",
			"Right.",
			"Then I go over to that.",
			"I'm going to first add a--",
			"I think because I went into the material it had a incorrect appearance.",
			"So do that.",
			"Oh, that's strange.",
			"I'm going to create a new scene.",
			"",
			"And then I'm going to add a cube and then a--",
			"not pop but maybe the beam.",
			"I wonder why it is not--",
			"that's very strange.",
			"For some reason, it might be a setting that I",
			"have enabled that's not allowing it to correctly render.",
			"But the effect of that should be that we apply-- normally",
			"if you apply a texture to a material, it'll",
			"have the effect of creating-- it'll instantly texture it.",
			"But what I can do is I can go to textures here.",
			"And this should work too.",
			"I can go to that and then it'll apply it that way.",
			"So normally, if you're in a fresh project and you add a new 3D object,",
			"and you just click and drag a material onto a 3D object,",
			"it will texture it for you.",
			"In this case, I think because it's automatically",
			"assigning a material to these objects based on some project setting",
			"that I off the cuff just unable to--",
			"I don't know for sure--",
			"you can instead just go to the albedo component here.",
			"So albedo functions not only as a color but also as a texture for your object.",
			"And so you can apply a texture, just a 2D image,",
			"to your albedo component of a material.",
			"Right.",
			"And that will have the same effect as texturing it immediately.",
			"So normally what this is supposed to do is create a albedo--",
			"create a new material with that texture as the albedo when",
			"you set a material to the 3D object.",
			"Now I wonder if I--",
			"Yeah.",
			"I'm not sure.",
			"I'm not sure exactly why it didn't work like right off the bat",
			"like it's normally supposed to.",
			"In a fresh project, it will.",
			"I'll try to investigate.",
			"But if it ever happens like that where for some reason you're--",
			"I think it has to do with the way the shaders are set on here.",
			"Maybe there's a setting I'm just not sure about.",
			"But you can just set the albedo component here manually.",
			"It'll have the same effect.",
			"So the albedo component of your material, setting that with a texture,",
			"textures objects.",
			"And so that's effectively how we get from this sort of look",
			"of a flat shaded or flat color shaded object to a texture shaded",
			"object just like that.",
			"And texture mapping in itself is a very wide field and fairly complicated,",
			"but ultimately it looks something like this.",
			"So does anybody-- can anybody tell me what this looks like here?",
			"So we see here obviously we have a fully textured model.",
			"But if we're looking at this, what does it look like we've done here?",
			"",
			"So what does it look like?",
			"Ignore all the lines.",
			"But what does it sort of look we have on the surface?",
			"",
			"It's just a texture, right?",
			"Oops.",
			"We can sort of see the colors here.",
			"For example, maybe his belt here or actually that",
			"looks like the top of his head here.",
			"This being the top of his head, and then we have like his belt and other things.",
			"This right here, we can pretty clearly see that's like sort of his face mask,",
			"right?",
			"But it's just on a 2D surface, like this is a regular texture.",
			"And so what we've done here is basically taken",
			"all of the polygons that comprise the model and laid them out flat, right?",
			"Lay them out flat as if on a table where our texture is",
			"and that's what UV mapping is.",
			"And this is usually something that you do in whatever 3D modeling software",
			"that you're using.",
			"In Unity, when you apply a texture to a material, or a material with a texture",
			"to an object, it will use its standard--",
			"it has its own built in mapping algorithm",
			"that will apply material to a model.",
			"And so it does it differently for different objects.",
			"We can create like a sphere for example.",
			"Move the sphere over here.",
			"And I'm going to try again and just to see if applying the material",
			"works on that.",
			"No.",
			"It doesn't.",
			"So applying a-- so if we go into this material",
			"here, which is, for some reason, grayed out.",
			"",
			"New scene again.",
			"Create a new 3D sphere.",
			"And then oh, this time it looks like it's-- oh, I can't tell.",
			"No.",
			"I don't think that's working.",
			"",
			"Oh.",
			"Now it allows us to accept a texture.",
			"OK.",
			"So we can apply a texture.",
			"Whoops.",
			"Can apply a texture to that.",
			"And so now we can see our sphere has been mapped as well.",
			"And it looks fairly convincing.",
			"It's been wrapped around in a way that it doesn't",
			"look too distorted or too weird.",
			"And so Unity has its own ways of mapping for its primitive objects,",
			"whether it's spheres, cubes, we have a few other ones, capsules, cylinders,",
			"planes.",
			"It'll depend, obviously, on what your texture is.",
			"If your texture is fairly ornate, it might end up looking distorted.",
			"But for most purposes, for simple primitive objects, for most textures",
			"it should work pretty well.",
			"Now if you imported a model that was like a table or a character",
			"and you just applied a texture to it, it's not going to look good.",
			"It's going to look messed up.",
			"And so your 3D software will export a material",
			"with the model assuming that you've modeled",
			"in that software with a texture.",
			"It'll actually give you a material that you can then",
			"reference that will properly apply a texture to your character,",
			"but the same sort of apply a texture, just",
			"a regular texture to a complicated model,",
			"just isn't going to work because it hasn't been UV mapped in a smart way.",
			"Unity's not going to know I have a table.",
			"I want to map the texture to the table in a way that looks convincing.",
			"You can see this kind of if we create a cube.",
			"And then if we go ahead and--",
			"",
			"been making apparent for some reason.",
			"If we go up here, I'm going to first assign--",
			"OK.",
			"For some reason that worked instantly.",
			"But you can see we've applied a sort of wall texture to it.",
			"And then if we scale it down-- so this is the scale button up here.",
			"You can move, rotate things.",
			"If unfamiliar, these top buttons up here are transform operators.",
			"So you can move things, rotate things, and scale things.",
			"So if you scale this along this y-axis a bit and then you zoom in,",
			"the texture looks pretty compressed and distorted,",
			"because it's just doing the same algorithm",
			"and assuming it's the same kind of surface",
			"without taking into consideration how it's been warped.",
			"Right.",
			"So ideally you wouldn't have this flattening happening.",
			"And so in your 3D software, you would unwrap your model",
			"and then apply a texture to each separate polygon of your model",
			"in a way that looks convincing.",
			"And so this isn't anything that you necessarily",
			"have to do for the lectures, or for the demonstration for your project.",
			"But if you are creating your own 3D assets, if you're importing 3D assets,",
			"and if you want to use textures in a way that we're doing today,",
			"you will need to probably become familiar with UV wrapping, UV",
			"unwrapping, UV mapping in whatever software that you're using.",
			"And if you're just unfamiliar with it in general",
			"and have wanted to know what goes on in turning a flat white polygon",
			"character into something that has a texture,",
			"this is effectively what happens.",
			"You unwrap it, make it flat, sort of like stamp",
			"the material onto it effectively, and that maps the UVs of the texture,",
			"so the texture's virtual coordinates to your 3D model.",
			"So any questions as to how this works at all",
			"or about unity and applying textures?",
			"AUDIENCE: What's the general way that you make the textures on the right",
			"where it's like a world that's been flattened?",
			"COLTON OGDEN: How do you make the textures on the right?",
			"I mean that's kind of an art form in itself.",
			"You do have to do it by hand and know--",
			"I mean, there's a good amount of trial and error",
			"that will go into it, too, as you're making your model",
			"and unwrapping it and noticing, oh, this looks weird,",
			"as I am applying this polygon to the surface.",
			"I'm going to go ahead and change that texture.",
			"But you could use any-- you could use Gimp or Photoshop or any standard",
			"texture creation software and just--",
			"it's something-- I don't do a lot of it, but it's something",
			"that I imagine that you just get better at with time.",
			"And texture artists and modeling artists probably develop sort of like",
			"an attuned sense of what makes a good texture versus what doesn't.",
			"Generally, you'll make the model first and then you'll make the texture.",
			"",
			"OK.",
			"So we already talked a little bit about models--",
			"sorry, about materials.",
			"We'll go back over it really briefly again.",
			"There is a resource that I really like and I",
			"think does a really wonderful job of teaching far",
			"beyond the basics of Unity.",
			"And that's catlikecoding.com, and it's totally free.",
			"They just have a bunch of free articles on there which are very in-depth.",
			"And this is a screen shot taken from one of the articles",
			"where they talk about how to make really interesting materials.",
			"So you can see here, this one of the left,",
			"it looks very-- you know, it looks like a fireball,",
			"like it's made out of magma.",
			"And it's got bumps on it.",
			"It has contour you can see that there's sort of like a glow to the fire on it.",
			"On the right, you can see that this model",
			"has sort of conditional shine on certain parts of it.",
			"Like the metal part of it is shiny but the rest of it isn't.",
			"And so how do we make certain parts of the material shiny?",
			"How do we make certain parts of it flat?",
			"The article goes in depth on that.",
			"Effectively what they do is they use several layers of maps,",
			"like a shininess map, which is a texture that tells you--",
			"that you reference in a Unity custom shader that you write,",
			"which the article teaches you how to write.",
			"Which will make certain parts of the texture glossy and certain parts",
			"of it not glossy, so matte.",
			"And so you can do a lot of really cool, very interesting things,",
			"and Unity's shading system is very--",
			"sort of the sky is the limit.",
			"Because it's effectively a standard shader language like you would--",
			"it's effectively the same thing as HLSL, I believe,",
			"which is High Level Shading Language which is a--",
			"if I'm not misremembering--",
			"Microsoft originally came up with it, and it's",
			"very similar to GLSL, which is the open GL shading language.",
			"And so what these are, effectively, is just little programs",
			"that run on your graphics card.",
			"We talked about this before.",
			"But they tell your scene how to process lighting",
			"for the objects that are within it.",
			"And everything in Unity has a shader associated with it,",
			"even if it's just the standard shader, which by default is just a white color.",
			"But you can write your own shaders and you're",
			"capable of virtually unlimited possibility.",
			"And this effectively is all a shader, and it's all a shader",
			"that's been written in code.",
			"But we have a lot of these variables that are exposed to us,",
			"and albedo is one of them.",
			"And albedo is sort of conditional.",
			"If it gets a texture applied to it, it will just render that texture.",
			"But if you apply color to it, it will apply that color to your material.",
			"And so that's how you can get, you know, textured",
			"things versus non-textured things.",
			"Metallic just computes shininess and reflectivity off of surfaces.",
			"And that's just something that's written into the shader",
			"and produces the lighting responsible to make that happen.",
			"And all of these different things are just part of a single shader.",
			"And a material is effectively a shader.",
			"They're kind of one in the same.",
			"A material is a little bit different in that",
			"you can also specify how its surface should interact with other things.",
			"So for example, if you're in an ice level,",
			"a material can not only be like the sort of glossy, icy look of something,",
			"but also, how slippery is it when I walk over it?",
			"And should I slide?",
			"And how should other things interact with it that have physics?",
			"So those two hand-in-hand are sort of what a material is.",
			"But likely, as you're starting out the only real things",
			"that you'll need to consider--",
			"and you're sort of bound only by your curiosity--",
			"our albedo and maybe metallic, and maybe emission.",
			"And then depending on how much you-- how big your thing is",
			"and how small your texture is, maybe tiling.",
			"And then recall last week we manipulated offset.",
			"So offset is how much the texture is shifted, and recall it",
			"loops around back to the other side.",
			"And so by manipulating offset on the x-axis,",
			"we were able to get an infinitely scrolling texture, right?",
			"And so all of these things have their uses.",
			"And pretty much everything in Unity has its uses.",
			"It's a very vast toolkit to use.",
			"But those are probably the important things that you'll see.",
			"And this article and many others on this website,",
			"which I highly recommend if you're looking to get really deep into Unity,",
			"will give you a lot of insight into how things work far beyond just the surface",
			"level there.",
			"So any questions on materials?",
			"",
			"All right.",
			"So we're going take a look now at lighting.",
			"So materials are one part of the equation.",
			"So that sort of defines how things should look when light hits them,",
			"but we also need light itself in our scene to illuminate things.",
			"And so this is taken from another article on Catlike Coding on rendering.",
			"And so this is a scene with a lot of lights, a lot",
			"of glowing lights, emissive lights.",
			"And there's a lot more going on here, but this",
			"is another great series of articles on how to understand the lighting",
			"model in Unity.",
			"And it teaches you a lot.",
			"It teaches you almost down to the very bare ingredients of the,",
			"sort of, the software and the rendering, if you want to go that deep.",
			"I certainly haven't gone through every article",
			"because there's a tremendous amount of content and it's very deep.",
			"But if you're looking to really get a sense of how it works,",
			"I would encourage you to explore that.",
			"So we'll look at a few different types of lighting.",
			"Beyond the more complicated things that this article talks about,",
			"we'll look at the different styles of lights, which you'll probably",
			"use more often as you're starting out.",
			"So point lights.",
			"Anybody have an idea as to what a point light might be based on this picture?",
			"AUDIENCE: Pointing in a very specific direction?",
			"COLTON OGDEN: It's not pointing in a very specific direction.",
			"That's actually a spotlight.",
			"So a point light is a source of light that actually shoots out",
			"in all directions around it.",
			"So it emits light in all directions, but within a confined area,",
			"at a specific intensity.",
			"A spotlight shines light in a specific direction.",
			"So only one direction.",
			"And what's interesting about spotlights is you can actually",
			"apply what's called a cookie to them.",
			"And what a cookie does, very similar to what the Batman light does,",
			"it allows you to apply a texture to a light",
			"and therefore cast shadows, specific shadows, on the light.",
			"So if you wanted to make something like the bat signal,",
			"you could put the Batman icon cookie on your spotlight.",
			"And that will shine a light, but the Batman logo",
			"will be in the middle of it.",
			"It's effectively the same thing as taking a literal spotlight",
			"and putting a object onto it.",
			"It produces a shadow.",
			"A manual shadow.",
			"AUDIENCE: It's called a cookie?",
			"COLTON OGDEN: It's called a cookie, yep.",
			"",
			"A directional light.",
			"Does anybody know what a directional light is?",
			"So despite its name, it's actually not the same thing as a spotlight.",
			"",
			"So directional light-- we used a directional light last week, actually.",
			"Last lecture.",
			"Directional light casts light in a single direction,",
			"but throughout the entire scene, as if it's the sun.",
			"So this allows us to illuminate globally the entire scene,",
			"but all light gets cast from one direction.",
			"So if you want to produce the appearance of daylight in your scene,",
			"just a single directional light will illuminate everything.",
			"And then the last thing, which is used less, is called an area light.",
			"So does anybody know-- can anybody guess what an area",
			"light is based on this picture here?",
			"",
			"Yes.",
			"AUDIENCE: It's light that's only on the surface?",
			"COLTON OGDEN: Light that's only on the surface.",
			"Kind of, yes.",
			"So it's light that will emit from the surface",
			"of a specifically-designated rectangle, effectively, in one direction.",
			"So you can define a large area.",
			"For example, maybe you want like a wall strip in your game or something",
			"on the wall to emit light specifically to the left or something like that.",
			"That's what an area light is capable of.",
			"Now, area lights are computationally expensive,",
			"and so you can only use them when you bake your lighting.",
			"Does anybody remember what baking means when referring to lighting?",
			"",
			"So baked lighting just means that, instead of real-time lighting,",
			"calculating things dynamically, the light gets calculated one time",
			"and saved, and almost like freezed onto all of the objects in the scene.",
			"And so there are pros and cons to this.",
			"What's a pro to baked lighting, do we think?",
			"AUDIENCE: It's less computationally intensive.",
			"COLTON OGDEN: Less computationally intensive.",
			"What's a downside to baked lighting?",
			"AUDIENCE: Can't be dynamically affected.",
			"COLTON OGDEN: Can't be dynamically affected.",
			"So if you're walking through a baked lighting scene",
			"and you're expecting to cast a shadow on something, or for something",
			"to cast a shadow onto you, it's not going to happen.",
			"Because the environment's already been--",
			"the lighting for that scene has been pre-baked.",
			"It's almost as if we've just recolored the world in a specific way,",
			"but we're not actually doing any lighting calculations.",
			"But this is how lighting worked in, like, the N64 era.",
			"And it's how it still works now for certain situations.",
			"If you know nothing is going to cast a shadow on something,",
			"you can make really nice looking lighting for a scene",
			"without needing to do it in real time.",
			"You can just bake it, right?",
			"So those are the different types of lights.",
			"So we can see that, in Unity--",
			"so if we go here.",
			"I'm going to-- so right now we have a directional light.",
			"So this directional light is this object here.",
			"By default, all-- and you can zoom in as much as you want,",
			"but it's sort of like--",
			"oh, there we go.",
			"This directional light is only shining in one direction.",
			"So I can move it here.",
			"So currently I'm in--",
			"it's a little bit weird to navigate, just",
			"because it's been rotated a little bit.",
			"Given that it's a directional light, its rotation--",
			"",
			"So notice how it changes.",
			"So if I shine it upwards, notice that everything becomes black",
			"because the lighting is just shining upwards, right?",
			"So as if it's coming from below.",
			"And if I shine it towards there, notice that the lighting",
			"on the sphere and the little cube there sort of change a bit, right?",
			"Because they're getting affected by the direction of the light a little bit.",
			"But they both get affected the exact same,",
			"because the directional light is omnipresent.",
			"It's throughout the entire scene.",
			"It's a global object.",
			"Now if I delete the directional light--",
			"Notice have no light now, so these things just",
			"look kind of, like, statically shaded.",
			"You can add a new light through--",
			"if you right click in your sort of game object view, and then you go over here,",
			"you can see we have all the different lights we talked about.",
			"There's also things called reflection probes and light probe groups.",
			"And those are a little bit more complicated.",
			"But those allow you to effectively get pseudo-real-time lighting",
			"and reflection with baked lighting and reflection.",
			"We won't talk about those in today's lecture.",
			"But here's a point light, for example.",
			"So, let's see, where is it?",
			"It's right over here.",
			"So I'm going to move it over here.",
			"So you can see it's not global like the directional light was, right?",
			"It's just affecting this very limited-- and I'm going to zoom in a little bit",
			"so you can see a little bit better.",
			"But it's affecting just sort of these two objects",
			"relative to where its position is.",
			"",
			"And so this works perfectly for things like lamps in your scene.",
			"If you want to have a street light, or whether you want to have",
			"maybe like a fire going on in a house.",
			"Or if you want the power up that we had--",
			"or the pickup that we had in the Unity scene, right?",
			"We have just the--",
			"it's just emitting a purple light that is within a very small radius.",
			"Notice here we can change the color of the light.",
			"So if I make it like that--",
			"",
			"there we go-- so I'll do that.",
			"So notice now it's emitting a purple light.",
			"So you can color a light however you want",
			"to produce whatever effects you want.",
			"So fire is not going to emit white light.",
			"It's probably going to emit like an orange red light.",
			"Street lights are probably going to emit kind of like a yellow orangey light.",
			"So depending on what your scene looks like and what you're trying to emulate,",
			"you can accomplish pretty much anything with just these very simple objects.",
			"So I'm going to get rid of the point light.",
			"And then I'm going to create a spotlight.",
			"I'm not going to create an area light just because I need to actually bake",
			"the lighting into the scene.",
			"But I will create a spotlight just so we can see what it looks like.",
			"",
			"Get it in the right position.",
			"",
			"Sometimes it can be a little tough to figure exactly where you are.",
			"OK, getting close.",
			"There we go.",
			"Perfect.",
			"So this little spotlight right here is being produced by our object.",
			"So you can see we can move it around.",
			"And then we can apply a cookie to it if we want to, as well.",
			"It's right here.",
			"So in your-- if you're in a spotlight and you want to apply a texture to it,",
			"just this little cookie--",
			"and it just expects a texture.",
			"So whatever image you want.",
			"And if you're creating a cookie texture, white means full light and black",
			"means full shadow.",
			"And so you can make it a grayscale image.",
			"You can make it anywhere in between white and black,",
			"which will allow you to produce some interesting effects.",
			"For example, the manual in--",
			"",
			"It's not here.",
			"I didn't include the picture here, but the manual",
			"shows there are some kind of like the lights that you put on a stand.",
			"And they have a bunch of LEDs, right?",
			"And they're sort of in a grid, and they shoot out a spotlight.",
			"You can create a cookie that's kind of a grayscale with those gridded lines,",
			"and it'll shoot light onto the scene as if it's being",
			"broadcast from a sort of grid of LEDs.",
			"So there's a lot you can do with just some very simple ideas.",
			"Those are the kinds of lighting that we can use.",
			"And in today's lecture, we only really used the point light.",
			"And in the last lecture we used the directional light.",
			"And spotlights you could, for example, programmatically",
			"change, for example, the rotation of a spotlight,",
			"if you want to have like a swinging spotlight in your scene to illuminate",
			"some wall or some surface.",
			"There's a lot of cool things you can do with it.",
			"So those are the core types of lights in Unity.",
			"Does anybody have any questions as to how they're used or how they were.",
			"AUDIENCE: For directional light, does it matter",
			"where it's placed or only the direction it's facing?",
			"COLTON OGDEN: It does not matter-- so for the directional light,",
			"it does not matter where it's placed.",
			"You could place it anywhere in your scene--",
			"00 or some far distance away--",
			"it'll have the exact same effect on the entire scene.",
			"Any more questions?",
			"OK.",
			"Cool, cool.",
			"So those are lights.",
			"Bump mapping, we'll talk about very briefly.",
			"So bump mapping is--",
			"we actually do use this in the game.",
			"A bump map effectively is-- so what you see here on the left",
			"is an actual 3D scene.",
			"These are actual models being shaded in real time.",
			"Or, not in real time, but they're actually real models being illuminated.",
			"In the middle, we can see what's called a bump map, and on the right,",
			"we can see a-- that's just a flat--",
			"like a flat plane.",
			"With a bump map-- with that same bump map-- applied to it,",
			"and then illuminated.",
			"So what a bump map allows us to do is to take a flat wall or flat surface",
			"or whatever you want, and then simulate an actual three-dimensional contour,",
			"three-dimensional bumps, or whatever you want on that surface",
			"without needing to create the actual geometry to make it possible.",
			"And so there are different tools that will allow",
			"you to create bump mapping objects--",
			"or bump mapping textures.",
			"Often 3D packages will have these, so you can create them.",
			"Or other software.",
			"But they are effectively just the encoding",
			"of what are called surface normals.",
			"So just a vector going from outside of the polygon at that given point.",
			"And they tell the lighting system in Unity,",
			"pretend as if there's actually geometry pointed in that direction",
			"when you calculate it.",
			"And so, even though it doesn't distort the geometry in a way that's--",
			"like, this is still completely flat.",
			"The lighting thinks that the geometry is kind of, you know, contoured.",
			"And so it allows us to create--",
			"this is kind of a toy example, but it's actually",
			"relevant in the case of walls that have--",
			"and we covered this last week, just not in as much detail.",
			"But walls that you want to be flat and you",
			"don't want to have a lot of polygons for, you can create a bump",
			"map for and apply that bump map.",
			"And then when you're rendering it, when you walk past a wall,",
			"it's going to look as if the wall actually has cracks and bumps in it,",
			"for a realistic effect.",
			"And this is used in the game to a slight degree.",
			"And you can crank it up if you want to.",
			"I didn't on my computer because my specs aren't sufficient.",
			"But every texture in today's example has a bump map associated with it.",
			"So you can actually see the effect of bump mapping at various degrees of use.",
			"The materials here-- I'm going to go--",
			"I'm going to load up the scene that has the actual stuff.",
			"",
			"I'm going to-- actually, I don't need to load up the scene.",
			"All I need to do is go to the materials.",
			"And the floor, for example.",
			"Where is the floor?",
			"Right here.",
			"So notice that before, we talked about albedo,",
			"and then I also mentioned normal map.",
			"So right here, all you really need to do in order",
			"to get Unity to detect normal maps-- and this is just",
			"part of the standard shader.",
			"Normal maps and bump maps, by the way, are effectively synonymous.",
			"You can just drag your normal map texture",
			"into this field here, this little square,",
			"and then give it a degree at which to apply that normal map.",
			"And so if you look at this here, you might be able to see--",
			"I don't recall.",
			"Yeah, we can sort of see how it changes the texture, right?",
			"So at zero, there's no normal mapping taking place at all.",
			"That texture is just completely flat, as if we",
			"had done just the regular apply texture to a sphere.",
			"But the degree at which we apply normal mapping-- so notice that at degree one,",
			"it kind of looks pretty realistic, as if we've got kind of a stony texture.",
			"And the more we go, the more exaggerated it starts to look, right?",
			"And you can just keep doing that, and it'll eventually just",
			"look really distorted.",
			"But that allows you--",
			"and depending on how strong your computer is,",
			"you can go higher or lower--",
			"to affect just how bumpy--",
			"just how strong the bump map, the normal map, affects the lighting rendering.",
			"So it's that easy to get just a fairly, sort of,",
			"extra sense of realism in your scene.",
			"So you'll notice, if you're walking through the scene,",
			"if you turn off lighting it's even easier to see",
			"all of the surfaces, the floors, the ceilings, and the walls",
			"have a bump map as well as a texture map.",
			"So that's-- in case you're wondering what these weird colored textures are,",
			"RGB or XYZ for the surface normals and their permutations thereof.",
			"And that's how it gets encoded into this.",
			"And so often you can see--",
			"if you're looking at a bump map and a texture map--",
			"you can kind of see together, like, oh, OK this makes sense.",
			"The parts that I would expect to be bumpier or do",
			"have a correlation to how they look on the actual bump map texture.",
			"You can see it here.",
			"Everything that is bumpy or contoured is very visible in the bump map.",
			"And that's just by nature of the way the data is encoded.",
			"So any questions as to how bump maps work or what they are",
			"or how to use them in Unity?",
			"",
			"All right.",
			"Cool.",
			"So now we're going to start getting a little bit more",
			"into how this all comes together in our maze on our game,",
			"and we'll talk about maze generation.",
			"So I'm going to just start up the scene here.",
			"So I'm in the actual play scene.",
			"So in scenes, I loaded up play as before.",
			"I'm going to hit Play.",
			"I'm going to turn off my sound, just because the creepy sound",
			"is a little disorienting after a while.",
			"And then I'm going to--",
			"",
			"actually, I'm going to go to a 2 by 3 view.",
			"",
			"And then hit Play.",
			"So we have the regular game view down here below.",
			"And then also, if I zoom out, you can see that our scene was empty before,",
			"but now we've got a maze.",
			"And currently it's not very visible at all because one,",
			"we're applying fog, right?",
			"And recall fog allows us to effectively add color",
			"to objects that are farther away from us.",
			"And two, there's a ceiling on top of our--",
			"a roof on top of our maze.",
			"So it's actually blocking out what the maze looks like.",
			"So we can fairly easily make a couple of changes",
			"here in order to see our maze a little bit better.",
			"So I'm going to go to Window, I'm going to go to Lighting, Settings.",
			"And so if you go to Window, Lighting, Settings,",
			"those are your sort of global Unity lighting settings.",
			"You can set your skybox, you can set environment lighting,",
			"you can set things like fog, you can choose how things are baked.",
			"There's a lot of things here.",
			"We won't cover nearly all of them.",
			"We will cover a few of them.",
			"Environment lighting is a big one.",
			"That's actually how we're lighting the scene in this game.",
			"So all of the lighting that's not--",
			"well, all of the lighting is environment lighting.",
			"That's how we're doing it.",
			"We're doing it with color.",
			"So notice that you can choose Skybox, Gradient, and Color.",
			"So if you choose skybox Environment. lighting, it's going to have sort of--",
			"it's going to look kind of like this skybox that we have here.",
			"This sort of in the far distance, looks blue.",
			"Kind of a little bit more natural.",
			"But I didn't-- but when it's applied to our scene,",
			"it doesn't look quite the way we want it to look.",
			"So what we went with instead was just color.",
			"And I chose this sort of murky greenish brownish color.",
			"And that gave the result that I was looking for.",
			"But you can make this any color you want to.",
			"We can make this some sort of bright yellow color.",
			"I have no idea what this is going to look like.",
			"This is probably going to look horrible, but--",
			"Yep.",
			"I mean, actually, this--",
			"is in a weird way this kind of looks interesting.",
			"It actually looks closer to the original Dreadhalls game than what I did.",
			"But it's not very scary.",
			"Kind of looks like we're in a pyramid.",
			"",
			"That is-- am I able to go back?",
			"No.",
			"OK.",
			"Well, I screwed up the color.",
			"Now I'm trying to find kind of what color I had before.",
			"It's kind of like a nasty green.",
			"Kind of like that.",
			"That's probably good enough.",
			"OK.",
			"Something like that.",
			"And so we play it again, we can see we're back to the nasty dark color.",
			"But that's environment lighting.",
			"So it applies a lighting, uniform, just ambience.",
			"Kind of like a directional light, but it doesn't have a direction.",
			"It just applies to everything in your scene at a given intensity.",
			"And that is how we are lighting our scene.",
			"It's that easy.",
			"Just environment lighting in our scene and our lighting scene window.",
			"Now, the other important thing here is the fog.",
			"So fog is as easy--",
			"almost as easy as just clicking this button here that says fog,",
			"and then choosing a color for it, probably.",
			"You can choose the density, so obviously if it's a higher density fog",
			"it's going to look as if you're in a foggier place.",
			"It's going to sum the color to things that are closer to you",
			"faster than it would if you had a lower density fog.",
			"And there are some other features here, some of which",
			"I'm not terribly familiar with.",
			"But for the sake of today's example, just the click--",
			"make sure fog is selected.",
			"And then click, make sure you have the right color for your fog.",
			"So if you have like a ridiculous red color for your fog,",
			"it's probably going to look weird.",
			"Yep.",
			"But you can see how you can do all kinds of weird effects",
			"just by adding these things together.",
			"Like, if you want to have the effect of being in some sort of, like--",
			"I don't know, noxious foreign world, maybe you want like a purple fog",
			"instead of like a dark green fog or whatever.",
			"That's super easy.",
			"You produce a lot of very basic but effective effects that way.",
			"Let me find-- I think it was just that kind of the same nasty green color.",
			"AUDIENCE: How you bring this screen up again?",
			"The one that says lighting?",
			"COLTON OGDEN: So to bring up this lighting screen, all you need to do",
			"is, if you're on a Mac--",
			"I think in Windows it's the same thing-- there's",
			"a Window option in the top menu.",
			"Window, and then Lighting here, and then Settings.",
			"And so this will bring you to all of the settings that are pertinent to at least",
			"today's example.",
			"And so we're not using any lights in our scene",
			"that we talked about before, at least for the lighting of the scene itself.",
			"Now, there are point lights being used for the pickups,",
			"and I'll show you that in a second.",
			"But what I wanted to illustrate was how we can look at our maze",
			"after it's been generated.",
			"And so what we need to do first--",
			"notice that before we couldn't really see our maze at a distance",
			"because it was just purely dark green because of the fog.",
			"It was adding green to that geometry because it was so far away.",
			"So I'm going to disable fog for now.",
			"It'll actually remember your settings, which is kind of nice.",
			"So just going to disable fog.",
			"And I'm going to actually add a directional light to the scene.",
			"So I'm going to go here, add a directional light.",
			"And then I'm going to hit Play again.",
			"",
			"So now, our scene is lit.",
			"",
			"And, you know, it looks a lot different, a lot less scary.",
			"And we can see our maze lot better.",
			"We can actually see that it is a collection of blocks.",
			"It's tiled blocks.",
			"Now, we can't see into the maze because the maze has a roof.",
			"So what I did was I just made a generated roof,",
			"an option in the script, and so if you unselect that and then we try again,",
			"now we can see our maze.",
			"So this is what our mazes look like.",
			"And so the cool thing about Unity, which I really love,",
			"is just this ability to look through your scene independent",
			"of the actual game, just to help debug.",
			"It's hard to know if you're generating your maze correctly",
			"when you're creating it in 3D.",
			"You know, in 2D you can easily just look at it.",
			"But in 3D, especially in a first-person game, you can't really see it.",
			"So being able to split your view like this-- the scene and the game--",
			"and actually see, oh, my algorithm's working, or it's not working.",
			"Super helpful.",
			"So we can see that it is carving a maze for us.",
			"It looks a little bit weird.",
			"It's not a traditional maze in the sense that it has the classic maze",
			"shape to it.",
			"But it effectively functions as a maze, and it works very well",
			"for its intended purpose.",
			"And the algorithm is incredibly simple, and we'll talk about that.",
			"So that's our maze.",
			"I'm going to go ahead and revert all of the--",
			"I think if I just reload the scene it should just revert it.",
			"Don't save.",
			"Yep.",
			"OK, so everything's been reverted, all the lighting and everything.",
			"Just going to do a sanity check and make sure.",
			"Yep.",
			"Everything works perfectly well.",
			"So anybody have any ideas as to where to get",
			"started if we were to implement a 3D maze?",
			"AUDIENCE: The way I did it once before is",
			"you put a bunch of x's where you want something to be drawn in an array.",
			"And then you loop through the array and draw, instantiate the walls.",
			"COLTON OGDEN: Yes.",
			"So create an array.",
			"Populate it with x's where you want--",
			"data wherever you want something to be instantiated,",
			"then loop over and instantiate everything.",
			"That's exactly how it works.",
			"Now, in terms of actually creating the maze,",
			"do you have any ideas as to what--",
			"how would you go about implementing a simple maze generator?",
			"And there are, obviously, very complicated maze generation algorithms,",
			"so nothing terribly fancy, but just a simple--",
			"how would you make a maze?",
			"AUDIENCE: So it's random?",
			"Or--",
			"COLTON OGDEN: It's random.",
			"",
			"So starting with the idea that we have an array, right?",
			"It's got to be a 2D array because we have two axes upon which",
			"we're generating things here.",
			"Even though we're in a 3D environment, we don't need a 3D array.",
			"We just need a 2D array.",
			"Because if there is a positive value for wherever",
			"we want to generate a block in our 3D maze,",
			"we just generate a column of blocks.",
			"We don't need to worry about a third dimension, right?",
			"Our maze isn't taking into consideration multiple levels, at which point",
			"we would need to maybe consider three dimensions.",
			"And even still, you can still divide those into separate 2D arrays of mazes.",
			"We just have an x and a y.",
			"So how would we get started--",
			"what would we start populating the arra-- let's say we have an array,",
			"it's just a bunch of zeros, right?",
			"What are we populating with the array after we have initialized it?",
			"",
			"AUDIENCE: So I'm thinking maybe you would kind of start",
			"off with just four walls add corridors, maybe?",
			"",
			"COLTON OGDEN: So start with a bunch of walls and then add corridors.",
			"That's exactly what we do.",
			"The algorithm is actually pretty simple.",
			"So I'll try and maybe draw a little bit, just to see",
			"if I can illustrate how this works.",
			"AUDIENCE: How do you make sure that you can get from one side to the other",
			"and there's no wall in between?",
			"COLTON OGDEN: By making sure that every thing that you change is orthogonal.",
			"Every block-- every step that you move is orthogonal.",
			"That will ensure that you start at one point, end at another point,",
			"and those points will always be accessible to one another,",
			"just by virtue of how simple the algorithm is",
			"and the orthogonality of it.",
			"So if we start with walls--",
			"so 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.",
			"These are all-- in the distro, these are all Booleans",
			"because we don't need-- we only need zeros and ones so we're just",
			"going to use true and false.",
			"We don't need to use integers for that.",
			"So this is our starting maze here.",
			"And actually I'm going to add another dimension because--",
			"or not another dimension, but another size,",
			"just because the walls always need to stay-- to be there.",
			"These are basically untouchable.",
			"I'm going to try and draw that as best I can.",
			"Right.",
			"So we effectively have this as our working area for creating a maze.",
			"Because we want this to be--",
			"we want walls no matter what because we don't",
			"want our person to be able to walk outside the maze",
			"or see the outside world, ever.",
			"We want them to be locked in.",
			"So we have all of these ones here, these trues, effectively.",
			"And so all we need to do is start at some random position,",
			"let's say this value.",
			"At 3, 2-- or, well, it's actually, technically",
			"it's 2, 3 because we index at y and then x in a 2D array.",
			"So we go 2, 3.",
			"We go here.",
			"And then we basically can move either left--",
			"or we can move either left or right or up or down.",
			"But we can't move both at the same time.",
			"And why can't we move both at the same time?",
			"Let's say that we're-- let's say, first of all, let me say that we're--",
			"let's say we're going to carve our way through the maze.",
			"So we're going to turn these ones into zeros, but we can only move either--",
			"we can only move orthogonally, meaning left or right up or down.",
			"We can't move diagonally.",
			"So we can only--",
			"let's say we have an x move, right?",
			"And a y move.",
			"",
			"And those can be set to--",
			"by default they're 0, so we're basically saying,",
			"where on this step of the generation are we going to move?",
			"And actually, technically, it's direction because we're-- the way that",
			"we do it is via directions.",
			"AUDIENCE: So if you're moving down, then what's in front of you",
			"will have no wall.",
			"And there'll be walls on either side of you except for where you came from.",
			"",
			"COLTON OGDEN: Yeah.",
			"So if you're here and they move down, this is going to be 0,",
			"this is going to be 0, and so those points are linked.",
			"And then from there we're going to move in a given direction.",
			"And so all of tho-- let's say they move here.",
			"All of those are going to be linked.",
			"And so if we move here, all of those are going to be linked.",
			"Just by virtue of the fact that we're moving orthogonally,",
			"we can't create a maze that's unreachable.",
			"Because the way that--",
			"just by virtue of the fact they're moving orthogonally.",
			"Now if we move diagonally, if I were to move here, right?",
			"There's walls right here and then two spaces there.",
			"That's not going to work because we can't access that.",
			"We see a-- we're going to see a cube here and a cube here.",
			"And we're going to see-- we won't be able to move diagonally through walls.",
			"So that's why we need to ensure that we only",
			"move either in the x or y direction, not both at once.",
			"And so what the algorithm does is it randomly chooses should I move x",
			"or should I move y.",
			"And should I move positive or negative.",
			"So it'll do-- math dot random, equal--",
			"you know, two equals 1.",
			"Effectively in the code it's random dot value, less than 0.5,",
			"because random dot value in Unity gives you 0 to 1 as a float.",
			"So you say if random dot value less than 0.5,",
			"which is a random chance between true and false, effectively 50%--",
			"move in x or move in y.",
			"And then same thing, but should I move in the negative or positive direction?",
			"So if I'm here, I'm thinking, OK, let's see.",
			"X move or y move?",
			"Again it's going to be an x move, so I'm going to move either left or right.",
			"OK, so am I going to move either negative one or one",
			"step, one to the right or to the left?",
			"So if it's negative 1 and that is going to move to the left, right?",
			"And if it's positive 1 it's going to move to the right.",
			"So that's the essence of the algorithm, just looped over a bunch of times.",
			"Whenever I move to another tile, turn that into a zero.",
			"So actually, this becomes a zero.",
			"Change the color.",
			"So this will become a zero.",
			"So that's now an empty space.",
			"And in the code, that instantly teleports the character to that space,",
			"too.",
			"So we know that our character is always going to be in an empty space,",
			"because he gets placed in the first open space that gets generated in the maze.",
			"And so let's say x move is equal to negative 1 on this iteration.",
			"So let's say we're looping until we've cleared x blocks.",
			"So I want to clear-- let's say I want to clear five blocks.",
			"So to clear equals 5.",
			"That's how many blocks--",
			"when we've cleared that many blocks, we're done with the maze generator.",
			"So cleared one, so our current counter is one.",
			"So x, we get-- flip a coin.",
			"We're moving to the x direction by negative 1.",
			"So we move to here, and then we turn this into a zero.",
			"Now, this implementation of the algorithm moves one step at a time.",
			"And so because of its randomness, what this ends up doing is",
			"it produces very large chunks of deformed space,",
			"just because the crawler is just constantly moving around,",
			"kind of, like, haphazardly.",
			"So what's a refinement that we can make to this algorithm",
			"to make it look a little bit more like corridors or like hallways?",
			"AUDIENCE: Just keep going until you hit the other wall?",
			"In the same direction?",
			"COLTON OGDEN: You could do that, yeah, keep",
			"going until you hit the other wall.",
			"The result of that--",
			"you mean to hit the side of the maze?",
			"Yeah, because it-- well, if you did that,",
			"it would effectively just be like--",
			"it would kind of be--",
			"it might work in some cases, but it will be very long hallways",
			"and not a lot of turns or anything like that.",
			"So the result, what we actually want to do, is when we flip a coin",
			"and we say x move or y move, we want to also say times to move.",
			"We want to create a new variable called number of times to move, effectively.",
			"To move, and then we just set that to a random number between 1,",
			"so we're going to move 1 tile, or the size of the maze minus 2.",
			"Taking in consideration both walls, right?",
			"So let's say we get the--",
			"let's say we-- let's say we did x move minus 1,",
			"and we only got to move equal to 1, right?",
			"So we only move here.",
			"We move once in this direction, so we've got two spaces.",
			"And then let's say we flip a coin again and then we got y move--",
			"positive 1.",
			"And then two move, we got two.",
			"So we're going to move two directions in the y-axis by one.",
			"So this is a result of us going down here, so we go 0 and then 0.",
			"",
			"And so the effect of this is that we move--",
			"we can move in more than just one block at a time",
			"and avoid the sort of random, like, haphazard, weird, organic, large room",
			"aesthetic that we want.",
			"If we want like a hallway, grid-like, dungeon looking room generator, right?",
			"Now there's a caveat to this, and that is if we start here, for example,",
			"and then we want to--",
			"let's say we flip a coin.",
			"It's x move, but it's positive four.",
			"We can't obviously move four tiles to the right because one,",
			"it will go into our walls on the outside, and two,",
			"it's actually beyond the bounds of our array.",
			"So we need to clamp that value down.",
			"When we add 1 to our value, to wherever our x--",
			"we have to basically keep pointers.",
			"We keep pointer to whichever tile we're currently at.",
			"We need to keep--",
			"when we actually go to the next tile in our step,",
			"we need to clamp that value within the range of our walls.",
			"So we need to clamp between one--",
			"so because we don't want to be at zero--",
			"we want to clamp it between one and main size minus two, actually.",
			"Because we want to make sure that we don't go any farther than this one",
			"here.",
			"Does that make sense?",
			"This is how-- that is effectively how our generator works.",
			"It's a step beyond just the move one block at a time,",
			"just because the mazes look away too empty and weird.",
			"With this approach where you're moving in a direction,",
			"and for a random number of tiles as opposed to just one at a time,",
			"you actually get pretty nice looking, simple mazes.",
			"This isn't how actual maze generation works, for mazes that you would see",
			"and an actual maze that you do in, like, a crossword puzzle book or a maze book",
			"or something.",
			"Those are more complicated.",
			"But this solution works well.",
			"It's very fast and very cheap, and actually pretty simple to understand.",
			"So any questions as to how the maze generator-- the algorithm, at least",
			"as applied to our 2D, array works?",
			"",
			"All right.",
			"Cool.",
			"That's the-- that's basically the gist of it.",
			"So we're going to take a break here for about five minutes, and then as soon",
			"as we get back we'll dive a little bit more",
			"into sort of how the character controller works, and the pickup,",
			"and a few other aspects of the game.",
			"All right, welcome back to Lecture 9.",
			"So before the break we were talking about the way",
			"that we implemented procedural maze generation.",
			"So a fairly simple algorithm that creates this sort of hallway",
			"look where we can easily get lost.",
			"But they aren't technically mazes in the traditional sense",
			"like you might have seen growing up in puzzle books and such.",
			"Another pitch for Catlike Coding, because his articles are amazing.",
			"He has another one on how he did a maze generator.",
			"And in this one, beyond just regular blocks--",
			"oh, I'm sorry.",
			"I didn't have the slide there on that thing.",
			"So this is a screenshot of another article",
			"from Catlike Coding where he talks about how to make his own maze generator.",
			"And the cool thing about his is that he has",
			"a bunch of different geometry involved in the scene.",
			"It's not just blocks.",
			"He has doors and windows and other things.",
			"And his algorithm is a little bit different than mine",
			"and produces some pretty interesting looking things.",
			"And you can see here, also, it has a view of the scene",
			"sort of superimposed on the actual scene, which",
			"he does with a trick using two cameras.",
			"So here's another maze slash dungeon generator article",
			"that I really like where he creates sort of like Dungeons",
			"and Dragons-style generators.",
			"And this is sort of pertinent to my interests as a developer",
			"because I really love roguelikes and dungeon generators and RPGs,",
			"but he goes into extensive detail on how to make",
			"a really nice and efficient 2D maze slash",
			"dungeon generator that produces really nice looking dungeons.",
			"As you can see here, it's got a very variable layout, lots of corridors",
			"and rooms and stuff like that.",
			"So implementing some like this in Unity would be really cool,",
			"and there's a plethora of generators and assets",
			"like this that will do the same kind of thing in Unity",
			"available in the asset store.",
			"So you don't have to make this yourself most of the time.",
			"You can create-- you can just go find either free or paid assets that",
			"will do all this for you and save you a tremendous amount of time.",
			"And how much of them are also very customizable, too,",
			"so that you can tailor the generator to fit the demand of your game.",
			"So we saw how the lighting works in our game.",
			"We've seen the maze, sort of how, it's generated, what it looks like.",
			"We have not taken a look yet at the character controller.",
			"So we'll briefly just take a look at that.",
			"It's actually incredibly easy to do in Unity, at least",
			"to get something fairly basic up and running.",
			"The way that we get a FPS controller in the case of our game is Unity has,",
			"which I alluded to before, a set of built-in standard asset",
			"packs that allow people getting used to the game engine,",
			"or just trying to bootstrap their game, up",
			"and running with some very basic components.",
			"Very basic things that are super helpful for getting your game running.",
			"So actually we used the prototyping standard assets pack for our pickup.",
			"We use the characters one for the character controller, the FPS",
			"controller.",
			"So if you're in a fresh project and you just go to Import Package",
			"and you import this character thing here, it'll import into your game.",
			"So that you can immediately use the prefabs that it gives you to create",
			"a character object.",
			"So it will, by default, just put it in your assets folder.",
			"Underneath Standard Assets, and then Characters,",
			"and then there's a first-person folder.",
			"And within the first-person folder there's",
			"a prefabs folder which has the FPS controller game object.",
			"And so all you need to do is just drag it into the scene,",
			"and then that becomes your default camera.",
			"",
			"AUDIENCE: That comes with Unity?",
			"COLTON OGDEN: It comes with Unity, correct.",
			"That's just a standard asset.",
			"AUDIENCE: And it's always in the prefabs folder?",
			"COLTON OGDEN: It's always in the-- the FPS controller will always be in the--",
			"so you have to import it first.",
			"You have to import the asset package.",
			"The characters package.",
			"Once you've imported the characters package,",
			"you'll go into Standard Assets in your assets folder.",
			"There'll be a new folder called Standard Assets.",
			"Within Standard Assets you'll go to Characters, then First Person, and then",
			"Prefabs, and then that's where you'll find the FPS controller.",
			"AUDIENCE: Thank you.",
			"COLTON OGDEN: Yes.",
			"No problem.",
			"So the FPS controller, if we take a look at it--",
			"we talked about it before, briefly.",
			"But effectively, it's just a capsule collider,",
			"which is sort of defying physics, because it's kinematic.",
			"Kinematic with gravity applied to it.",
			"And it has a camera sort of towards the top of it",
			"where the head is to simulate the perspective of somebody",
			"from first person view.",
			"And there's some programming involved that",
			"allows you to control it with the keys and the mouse,",
			"to control the camera's rotation with the mouse and the position",
			"of the collider with the WASD keys.",
			"And if you want, you can dig into the actual script for it, too.",
			"They're all included with the standard assets pack.",
			"When you import that into your project, it",
			"comes with all the scripts that make all that possible.",
			"I haven't dug through all of them in too much detail, but it's all there for you",
			"if curious as to how it works.",
			"And so if you want to get just a simple FPS controller in your game,",
			"a character in your game, to walk around and play a first person game,",
			"it takes about a minute to get up and running.",
			"Now, there's a lot of customization that you",
			"can apply to your character controller to make it",
			"not just the standard, basic character.",
			"So you can set a walk speed, you can set a run speed.",
			"You can set jump speed, you can set the sensitivity of the mouse look",
			"on the game-- on the FPS controller.",
			"You can apply what's called FOV kick, which means when you're sprinting--",
			"which it allows you to sprint with pressing Shift,",
			"which multiplies your speed--",
			"it'll actually-- it'll expand your depth of field a little bit to make it",
			"look as if you're kind of claustrophobic.",
			"Things kind of go out, and so it looks more narrow,",
			"and it kind of gives you that look as if you're sprinting down a path,",
			"and you can set just how much it increases by.",
			"You can see the curve of how that is applied here.",
			"So this is one of the components that Unity allows you to do,",
			"is there's a curve object, and you can use this curve",
			"to influence various things in your game.",
			"I actually haven't used it much, myself.",
			"But if you're looking for something to apply a curve to,",
			"Unity has an interface for making that visible within your inspector.",
			"Head bob, which means when I walk, should the camera kind of",
			"go up and down?",
			"When you do have a head bob, what's the curve look like?",
			"So here's another curve.",
			"This is sort of what the head bob looks like, kind",
			"of a sine wave but a little bit distorted.",
			"And a few other things.",
			"So, for example, footstep sounds.",
			"Maybe you don't like the sounds that come by default with the controller,",
			"so you give it your own footstep sounds.",
			"Super easy to do.",
			"Just drag new sounds here.",
			"Jump sound and a landing sound.",
			"Two more sounds that you can add to it.",
			"And that'll allow you to customize most of the feel of how your character moves",
			"around in terms of just a basic FPS controller.",
			"And so just by applying those very basic things, customized them a little bit--",
			"we got lucky with this maze.",
			"And this means that the maze went all the way around and then",
			"looped right back to where we were and ended there.",
			"So this is-- that's that maze, OK.",
			"I'm going to go ahead and turn up the sound.",
			"You can hear the footsteps, right?",
			"Along with the creepy whispering.",
			"But the footsteps are just provided to us by the FPS controller,",
			"and again, you can customize those to be whatever you want.",
			"And so this gives you the ability to walk around",
			"in your scene for a first person view.",
			"It doesn't really give you much more than that.",
			"In order to do an FPS where you have maybe a gun or a weapon or something,",
			"you need to program some more things and it's a lot more complicated.",
			"But for just basic navigation of a 3D scene, it's a great foundation,",
			"a great way to get started.",
			"So any question as to how the FPS controller works?",
			"",
			"There are other controllers, too.",
			"There are third-person controllers.",
			"So if you want to use those.",
			"They don't come with a camera-- based on my experimentation,",
			"they don't actually come with a camera by default.",
			"So I think you have to parent a camera to them in the way",
			"that you want for your game.",
			"Like, for example, some games have the camera super high above your character",
			"while you're walking around, and some of them",
			"have a behind the shoulder look, almost like Fortnite or Gears",
			"of War, really close to the character.",
			"And then some kind of have-- like in Banjo Kazooie,",
			"you could be walking up a mountain and so the camera",
			"is kind of like perpendicular to where you are, and sort of follows you.",
			"Around so camera programming for 3D characters",
			"is a little bit more complicated than it is for first person games.",
			"And so that's why I mentioned it doesn't come with a camera by default,",
			"so it can be a little bit more complicated.",
			"But I do believe there are a lot of assets on the asset store",
			"that can help bootstrap you if you're getting a programmatic camera",
			"setup going for your character in a third-person view.",
			"Yeah.",
			"AUDIENCE: I've noticed when you're walking around your maze,",
			"occasionally you're clipping the wall and kind of seeing what's behind it.",
			"COLTON OGDEN: Yeah.",
			"That-- I believe that's a result of the collider being a little bit too big.",
			"So what he said was that walking through the maze,",
			"you can kind of clip through the wall a little bit.",
			"Let's see if you can actually experience it.",
			"Yeah, like right there.",
			"Yeah.",
			"And that's the-- I believe that's just the camera or the collider",
			"being a little bit too large.",
			"And so we could probably get rid of that altogether just",
			"by shrinking the collider a little bit.",
			"Just a detail that I didn't iron out.",
			"But you'll see that in a lot of games, actually.",
			"A lot of games have clipping that you can observe,",
			"depending on how they program the game.",
			"",
			"But, yeah.",
			"Any other questions as to how character controllers work,",
			"and how the import process works, and how to get it in your scene?",
			"OK.",
			"Cool.",
			"Yeah, it's super easy.",
			"Again, here's what the FPS controller looks like.",
			"Capsule collider with a camera.",
			"And then the third-person controller.",
			"By default they give you a pretty nice looking model on the left side",
			"there so that you can experiment with it.",
			"And then they apparently give you an AI one",
			"as well so you can test AI in your scene with it,",
			"but I haven't experimented too much with that to vouch for how well it works.",
			"So an important aspect of today's example",
			"is that we've gone from having just one scene to having two scenes.",
			"So I want to illustrate how we sort of move between the scenes a little bit.",
			"And also, I realized we didn't really cover the dungeon generator",
			"in code detail.",
			"But notice that I have exposed a lot of things here.",
			"A floor prefab, wall prefab, ceiling prefab.",
			"These are just the cubes that are textured",
			"to be our floor, walls, and ceiling.",
			"We can just click and drag them from the inspector into our scene,",
			"onto the components there.",
			"We have a character controller reference here,",
			"so that we can place the character controller in our scene",
			"when we've generated the first block.",
			"We can basically take the transform and set its position to whatever",
			"that x z is.",
			"And then a floor parent and a walls parent.",
			"So the reason that we have parent objects, actually,",
			"which we didn't look at before--",
			"whoops, I've lost track of where my--",
			"there it is.",
			"The reason that we have parent objects here",
			"is because when we instantiate all of the cubes in our scene,",
			"just sort of just instantiate them without really thinking about it,",
			"it ends up--",
			"basically, I'll show you here.",
			"",
			"Well, first of all, I don't know what this is.",
			"I think it's-- that's interesting.",
			"Oh, because I clicked on the floor parent.",
			"Right, OK.",
			"So you click on the walls parent, actually.",
			"I didn't do that yet, but it will actually",
			"show you where all of the objects that are parented-- or that",
			"are dependent on that parent.",
			"So the floor parent here--",
			"see how many floor blocks there are?",
			"It's quite a lot.",
			"",
			"There's a lot of floor blocks here, and in the walls parent there is even more.",
			"There's a lot of walls and ceiling blocks,",
			"and if we just generate those without assigning them a parent,",
			"it'll just fill up our hierarchy there very messily.",
			"And it makes navigating our scene during debugging very difficult.",
			"We don't need to see that we have a million clones of the floor",
			"or the ceiling blocks or the wall blocks.",
			"And so what we do is we just take all of the cloned blocks and we just parent",
			"them to an object.",
			"And when you parent something to an object, you get that little drop-down.",
			"Like, for example, this first-person character.",
			"This FPS controller is the parent of this first-person character.",
			"And so those are two separate objects that both comprise the FPS controller,",
			"effectively.",
			"A parent is top-level, and its children are therefore within this little arrow",
			"here, and it's collapsible.",
			"All of the things within the play scene, for example--",
			"the play scene is the parent to all of these.",
			"It's sort of like a folder hierarchy type of thing.",
			"And so if you want to clean up your scene,",
			"if you're instantiating a ton of things, just effectively",
			"containerize them by putting them into a parent object.",
			"And so we do that in our game with a function called create child prefab.",
			"And so what create child prefab does is, it does an instantiation as normal.",
			"Creates a prefab, instantiates it, gives it a position xyz.",
			"Quaternion dot identity because we don't want to apply any rotation to it.",
			"But my prefab dot transform dot parent equals parent dot transform.",
			"Effectively linking our-- we're assigning",
			"the parent field of that prefab's transform to the parent's transform.",
			"And that has the effect of basically linking them together",
			"in a parent-child relationship.",
			"And that will allow us to collapse and expand a list when",
			"one parent has a bunch of children.",
			"We can expand and contract in the hierarchy view and save us a lot of--",
			"save us a bit of a headache in terms of navigating our scene",
			"or we instantiate a lot of things, which is fairly normal.",
			"",
			"So the actual may--",
			"I'll go over this fairly quickly.",
			"It's a fairly simple algorithm.",
			"And we talked about it on the screen, and we don't have a ton of time.",
			"But basically we go z to x.",
			"The reason that we go z to x is because in Unity, z and x are",
			"sort of like the ground axes, and a y is sort of like that up and down axis.",
			"And so we don't want to instantiate-- we're not",
			"really worried about navigating the y-axis during our maze generator.",
			"Because all we're going to do is instantiate four blocks",
			"on the y-axis during that phase.",
			"So we're basically taking our 2D array, and we're iterating over it xy,",
			"and then we're mapping that to Unity's xz, If that makes sense.",
			"Because notice the-- this is our ground, right?",
			"So where this transform is, you can see the ground, how this is x.",
			"The blue is z.",
			"And y is this axis here.",
			"We're generating-- we're effectively only concerned about generating",
			"on the ground, and then when we generate a wall we just",
			"generate it four blocks high on the y.",
			"We don't think about the y.",
			"So that's why x and y for our 2D array, but x",
			"and z for applying that array to Unity's 3D coordinate system.",
			"Does that make sense?",
			"OK.",
			"So we're iterating over z and x.",
			"And then we're indexing into our map data, z and x, which",
			"is exactly the same thing as y and x.",
			"And then we are creating a child prefab.",
			"If map data z x.",
			"So recall that our map data is a 2D array of Booleans.",
			"And so if we have map data z x equal to true, that means there's a wall there.",
			"It means that there's a true in our array,",
			"so we should instantiate a wall at that location.",
			"So we create three wall prefabs, assign them to the walls parent",
			"so that they get containerized within there",
			"so they don't clog up our hierarchy view.",
			"",
			"And then-- let me see here.",
			"",
			"And so if we don't--",
			"So if we've gone to our maze, if we're generating our maze,",
			"and we get to our first tile that's actually not a wall,",
			"so it's an empty space--",
			"So basically, the else here.",
			"So if mapped data zx is not true, it's going to be false.",
			"So if that's the case, and if not character placed--",
			"so character placed is just a Boolean.",
			"It's a private Boolean.",
			"We don't want this to be visible in our inspector.",
			"There's no purpose for it to be visible in our inspector.",
			"This is just a Boolean for us to use in our script.",
			"So we set that to false by default because we",
			"haven't placed our character yet.",
			"But when we generate our maze, we have to make",
			"sure we put our character in a spot that there isn't a wall.",
			"Because we obviously don't want him trapped in a wall",
			"or clipping through the maze, right?",
			"So if not character placed, we're going to set the character controller's",
			"transform.",
			"We're going to sense position and rotation, which is a function.",
			"We're going to set it to x and then y 1, and then z.",
			"And then no rotation, so quaternion dot identity.",
			"And then set that to true.",
			"So therefore, this will never be called again.",
			"So this only gets called on that very first empty space",
			"that we go through our maze.",
			"And that's it for that.",
			"When we-- no matter what we do, whether there's a wall in our maze or not,",
			"we're going to want to generate a floor and a ceiling at that space.",
			"So-- that's, of course, assuming that generate roof",
			"is true which, recall, we made a public Boolean in our inspector",
			"so that I could debug and show you guys what the maze looks like from up above.",
			"So if generate roof--",
			"create a child prefab for ceiling prefab of x 4 z, so a bit higher up.",
			"And then no matter what, always want a floor.",
			"So create a floor prefab at x 0 z.",
			"So down below.",
			"And our character controller gets placed at, recall, x 1 z,",
			"so just above the floor.",
			"The assignment is actually-- part of the assignment",
			"is generate a hole in the floor.",
			"And if there's a hole in the floor and the character falls through the hole,",
			"should get a game over, right?",
			"So you're going to need to create a game over scene",
			"or we need to transition to that scene.",
			"And then we're going to need to check to see whether the character's transform",
			"has gone below a certain amount.",
			"It's all fairly easy stuff to do.",
			"But you'll look to do some of that in here.",
			"And then the actual maze data function is here.",
			"I won't go over it in detail, but it's the algorithm",
			"that we talked about before, where we choose direction to move randomly,",
			"and we choose a random number of steps to move,",
			"clamp that value within the constraints of the maze,",
			"and then set every tile that we explore to false.",
			"And that has the effect of creating the maze.",
			"And then we just return that data back to our function as just a 2D array.",
			"Notice that in C Sharp, to create a 2D array,",
			"it's a little bit different than in a lot of other languages.",
			"It has its own set of syntax for that.",
			"You have the array syntax that you're probably familiar with,",
			"but then you also have this comma.",
			"And that comma is to designate that there are two arguments to that index",
			"syntax here.",
			"Just means an x should go here and a y should go there, basically.",
			"Or y, x.",
			"And that's 2D array.",
			"And you can make it as many degrees as you want to.",
			"Just add more commas to it.",
			"And notice that to actually allocate the memory that we want for that 2D array--",
			"new bool, maze size, maze size.",
			"So our maze is always square shaped.",
			"Same-- and you could easily make this maze",
			"x, maze y if you wanted to, to make it rectangular.",
			"So you need to have two public variables instead of one.",
			"And all of this is fairly visible to the inspector, too.",
			"In our dungeon generator you can see I made a tiles to remove, 350.",
			"So that means that our maze is going to cut out 350 tiles,",
			"and as soon as it cuts out 350 tiles, it's done.",
			"And then our maze size is 30 by 30.",
			"So that means there's going to be 900 tiles in our maze.",
			"So you can tailor this to whatever you want in order",
			"to produce sparse or denser mazes to your liking.",
			"So any questions as to how the code for that works?",
			"More or less.",
			"So now we'll actually get to the scenes part of it.",
			"And so transitioning betw--",
			"oh, yeah.",
			"AUDIENCE: I'm thinking, like, for a smaller",
			"game like that, that works great.",
			"But for a larger game, wouldn't you want to model the walls",
			"as 2D kind of objects, and the ceiling, instead of a whole cube?",
			"COLTON OGDEN: Oh, yeah.",
			"So for a small game, is it ideal--",
			"more ideal for the walls to be rendered as one discrete object as opposed",
			"to several cubes?",
			"Yeah, absolutely.",
			"That's 100% true.",
			"And actually, Minecraft is an example of this sort of idea",
			"that you think would work, but they actually",
			"consolidate all their geometry after they've generated it in this way",
			"and produce, like, models that are more optimized.",
			"You think that you're interacting with this world that's",
			"a bunch of these little blocks, all separate.",
			"But it's actually one big piece of geometry,",
			"and then it dynamically figures out where you're hitting and removes",
			"and adds blocks as needed.",
			"And there's some cool videos on YouTube as to how to do this in Unity,",
			"too, which I looked at a long time ago.",
			"And it kind of shows you--",
			"you can actually dynamically create meshes and vertices and stuff in Unity,",
			"and then create objects that way, which is really cool.",
			"But that's a little bit more on the advanced side.",
			"But yeah, absolutely.",
			"For an actual implementation of this, a simple but more efficient way",
			"to do it would just be to have one solid, large, wall object.",
			"That's as tall as you need it to be, and maybe as",
			"wide as you need it to be for one character, and have that work.",
			"But for simplicity's sake and to illustrate the algorithm,",
			"we were just using the cubes.",
			"Yeah, exactly.",
			"But yeah, good point.",
			"That's 100% true.",
			"All right, multiple scenes.",
			"So the way that we do this--",
			"so I'm going to go into my text editor.",
			"Whoops So the-- grab pick-ups script.",
			"So grab pick-ups is a component that's attached to the character controller,",
			"because he's going to be picking up pick-ups.",
			"And what the grab pick-up script effectively does is,",
			"the character controller built-in collide",
			"has this function that you can define for it called on-controller collider",
			"hits, where anything that collides with the controller's collider",
			"will trigger this callback function.",
			"And you can grab the information about the object that you collided with",
			"and then perform some sort of logic on that.",
			"And so it's actually calling this function every single time",
			"we collide with any of the tiles or the blocks in our scene as well.",
			"There's just no logic to account for them,",
			"so it's just effectively an empty function call.",
			"But if it's the case that the game object has a tag of pick-up--",
			"which we've set in our Unity editor, and I'll show you how to do that--",
			"then we should play a sound from our pick-up sound source.",
			"And then we should--",
			"using-- you actually used this in the last lecture,",
			"but only within the same scene.",
			"We're going to call scene manager dot load scene, play.",
			"And you need Unity engine dot scene management.",
			"Using unity engine dot scene management at the top of your script",
			"in order to use this.",
			"And load scene effectively just will literally just",
			"load a scene by its name.",
			"And we're doing that in a couple of places.",
			"So we're actually doing it there.",
			"But remember, we had the title scene, which had the same sort of thing.",
			"You press Enter, and you load the play scene, right?",
			"So this load scene on input component that I created",
			"is attached to a text field in the title scene.",
			"And all we're doing here is in the update,",
			"we're just saying hey, if input dot get access submit is equal to 1,",
			"then scene manager dot load scene play.",
			"Almost the same-- kind of almost the same code, only in this case",
			"we're querying Unity's input.",
			"It has a global input manager, get axis.",
			"So it has several axes, is how it defines it.",
			"Different methods of input.",
			"And then it defines them by keywords, so in this case submit is a keyword.",
			"And you define-- you map those keys--",
			"or you map those keywords to specific keys and input sources",
			"on whatever platform you're targeting.",
			"In this case, submit is synonymous with either Enter or Return,",
			"depending on which platform we're using.",
			"And it could have other meanings if we're exporting this to Xbox",
			"or if we're exporting it to the web, or if we're",
			"exporting it to a mobile phone.",
			"There's a lot of different ways it changes.",
			"And so the way that it checks is it will be 0 or 1,",
			"specifically, so we can say if input dot get access submit",
			"equals 1, scene manager load scene play.",
			"And it won't let you do if input dot get access submit, because it's explicitly",
			"expecting integer and it will throw an error if you're",
			"trying to use it like a Boolean.",
			"So we need to use this equals, equals one to test for equivalence.",
			"And that's all we're effectively doing there.",
			"",
			"Now, the interesting thing is, when we reload the scene for the pick-up",
			"for the maze, there's a soundtrack playing in the background.",
			"And we want the soundtrack to constantly be playing the same thing",
			"and to loop, right?",
			"The sound effect-- we don't want it to start up immediately again",
			"and start up from the very beginning again.",
			"We kind of want this seamless sort of feel to it.",
			"And so how do we think we can solve this problem?",
			"",
			"AUDIENCE: So it doesn't play again when?",
			"When you reload the scene?",
			"COLTON OGDEN: Sorry?",
			"AUDIENCE: You don't want it to start over when you reload the scene?",
			"COLTON OGDEN: Correct.",
			"",
			"So any ideas as to how we would do this?",
			"AUDIENCE: Put level one only in the beginning or something?",
			"[INAUDIBLE]",
			"COLTON OGDEN: Well, so whenever we collide with the pickup,",
			"we reload the scene completely from scratch.",
			"And so when you reload a scene, it destroys every game object",
			"in the scene, including all the objects that",
			"have audio sources attached to them.",
			"And so when it reloads the scene, it reinstantiates",
			"all of the game objects in the scene, including those with audio sources,",
			"and retriggers their playing.",
			"So what we want to do is prevent this from happening.",
			"AUDIENCE: Just have a counter and when you get the first pickup then",
			"it goes to 1.",
			"And then you say if less than 1, play the sound.",
			"",
			"COLTON OGDEN: That will have the effect of-- so you're saying have a counter,",
			"and when--",
			"AUDIENCE: Or, yeah.",
			"True-false would do.",
			"Boolean would be better at this.",
			"COLTON OGDEN: So have a counter or true-false when you load the scene,",
			"it starts the music.",
			"But what happens when we reload the scene from scratch",
			"and the audio that was playing gets deleted?",
			"AUDIENCE: Can you transport certain objects between scenes?",
			"COLTON OGDEN: Can you transport certain objects between scenes?",
			"Effectively, you can.",
			"There is a function called don't destroy on load, actually.",
			"So what that d-- it's a Unity function, which",
			"allows you to preserve an object as it is between scenes.",
			"So if you don't want your object with the music to destroy itself and then",
			"reinstantiate on load--",
			"well, technically, just don't destroy itself.",
			"Just do don't destroy on load at the game object.",
			"And so this don't destroy, we apply this to our audio source--",
			"our whisper source, it's called--",
			"in the scene.",
			"The only problem with this is if we reinstantiate--",
			"or if we don't destroy on load this object, it's going to persevere.",
			"But when we reload the scene, it's going instantiate a new one.",
			"So what's the effect of this going to be?",
			"We're going to have two audio sources playing at the same time.",
			"What happens when we do another one?",
			"You're going to have three audio sources playing at the same time.",
			"So for every time you go to a next level,",
			"you're going to add the same audio track to the scene.",
			"It's going to be very annoying very quickly.",
			"The way that we avoid this happening is by making what's called a singleton.",
			"So what a singleton is is a class that can only effectively",
			"be instantiated one time.",
			"",
			"And we do this by creating a static variable here called don't destroy.",
			"",
			"No, we call it instance, which is of type don't destroy.",
			"So it's this component here, right?",
			"And so the don't destroy class as a whole has",
			"this static variable called instance.",
			"And we set it to null by default. And we haven't instantiated",
			"a don't destroy component yet.",
			"And what this ensures, in our scene, by the logic",
			"we have in the awake function, awake is almost the same thing as start.",
			"It just means whenever-- you can pause an object",
			"and it will awake from its pause state.",
			"But awake also gets called when an object gets instantiated.",
			"So if the instance is set to null on awake, instance equals this,",
			"so this don't destroy.",
			"So whatever this is being called from, this",
			"don't destroy will be the instance.",
			"Whenever the first don't destroy component is in our scene.",
			"The very first maze that we generate.",
			"The sound source instance will be this.",
			"And then we set don't destroy on load for the game object that",
			"is holding that don't destroy or don't destroy component, that audio source.",
			"But if the instance is not equal to this, so if we've awoken",
			"and this is level 2, for example, instance",
			"is going to be set to the don't destroy component on the don't destroy on load",
			"object that we created in the first maze.",
			"Because we did this logic here.",
			"And so it's going to try and instantiate a second don't destroy component.",
			"It's going to destroy another sound source.",
			"But instance is not going to be null.",
			"Instance is going to be equal to that first object.",
			"So we say, if instance is not equal to this, destroy game object.",
			"So this is going to be from the standpoint of the second don't",
			"destroy that got created.",
			"AUDIENCE: So a singleton basically persists.",
			"COLTON OGDEN: The singleton will persist indefinitely",
			"upon its first instantiation.",
			"And there will only ever be one singleton.",
			"This is a very basic, very common pattern",
			"in software engineering for ensuring they only",
			"have one object of a given type present throughout your entire project.",
			"",
			"But this is how we prevent multiple sound sources from being instantiated.",
			"We always ensure that only one object with that component",
			"gets instantiated at once, and any future instantiations of that object",
			"get destroyed immediately, assuming that they aren't that first object.",
			"If they are that first object, instance will not--",
			"instance will equal this, and so it will still skip this part,",
			"and so it will stay alive.",
			"So any questions as to how the persevering through multiple scenes",
			"works for a sound source?",
			"",
			"OK.",
			"That's how we get multiple scenes.",
			"So fog.",
			"We looked at fog already, but I have a few screenshots here",
			"to kind of help illustrate what fog has looked like over the years.",
			"So fog looks pretty unconvincing in this screenshot.",
			"This is Turok for the N64.",
			"It's just-- kind of looks as if, you know, sort of at a certain distance,",
			"a very dense sheet of fog has appeared.",
			"And you can actually make this happen in Unity by setting the--",
			"there's a curve, a fog curve that I believe you",
			"can manipulate that will effectively--",
			"the algorithm that determines how the color gets summed to things",
			"far away is very fast as opposed to gradual or linear.",
			"So you can make it just exponential, effectively,",
			"and make it look as if the fog is incredibly dense",
			"and starts almost at a very fixed spot and have",
			"the rest of this area in front of you look normal.",
			"Here is another example--",
			"Star Wars Shadows of the Empire, one of my favorite N64 games",
			"which has the same look.",
			"And so in this era, you can see fog is very distinguishable.",
			"Very artificial looking, because it's very tinted.",
			"In this case it looks very blue.",
			"In this case it looks very pale blue.",
			"This is Silent Hill.",
			"And Silent Hill looks realer, more realistic,",
			"but kind of the same thing at play here.",
			"You have a very pale gray metallic blue color, and the density in this case",
			"is very high.",
			"The density is much higher.",
			"Well, maybe close to as high as it is in our game that we're showing today.",
			"But it's effectively the same thing, just with a different color.",
			"And they use it to great effect in here, not only for sort of this aesthetic",
			"to make you look as if you're in some sort of desolate town.",
			"But also to dynamically load objects or to prevent rendering objects",
			"that are a certain distance away.",
			"And to optimize performance on hardware that was severely",
			"limited at the time, which was Playstation 1, which",
			"is a fairly weak console.",
			"And then here is Shadow of the Colossus for PS4, which just came out",
			"not too long ago, and we can see fog is still being",
			"used but it looks photo-realistic.",
			"And there's probably a lot more that they're",
			"doing they probably have several layers of fog,",
			"they probably have textures and transparent objects",
			"that are simulating fog, and a lot of more complicated things like that.",
			"Fog that only hangs at a certain distance",
			"so it looks like fog going over the lake.",
			"There's a lot of things here, but it's the same idea.",
			"And they probably have the same sort of foundational base",
			"fog present throughout the scene.",
			"And then here's our game, just to show how it looks.",
			"You can barely even see it.",
			"But it does give you this sort of, like, lost",
			"in a really dangerous maze feeling, which-- and it's super easy to do.",
			"And it can save you performance and it can add a lot of aesthetic",
			"to your game.",
			"And so the last big thing we'll talk about today is Unity 2D, actually.",
			"So I'm going to go back into--",
			"oh, questions about fog.",
			"I know that was a pretty high-level overview.",
			"Over looked at we looked at how it applies",
			"in the settings and questions as to how it works or how to get work in Unity?",
			"OK.",
			"So we're going to go ahead and look at our title scene.",
			"And so we looked at this earlier, briefly,",
			"but I want to go ahead and show you the components.",
			"So I'm going to take a look at our canvas.",
			"If you double-click on something you'll zoom out.",
			"And so it will automatically detect sort of what your resolution is",
			"and scale the canvas accordingly in your scene view.",
			"There's a 2D button here.",
			"I'm going to go ahead and go to my default layout.",
			"I'm going to click on the canvas.",
			"Notice that it shifted things a little bit because now I have a larger",
			"window that's going to be rendered to.",
			"I'm going to click on the canvas, and then I'm going to go to 2D mode.",
			"And then notice when you click on 2D and 3D mode,",
			"you go instantly into seeing it as if you're manipulating it",
			"in a 2D engine versus a 3D engine.",
			"And then going back to 3D, now it's a three-dimensional plane",
			"that you're actually looking at.",
			"So in 2D mode, you can easily sort of navigate it, right click and drag it",
			"around.",
			"I'm going to go here, like this.",
			"And these are very simple components that you can just",
			"interact with as a GUI.",
			"Now, the main thing that you need to get any of this to work",
			"is the canvas, which is here.",
			"So if you right click and then go to UI, you can go to canvas, if you want to,",
			"or you can just add any of these things that you want,",
			"and it will automatically add a canvas for you.",
			"Because a canvas is necessary for all of the Unity UI rendering stuff.",
			"So if I were to just add a text on an empty scene,",
			"it'll just create a new brand new canvas and an event system.",
			"The event system is just how Unity talks to the canvas and all the UI",
			"elements of your canvas, given mouse and keyboard input and stuff like that.",
			"It's nothing that you necessarily have to worry about or use.",
			"But the canvas is the sort of overall container for all GUI stuff",
			"that you do.",
			"Now if I click on the tile text or the enter text,",
			"notice that they are children of the canvas.",
			"So they are within the canvas.",
			"The canvas is their parent.",
			"The title text, I can move it around.",
			"Notice that it snaps.",
			"it's got my snapping functionality.",
			"I can set it up there, it will snap to the top.",
			"It'll-- yeah.",
			"It's pretty handy.",
			"You can scale the bounding box.",
			"It doesn't scale the actual text, but the--",
			"notice that I do have right justification,",
			"centering, left justification.",
			"Those sorts of helping--",
			"those sort of features.",
			"I can increase the font size via slider, so I can immediately",
			"see without having to edit some code and then",
			"reload the project what changing some of these values will look like.",
			"I can easily change the color in real time,",
			"so I can get a sense of how that looks.",
			"If you wanted some sort of slimy, Dread50 look, I guess.",
			"And you can also assign materials to as well, which is kind of cool.",
			"Which I haven't explored too much in detail, but you have that option.",
			"If you want to give it a material instead of a color, materialed font.",
			"Because ultimately, all this stuff is still 3D,",
			"but Unity presents it in a way that makes it look",
			"as if you're interacting with it in 2D.",
			"It's pretty nice.",
			"AUDIENCE: When you put it in 2D form, when you hit play,",
			"it's going to open up to that?",
			"COLTON OGDEN: Yep.",
			"AUDIENCE: And then how do you transition to the rest of the game?",
			"COLTON OGDEN: So the transition to the rest of the game",
			"is in the load scene on input here.",
			"So the script that we looked at earlier.",
			"So this is assigned to one of those text labels.",
			"So I just gave it to the--",
			"I forget.",
			"I think it's the Enter text.",
			"So I gave it this load scene on input, just because it's the Enter text,",
			"it seemed appropriate.",
			"Could put it on anything in the scene.",
			"It doesn't matter.",
			"As long as it has this update function, which",
			"then has this if input dot get access submit equals 1, and then recall--",
			"",
			"go into the Project Settings, input.",
			"All these axes here are defined for you automatically.",
			"And then you can choose what they map to, but submit, as you can see,",
			"positive button is return.",
			"So if submit is equal to 1, when you press Return it will be equal to 1,",
			"effectively.",
			"And it gets mapped to other buttons, depending on what",
			"input sources you have on your device.",
			"But you can check what it is on your computer",
			"just by going to Axes in your Input Manager.",
			"So it's, once again, Edit, Project Settings, Input.",
			"And then you can see all the axes here.",
			"AUDIENCE: So that, the 2D scene, that's just a scene in itself.",
			"COLTON OGDEN: That's a scene in itself, completely.",
			"It has a camera, so we are--",
			"the camera renders-- the thing about canvas",
			"is it's kind of separate from the camera,",
			"so it gets rendered onto whatever the camera's rendering separately.",
			"But the camera in this case, what I've done,",
			"because if by default we just render the camera and the UI,",
			"it's going to look just like this.",
			"It's going to look like the sky with Dread50 and Press Enter.",
			"That's not the aesthetic that we want, so I take the camera,",
			"and then you can give it a background.",
			"So by default, the background is that sky, is the skybox.",
			"And so I set clear flags.",
			"Clear flags are same thing as background.",
			"So whatever, there's no geometry or anything.",
			"Clear-- this clear color, clear flag, this",
			"gets drawn to before any geometry in the scene, basically.",
			"",
			"So clear flags, solid color in this case,",
			"and then just black, using a color picker.",
			"So super easy, super nice.",
			"And then this UI, this canvas, will get drawn on top of this camera.",
			"So that's what produces the sort of combined effect of having the UI",
			"text and then the black background.",
			"And then that Enter Text, having that component,",
			"that checks for the submit input because that's what Enter and Return map to.",
			"That is what lets us transition from the current scene to the play scene.",
			"And so there are a lot of other cool features",
			"that these labels and such have.",
			"For example, being able to set its anchor position.",
			"So depending on what device you're shipping to, you might want--",
			"you know you're going to have multiple screen sizes and screen resolutions.",
			"So you can say, I want this label to always",
			"be at the very top middle of my scene, and I can do this",
			"by clicking this little box here, which is the anchor point selector,",
			"and then just clicking that.",
			"And so that will always anchor Dread50's text to that top middle,",
			"no matter what our resolution is.",
			"It will always be there.",
			"And there's a lot that you can do on top of that.",
			"And you can do that with any UI component, just relative positioning",
			"depending on the resolution.",
			"And the nice thing about Unity, too, if you go to Game,",
			"you can actually choose-- sorry, in the second menu--",
			"you can choose a lot of aspect ratios.",
			"So 5:04 doesn't look that great.",
			"4:03 doesn't look that great.",
			"16:10, 16:9, and then standalone.",
			"So standalone is the default export size of your platform.",
			"But you can choo-- you can have it--",
			"you can test different resolutions, and you can also add more, too.",
			"You can add a fixed resolution if you want, or aspect ratio.",
			"And do a lot of cool things that way.",
			"So you don't have to necessarily test it physically on different devices.",
			"Although it's very good to so you can make sure",
			"that you're not blowing up your hardware.",
			"But you have that option.",
			"So any questions as to how Unity 2D works and how the canvas works",
			"or how we've gotten the simple UI to work?",
			"Part of the assignment will be-- and we'll take a look at that now,",
			"actually.",
			"So assignment 9, we talked about this already, about the gaps in the floor.",
			"But this will be part of the maze generator, right?",
			"Because it's where we generate, ultimately.",
			"Or, the generates-- the maze instantiator.",
			"The actual part of the maze generator that creates the physical maze.",
			"But create gaps in the floor.",
			"And then when the player falls through, approximately two blocks below, which",
			"you can set--",
			"check the transform is-- the y position is less than a certain amount.",
			"It should be less than 0.",
			"I think it's based on the top part of it.",
			"Then you should transition to a new screen that says Game Over.",
			"So create a new scene, very similar to the first scene",
			"that we looked at, which was just the title screen,",
			"and you can probably copy most of that.",
			"But that scene should say Game Over, and then pressing",
			"Enter there should load the tile scene.",
			"And then, lastly, add a text object to the play",
			"scene that just keeps track of how many levels you've navigated through.",
			"And you can probably do this with some kind of static variable.",
			"But any solution that accomplishes it is welcome.",
			"But altogether, all pretty easy pieces to put together.",
			"That was this week, which was Dread Halls and our first foray",
			"into first-person games.",
			"Next week we'll look at Portal.",
			"It won't look necessarily this good, but it will look similar to this.",
			"This is a screenshot from Portal itself.",
			"But we'll look at how we can render to textures,",
			"how we can cast rays from our character, our first person controller,",
			"how we can actually make it look as if we have a weapon or a gun",
			"or a portal gun, which is not too difficult.",
			"You just have two parent, basically, a model to your first-person controller.",
			"And then, when we walk through a portal, how do we transition from one portal",
			"to the other portal?",
			"So just a-- you know teleport, your transform to another position.",
			"But that was that.",
			"Next week is Portal, and I will see you all next time.",
			""
		],
		"is_youtube": false
	},
	"video_012": {
		"section": "CS50G 2020",
		"subsection": "Portal",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000900/HarvardXCS50G-V000900.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000900_DTH.mp4"
		],
		"video_duration": 5542,
		"speech_period": [
			3.451, 12.75, 0.999, 2.01, 1.307, 1.583, 2.93, 1.35, 6.21, 1.98, 3.465,
			1.875, 2.16, 2.4, 2.04, 2.37, 2.4, 1.86, 2.82, 3.117, 1.833, 2.95, 3.29,
			1.63, 2.49, 1.0, 3.49, 4.65, 2.55, 2.84, 2.862, 2.458, 3.57, 3.36, 2.52,
			3.81, 2.911, 2.249, 2.76, 2.49, 3.12, 1.739, 1.291, 2.58, 3.57, 2.34,
			4.209, 2.541, 1.708, 2.852, 1.77, 3.6, 3.36, 1.74, 4.87, 5.3, 2.58, 1.47,
			3.27, 3.84, 4.83, 3.6, 4.95, 2.67, 3.39, 2.4, 3.12, 2.28, 3.09, 3.03,
			3.39, 2.25, 5.22, 4.41, 1.44, 2.52, 2.44, 2.84, 1.862, 2.708, 3.125,
			1.245, 2.82, 3.53, 2.38, 2.999, 1.771, 4.169, 3.241, 2.91, 2.97, 3.57,
			1.744, 1.916, 1.44, 2.07, 2.37, 1.81, 1.24, 3.46, 1.415, 2.875, 0.64,
			5.18, 3.27, 1.63, 5.27, 2.7, 2.33, 2.324, 1.166, 4.027, 2.083, 2.34, 6.34,
			4.76, 2.67, 2.28, 3.441, 1.749, 2.79, 1.78, 2.0, 3.75, 3.21, 5.07, 4.11,
			3.42, 3.39, 3.712, 1.458, 2.541, 2.429, 4.83, 3.43, 2.624, 2.166, 3.03,
			4.35, 2.01, 3.086, 2.874, 3.04, 3.12, 3.72, 2.73, 1.48, 4.64, 2.31, 5.04,
			2.46, 2.25, 2.86, 2.0, 1.732, 1.958, 3.93, 3.33, 3.63, 5.13, 2.04, 4.71,
			3.392, 1.708, 6.114, 2.916, 1.714, 1.166, 3.525, 6.719, 3.361, 1.625, 0.5,
			4.09, 2.85, 3.599, 2.041, 3.45, 3.73, 3.96, 4.18, 3.53, 2.13, 3.48, 2.22,
			3.66, 2.83, 4.97, 3.4, 4.0, 5.24, 0.5, 3.94, 3.0, 1.92, 1.35, 2.19, 4.29,
			4.155, 0.875, 2.07, 1.47, 1.98, 1.95, 3.16, 3.77, 3.03, 0.81, 1.57, 5.34,
			3.859, 2.041, 1.9, 4.52, 5.19, 2.08, 3.41, 2.76, 2.64, 3.54, 3.39, 2.37,
			2.67, 4.59, 1.56, 4.95, 4.26, 1.8, 4.11, 1.35, 1.55, 4.6, 2.82, 4.169,
			2.041, 4.41, 2.82, 1.29, 2.85, 1.98, 2.984, 2.416, 1.822, 2.708, 4.71,
			5.11, 2.21, 2.58, 3.072, 2.958, 3.99, 3.54, 2.25, 5.77, 3.17, 4.32, 2.55,
			2.862, 1.208, 3.57, 3.69, 3.06, 4.74, 4.54, 4.62, 1.7, 4.27, 2.51, 3.9,
			3.12, 4.88, 1.88, 2.85, 3.63, 1.5, 4.83, 2.67, 3.72, 3.629, 2.041, 1.958,
			4.452, 3.74, 3.69, 2.34, 1.98, 3.18, 1.65, 4.47, 2.28, 4.42, 4.76, 1.83,
			2.19, 3.72, 3.3, 2.19, 2.867, 2.833, 3.249, 2.871, 5.54, 1.75, 0.68,
			1.708, 2.412, 1.09, 1.7, 2.43, 3.45, 6.0, 2.01, 2.46, 3.06, 3.39, 2.58,
			3.0, 2.83, 1.82, 1.38, 3.19, 4.97, 4.2, 2.62, 4.46, 1.98, 5.64, 3.39,
			3.444, 1.166, 1.58, 0.89, 3.87, 1.72, 4.17, 2.63, 2.13, 2.79, 2.67, 2.612,
			2.458, 4.77, 3.66, 5.25, 2.76, 4.41, 2.24, 5.08, 1.95, 3.33, 1.89, 3.42,
			4.11, 2.812, 1.208, 2.25, 2.67, 2.757, 1.833, 1.86, 3.54, 4.38, 3.23,
			2.26, 3.45, 4.172, 1.708, 2.16, 1.48, 5.93, 1.561, 2.499, 1.94, 2.5, 4.64,
			0.894, 1.916, 3.48, 3.692, 2.958, 5.879, 0.791, 4.06, 2.13, 3.12, 3.75,
			3.45, 0.6, 2.44, 1.55, 3.75, 2.44, 1.85, 1.78, 4.127, 2.583, 0.916, 2.474,
			3.27, 9.08, 0.904, 4.94, 6.995, 2.041, 1.917, 1.833, 4.88, 2.94, 1.44,
			1.146, 6.224, 2.29, 3.684, 2.666, 1.409, 0.791, 0.499, 4.111, 2.2, 1.95,
			4.05, 3.33, 1.84, 4.04, 4.45, 1.43, 3.48, 1.419, 1.791, 2.38, 2.6, 2.31,
			3.27, 4.05, 1.57, 6.156, 2.624, 2.19, 4.479, 1.291, 2.958, 5.672, 4.95,
			1.74, 2.86, 4.917, 2.333, 2.91, 2.31, 1.91, 3.4, 3.84, 1.959, 2.041, 3.27,
			2.874, 3.126, 5.3, 3.84, 2.97, 3.34, 3.56, 2.13, 3.684, 0.666, 1.99,
			1.134, 2.952, 2.952, 6.396, 1.006, 0.916, 4.034, 3.09, 2.07, 2.73, 2.462,
			1.708, 1.59, 1.59, 3.66, 3.966, 2.124, 2.67, 5.77, 1.08, 0.95, 4.09, 3.36,
			1.98, 3.6, 2.52, 3.13, 4.07, 2.34, 3.42, 2.88, 3.28, 2.09, 1.84, 2.14,
			4.0, 1.51, 3.26, 2.49, 5.25, 6.24, 3.09, 2.22, 4.92, 2.75, 1.39, 4.56,
			2.04, 3.85, 3.17, 3.45, 2.61, 2.37, 2.629, 2.541, 2.36, 5.13, 3.3, 5.46,
			6.474, 1.416, 3.6, 3.21, 7.05, 2.61, 3.1, 2.0, 4.68, 4.18, 2.57, 3.16,
			3.26, 6.36, 2.99, 3.13, 2.325, 6.015, 2.41, 5.315, 2.125, 3.0, 6.09, 3.06,
			1.11, 5.85, 3.07, 3.77, 1.38, 3.78, 1.204, 2.666, 3.36, 0.63, 2.28, 1.88,
			2.2, 3.09, 2.88, 3.86, 3.64, 3.36, 9.75, 3.11, 2.0, 2.88, 3.752, 2.458,
			2.94, 4.53, 5.19, 6.03, 3.0, 5.55, 2.25, 2.88, 3.12, 4.17, 2.6, 4.54,
			2.04, 4.02, 1.81, 3.05, 2.88, 2.526, 4.074, 2.01, 4.98, 2.04, 4.8, 4.38,
			2.975, 2.125, 1.5, 2.52, 3.22, 2.45, 2.37, 2.26, 3.449, 1.791, 3.0, 4.2,
			3.13, 1.88, 3.12, 3.12, 3.06, 2.92, 4.584, 1.916, 6.75, 3.39, 3.37, 2.25,
			4.021, 2.749, 1.333, 3.317, 2.005, 2.135, 4.92, 2.04, 7.58, 3.88, 0.5,
			2.99, 6.58, 1.86, 3.39, 4.46, 5.83, 2.46, 1.291, 3.599, 2.45, 2.02, 2.67,
			5.169, 2.041, 1.55, 5.31, 3.24, 11.69, 4.28, 3.935, 2.745, 2.76, 2.85,
			1.75, 4.67, 4.2, 4.48, 4.4, 5.04, 3.02, 1.03, 2.1, 3.51, 1.71, 5.82, 4.98,
			2.39, 2.21, 3.61, 3.109, 0.963, 2.208, 2.5, 2.179, 2.807, 2.958, 5.536,
			2.01, 2.879, 1.381, 0.579, 2.708, 1.648, 3.645, 1.5, 1.624, 2.936, 0.72,
			5.55, 3.049, 1.541, 3.96, 2.744, 2.416, 3.36, 2.49, 3.66, 4.68, 3.27,
			2.983, 1.256, 2.871, 4.09, 1.29, 2.04, 5.795, 1.885, 1.77, 0.99, 0.7,
			4.27, 1.257, 3.333, 0.78, 4.02, 1.698, 3.282, 7.679, 1.291, 2.651, 0.499,
			5.46, 5.88, 2.88, 4.89, 2.64, 3.45, 3.87, 0.99, 4.21, 8.94, 2.57, 2.55,
			1.86, 3.0, 2.945, 2.875, 0.84, 5.54, 2.83, 2.04, 4.654, 1.916, 4.32, 3.1,
			2.52, 4.46, 2.4, 3.0, 1.99, 3.5, 3.48, 2.79, 1.2, 2.18, 3.38, 3.83, 4.62,
			2.338, 3.352, 5.13, 5.485, 2.485, 1.96, 3.26, 3.56, 3.899, 1.791, 3.06,
			3.49, 2.49, 4.13, 1.75, 3.57, 2.55, 4.34, 3.25, 4.05, 2.16, 1.86, 3.744,
			1.166, 2.15, 2.84, 3.72, 1.47, 2.416, 1.494, 3.04, 2.68, 1.166, 2.644,
			2.1, 5.26, 2.364, 2.416, 1.54, 2.22, 1.709, 3.165, 1.726, 3.31, 1.27,
			4.57, 8.52, 3.99, 2.7, 2.58, 3.07, 2.36, 3.634, 1.916, 2.53, 5.03, 2.13,
			3.76, 3.23, 2.2, 2.982, 1.958, 0.875, 3.385, 0.955, 2.375, 3.87, 1.97,
			3.85, 1.94, 3.516, 1.291, 0.914, 1.828, 1.921, 2.68, 2.129, 2.791, 2.291,
			2.499, 1.0, 3.379, 1.541, 1.007, 1.283, 1.18, 0.84, 4.19, 2.144, 1.916,
			1.98, 2.75, 2.42, 3.02, 3.868, 7.485, 2.487, 3.587, 2.083, 1.32, 0.96,
			5.13, 3.42, 1.47, 2.92, 3.68, 3.21, 6.489, 1.791, 4.21, 5.0, 1.902, 1.458,
			3.23, 1.91, 2.37, 4.17, 6.65, 1.75, 4.2, 2.46, 3.36, 1.32, 1.17, 2.61,
			2.34, 1.62, 2.25, 1.62, 0.958, 2.762, 1.78, 17.65, 2.702, 1.708, 2.083,
			2.327, 3.646, 1.874, 1.68, 1.89, 3.125, 3.265, 3.06, 2.85, 3.145, 3.125,
			0.5, 4.03, 1.95, 2.965, 1.325, 1.29, 1.47, 2.865, 1.875, 3.1, 2.83, 2.76,
			2.01, 2.88, 5.4, 4.01, 1.1, 2.04, 4.35, 1.99, 3.14, 4.016, 1.874, 4.55,
			1.62, 2.28, 2.91, 1.29, 1.95, 4.19, 2.055, 1.875, 5.4, 4.02, 2.76, 7.7,
			3.5, 4.23, 3.072, 0.958, 1.0, 1.62, 3.36, 3.117, 3.083, 4.54, 3.51, 4.35,
			4.02, 1.11, 5.08, 6.692, 1.708, 1.95, 2.208, 3.322, 2.3, 4.52, 1.63, 2.49,
			2.46, 3.12, 4.32, 5.179, 1.791, 6.59, 3.36, 5.17, 3.21, 1.89, 3.15, 5.25,
			6.4, 7.39, 0.819, 1.791, 3.09, 6.27, 3.63, 8.67, 2.46, 2.05, 3.5, 4.8,
			2.829, 2.541, 6.31, 2.66, 3.93, 3.55, 1.62, 0.81, 3.25, 2.57, 9.01, 2.42,
			1.654, 1.916, 4.26, 4.23, 1.931, 4.91, 0.982, 3.137, 5.04, 4.65, 4.05,
			7.92, 4.516, 2.374, 1.24, 2.166, 3.288, 2.166, 1.5, 3.05, 3.63, 1.99,
			3.51, 2.55, 3.937, 1.583, 2.041, 5.279, 3.03, 4.07, 1.06, 1.77, 2.62,
			6.634, 2.416, 4.867, 4.913, 4.32, 3.42, 3.42, 2.79, 1.95, 3.36, 4.26,
			5.769, 2.541, 2.58, 0.62, 3.23, 3.02, 4.59, 2.277, 1.833, 2.29, 4.01,
			4.54, 3.09, 2.07, 3.27, 5.32, 2.72, 1.89, 1.93, 2.78, 2.52, 3.66, 2.43,
			2.55, 2.66, 3.79, 2.25, 3.67, 2.0, 3.69, 4.23, 1.65, 3.81, 2.22, 3.45,
			1.92, 3.24, 3.09, 1.56, 2.1, 6.46, 2.34, 3.87, 2.97, 1.66, 2.71, 2.02,
			6.534, 3.166, 1.01, 4.324, 1.916, 3.48, 4.32, 1.35, 3.15, 5.866, 1.874,
			2.82, 3.03, 4.571, 0.499, 2.61, 2.92, 1.89, 5.4, 1.35, 3.45, 3.84, 6.18,
			4.62, 2.31, 4.12, 3.74, 2.98, 4.46, 4.15, 2.24, 4.26, 3.66, 2.88, 3.99,
			3.54, 2.87, 4.434, 2.416, 4.65, 1.29, 5.04, 3.69, 3.51, 2.94, 4.23, 3.01,
			2.75, 2.04, 2.083, 2.207, 4.026, 2.874, 3.72, 2.24, 2.02, 3.3, 4.56, 1.25,
			4.66, 4.49, 3.486, 2.494, 5.54, 1.03, 1.1, 4.3, 4.34, 2.43, 2.1, 3.96,
			7.02, 4.65, 2.22, 2.79, 2.63, 2.32, 2.74, 3.38, 1.022, 2.458, 1.71, 2.04,
			0.57, 2.4, 2.184, 1.416, 2.34, 4.41, 2.61, 1.8, 2.58, 5.68, 3.74, 2.61,
			4.02, 4.09, 3.17, 5.61, 1.05, 2.257, 2.583, 2.208, 3.512, 1.58, 2.65,
			1.14, 1.14, 3.33, 2.97, 1.89, 3.84, 3.74, 3.0, 3.88, 3.33, 1.53, 2.73,
			3.78, 5.46, 1.92, 4.79, 3.28, 4.11, 3.99, 1.379, 2.041, 1.997, 2.083,
			1.586, 2.874, 3.04, 2.16, 2.61, 3.15, 1.91, 1.75, 3.3, 1.57, 3.35, 3.67,
			3.92, 3.04, 1.73, 1.402, 1.958, 2.96, 4.24, 6.77, 3.83, 0.5, 3.322, 1.958,
			1.583, 2.304, 2.083, 8.37, 2.67, 2.07, 3.72, 4.26, 2.64, 2.37, 2.247,
			1.583, 2.23, 4.13, 2.499, 2.541, 2.85, 3.48, 1.71, 4.132, 1.958, 5.102,
			1.208, 3.65, 2.67, 2.25, 2.25, 1.083, 2.767, 2.574, 1.916, 2.07, 2.91,
			2.55, 3.75, 2.97, 1.17, 3.45, 1.99, 1.041, 2.579, 2.73, 3.96, 4.17, 3.96,
			4.59, 1.32, 4.02, 4.77, 4.29, 1.65, 1.5, 3.25, 1.25, 1.984, 2.666, 2.61,
			4.81, 2.21, 2.13, 2.79, 2.67, 5.349, 2.541, 2.55, 2.52, 3.09, 4.39, 3.23,
			3.51, 2.98, 4.58, 3.136, 1.874, 1.374, 3.036, 2.322, 1.458, 3.56, 2.98,
			3.21, 2.84, 1.96, 3.09, 3.21, 3.45, 4.74, 3.4, 1.34, 2.94, 1.83, 3.06,
			1.425, 2.565, 3.51, 2.32, 3.57, 4.1, 4.47, 2.06, 2.68, 1.92, 6.69, 2.729,
			3.481, 5.91, 3.359, 2.671, 4.329, 3.531, 3.199, 2.291, 2.4, 2.76, 2.979,
			2.691, 3.439, 5.91, 3.181, 5.529, 5.161, 2.009, 3.105, 1.246, 2.84, 3.55,
			4.32, 5.85, 2.419, 5.391, 2.16, 3.64, 2.97, 3.06, 2.71, 5.11, 0.6, 2.04,
			3.14, 1.12, 3.63, 3.56, 3.56, 2.05, 3.69, 4.23, 4.89, 3.78, 1.59, 1.75,
			5.54, 1.635, 2.025, 1.87, 1.01, 2.16, 2.11, 0.91, 4.81, 3.77, 3.156,
			2.874, 3.24, 2.25, 4.23, 1.185, 3.175, 3.68, 2.04, 1.874, 2.196, 2.53,
			2.91, 2.19, 4.65, 3.0, 4.53, 2.37, 2.91, 2.4, 3.66, 2.01, 2.246, 1.624,
			1.75, 3.33, 3.35, 3.36, 6.12, 1.504, 1.916, 6.61, 4.02, 3.8, 1.65, 5.25,
			2.64, 9.908, 1.432, 2.1, 2.97, 3.73, 5.0, 4.99, 2.14, 2.062, 1.458, 6.68,
			1.35, 2.91, 3.26, 2.23, 2.84, 1.75, 7.26, 4.53, 4.17, 4.66, 4.23, 9.45,
			3.0, 2.41, 3.92, 8.07, 0.93, 3.57, 2.41, 3.23, 1.17, 2.97, 2.1, 3.15,
			3.147, 1.833, 1.458, 2.082, 3.22, 1.4, 1.416, 2.804, 3.91, 2.94, 3.9,
			4.78, 0.5, 2.4, 3.33, 3.72, 1.74, 4.59, 3.06, 3.48, 4.86, 2.55, 3.014,
			1.666, 2.99, 5.5, 1.77, 2.072, 2.458, 1.29, 5.94, 3.54, 2.42, 1.73, 3.574,
			3.166, 4.5, 6.919, 2.791, 2.28, 2.291, 3.919, 3.63, 4.169, 2.041, 4.26,
			3.75, 2.02, 3.23, 2.76, 2.55, 3.18, 1.89, 3.66, 2.55, 3.01, 2.45, 2.16,
			2.37, 1.212, 2.208, 8.64, 5.46, 3.03, 5.83, 3.611, 0.499, 4.72, 1.74,
			4.65, 2.49, 5.236, 1.624, 2.5, 2.64, 3.21, 3.75, 2.82, 3.39, 3.6, 3.61,
			1.76, 2.5, 2.01, 3.83, 4.11, 3.45, 3.63, 1.38, 3.72, 4.2, 1.74, 3.45,
			4.32, 3.97, 2.24, 3.39, 2.53, 2.3, 5.35, 3.92, 7.29, 3.12, 4.65, 5.22,
			5.4, 0.686, 3.402, 3.364, 0.708, 3.33, 3.83, 4.21, 5.43, 1.586, 1.624,
			1.92, 1.291, 3.989, 2.82, 0.86, 0.5, 5.482, 1.958, 7.05, 3.45, 1.914,
			2.916, 1.11, 5.4, 3.444, 0.5, 2.892, 2.868, 2.916, 1.249, 5.061, 3.61,
			4.19, 3.28, 2.63, 4.4, 1.76, 2.662, 2.458, 5.26, 1.35, 3.24, 5.35, 4.89,
			4.97, 1.63, 0.5, 2.49, 1.041, 1.449, 2.833, 2.627, 4.024, 2.666, 3.81,
			4.29, 3.64, 4.06, 1.999, 4.383, 3.178, 2.94, 3.816, 2.874, 3.93, 2.28,
			2.22, 4.9, 1.09, 1.74, 2.46, 1.3, 4.61, 1.92, 2.49, 3.15, 3.13, 1.301,
			0.499, 3.04, 2.13, 4.89, 3.96, 3.48, 8.46, 2.67, 3.81, 1.68, 5.44, 3.56,
			5.97, 2.82, 4.014, 2.166, 2.52, 3.48, 2.31, 2.49, 5.19, 2.79, 3.93, 1.83,
			4.35, 1.07, 6.64, 2.37, 1.77, 5.61, 0.81, 3.6, 3.84, 2.34, 3.15, 5.01,
			3.12, 2.52, 3.274, 1.916, 3.69, 4.924, 1.166, 7.28, 2.16, 2.76, 0.81,
			4.95, 1.02, 2.82, 3.1, 3.585, 4.255, 1.38, 3.48, 1.01, 0.5, 0.67, 3.73,
			5.28, 4.5, 2.95, 6.71, 2.88, 2.19, 1.74, 3.0, 2.25, 2.54, 2.32, 3.092,
			2.458, 2.88, 2.67, 5.4, 4.38, 4.17, 3.27, 2.18, 5.05, 2.58, 2.25, 5.1,
			3.46, 3.98, 3.37, 3.05, 1.77, 2.91, 1.95, 1.92, 1.583, 3.997, 4.08, 2.22,
			3.88, 4.02, 2.48, 2.22, 4.81, 2.232, 1.458, 4.17, 2.78, 3.63, 3.66, 3.54,
			2.537, 2.083, 1.5, 2.73, 2.28, 2.875, 1.575, 1.61, 2.98, 4.22, 0.899,
			2.791, 2.43, 5.22, 2.985, 3.885, 2.279, 2.541, 5.41, 2.37, 5.43, 3.09,
			2.64, 2.86, 1.82, 3.24, 5.949, 2.791, 3.38, 2.67, 4.02, 3.34, 0.5, 1.59,
			2.25, 2.75, 1.441
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: All right.",
			"Welcome to GD50.",
			"This is lecture 10.",
			"Today we'll be talking about \"Portal.\"",
			"So \"Portal\" is a very iconic game, I think most of us",
			"have probably seen it before.",
			"The gist is you have a portal gun, a gun that shoots these elliptical portals.",
			"If you look through one, you can effectively",
			"see what is coming out the other one, which is pretty cool, and vise versa.",
			"And then, if you walk in between the portals,",
			"you'll actually be teleported to the other side.",
			"And so, they achieve a lot of really interesting effects",
			"with some pretty cool tricks and stuff.",
			"And actually Valve themselves will be coming",
			"to give a talk on a lot of the technology",
			"that they used on the second.",
			"So we can get a glimpse into their version of \"Portal.\"",
			"My version of \"Portal\" is a bit simpler, but we'll",
			"look at a lot of the same sort of principles",
			"and see how I accomplished a lot of the same things.",
			"So this is also the last lecture of the semester,",
			"and we've covered a lot of ground.",
			"I have a few screenshots here to show some of the games",
			"that we've talked about.",
			"The very first game was \"Pong,\" and we've come sort of a long way.",
			"We have gone through very simple arcadey Atari-like games like this,",
			"and have gone and created worlds effectively.",
			"And now we're in 3D, we're doing all kinds of awesome stuff.",
			"But this was where we started the course.",
			"And it's kind of fun to look back and see where we've come.",
			"So here, we talked about scoring and just effectively drawing shapes",
			"onto the screen, then we transition to \"Flappy Bird\" or \"50 Bird,\"",
			"and we had sprites and characters.",
			"And we talked about scrolling and infinite level procedural generation",
			"type algorithms, and that was fun.",
			"We took things a step higher than that with \"Breakout\"",
			"where we had the same sort of procedural ideas",
			"in the context of a very famous arcade game.",
			"We talked about particle systems and some arcade style",
			"physics and high scores.",
			"Then we went into puzzle games.",
			"We talked about Match Three\" and how to actually calculate",
			"what goes on to determine whether we have gotten a match",
			"and how to clear blocks and how to tween things,",
			"do operations over time, sort of this A synchronicity.",
			"Then we went into probably what is my favorite lecture, which",
			"was \"Super Mario Brothers,\" and we talked",
			"about how to create procedural worlds that all look very different",
			"with some very simple algorithms.",
			"And then we had triggers and events sort of happening.",
			"Then \"Legend of Zelda\" came, and we had this infinite dungeon algorithm.",
			"And we had enemies walking around that we",
			"could use a sword on, so it felt more like an actual action game, action RPG.",
			"Then took a brief look at physics in the context of Box 2D with \"Angry Birds,\"",
			"and I still remember the ball pit example was probably",
			"my favorite part of that.",
			"And then probably the most complicated example of the semester",
			"was \"Pokemon,\" where we actually had a semi full turn based",
			"parallel system, and random encounters, and like a little world where there's",
			"actually two main stages to our world where there was the field",
			"and the battle scene, which is a very common thing to have in RPGs.",
			"Following \"Pokemon,\" which was the most complicated codebase,",
			"we went into Unity, which was our first foray into 3D.",
			"And even though we were just exploring 2.5D,",
			"we still got a chance to look at how does the Unity engine work and how do",
			"we get actual 3D models onto the screen?",
			"And we put together a very simple \"Flappy Bird\" esque game so",
			"that we could sort of recycle prior ideas.",
			"Last week, we looked at \"Dread 50,\" which was sort of a Dreadhall's horror",
			"inspired game where we got to look at lighting",
			"and how to actually transition between scenes and use some basic UI in Unity.",
			"And today, we'll be talking about how to create a game similar to this,",
			"although much simpler.",
			"Today is mostly just a tech demo more than anything else.",
			"But this is a screenshot of the actual game \"Portal.\"",
			"And as you can see, they do a lot of really cool fancy things.",
			"They have a portal on sort of a slope, they",
			"have another portal coming out of the front wall over back there.",
			"There are different colors so you can differentiate between left and right,",
			"orange and blue.",
			"They have sort of this object here on the side,",
			"and I believe that's to shoot cubes out, which this here",
			"is a cube which you can then grab with your gun",
			"and then shoot it through portals and see it come in and out of portals,",
			"which is pretty cool.",
			"And we'll talk today about how to create a simple version of this, primarily",
			"just the aspect of how do I create a portal that looks out of another scene",
			"and see it updating in real time?",
			"And how do I teleport and get back and forth between the portals",
			"and carry a weapon and then shoot a ray that will actually place a portal where",
			"I want to in the game world?",
			"So today, some of the topics we'll talk about.",
			"So one, holding a weapon.",
			"So we've used a first person controller, and this",
			"is a very easy and simple thing to do.",
			"But it helps illustrate what parenting is.",
			"And so we'll talk about that.",
			"Ray casting is the actual shooting out of a ray from your object",
			"to Z direction forward.",
			"So you have an X and a Y, which are sort of the angle at which you're",
			"moving around.",
			"But then you have Z, which if you're using the forward vector",
			"from your character, it's going to be forward in the z-axis",
			"wherever you're looking effectively.",
			"And so that allows us to cast a ray, in that sense, which just means shoot",
			"a straight line, an invisible straight line from that point,",
			"and wherever that point intersects with an object,",
			"we can get some information about that and then do",
			"whatever work we need to do.",
			"In this case, take a portal prefab and just affix it to the wall, basically.",
			"Rotate it from its default position, and then just",
			"put it flat up against the wall.",
			"Texture masking is how we're going to achieve this portal effect, right?",
			"Because when we create what's called a render texture in Unity, which here's",
			"the third bullet, a render texture just means a texture",
			"that we're rendering to with a camera.",
			"So rather than have a texture be an asset in your game, in your hierarchy",
			"with something that you made in Photoshop,",
			"you can actually dynamically create it at runtime",
			"with what the camera is seeing.",
			"And Unity gives this to you for free very easily",
			"with what's called a render texture, which is just another asset type.",
			"And then texture masking is effectively the same thing",
			"as stenciling where we can choose certain pixels of an object to delete.",
			"In this case, we create a texture that's white in the center and then black",
			"around the edges in an elliptical shape.",
			"And what that allows us to do is tell it with a simple shader,",
			"don't render these pixels when you actually render the render texture,",
			"just render the ones in the middle.",
			"And so, that's how we achieve an ellipse, just by effectively",
			"discarding the pixels in the outer rim.",
			"Decals is an idea in 3D games where a decal is just something",
			"that you affix a texture or some object that you affixed to a surface.",
			"In this case, we'll be using decals to act as our portal.",
			"So our portals are actually just going to be decals.",
			"They're just meshes with a render texture affixed to them.",
			"And then all we need to do is just slap them onto a wall whenever we shoot it,",
			"and we get a ray that intersects with the wall.",
			"And that will have the effect of actually making",
			"it look like we're putting a portal on a wall, when in reality, we're",
			"just taking a mesh and we're kind of just like slapping it onto a wall.",
			"Some other examples of decals that you've probably seen in other games",
			"are, for example, bullet holes, which use the same principle.",
			"Teleporting is very easy, although the FPS controller sort",
			"of complicates things a little bit.",
			"So we'll talk about how and about sort of solving the problem of teleporting",
			"in a way that makes sense.",
			"It's usually just as simple as setting something's transforms position",
			"to another transforms position, setting the rotation",
			"to the transforms rotation.",
			"But the FPS controller cashes its rotation data,",
			"so in order to that teleport cleanly you sort of",
			"have to override some default behavior.",
			"And lastly, we'll take a look at some new tools",
			"that Unity has introduced with 2018 0.1 Pro Builder and Pro",
			"Grids, which allow you to actually model geometry in the scene.",
			"And this is what the assignment is going to be focused on.",
			"Because going forward, I foresee it being a major part of modern unity",
			"development and or prototyping.",
			"The ability to model your scene in Unity without needing a third party program",
			"heavily optimizes the actual creation process",
			"and allows you to do easy, what's called,",
			"\"gray boxing,\" meaning create a level in your game engine and then prototype it,",
			"test it, make sure that it's actually game playable right off the bat.",
			"That's called \"gray boxing.\"",
			"But first, let's get a demo.",
			"So does anybody want to come up here and play my implementation of \"Portal?\"",
			"",
			"So James is landlocked.",
			"All right James, you're not landlocked.",
			"Let's go.",
			"",
			"All right, so I'm going to go ahead and set that up.",
			"",
			"And so disclaimer, there's actually a bug in this",
			"as well, so I'm curious to see if you can spot what the bug is.",
			"Go ahead and hit play as soon as you're ready.",
			"And then the mouse on the right will be your angle your portal.",
			"So we see here I have a character with a portal gun created.",
			"So James, if you shoot a wall with the left mouse, that will create a portal.",
			"And then if use the right mouse--",
			"so that's one other bug.",
			"So let's go ahead and restart the program, actually.",
			"",
			"So that's one bug.",
			"And so, if we avoid stepping into a portal that's there--",
			"and this this could be fixed in a couple of ways.",
			"So now you have two portals basically created.",
			"Do you see what's wrong with the portal as it is here, both of these portals",
			"actually?",
			"",
			"Oh actually, no, I'm sorry, these portals are actually completely right.",
			"But walk through them.",
			"And I will show you--",
			"OK, so you can see it works pretty well, right?",
			"You can not only see your character rendering completely or moving",
			"in real time when the other texture, but you can jump through them",
			"or walk through them.",
			"You can jump with spacebar if you want, and that'll",
			"teleport you throughout the other end so you",
			"see from the perspective of the other portal.",
			"But if we try shooting one of the other walls",
			"for instance, like one of these white walls,",
			"you can see something weird happens with this particular wall.",
			"Anything strike you as odd about that portal?",
			"Anybody?",
			"It's upside down.",
			"And so if you walk through it though, it works perfectly fine.",
			"Now the reason that it's upside down, I spent probably like 10, 15 hours",
			"trying to figure out why this is, it's in a state",
			"of what's called \"gimbal lock.\"",
			"So this prefab right here, there's three axis of rotation in 3D space.",
			"And if you perform a rotation in some odd way,",
			"there are these things called oiler angles,",
			"which are your angles of rotation about the x,y and z-axis.",
			"And you can sort of think of them as sort",
			"of being able to rotate interdependently.",
			"But there is a situation in which you can--",
			"for some reason, Unity's internal representation of a rotation",
			"can get messed up by manipulating these angles.",
			"And so, you can actually lock two axes together such",
			"that rotating-- like for example, in this case, it's Z and Y,",
			"they both rotate each other.",
			"And so you're unable to get, in this particular case, the portal to rotate",
			"about the axis that lets it look like its right side up based",
			"on the wall's surface normal.",
			"And so, had I maybe another week, I probably could have debugged it,",
			"but I had to leave it in.",
			"Unfortunately, I ran out of time.",
			"But the interesting thing is if you do shoot that same wall--",
			"so try and shoot that wall, the other wall with--",
			"like put both portal on the buggy wall, so the right wall.",
			"It's only that wall, by the way, for some reason.",
			"So notice that now its right side up.",
			"So if you shoot both portals on the same wall, that buggie wall,",
			"they do get right side up.",
			"And I for the life of me couldn't ascertain exactly as to why.",
			"I know it's gimbal lock.",
			"Unfortunately, I was unable to debug it quite in time.",
			"But every other wall, including the ceiling and the floor,",
			"will work if you shoot a portal up on them.",
			"So you can create one up there, and then you can jump through it.",
			"See how it's looking down, and then it'll put you at the top.",
			"And altogether, minus the weird single wall that gimbal locks the portal,",
			"we have a pretty functional implementation",
			"of a very basic portal game, right?",
			"We have this model here is parenting to the camera.",
			"So it's always going to look in the exact same direction as the camera.",
			"We shoot a ray from the tip of the gun, and then",
			"whenever that ray intersects with a plane, in this case any of these walls,",
			"we get the information about the intersection",
			"and we flip the portal decal so that it's",
			"the same angle as the wall rotation.",
			"And then what happens when we actually collide with one of the portals just",
			"in code if we were to think about how to implement",
			"the behavior that goes on here?",
			"It's transporting the player.",
			"And it's doing effectively setting the player's transformed position",
			"to the same transform position as the portal.",
			"Now, if we do the same thing on the rotation,",
			"the FPS controller's rotation gets a bit skewed",
			"if you mess with it's X and Z rotation, the default controller.",
			"So all we do for now is we just keep those values, the X and Y rotation,",
			"but we just change the Y rotation.",
			"Y rotation is its position in space like this effectively.",
			"So that allows us to get when we jump out of the wall,",
			"we notice that he's flat from it, but if we jump through any of the wall",
			"portals-- so if you create a portal on the wall here,",
			"and then jump through it, you'll notice that you're sort of angled",
			"at the right--",
			"and the reason that it's skewed is because this one is upside down.",
			"And so it's flipping the camera that's rendering the texture",
			"and it's looking a little bit weird.",
			"But when you jump through, it basically keeps your X and Z,",
			"but rotates your Y position so that you come out",
			"looking as if you went straight through the portal, rather than by default,",
			"it has you look back at the portal that you came out of, which is a bit weird.",
			"Or whatever direction you were walking through it",
			"when you went through the portal.",
			"AUDIENCE: How are you getting the mirror [INAUDIBLE] so you can see yourself?",
			"COLTON OGDEN: That's just default because it's a render texture.",
			"So there's a camera actually behind each of these portals.",
			"So the prefab is a mesh with a render texture.",
			"And then behind it, there's a camera.",
			"And so, the camera is rendering in real time what's in front of the portal,",
			"basically, from behind it.",
			"And so it's seeing your model from both of these portals,",
			"both cameras are seeing your model, and so it shows up",
			"in the render texture on the other portal.",
			"So it's effectively like looking at two video cameras instead of a portal.",
			"It's sort of a trick.",
			"And this is a very crude implementation of \"Portal,\"",
			"the actual game uses a much more sophisticated algorithm for--",
			"and it also tracks your position with the camera",
			"so that based on your angle of rotation, you'll",
			"actually see something different on the texture there.",
			"But it's a lot more complicated to put something like that together.",
			"I have some resources that I've included in the lecture in the assignment that",
			"will show you actually how to do that.",
			"But it would take many, many more hours than I had to put this demo together.",
			"AUDIENCE: Yeah, right now it's just fixed.",
			"COLTON OGDEN: Yeah it's fixed.",
			"If you actually look at it from the side,",
			"you'll notice that it's just a flat texture.",
			"There's no perspective.",
			"Ultimately, its perspective.",
			"And there's an awesome video that I'm going",
			"to show later in the slides by a YouTuber named Braxis where he actually",
			"implements a perspective correct shader that allows you to see,",
			"and with camera tracking of the player.",
			"Like both cameras will track the position of the player,",
			"as well as render a texture.",
			"And the result of that is because the cameras are changing their position,",
			"it's sort of like changing the angle at which the scene is",
			"being rendered onto the portal mesh.",
			"But also the way that it's being drawn is a little bit different,",
			"and so he has a really cool shader that does that.",
			"And then Vavle, when they present, they'll",
			"actually show how they went about doing it, which is even more complex,",
			"but it looks really good and is a lot more technically interesting.",
			"But yeah, that's my sort bare bones implementation",
			"of what makes \"Portal\" work.",
			"And it's somewhat fun to walk through these portals",
			"and just sort of play around with it.",
			"Now the reason that if you just walk into a blue portal it doesn't work",
			"is because the portals are actually stored off screen until you use them.",
			"",
			"I'll open up the scene here.",
			"Oh, by the way, thanks James for coming up to demo.",
			"I appreciate it.",
			"So the portals are over here, right?",
			"Both of them are right here.",
			"And so what that does is when you only shoot one of them,",
			"the other one is still out here, so when you walk through it",
			"you end up just teleporting outside the level.",
			"And in order to not have that happen, what you really need to do",
			"is have a flag on both of them that just says",
			"don't teleport unless you've been shot once, right?",
			"And that will prevent that sort of behavior from happening.",
			"Simple fix, but an entertaining one to take a look at.",
			"And that is my crude implementation of \"Portal.\"",
			"It's far from being anywhere near as polished as the actual game.",
			"And there is the slight weird wall that gimbal",
			"locks the portal, which I would like to figure out why exactly that is.",
			"But everything else is sort of in here.",
			"Now, it doesn't include something like shooting blocks through it,",
			"but the same sort of principles would apply",
			"because all we're effectively doing on the portal is saying--",
			"it's basically a trigger, right?",
			"It's got a box collider on it, and it says if I collide with something,",
			"and in this case the player, I want to teleport that collider",
			"to the other portal, which means that the portals sort of have",
			"to link to each other, right?",
			"One portal has to have a reference to the other portal",
			"so that it can say, \"Teleport to the linked portal.\"",
			"And vise versa, the link portal should have a reference",
			"to the other portals that can say, \"Teleport",
			"back if you collide with this.\"",
			"And so, if we have another object-- like say, we shoot a cube into the portal,",
			"it would also get teleported to the other portal, right?",
			"And the other consideration for that is like if its a rigid body",
			"and it has physics applied to it, for example,",
			"let's say its going like 10 on the X and it teleports",
			"to a portal that's perpendicular to it and it's still going 10 to the X,",
			"then as soon as it shoots out the portal,",
			"it's going to go straight left, which isn't the behavior we want.",
			"We want it to go forward.",
			"So linear velocity needs to be calibrated",
			"to go in a different direction.",
			"Didn't have enough time to put a full demo of that together,",
			"but if you were curious, in a nutshell, that's",
			"sort of like what you would need to do in order to implement",
			"some basic physics with \"Portal.\"",
			"So holding a weapon.",
			"Based on this screen shot, can anybody tell me",
			"how they think I went from just a plain FBS controller,",
			"to an FBS controller holding a gun.",
			"AUDIENCE: Can you stick a gun, like one--",
			"do they call it colored pixels-- one unit in front of the camera?",
			"COLTON OGDEN: Yeah.",
			"There's not really a notion necessarily of pixels in 3D space",
			"because that changes depending on your resolution.",
			"But yes, Unity units--",
			"it's effectively equivalent to a meter, and you can change",
			"what it represents in Unity settings.",
			"But yeah.",
			"I mean, it doesn't necessarily have to be one unit.",
			"It can be an arbitrary amount.",
			"And what it really was me going into here with this model.",
			"By the way, I got this model on the Assess Store for free.",
			"So the Assess Store is an awesome place if you're looking",
			"to just quickly prototype your game.",
			"They didn't have any obvious portal gun lookalikes that looked really good.",
			"So I was like, \"Oh, this guns got like the same kind of color.",
			"I'll just choose this.",
			"It's like a sci-fi kind of gun.\"",
			"But as you can see, there's a hierarchy here.",
			"Now, how are we keeping the gun affixed to where the camera is looking,",
			"do we know?",
			"AUDIENCE: You do the same thing as you do with the first person shooter",
			"code is you have the camera follow the gun or vice versa.",
			"COLTON OGDEN: You have the camera follow the gun.",
			"Do you have any guesses to how we're doing?",
			"It's actually a really, really simple thing.",
			"",
			"AUDIENCE: I know i'm doing it, but [INAUDIBLE]",
			"COLTON OGDEN: So all we're doing--",
			"Oh, Steven.",
			"AUDIENCE: I was going to say do you set the cameras to transform",
			"as [INAUDIBLE].",
			"",
			"Do the guns transform with an offset, like in the same direction",
			"but with a position offset?",
			"COLTON OGDEN: Yeah.",
			"Kind of.",
			"Except the guns transform to the cameras transform, but just with an offset.",
			"And that is effectively what we're doing.",
			"And in order to accomplish that, it's really",
			"as simple as just making it a child of that thing.",
			"So this is the first person character controller.",
			"It's got a camera attached to it.",
			"Anything that you make a child of something else,",
			"it's going to have the same transform changes applied to it,",
			"including rotation.",
			"So by making the gun just a child of the first person character, which",
			"is where the camera is here--",
			"first person character, by the way, is just",
			"a subcomponent of the FPS controller, which I renamed",
			"to portal gun FPS controller here.",
			"The portal gun, anytime this first person character",
			"is rotated, which is the camera, so anytime the camera is rotated,",
			"it applies that rotation to the portal gun here, this gun mesh.",
			"And so, that gives you the effect.",
			"So what you do is you start it off in 3D space like this.",
			"You're looking at your game scene, and you have your character.",
			"And then you move your gun object around.",
			"In this case, let's go to layouts two by three.",
			"So you can see it in real time.",
			"This is the game view, this is what it's going to look like on Startup.",
			"I'm going to go over to my editor view here.",
			"And I'm just going to grab the actual gun component here,",
			"the gun object I should say.",
			"Go and position it, and I can just move it, right?",
			"And so this is how you can change where your gun is relative to the camera.",
			"And this is going to affect sort of how it feels, right?",
			"Like I could put it here and it's kind of a little lower, I could put it here,",
			"it feels a little weird obviously because it doesn't have a hand on it.",
			"So it almost looks like a VR game.",
			"And that's kind of what VR games do is they take your hand positions",
			"and then the gun transform is locked to basically where your hand",
			"controllers are.",
			"In this case, all I did was I just positioned it.",
			"I said, \"I like how it looks right here, so I'm just going to do that.\"",
			"And as soon as I make it a child of the first person character, which",
			"is the camera, it's just going to get all the rotations applied to it.",
			"So anytime we make any rotations to the camera, which I'm doing here,",
			"it stays exactly aligned with the camera.",
			"This applies to any operation that you do in Unity",
			"when you make any sort of transform position scale changes.",
			"They all get propagated down the chain.",
			"All the objects that are children of an object that",
			"get transform operations applied to them will have the same transform operations",
			"applied to them.",
			"Sort of like this recursive kind of effect.",
			"Yeah?",
			"AUDIENCE: So if you import the first person controller,",
			"[INAUDIBLE] has jump and moves left and right.",
			"And then you just move your asset, your gun, to be underneath that controller,",
			"it would just follow?",
			"COLTON OGDEN: Correct.",
			"So if you just import the vanilla FPS controller, and then just make the gun.",
			"Specifically, the gun needs to be a child of this, the first person",
			"character bit because that has the camera.",
			"And recall, the camera is what's driving our rotation, right?",
			"Because we're moving the camera's rotation with our mouse.",
			"That is ultimately going to determine how",
			"the transform gets applied to the gun.",
			"But yes.",
			"And so whenever we're doing anything in Unity-- and you'll do a lot of things",
			"where one things movement or scale or rotation should apply to another thing,",
			"just remember that's usually just as easy as making",
			"it a child of something else.",
			"So any other questions as to how we've gone about implementing the weapon?",
			"All right.",
			"So ray casting.",
			"So ray casting is a nice feature that Unity gives you for free.",
			"It's part of the physics sort of name space in Unity.",
			"Part of the scripting API.",
			"And what it allows you to do is effectively",
			"look at from whatever transform you're operating at,",
			"or whatever transform you give it as the source,",
			"so whatever point you give it as the source, you can tell a direction,",
			"give it a vector as a direction.",
			"In this case, what we're doing is we're saying transform.forward.",
			"And transform.forward just means basically",
			"wherever we're looking X and Y, and then straight in the Z direction.",
			"So if you're doing it on a camera, it's always",
			"going to be exactly what you're looking at.",
			"It's always going to be exactly forward on the--",
			"transform.foward on a camera is always going to be like center of the screen",
			"wherever you're looking at.",
			"And so if we cast a ray from the point of our character--",
			"or actually we're doing it from the point of our gun,",
			"to the transform.forward-- like a line going from our player to transform",
			"the forward vector of its character, the forward vector of our camera,",
			"it's going to have the effect of--",
			"we can shoot something, right?",
			"We can create a ray cast and then affix something wherever that ray intersects.",
			"And it'll be at the exact center of our camera view.",
			"Does that make sense?",
			"So you shoot a line from your z-axis, which is your forward vector.",
			"And then based on how you've rotated the camera,",
			"X and Y are the X and Y part of that, and Z is always forward,",
			"that'll let you shoot things or cast rays directly in front of you.",
			"And you can cast rays between any object and from any source point",
			"with any sort of direction you want.",
			"But it's particularly pertinent in the context",
			"of how we've shot it from our gun.",
			"And so here is a screenshot actually of what that looks like.",
			"And so the nice thing about Unity actually",
			"is it has a function called or debug.drawray,",
			"which I'll show you here.",
			"I implemented it in a component called debug ray,",
			"so that you can actually see where a ray is being cast in your scene",
			"and eliminate any ambiguity there.",
			"So you can see draw ray, transform.position, and then",
			"we just say transform.transfromdirection,",
			"vector3.forward, and then times 1,000 just means 1,000 units from that point.",
			"And then color.red.",
			"And so what that will do is-- only in the editor view,",
			"so this doesn't apply in the actual game.",
			"This is just a debug call, debug.drawray.",
			"And so it'll render in this scene up here, just not done here.",
			"So if we hit play, I actually have all the portals",
			"rendering a debug ray from their forward transform and from my gun.",
			"So you can see it there, I'm just doing a debug.drawray",
			"with just transform.foward and using my transform.position as the source point.",
			"And notice that Z arrow.",
			"It's always following the same direction, right?",
			"X and Y are sort of changing the backplanes",
			"sort are like how that's rotated, but Z is always forward, right?",
			"And so that's the ray coming from our gun.",
			"And if we shoot a portal there and there, I have those also set to--",
			"let me pause so I can rotate the view a little bit.",
			"I have those also set to draw a ray from their forward position.",
			"So those are also drawing a ray from what's their transform.foward,",
			"their directional vector.",
			"But yeah, ray casting.",
			"It's pretty easy just to get some pretty simple collision tests this way",
			"with guns, with a lot of different things.",
			"But primarily, you'll see this used for like calculating whether something",
			"is blocking something else.",
			"Like if a car is moving and maybe it detects another car, like in \"Grand",
			"Theft Auto,\" for example.",
			"And your car is driving down the center of the road or something",
			"and it wants to know whether there's a car two units in front of it",
			"or something.",
			"You just cast a ray and see if there's any geometry",
			"there from its forward vector, right?",
			"Transform.position, car.position, and then",
			"get its forward vector, which will be its Z direction.",
			"And then it depends on whether or maybe your game is top down,",
			"maybe it's not your forward vector, maybe it's your Y vector in that case.",
			"But that will effectively give you-- not only that you've got a collision,",
			"but also tell you where the collision is too, which is nice.",
			"And we do that in the portal gun script where we call physics@raycast.",
			"So this is the function, by the way, to actually do the ray cast.",
			"The interesting thing about ray casting in Unity",
			"is that it returns a struct object.",
			"And so, you need to declare this hit object, which",
			"will tell you all the information about the hit, like where",
			"it was, whether it was a hit to begin with,",
			"and what the normal was on the surface that it collided with, so the angle",
			"at which that sort of plane was projecting out.",
			"And then, you call physics@raycast with the position and a transform direction.",
			"And then, you pass in out hit.",
			"So out is interesting because it is sort of C Sharp's way of allowing you",
			"to return multiple values to something.",
			"So out is going to be an object, in this case,",
			"it's going to be our ray cast hit that we declared up here, right?",
			"Which is a struct, which recall is just a collection of variables like in C",
			"or C++.",
			"And out hit just means that normally we pass in these values to the function,",
			"they don't get manipulated, right?",
			"But we pass in this variable as out, which",
			"will allow this function to actually change",
			"the data inside this hit variable.",
			"And so the result of that is hit from this point",
			"forward contains all of the information about the ray",
			"cast that we just triggered.",
			"And when we call mathf.inifity, that just",
			"means ray cast to infinity, which is until forever and ever.",
			"And Unity obviously doesn't check infinitely",
			"whether something is colliding with something, it optimizes the right way.",
			"But you can use that just if you don't want to necessarily specify I",
			"want to check two units or five units or a thousand units front of me.",
			"I want to just check forever and see if it collides",
			"with something in your scene, right?",
			"",
			"And then as you can see here once we have detected a collision,",
			"we play a portal sound, we get the right portal,",
			"and then we set the portal's transform and rotation",
			"based upon the hits point and rotation.",
			"And that's pretty much all that's involved in shooting the gun.",
			"And you can take a look through here if you",
			"want to get a sense of how it works, and maybe explore also",
			"the physics.raycast section of the API just",
			"to understand what exactly it returns and what you can do with it.",
			"But in this case, this is how we're using",
			"it to detect whether we've intersected with the wall.",
			"So it'll intersect with any sort of mesh.",
			"And then when it does, it will tell you exactly how it did.",
			"So that is what ray casting is.",
			"Ray casting has another name for like old school games like \"Wolfenstein.\"",
			"The method of rendering was called ray casting",
			"where you would generate a ray from every pixel of the screen",
			"effectively, although it was mostly just every line of the screen.",
			"And you would just look up and down for everywhere it intersected in the scene,",
			"and then just draw a texture there.",
			"And so that would generate a world that looked 3D,",
			"but you couldn't move up and down because it was always generating",
			"all the rays completely forward.",
			"And so you were locked onto two axis.",
			"But ray casting is different in Unity.",
			"Ray casting is just literally casting a ray",
			"in 3D space versus the sort of 2D space that it was",
			"casting in games like \"Wolfenstein.\"",
			"Here's another screenshot of normals from our portals casting out rays.",
			"And I want to look up and see if I can find a picture of what \"Wolfenstein\"",
			"looked like.",
			"",
			"I'm pretty sure most folks are probably familiar with not the new one.",
			"Yeah, \"Wolfenstein 3D.\"",
			"So this was \"Wolfenstein.\"",
			"So old school, but this sort of ray casting was different.",
			"It would basically shoot rays from every single line of the screen up and down.",
			"And it would detect, based on the level geometry-- which",
			"was very simple level geometry.",
			"It was just basically whether there was a wall there or not, true or false,",
			"kind of like a 2D image.",
			"And it would draw, based on how far away it",
			"was, that particular point of the geometry,",
			"it would just draw pixels from a specific texture at a specific point.",
			"And they had to interpolate where in the texture.",
			"It was a little more complicated.",
			"But in case you see ray casting used in those two different senses--",
			"in the case of old school game engines, in the case",
			"of modern Unity sort of ray casting, that is what is involved in that.",
			"So any questions as to how in a nutshell the ray casting",
			"works in the context of our game here?",
			"AUDIENCE: Are we going to be using the [INAUDIBLE]??",
			"COLTON OGDEN: So unfortunately, no.",
			"The Oculus does not work on Mac.",
			"They do not have Mac support.",
			"And so we were unable to get a version of it working.",
			"We don't have the means to necessarily transport given how much time we had.",
			"Now getting VR working in Unity is actually very easy.",
			"If I recall correctly, I have to just remember the exact menu.",
			"I had sort of anticipated talking about this before.",
			"I think it's player XR settings.",
			"Yeah, that's it is.",
			"So it's incredibly easy.",
			"If you want to do a game in VR in Unity, and you have a PC, out of the box",
			"is very easy just to get it working.",
			"All you need to do is go to Edit Project Settings, and then go to Player.",
			"And then in the XR settings-- so Unity has deamed all of its VR AR stuff",
			"as XR.",
			"And you click Virtual Reality Supported Here.",
			"And you have your Oculus Rift or Vibe or whatever plugged in,",
			"it'll just work with the camera right out of the gate.",
			"So it's pretty easy.",
			"You may have to install drivers on your computer such",
			"that your computer knows that you have an Oculus plugged in,",
			"but assuming that's all set up, your project",
			"is as easy as just clicking this checkbox.",
			"AUDIENCE: Which headsets does this support?",
			"COLTON OGDEN: HoloLens, Oculus Rift, and I'm pretty sure the Vive.",
			"90% sure the Vive.",
			"I'm not 100%, we can Google it though.",
			"Let's see.",
			"Unity 5.",
			"AUDIENCE: Is there a special developer version of those headsets,",
			"or is it [INAUDIBLE]?",
			"",
			"COLTON OGDEN: It looks like it does.",
			"It looks like it definitely does, yeah.",
			"And of course, VR Windows PC is very--",
			"I apologize.",
			"I totally thought going into the course that Oculus worked on a Mac.",
			"But as of even October, they were like it's not going",
			"to work on any MacBook ever released.",
			"So only on a PC, unfortunately.",
			"That said, if you do have a PC, super easy to get working.",
			"And it looks like this is actually a pretty cool tutorial.",
			"I haven't looked at this, but I tend to like Ray--",
			"I don't know if his name is Wenderlich or Wenderlich,",
			"but he makes really good game programming tutorials in general.",
			"So because we're co-incidentally here, if you guys are curious,",
			"I really like this website for basic tutorial stuff.",
			"AUDIENCE: Are there other [INAUDIBLE] coming back?",
			"You have Vive.",
			"COLTON OGDEN: We have Vive.",
			"Well, the thing about Vive is you need to install ceiling mounted cameras",
			"in order for it to work.",
			"So that's kind of out of the equation.",
			"We have the Gear VR, but we would need to export it to mobile and test it.",
			"I didn't anticipate it not working for Mac,",
			"and so it kind of came up a bit late.",
			"And so, it's on me.",
			"I apologize.",
			"But if you are doing a PC game in Oculus and you want some assistance,",
			"I'm happy to help out.",
			"It looks like it's very easy just to get working with the default FPS controller",
			"camera.",
			"So definitely reach out if you're developing Oculus",
			"and need some assistance.",
			"",
			"Maybe for the our next Unity course, we can have a big sort of VR day",
			"where we bring in all the guns.",
			"",
			"But, yeah.",
			"Back to ray casting and what we were just talking about.",
			"Shooting a ray on your z-axis based on your rotation, get information from it,",
			"and then sort of what we do is we flip the portal",
			"based on the hit.rotation of the surface that we collided with.",
			"And that's effectively all the ray casting that we",
			"need to worry about for \"Portal.\"",
			"But the actual making of \"Portal\" is probably the most interesting part",
			"of this whole project.",
			"And so let's go ahead and go back into present mode.",
			"So a rendered texture is the fundamental way at which we go about doing it.",
			"And there are various ways to accomplish doing",
			"it, some that are more technically challenging",
			"and look a lot nicer than others.",
			"I did a sort of simple version of it just",
			"to get to a proof of concept out of the gate.",
			"But Unity makes it really easy just to get a simple render texture up",
			"and running.",
			"So a rendered texture is, recall, just a texture in Unity.",
			"So it's an asset, it's an Unity asset that you can create.",
			"The difference between a rendered texture",
			"and a texture that you might have imported from like Photoshop or Gimp,",
			"is that a rendered texture can be rendered to.",
			"And typically, this is used for things like cameras being rendered to it.",
			"Although, from what I understand, you can render anything to it.",
			"So you can create procedural textures this way as well.",
			"But in this example here, we're essentially",
			"creating a screen into which we're looking",
			"at the viewpoint of our other portal, right?",
			"From its forward direction.",
			"So we can see what it will look like once we walk out of the portal",
			"and go into the next area.",
			"So I have some in the slides, if you want to download the slides.",
			"They're here.",
			"You can see exactly how to create a render texture,",
			"so literally just create and then render texture that creates a render texture.",
			"These are the settings that I used for the actual render texture.",
			"So what would happen, do we think, if we use like a low res render",
			"texture, just logically?",
			"",
			"Or let's say my rendered texture was like 200 pixels by 200 pixels?",
			"And the resolution of our game is like 10 EDP?",
			"AUDIENCE: Will that just be blown up?",
			"COLTON OGDEN: It won't be blown up because what",
			"we're doing is we're taking a mesh, and we're affixing the texture to it.",
			"So it'll just scale to fill the mesh.",
			"But what will it look like when it's rendered?",
			"Because it's rendering a 200 pixel texture.",
			"",
			"It'll apixelate it, it'll look really nasty.",
			"And so in order to fix that problem, typically what you'll",
			"do-- a smart way to do it, would be to dynamically figure out at runtime",
			"what's the resolution of your game, right?",
			"If it's going to be rendered in various resolutions up to 4K,",
			"maybe down to 720p.",
			"And then create a render texture that is the size of your game.",
			"And then by doing that, it will ensure that no matter what your resolution is,",
			"it will always be 1:1 pixel ratio, even if you're right up close to it, right?",
			"It will fill up your whole screen.",
			"In this case, we went for a simpler method",
			"so we didn't have to do any dynamic instantiation of the rendered texture,",
			"which you can absolutely do.",
			"And it is the more robust way to do it.",
			"But in this case, I just chose 1024x1024,",
			"figuring that that was going to be good enough for demonstration purposes.",
			"And most of these other settings--",
			"I believe actually all these other settings are completely",
			"default render texture settings.",
			"The only ones that changed were this is 256x256 by default,",
			"and it just looks really pixelated and nasty, especially when",
			"you're right up close to it.",
			"",
			"And then all we need to do--",
			"so once we've created a rendered texture in our scene, in our assets--",
			"so here, I'm going to go to textures.",
			"This is where I'm showing all my textures, whether they're",
			"rendered textures or not.",
			"I have these two render textures here.",
			"And so, these are by default, they're not",
			"going to be mapped to anything because they're just empty rendered textures.",
			"We've effectively allocated them and said",
			"something will be rendering to these later, but for now they're just empty,",
			"there's placeholders, right?",
			"They're like blank screens, but the TV hasn't been turned on yet.",
			"In order to actually render to them, we go into whatever camera",
			"we want to render it to, render to the render texture.",
			"Because we're effectively taking these render textures,",
			"and we're rendering a camera view onto them, right?",
			"Each of the portals has a camera behind it looking out from it.",
			"And so we want to take that camera's view,",
			"and we want to render that onto the other portal's face.",
			"The other portal's render texture, the texture",
			"that we're going to put onto it.",
			"And so, all we need to do is say, \"Here's my orange portal.",
			"I have my camera here.",
			"Every camera has a target texture just right out the gate.\"",
			"So you can just say, \"OK, I'm going to take my orange portal texture,",
			"my render texture that has been instantiated",
			"so it knows that it's going to be able to receive an input source.",
			"And I'm going to just click and drag it there.\"",
			"And it's that simple.",
			"Now whenever you run the game, you'll notice that your render texture",
			"updates.",
			"I'm not sure if it updates in real time in the inspector,",
			"but it renders if you're showing it on to a--",
			"yeah, it doesn't render in the inspector,",
			"but it will update if you affix it to any other surface.",
			"And so, what we're doing is we're affixing it",
			"to the meshes that are associated with each portal.",
			"James, did you have a question?",
			"AUDIENCE: Yeah.",
			"How did you make the texture?",
			"COLTON OGDEN: Oh sure, the render texture?",
			"So I just right click, and then I go to create,",
			"and then to render texture right here.",
			"And that will give you most of the settings that you need to get up",
			"and running with it, and you can assign it to a camera.",
			"But the important thing is do consider your resolution",
			"for your render texture.",
			"Make sure that it's high enough so that your game won't look pixelated when",
			"you're looking at it pretty close up.",
			"AUDIENCE: So it's as easy as that?",
			"You just make the texture and then drag the camera?",
			"COLTON OGDEN: Yup.",
			"Yup.",
			"And what that will do is create a link between the two",
			"so that anything the camera sees, it's no longer",
			"going to be rendering to the scene or anything",
			"like, it's just going to render to the texture.",
			"And actually, I think you can run it to the scene and the texture,",
			"but these aren't rendering to the scene at all.",
			"The only one rendering to the scene is the first person character",
			"because it's the default camera, main camera.",
			"AUDIENCE: What happens if you set the resolution to [INAUDIBLE]",
			"COLTON OGDEN: If it's too high of a resolution,",
			"it's just going to compress to fit the mesh, whatever it's affixed to.",
			"And you'll probably run into performance problems.",
			"But it's not going to break.",
			"Yeah.",
			"Because your resolution doesn't really have an effect necessarily on whatever",
			"is in your game world, and that doesn't cause any issues.",
			"It gets interpolated.",
			"Unity will just calculate how to render it to the screen, right?",
			"",
			"Game textures, generally, are very high resolution,",
			"like 4K textures are often used, even if you're running your game in 1080p.",
			"And a game engine will probably optimize it",
			"and down sampled the texture so that it is like actually a 1080p texture.",
			"And you're not trying to calculate more, draw more than you need to.",
			"But Unity will figure that out for you.",
			"You don't have to worry about that.",
			"",
			"But yeah, that's what a render texture is.",
			"And that's how we are creating this illusion.",
			"Remember, everything in the game is an illusion.",
			"In this case, because the textures are flat",
			"and there's no perspective correction, you",
			"can see that it's a texture, even if it is slightly convincing from far away.",
			"Like from far away it actually kind of looks--",
			"I mean, I don't know if it necessarily looks real.",
			"I mean, it kind of does, right?",
			"From here, it's hard to tell.",
			"And from here it kind of looks like we're going into another room, right?",
			"I go like that-- well, that's the broken wall.",
			"When I go like that, right?",
			"There's a portal there, and it kind of looks like it's",
			"a real room that we're walking through.",
			"It's just a resolution.",
			"But all we're doing is we're just drawing a camera's view",
			"onto that texture in real time.",
			"And if you notice, when we move, we can see the gun.",
			"So we can see that it's rendering it in real time.",
			"And that's the power of a render texture.",
			"And this will allow you to do all kinds of things.",
			"You can have like TV screens in your game",
			"that are rendering another part of your scene.",
			"Obviously an example like this where you have",
			"a portal looking into another area.",
			"Now if you apply a perspective correction",
			"to this whereby your camera actually tracks where your player's position is",
			"relative to the portal, you can accomplish a much more believable look.",
			"And you can actually make it seem as if you're looking into another area",
			"because the camera is literally moving with your player.",
			"So the cameras-- like the stuff that it's capturing",
			"is going to be changing in real time, not only just your character's model,",
			"right?",
			"The actual angle is going to change and therefore, be perspective correct.",
			"And there's an awesome tutorial that I'm going",
			"to link to in the slides that'll show you how to go about doing that.",
			"And it's really awesome.",
			"And so this is what it ends up looking like.",
			"This is actually before I changed--",
			"one of the portals had a slightly offset camera angle.",
			"So you can see here this is like a little bit",
			"higher than this one is, even though they should be exactly the same.",
			"But it's fixed now.",
			"So texture masking-- oh, any questions about any of that",
			"process before we talk about texture masking?",
			"",
			"OK, so texture masking is basically the process.",
			"So if we just take a plane and we put a render texture onto it,",
			"that's what it looks like.",
			"It just looks like it's just a square.",
			"And this could work fine if you want sort of a square portal look,",
			"you don't have to do any extra work.",
			"But if you want a circle, you can't really",
			"create like a circle shaped plain object, that doesn't really exist.",
			"And even if it did, it wouldn't be efficient,",
			"especially if you want a very smooth plane because everything",
			"is triangles and polygons, right?",
			"So if you have a circle, it's going to be",
			"a bunch of these fanned out polygons, especially very high res",
			"circle like one of these.",
			"That's a very high res circle.",
			"Making a polygon that looks like that is not an optimal way",
			"to go about solving that problem, right?",
			"The much more optimal way to go about solving",
			"that problem would be to designate certain pixels of some texture",
			"as being pixels that we want to read, and then certain other pixels",
			"being not pixels that we want to read.",
			"And therefore, produce the final image that gets put onto a geometry, right?",
			"And so, what we end up doing is creating an image first.",
			"So it's this image, which is kind of hard to see,",
			"but it's just a simple sort of--",
			"can you see from there?",
			"Yeah, you can.",
			"So it's just a simple oval, right?",
			"It's the exact shape that we want our portal to look like.",
			"And the pixels that are white are the pixels that we're going to render,",
			"and the pixels that are black are the pixels that we don't want to render.",
			"We want to consider those as pure zero alpha effectively.",
			"And using a awesome shader that you can get",
			"for free just easily on the Unity web page-- this is just a masking shader.",
			"And I'm not great at writing shaders, but what this does",
			"is turns lighting off.",
			"First of all, what happens if we have lighting applied to our portals?",
			"",
			"It's going to look a little weird, right?",
			"You're going to get shadows cast on your portals",
			"and that doesn't make sense because we're effectively",
			"supposed to be looking into another place, another area.",
			"So we have shadows that are being cast onto our thing,",
			"we're effectively like almost seeing like a glass door on our portal, right?",
			"It sort of breaks the illusion.",
			"So lighting should be off.",
			"A lot of these things I'm not 100% on because I'm not",
			"great at writing shaders, but it's a very simple, easy shader",
			"that you can grab off of the Unity web page.",
			"I think I clipped the url here at the very bottom.",
			"But I grabbed it off of the Unity web page.",
			"And all it does is it adds onto your material this second image here,",
			"and it gets blown up a little bit because Unity makes any texture",
			"that you apply to basically any texture you",
			"put into like an image selector will get made into a square shape.",
			"And our image is not square shaped.",
			"But what this does is when you pass in this image, which",
			"is called a coaling mask, it will basically combine the two images",
			"and then cancel out any of the pixels that are black on this.",
			"It'll effectively add the black and white to the alpha of the texture",
			"pixels, right?",
			"So you can actually make some of these gray",
			"and then they'll have the effect of sort of making it half transparent.",
			"But in this case, I only went with full transparent and full hard 255 alpha.",
			"So we get sort of a crisp outline for our portals.",
			"And that's how you end up putting together a basic sort of oval shape",
			"on something that is just a flat mesh.",
			"And you can do this with anything.",
			"Anytime you need to take away a detail that",
			"would make making a mesh extremely difficult or doing really cool effects,",
			"it's often just a lot easier to create a mask for it",
			"and then use the right shader that's meant to have that mask.",
			"And then just manipulate that however you need to.",
			"And again, the link here for the shader is here.",
			"And then you can use this for pretty much anything you want.",
			"End result of that is we go from having a square portal",
			"to an elliptical portal.",
			"So pretty nice.",
			"",
			"I didn't have to use a plane, but it doesn't really",
			"make sense to use anything else because using a cube would create depth.",
			"We don't want the portal to have any depth, really.",
			"It's just should be a flat surface.",
			"And then when we go through it, it should just",
			"teleport us to the other surface to make it look sort of seamless.",
			"I don't think there's any other choice of geometry that",
			"makes sense for this use case.",
			"AUDIENCE: You wouldn't just make a cylinder flat and have [INAUDIBLE]",
			"project on it?",
			"COLTON OGDEN: No, I probably wouldn't.",
			"To make a cylinder flat and project it and have no depth on it,",
			"you would be able to still see the rings on it.",
			"And also texturing that is a little bit more complicated",
			"because you'd have to UV map both your mask and your regular texture",
			"onto that because by default it's going to wrap it weird.",
			"This is just a plane, so whatever you texture map onto it",
			"is going to be completely flat.",
			"But a cylinder is going to wrap it around all sides,",
			"and it's going to look a little bit funky.",
			"I suppose in theory you could use a cylinder for it,",
			"but I think would be a tremendous amount of work.",
			"I don't think it would be anywhere near as easy as getting it to work",
			"with just a flat plane or a mesh.",
			"Interesting idea, though.",
			"I guess you could theoretically create a cylinder",
			"if you wanted to like a bridge between two worlds",
			"and have one end be one portal and one end be another portal",
			"and then be able to walk between them.",
			"That's a cool idea, maybe you can make that work.",
			"But I think for this, the plane is the right way to go.",
			"Any more questions as to how that works?",
			"",
			"All right.",
			"So we'll talk about teleporting now.",
			"So teleporting is pretty easy.",
			"All we really need to do is just create a mesh collider",
			"on the portal mesh, the orange portal and the blue portal.",
			"And then that mesh collider is a trigger and it",
			"detects a collision with something else, we can just define on trigger, enter.",
			"And then with that, we can teleport the collider",
			"other to the other portals location.",
			"So every portal, this is the portal component,",
			"it has a linked portal because we need to know where to teleport",
			"the player to the other portal.",
			"So we need to have a reference to its transform.",
			"Whether it's active because if we allow ourselves",
			"to teleport to another portal and another portal back and forth",
			"without any restraints, what do you think is going to happen?",
			"",
			"Infinite loop.",
			"We just get an infinite sort of weird flickering effect.",
			"So you need to effectively have a toggle switch on both portals",
			"and say as soon as I enter a portal, I should not",
			"be able to teleport back into it.",
			"And as soon as I teleport to another portal,",
			"I should not be able to teleport into it either.",
			"But once you exit the portal, you should be able to teleport back into it.",
			"And so, what that effectively does is we enter a portal,",
			"it gets flagged as not teleportable.",
			"We get teleported to the other portal.",
			"As soon as that happens, this portal can now be teleported into,",
			"this portal that we're standing in is now flagged as not teleportable.",
			"And then we walk out of it and we're allowed to teleport back",
			"into that one and the other one.",
			"So there's effectively an on off operation",
			"that you have to balance appropriately.",
			"The actual \"Portal\" game is a little more complicated",
			"because they allow you to walk in between portals.",
			"This does not go into that level of detail,",
			"and it's a more complicated problem to solve.",
			"This example just assumes that you walk into a portal,",
			"you can teleport it out the other end, and there's no in-between state.",
			"And actually, if you're in-between two portals,",
			"there's a replication of geometry, which Valve will talk about in their talk",
			"as well, which I think will be very interesting.",
			"Because if you look into another portal while you're in the middle of a portal,",
			"you want to be able to see yourself in that portal,",
			"halfway in and out of that portal.",
			"So there is a lot of interesting considerations",
			"for getting very believable portal systems,",
			"but ours is a very simple illustration.",
			"And so, this toggle function is all that I",
			"have to toggle the function's on and off capability.",
			"And all it is just portal active is not portal active,",
			"and that just flips that flag.",
			"It's super easy.",
			"On trigger enter, we effectively cash our position x on the x and z-axis,",
			"so we don't rotate it because when we rotate our x",
			"and z on the first person controller by default,",
			"it causes some really weird buggy behavior based on the way",
			"that the FPS controller works.",
			"So all I do is I just cast those positions,",
			"and then make a rotation on the y-axis.",
			"And that'll save us that weird going topsy turvy effect that you'll get.",
			"If you use the FPS controller by default and you do perform rotations on it,",
			"you'll notice this.",
			"So I haven't had the time to dig in depth as to how to fix it,",
			"but this is the way that I was able to fix it.",
			"For this example, at least, only allow yourself",
			"to rotate on the y direction, which is where you're looking relative",
			"to the ground plane.",
			"And that will allow us to rotate based on where",
			"we're exiting the portal, at least on the walls that are going up and down",
			"and then have that sort of believable effect.",
			"It doesn't allow us to jump down into a portal from up above",
			"and see us coming down from the other portal, which",
			"is a cool effect unfortunately, but it does allow us of to get most of the way",
			"there.",
			"",
			"And so, we set our position to the other portal's position",
			"and our rotation, but only the y.",
			"We get the y, and then we said it here using euler angles on our players",
			"transform.",
			"And then there's a function that I created",
			"called mouse reset, which effectively just calls init again",
			"on the FPS controller's rotation on the camera and the player.",
			"And then, that's sort of like the hack that you need in order to--",
			"the reason that a lot of the weirdness exists",
			"is because the player controller cashes its rotation information.",
			"And so if you perform a rotation on your FPS controller",
			"by hand as opposed to allowing it to happen with the mouse,",
			"it will immediately reset it back to its prior position and rotation.",
			"Which has the effect of when we teleport from one portal to another--",
			"even though we set our direction of rotation",
			"to be outside going in the direction of where the portal is facing,",
			"we end up having the same rotation that we did entering the portal.",
			"So we end up coming out of portals often just backwards.",
			"And so, that's just a limitation of the first person controller,",
			"but you can fix that by calling mouse reset, which is a function that",
			"essentially just calls init again.",
			"Which init is part of the FPS controller's mouse look object.",
			"I won't go too much into detail about it just because it's",
			"a little bit arcane and the source codes in there if you want to take a look",
			"and dabble with it.",
			"But effectively, preventing it from caching its rotation information",
			"and just hard setting it, and then recalling the mouse",
			"look init function, which does the actual setting of the rotation",
			"on the camera and the player.",
			"A little bit weird, but that's Unity's FPS controller,",
			"and that's how other people are saying to fix it.",
			"So you could roll your own, you can create your own FPS controller",
			"and probably prevent this from happening.",
			"But if you want to use the regular FPS controller,",
			"that's the limitation there.",
			"But it's mostly working and it looks pretty good.",
			"Some more time on it, and we could probably make it look even better.",
			"But for now, I think it's good.",
			"So that's teleporting.",
			"Set your position, and then set your y rotation,",
			"override the FPS controller's default rotation caching,",
			"and we can walk in this portal and then instantly walk out this portal.",
			"And that's what we see.",
			"So any questions as to how sort of this works in a nutshell?",
			"Or maybe any of the code here in our portal?",
			"",
			"All right.",
			"So a much better version of the portal, at least from the rendering side,",
			"is this video here.",
			"So it's Braxis.",
			"So good he explains things very well.",
			"He's got a very high quality to his videos.",
			"He creates a bunch of Unity tutorials.",
			"And in this case, he created a portal that",
			"used an interesting shader that will only",
			"render everything but geometry and also onto a plane, in which case this plane.",
			"And does the camera interpolation of the player that I alluded to before,",
			"which allows us to actually have--",
			"so these are two separate worlds in tandem right now.",
			"So there's this red world here, and then this camera",
			"is looking at a completely different green world that's",
			"completely set off in the distance.",
			"That's the exact same geometry, but completely colored green",
			"as opposed to red.",
			"And if you look through here, it's just completely seamless",
			"and the walk through is completely seamless.",
			"And he goes into detail as to how he accomplished all of this,",
			"if you're curious.",
			"And he provides you the shader that you can use for free.",
			"So definitely check that out if that's of interest.",
			"There's a link there in the video.",
			"And here's a link to his YouTube series.",
			"I put some of these in the slack because somebody requested some AI videos.",
			"And he has a bunch of different AI videos",
			"and a bunch of other really cool series.",
			"So you can take a look at that, if curious.",
			"And the best version of \"Portal\" obviously is the portal itself.",
			"And Dave Kircher and Tejeev Kohli are employees involved at Valve",
			"who worked on \"Portal,\" and they'll be here on May 2",
			"to give a talk as to all of the technical sort of things that",
			"went behind the scenes and related to rendering and physics",
			"and just getting a believable and good feeling",
			"experience with \"Portal\" for the actual polished final game",
			"that we're talking about.",
			"So definitely come to that talk if you're curious.",
			"We're going to take a break, and then as soon as we come back,",
			"we're going to talk a little bit about some new tools",
			"that Unity has released called ProBuilder and ProGrids.",
			"And we'll talk about the assignment.",
			"And that will be it for GD 50.",
			"All right, welcome back.",
			"This is Lecture 10.",
			"So we talked about \"Portal\" before the break, we talked about ray casting.",
			"We talked about render textures, what those are,",
			"how easy it is to make those in Unity.",
			"We talked about how to give our first person controller a gun",
			"so that we could actually look around and look as if we're holding a weapon.",
			"We talked about the portals themselves, how we're masking out the render",
			"texture as applied to a plane, and how each of those has a camera behind it",
			"so that it can render what is going out from the portal in the direction",
			"that it's facing.",
			"We're going to deviate from \"Portal\" now, and talk",
			"about ProBuilder and ProGrids, which are two tools that",
			"are part of the new Unity 2018.1 which will allow us to actually model",
			"geometry per the screenshot.",
			"This is actually a level that I created and that is in the Distro.",
			"It will allow us to create geometry in the actual scene view",
			"without needing to go into a third party program like Blender or Maya,",
			"and have to sort of alternate between the two and import and export",
			"incessantly.",
			"Not only that, but as soon as you model something",
			"like this in Unity in the scene view, you",
			"can immediately test it for gameplay and make sure",
			"that it actually fits what you want.",
			"And you don't have to worry about scale issues when you are importing",
			"and sort of making it work, and figuring out ultimately that, \"Oh,",
			"I don't like the way this mesh this level is.",
			"Let me go and tweak it and redo it.\"",
			"It just allows you a ton of ease and flexibility.",
			"And I previously mentioned Braxis before,",
			"but he's got a couple of awesome tutorials",
			"here on ProBuilder and ProGrids to supplement sort of what",
			"we'll talk about today in lecture.",
			"But if you want sort of more of a showcase of all the features of both,",
			"then you can look at these videos here and get a sense of how they work.",
			"So we're going to go ahead and just mess around with pro builder a little bit",
			"here in the scene view so that we can see what it looks like.",
			"I'm going to open up my other scene.",
			"So I have the \"Portal\" scene.",
			"If you are in the Distro, this is where all the",
			"stuff that we've been looking at exists, just the \"Portal\" game.",
			"There's a ProBuilder scene as well, which I'm going to not save that.",
			"And so this ProBuilder scene is the level geometry that I created earlier.",
			"Now it looks pretty horrendous because I didn't spend a terrible amount of time",
			"on it.",
			"And I'm not a particularly talented visual designer by any stretch.",
			"Let me go ahead and make it a little bit larger",
			"so that we can see it a little better.",
			"",
			"But it showcases some of the interesting features.",
			"So we have obviously polygonal square shaped rectangular geometry.",
			"We can see that some faces are textured and some aren't.",
			"So we can see this face here, for example,",
			"is just white material, the default material.",
			"We can see that all of these have this brick texture, which I got off",
			"a procedural generator website that allows",
			"you to choose a good template for your texture",
			"and then specify colors and stuff like that.",
			"I did the same thing for this texture.",
			"This is another procedural texture, which",
			"is kind of like a blue, marbley type texture.",
			"The cool thing about it is-- at least for texturing,",
			"you can just choose arbitrary faces that you want to texture,",
			"rather than have to texture the whole thing like you",
			"would do if you were to just give a mesh a default material,",
			"it'll apply to the whole mesh.",
			"In this case, it's just applying it to whatever faces we select in ProBuilder.",
			"Another interesting thing, which I really like,",
			"is ProBuilder gives you a lot of tools for creating special kinds of geometry",
			"very quickly and efficiently.",
			"In this case, this is a staircase, which all I had to do",
			"was with ProBuilder select build staircase,",
			"and then you can choose a lot of different parameters.",
			"We'll take a look at how to do that in a second.",
			"I did the same thing here.",
			"So notice this staircase has kind of a spiral to it.",
			"And then this staircase is really tall, but has no spiral.",
			"And then we have another staircase here, which",
			"is kind of shorter and doesn't have a spiral,",
			"and then it ends up coming up here to this point.",
			"And then if this were the assignment, maybe",
			"this spot here would be where you put your collider that",
			"says, \"OH, this the level's conclusion.",
			"You've been in the level.\"",
			"So the assignment is with ProBuilder, make a level.",
			"It doesn't have to be anything terribly fancy.",
			"I'm not a great designer.",
			"But it should have at least one section where",
			"you're required to jump, so some sort of jump puzzle",
			"just so that you can think about the design of your level a little bit.",
			"And it should be meaningfully large, it doesn't have to be gargantuan.",
			"And it shouldn't be small, it shouldn't be 10 meters or--",
			"maybe not 10 meters, but it shouldn't be like five meters large.",
			"Obviously, that's very small.",
			"It should be something that you would consider a somewhat sizable level.",
			"Using something of this size is a fair metric.",
			"So ProBuilder-- so by default, ProBuilder",
			"is not installed in your project.",
			"You have to go to the Asset Store.",
			"I don't know, Asset Store has been a little bit slow last couple of days.",
			"Let's see if it works quickly.",
			"It looks like it is.",
			"So if we go to the Asset Store and open-- it's connecting again,",
			"it's being slow.",
			"So if you search for assets and just type ProBuilder, it will pop up here.",
			"And notice that it says Unity technologies.",
			"Anything basically that says Unity technologies",
			"will be a free sort of supplement to Unity",
			"that you can easily just import from the Asset Store.",
			"Now it's a little bit cramped the window here, because I'm in a 720p monitor.",
			"But you just have to click Download, and then Import in order",
			"to import it into your project.",
			"The Distro for \"Portal\" for assignment 10",
			"already has ProBuilder and ProGrids installed.",
			"ProGrids would be the exact same process, just ProGrids right here.",
			"And when you import both of those into your project,",
			"you'll immediately have the ability to go up to Tools.",
			"And you'll see ProBuilder and ProGrids here.",
			"And all you need to do is click on the ProBuilder and then ProBuilder window.",
			"And you can see here this nice little widget filled window pops up,",
			"and you can also dock it here if you want to.",
			"Actually, I did that on accident.",
			"But Unity makes it pretty nice so you can dock",
			"your stuff wherever you want it to.",
			"And there's a few different things.",
			"So you can do new shape and a new poly-shape.",
			"The new shape actually gives you shape templates.",
			"So here, I have chosen just cube by default,",
			"and it allows you to do stairs, prisms, cylinder.",
			"So I can just do a stair, for example, and then",
			"we immediately see this stair mesh here.",
			"I can generate the number of steps that I want just by changing the slider.",
			"I can change the curvature if I want, so that it's a rotating staircase.",
			"And then I can also change how wide and how tall the stairs are,",
			"and also this inner radius is like how deep the steps are,",
			"if that makes sense.",
			"And then all of these together, once you've finished,",
			"you just hit build stair, and it's done.",
			"Now you have a stair mesh that you can just put anywhere in your level,",
			"and it's that easy to make stairs.",
			"",
			"Before I get into more of what makes ProBuilder, work,",
			"I'm going to go ahead and enable ProGrids.",
			"So ProGrids is a cool feature.",
			"It's a cool add on, which will actually lock everything in your scene",
			"to a specific grid which you can designate based on how fine or coarse",
			"you want the grid to be.",
			"And what that will allow us to do is when I move,",
			"notice that it's moving on the grid.",
			"It's not moving in a continuous motion, it's actually discrete steps.",
			"And the advantage of doing things this way",
			"is that when you're modeling your level or whatnot--",
			"let's say you have maybe a diagram or a drawing that you've created.",
			"You slap it on a texture, a flat mesh in your scene,",
			"and then you just sort of draw your level on top of it,",
			"everything will map up nice and cleanly when you're creating all your geometry.",
			"And you can snap things together and it will align all on the same axis.",
			"And it makes creating levels like this just a lot easier.",
			"You don't have to worry about things being slightly off",
			"and then like missing vertices and everything",
			"be looking a little bit unclean.",
			"This ensures that everything is very clean.",
			"So again, just notice the discrete steps that it's moving.",
			"These are all locked to the grid here.",
			"And so you can change all the settings here as to how large it is.",
			"If I create a cube.",
			"So I'm going to go ahead and create a new cube and build it.",
			"Notice up here these four buttons are like the modes with which",
			"we can interact with our cube.",
			"And this is very similar to what you get in 3D software, like Blender,",
			"Maya, whatnot.",
			"You choose vertices with the left mouse, and then you",
			"can hit shift to select multiple, and then you can just move it.",
			"And since I'm using ProGrids, it's snapping it to the grid, right?",
			"So if I turn off ProGrids, it should just be continuous like that.",
			"And so, you can get whatever sort of angles",
			"you want depending on what your use case is.",
			"So I'm going to go ahead and hit Command Z.",
			"If I click on the face mode and I click this face and I shift click,",
			"it'll actually extrude it and make a new face.",
			"And I can keep doing this over and over again.",
			"Let me zoom out a little bit so I can see a little bit better.",
			"And I extrude that, and then I extrude that.",
			"Right?",
			"Starting to build something.",
			"It's not beautiful, but it's something.",
			"I can extrude that again.",
			"",
			"I believe I can scale as well.",
			"So you can build it out like that.",
			"And I haven't spent a ton of time mastering",
			"how to use that tool and all the ins and outs of it, but it is very,",
			"I think, useful if you're looking to get into level design",
			"and you want to avoid the overhead of dealing with third party",
			"software like Blender or Maya and having model files that you're",
			"importing and exporting.",
			"It can be kind of a pain.",
			"However, if you want to export models, you can definitely do that.",
			"There is a method here--",
			"I forget which one it is off hand.",
			"I think it's this one.",
			"No.",
			"One of these allows you to save the model.",
			"I don't remember exactly which one it is.",
			"Is it this one?",
			"",
			"The menu is a little bit cramped here, so I'm going to actually blow it up.",
			"",
			"Offhand, I can't recall which of these allows you to actually export.",
			"I don't have the icons memorized yet because it's a fairly new tool.",
			"But one of these will allow you to actually export",
			"the object as FBX or OBJ, whatever your software is",
			"that you end up wanting to--",
			"",
			"so you can just also go up to here to the export menu, which is",
			"a lot easier to see everything by name.",
			"And you can choose how you want it to export.",
			"You can also export assets too for your game",
			"so you can have objects in your scene that ProBuilder",
			"will generate for using, so you can create prefabs that way.",
			"But then here's OBJ so that you can export it",
			"to your 3D software of choice.",
			"This is relevant for situations where, for example, you",
			"want to like rig and model and animate a mesh.",
			"You can't do any sort of rigging in ProBuilder,",
			"but you can do that in other 3D software.",
			"So it makes sense to export it that way.",
			"You can also create the model here, export it, rig it, and then re-import",
			"it if you want to, and that's relevant.",
			"",
			"This is a usable scene as is right now.",
			"The lightning gets a little bit messed up.",
			"Notice here when you mess with stuff, but that gets fixed.",
			"There's of meter here where it does some calculating.",
			"And by default, it will actually bake lighting on all of your objects.",
			"But as is, this will perfectly collide with any characters that you have.",
			"So I have a FPS character.",
			"I'm going to bring this guy up, let's go ahead",
			"and set the transform up here, put him in the right position.",
			"And ProGrids is attaching that, making that grid visible next to where I am.",
			"And you can set the axis for that.",
			"Currently, I have it actually disabled.",
			"So if I enable it now, this will actually move in increments, see?",
			"And it'll snap it to the grid perfectly.",
			"But as I hit play, I should just be on this mesh up here.",
			"Yeah.",
			"And so this is just part of the scene now, like",
			"as if you had made it in Blender or Maya or whatever.",
			"If you jump down to my actual level and then explore it a little bit,",
			"this is all just haphazardly created.",
			"Stairs and other meshes and stuff.",
			"And so, make it all the way to the top.",
			"I fell down.",
			"I'm also horrible at playing games.",
			"But the beauty of it is you can just play it instantly, right?",
			"Right out the gate.",
			"Now another cool thing that I like to showcase",
			"is we talked about gray boxing earlier.",
			"For making interior levels, gray boxing is",
			"the purpose of making levels and testing them for playability.",
			"The cool thing about ProBuilder is that it",
			"has a invert normals feature, which I think is just",
			"generally accessible in 3D software.",
			"I don't know offhand which menu it's in.",
			"Actions, geometry, do I have the right things selected?",
			"All right, I'm going to open up ProBuilder window.",
			"And then one of these is invert selection.",
			"Sorry, wait.",
			"Flip normals, there we go.",
			"And so, what this does is now this is an interior level.",
			"So all we did before was we made a polygonal creation of arbitrary size",
			"and shape.",
			"If you invert the normal-- so recall every 3D polygon,",
			"3D surface as a normal and whatever direction",
			"that's facing, going the opposite way, going towards that normal",
			"is what gets rendered.",
			"But behind it, if you're going in the opposite direction of the surface",
			"normal, it's invisible.",
			"And so, the effect of that is if we flip all the normals of something that",
			"is convex, we get an interior scene.",
			"And if we're looking at it from the outside,",
			"it looks a little bit weird, right?",
			"Like we can see into it.",
			"And this is something that you might see like in \"Minecraft,\" for example,",
			"when you're looking in part of the geometry",
			"that you shouldn't be able to see.",
			"You can click through the world and see all the other",
			"like interior parts of the world because you've basically",
			"gone beyond the surface normal of that polygon,",
			"and you're only seeing the from that perspective",
			"all the surface normals of polygons that are facing in your direction in that",
			"way.",
			"But often, it will allow you to look straight through all",
			"of the other sort of cubes that are along the way",
			"because you're looking at all the inverse of their surface normal,",
			"you're looking in that direction.",
			"And so, again, only one direction can a polygon be lit at once.",
			"And even if we look at it from the top, you can see that as well.",
			"We're looking at it from the top, flip the normals,",
			"it becomes a convex 3D object.",
			"Flip them, now it's an interior level, right?",
			"So I'm actually going to go into this.",
			"And I'm going to flip the normals again.",
			"I'm going to click on this.",
			"I have to click on a lot of these, actually, because it split up the mesh.",
			"But it's going to be easy enough.",
			"I'm clicking all the top services of this,",
			"making sure I didn't get any on the other side on accident.",
			"I did not.",
			"I'm going to extrude this, and then I'm going to flip all the normals,",
			"and then I'm going to take my FPS controller, which is here,",
			"and actually I think it's already inside, which it is.",
			"I'm going to hit play.",
			"The lighting, I'm not sure if it will be messed up.",
			"It is messed up because it is in the middle of calculating a bunch of stuff,",
			"but now I've created an interior level with the weird mesh that I had before.",
			"And so, if you make the building of your level this concave thing",
			"and then you flip all the normals, you can create an interior scene",
			"very easily with ceiling and everything else.",
			"Normally otherwise, it'd be kind of a pain in the butt.",
			"But it makes it super easy to do with ProBuilder.",
			"And there's a lot of other features, a material editor for one.",
			"So with the material editor, you can actually designate specific materials.",
			"In this case, I've created a couple of materials.",
			"A brick texture here, and a marble texture, which I took some textures,",
			"created material, made the albedo component of those materials",
			"that texture.",
			"And what that allows me to do is I can select an arbitrary face.",
			"So in this case, I'm going to choose these faces.",
			"And I can just click on this brick texture.",
			"And now, these are textured as that brick.",
			"It's not applying it to the entire mesh, it's",
			"just applying it to whatever specific face that we want to.",
			"And there's a UV editor, which will allow to actually take",
			"the mesh of your model.",
			"In this case, this is our entire mesh here.",
			"Just remember, as we talked about it last week,",
			"everything gets cut out and made flat.",
			"So you can sort of see--",
			"if you remember the shape of what we're dealing with,",
			"all the polygons that comprised weird, large object.",
			"They're all now splayed out for us, so we can just very easily take a texture",
			"and put it wherever we want on here.",
			"Now I don't have a ton of experience using this,",
			"so I'm not 100% confident in my ability to UV map something right now in front",
			"of you.",
			"But the documentation on the ProBuilder web site",
			"goes in the detail as to how to use this.",
			"So if you wanted say a specific texture to be in part of the mesh,",
			"and then maybe another texture to be another part of it",
			"in a specific welded way that's not splat onto it,",
			"the UV editor would help you with that.",
			"For example, a face on a character model or something else.",
			"",
			"Or maybe like a sign on a door somewhere, or something like that.",
			"You can do that all here, just click and drag all the faces.",
			"The faces are actually entered dependent from one another",
			"so that you can lay them out in a way that fits the texture that you",
			"are trying to map everything to.",
			"That is ProBuilder in a nutshell.",
			"There's a lot of features.",
			"We don't have time to cover all of them.",
			"And I mean, frankly, I just don't know of all",
			"of them super well yet just because the technology is so new.",
			"But I think this is going to be a huge part of Unity's future",
			"and making it accessible for people that would otherwise have maybe",
			"been turned off by the idea of modeling their level geometry or their object",
			"geometry.",
			"I mean, certainly for me, now this makes me want to make a game in Unity",
			"right now because I know I can instantly start creating my levels.",
			"It's just nice and easy and convenient.",
			"And ProGrids, you should definitely use ProGrids in tandem",
			"with ProBuilder so that you can optimally rearrange things in a way",
			"so that they're all evenly lined up with each other.",
			"Otherwise, you're going to end up with issues",
			"in manipulating their position in a very specific way",
			"and coming up here and setting their values manually.",
			"And that's just kind of a pain, so much easier",
			"just to snap everything to the grid, the ProGrids, and deal with it that way.",
			"And so, the assignment is largely just going",
			"to be take ProBuilder and ProGrids and just make a level with it.",
			"And then just take the principles that we've learned, create a controller,",
			"create a collider, and just make a very simple scene.",
			"And otherwise, probably spend your time focused on your final project.",
			"So any questions as to ProBuilder, how it works, how to get it set up?",
			"Yeah?",
			"AUDIENCE: So what would it look like-- can a character actually stand on top",
			"of an object that had it's [INAUDIBLE]",
			"COLTON OGDEN: No.",
			"It should flip through it.",
			"Let me go ahead and put this up here.",
			"And actually I think it does still trigger collision,",
			"but you'll be able to see through the--",
			"AUDIENCE: It's just visual?",
			"COLTON OGDEN: Yeah, it's just a visual.",
			"It's just a visual bug, it's a lightning bug.",
			"The physics should still apply.",
			"I'm going to go ahead and set the model up here.",
			"",
			"OK.",
			"Hit play.",
			"",
			"No, actually it looked like it went through it.",
			"So it also inverts the collision box.",
			"I've seen some games where you can clip through something",
			"and still collide with it.",
			"So I think it depends on, ultimately, the engine or the implementation",
			"that you're using.",
			"But in this case, when you flip the surface normals here of this mesh,",
			"it also flips the mesh collider's normals.",
			"Yeah?",
			"AUDIENCE: The obvious thing to do would be copy it,",
			"size it up a liitle bit, and then not [INAUDIBLE] it.",
			"And then you would have kind of an inner and outer layer [INAUDIBLE]..",
			"COLTON OGDEN: Precisely, yeah.",
			"If you wanted, you could make a copy of the interior.",
			"You'd make it the same size, I suppose.",
			"And then not flip it's normals such that you have a shell and an interior.",
			"Yeah, absolutely.",
			"Yeah, it depends.",
			"A lot of interior levels, you will never ever be outside of their boundaries.",
			"And so you don't often see that happening,",
			"but it's very much the case that you could have that happening.",
			"And if you have like a house model, for example, then yeah.",
			"You'll actually see hosue models are modeled with walls that are two planes,",
			"so there's a bit of thickness.",
			"It's actually a rectangular shape, so it allows",
			"you to have a collision on one side and another side",
			"because there's two planes of the collider,",
			"rather than just the single plane, which is the direction of the surface normal.",
			"Any further questions on ProBuilder?",
			"Yeah?",
			"AUDIENCE: So how come you can [INAUDIBLE] through the ceiling",
			"but not through the door.",
			"Is there [INAUDIBLE] in the top?",
			"COLTON OGDEN: Because the bottom's surface normal is pointed upward.",
			"So this right here is pointed upwards.",
			"But notice that here, the surface normal is actually pointed down.",
			"So you can only collide with the direction of the surface normal",
			"that's facing you, if that makes sense.",
			"You can walk towards the direction of the surface normal,",
			"but not against the surface normal, if that makes sense.",
			"That's the way that Unity calculates its mesh renderer component.",
			"AUDIENCE: Well, there's also left and the right.",
			"So the left is-- can you go through on the left to the right?",
			"COLTON OGDEN: You could go through from this direction,",
			"but you could not go through this direction.",
			"Because this direction, the surface normal is pointed this way,",
			"so if we try to walk against it, we'll be walking against the normal.",
			"And so, we will trigger a collision.",
			"But if you're walking through it in such that you're",
			"going the same direction as the surface normal,",
			"so if you're coming from this direction then it won't detect a collision.",
			"Does that make sense?",
			"Yeah.",
			"What Tany suggested, which was to make a shell around it,",
			"would solve that problem.",
			"So if we created this exact mesh, duplicated it, and then inverted it,",
			"then we would have two of the same object,",
			"but with normals going one direction and normals going",
			"the other direction such that the mesh renderers",
			"account for both potential movement directions.",
			"Cool.",
			"All right.",
			"Any further questions on ProBuilder?",
			"Again, not meant to be a comprehensive tutorial.",
			"There's videos and documentation that I've linked to in the slides,",
			"but more just to illustrate how awesome this tool is really",
			"and that this is probably going to save some people doing",
			"Unity projects in time if you're doing any asset modeling or level modeling.",
			"Another thing that--",
			"I didn't make a slide for it, but which I talked about in class",
			"was Shader Graph.",
			"And so, a Shader Graph is another 2018.1 feature,",
			"which allows rather than having to write shaders",
			"in Shader Lab, which is Unity's shader language, which can be quite",
			"an experience, quite intimidating.",
			"You can actually create them now with this node based programming language--",
			"not really programming language, but this node based",
			"programming environment, I should say.",
			"Which will allow you to choose all these preset nodes that",
			"influence the shader's behavior.",
			"And there's a lot of different kinds.",
			"And have the result of that be you can see your shader every step of the way,",
			"so the shader is just a series of transformations going",
			"from left to right in one direction.",
			"All of these transformations, you can see",
			"how they end up accumulating to produce this final effect.",
			"In which case here--",
			"if it maybe kind of hard to dicern, is a marine guy with these blue holes",
			"that are actually masking his mesh.",
			"And we talked about masking earlier.",
			"This shader itself looks like it's applying a mask with this noise that",
			"is generating.",
			"And it comes with noise generation functions, generation nodes,",
			"which will allow you to feed those into the mass component of your shader",
			"and then produce some very interesting cool effects.",
			"Otherwise, this would be kind of--",
			"unless you're a shader expert, which I am not, it would be pretty complicated",
			"and non-trivial to implement something like this with just code.",
			"But this generates code for you, such that you don't",
			"have to actually write any code at all.",
			"But you can still see the produced shader that",
			"gets created for you from shader graph.",
			"I believe that it's just a asset now, I'm not 100% sure.",
			"I didn't test this going in.",
			"",
			"Hopefully, I'm not just missing it.",
			"Supposedly, you should be able to just import it.",
			"I'm not 100%.",
			"Let's see how you actually-- it said this article maybe uses it.",
			"Via the Package Manger.",
			"",
			"I think this is a new Window Package Manager.",
			"So we to Window and then Package Manager.",
			"",
			"And then all.",
			"",
			"And then Shader Graph.",
			"Yeah.",
			"So right here.",
			"So Window, and then Package Manager, and then Shader Graph",
			"and that will allow you to import the means",
			"by which I create these graph layouts if you're using",
			"2018.1, which the course is using.",
			"But if you're at home and you're using 2017.4, then update to 2018.1,",
			"and you should see this in your package manager.",
			"And then once you do that, you can actually",
			"create a new Shader Graph object.",
			"And then you'll see it as a new window that pops up in your scene,",
			"and then you can start adding nodes.",
			"I don't have any material prepared for it,",
			"and I didn't anticipate talking about it necessarily,",
			"but it's something that seems to be very game changing.",
			"And it's something that Unreal has had for a long time that",
			"sort of differentiated it from Unity, in my opinion.",
			"And I think a very valuable thing that they've",
			"added that shows a lot of awesome progress for 2018.",
			"So, again, a link to Braxis if you want details",
			"on how to use-- not only ProBuilder ProGrid,",
			"but a lot of other awesome features of Unity and to do a lot of cool stuff.",
			"He makes some really cool videos.",
			"Assignment 10, so assignment 10 is going to be creating a level with ProBuilder",
			"just to get your hands wet with it.",
			"The level should be pretty complex.",
			"So like I said earlier, not like a finished game level.",
			"I'm not expecting you to do awesome, amazing, incredible things.",
			"But a level that has maybe a few pieces of interesting geometry,",
			"maybe generate some stairs, has some pipes you can generate,",
			"and some other things.",
			"Have a jumping puzzle in there.",
			"So this says there should be one jumping puzzle for the player,",
			"the assignment doesn't officially say it yet,",
			"but I'm going to make a change to make it say",
			"that there should be a jumping puzzle.",
			"You can interpret this however you want, just a couple of platforms is fine.",
			"But honestly, whatever you would like.",
			"And have two different textures or materials.",
			"So you can just import whatever texture you want,",
			"or you can go to a website that allows you to procedure the create a texture.",
			"And you can assign it to a material, put it",
			"in the material editor of ProBuilder, and then use",
			"that to assign it to a face or to the whole object, if you want to.",
			"But there should be at least two, not the default,",
			"so to make it a little interesting.",
			"You can use many more if you want to, but only two are required.",
			"So this should be kind of like a complete scene.",
			"So make a new scene separate from the ProBuilder scene,",
			"separate from the \"Portal\" scene, include an FPS controller",
			"so that we can move around the scene immediately after creating the mesh,",
			"right?",
			"But that said, you can use the default controller.",
			"You don't need to do anything fancy.",
			"And then at the very end, you should have a trigger on a collider",
			"somewhere, which can be invisible.",
			"It doesn't have to be invisible, you can make this whatever you want.",
			"You can make like an arch or--",
			"I don't know.",
			"You're free to use your imagination as much as you want,",
			"but there needs to be some collider, whether it's invisible or not",
			"at the very end.",
			"And there needs to be a trigger, and then when you collide with it,",
			"it should say, \"Level Complete\" on the screen.",
			"So just take a text object from Unity 2D, part of the canvas.",
			"If you just add a UI text in the scene, it",
			"will automatically add a canvas and an event system for you.",
			"Create the label, and then just set it on or off,",
			"depending on whether or not you've collided with the trigger.",
			"There is code for this in the helicopter game in the \"Game Over\" text script.",
			"You can see exactly how this is done.",
			"All it effectively is setting the color of the text to 0000 vs 0001,",
			"or whatever color you want to effectively just to change on the alpha",
			"component of the text color.",
			"And then once that's done, then you have a complete assignment.",
			"And then you can spend more energy.",
			"Hopefully, this should only take maybe an hour, maybe less.",
			"You can spend more energy on your final project, which will be due on the 11th.",
			"But altogether, it's been an awesome pleasure teaching this course.",
			"And I hope that a lot of you were able to learn a lot of interesting things",
			"and hopefully were inspired to create some of your own projects",
			"and will continue to create some of your own products in the future.",
			"I certainly enjoyed making a lot of the stuff, especially \"Super Mario",
			"Brothers.\"",
			"I think that was my favorite.",
			"But this was GD50.",
			"So thank you so much.",
			""
		],
		"is_youtube": false
	},
	"video_013": {
		"section": "CS50G 2020",
		"subsection": "Portal Problems",
		"unit": "Lecture",
		"video_sources": [
			"https://edx-video.net/HarvardXCS50G-V000800/HarvardXCS50G-V000800.m3u8",
			"https://edx-video.net/HarvardXCS50G-V000800_DTH.mp4"
		],
		"video_duration": 6087,
		"speech_period": [
			3.92, 12.55, 1.0, 1.083, 1.937, 1.02, 2.22, 2.375, 2.875, 1.71, 2.1, 3.45,
			3.22, 1.55, 3.81, 2.52, 1.458, 2.652, 4.511, 1.999, 2.61, 2.7, 3.75,
			0.749, 2.345, 3.752, 0.944, 3.15, 4.89, 6.78, 2.85, 3.18, 6.24, 3.48, 8.5,
			3.035, 1.755, 2.46, 2.83, 2.01, 3.09, 2.059, 2.441, 2.7, 2.09, 3.12, 3.76,
			3.05, 2.34, 3.877, 1.083, 2.21, 3.51, 3.0, 2.67, 2.28, 1.83, 5.13, 3.75,
			1.3, 2.992, 0.958, 4.21, 2.467, 2.833, 2.477, 2.833, 1.89, 1.999, 1.751,
			2.46, 4.8, 2.58, 3.18, 3.07, 3.14, 2.64, 2.58, 2.88, 2.19, 4.11, 2.79,
			3.99, 2.64, 2.67, 3.21, 2.489, 2.708, 2.483, 3.821, 1.999, 2.22, 1.95,
			1.98, 1.999, 4.07, 1.791, 5.097, 2.083, 2.36, 1.29, 2.98, 2.69, 4.89, 2.7,
			4.08, 2.402, 1.708, 2.458, 2.382, 2.37, 3.86, 1.8, 2.416, 2.894, 2.7,
			1.86, 2.34, 2.211, 1.749, 1.08, 2.1, 1.89, 1.74, 3.06, 2.37, 2.721, 2.499,
			3.84, 2.107, 1.583, 3.03, 3.63, 2.04, 2.22, 2.333, 1.927, 2.91, 2.724,
			2.166, 1.17, 2.88, 3.75, 2.64, 4.8, 1.75, 1.58, 2.62, 0.73, 1.96, 2.58,
			2.13, 3.66, 3.81, 3.06, 3.03, 4.34, 3.561, 1.249, 4.15, 1.8, 4.9, 2.0,
			2.1, 0.84, 2.375, 3.145, 2.25, 3.06, 2.95, 3.71, 2.43, 2.66, 2.595, 2.815,
			1.444, 1.166, 1.791, 3.638, 2.041, 2.22, 2.13, 3.19, 3.62, 2.07, 4.019,
			1.261, 3.99, 2.999, 3.631, 2.16, 1.875, 2.535, 2.541, 2.679, 3.42, 4.89,
			3.97, 2.27, 3.33, 1.83, 2.07, 3.6, 4.98, 1.957, 2.333, 2.625, 2.365,
			2.167, 1.791, 2.722, 2.499, 1.126, 2.207, 2.118, 2.22, 2.99, 0.76, 1.916,
			3.574, 0.78, 2.76, 3.75, 2.79, 3.54, 2.07, 2.7, 5.73, 1.8, 2.68, 3.14,
			2.73, 4.75, 6.44, 3.9, 2.52, 1.208, 1.822, 3.87, 1.8, 0.76, 2.375, 3.037,
			1.458, 2.97, 2.81, 2.44, 2.374, 2.446, 2.73, 3.63, 2.41, 3.56, 4.23, 4.2,
			1.95, 2.41, 4.16, 4.17, 3.772, 1.208, 1.583, 2.107, 2.85, 2.952, 2.958,
			2.97, 3.922, 2.958, 2.59, 1.58, 2.958, 2.242, 2.73, 2.73, 3.84, 4.08,
			1.35, 2.365, 2.375, 3.27, 3.03, 1.6, 3.33, 2.756, 1.624, 2.779, 2.041,
			2.58, 3.619, 1.541, 3.33, 1.59, 4.937, 2.083, 3.37, 2.15, 1.294, 1.916,
			3.335, 2.125, 1.77, 3.06, 3.49, 0.98, 3.8, 2.47, 2.45, 2.417, 2.749,
			3.274, 1.833, 3.537, 4.05, 2.71, 2.6, 2.82, 2.26, 3.95, 6.847, 1.583,
			3.45, 3.81, 3.12, 0.81, 2.79, 4.44, 2.58, 3.334, 1.916, 5.12, 1.75, 3.36,
			4.669, 1.791, 3.74, 4.11, 3.09, 3.96, 3.564, 2.166, 2.4, 1.86, 3.93, 2.1,
			2.82, 3.15, 3.06, 5.46, 0.93, 2.52, 4.53, 1.749, 1.791, 3.3, 2.73, 4.62,
			1.92, 3.03, 1.375, 3.335, 4.33, 2.94, 2.48, 3.15, 3.107, 2.833, 4.74,
			3.056, 1.833, 5.04, 2.771, 1.75, 2.01, 0.969, 1.921, 1.82, 0.632, 1.708,
			4.29, 1.294, 1.916, 4.22, 4.03, 2.88, 2.96, 2.92, 1.3, 4.01, 3.18, 2.82,
			2.52, 2.53, 4.73, 2.331, 2.499, 2.46, 1.95, 2.4, 3.51, 3.21, 3.87, 3.09,
			2.73, 2.88, 1.08, 1.8, 3.166, 3.674, 3.33, 3.84, 3.9, 2.34, 5.49, 4.77,
			3.39, 4.091, 0.499, 3.032, 1.708, 2.0, 2.05, 2.708, 2.162, 3.14, 2.43,
			2.719, 1.541, 1.999, 3.251, 2.38, 3.44, 3.9, 3.42, 1.92, 4.02, 3.0, 3.33,
			2.07, 3.15, 3.75, 2.13, 5.4, 2.07, 2.93, 3.31, 5.58, 1.71, 1.69, 2.375,
			1.958, 1.757, 2.24, 3.609, 1.791, 3.66, 2.94, 3.99, 2.282, 1.208, 3.5,
			3.06, 1.436, 1.338, 2.866, 4.53, 0.74, 1.949, 3.041, 1.76, 4.54, 3.75,
			2.34, 2.58, 3.31, 3.2, 3.09, 2.46, 4.38, 2.25, 2.04, 2.85, 3.15, 2.441,
			1.999, 1.98, 0.93, 2.79, 7.65, 3.57, 2.49, 2.458, 2.192, 2.16, 3.15,
			4.556, 1.874, 5.202, 1.208, 2.34, 2.31, 3.72, 3.19, 3.23, 1.05, 1.83, 3.3,
			3.99, 2.7, 4.05, 3.02, 4.72, 3.84, 3.12, 2.7, 1.92, 2.02, 1.708, 2.752,
			1.875, 2.085, 1.26, 0.64, 2.81, 2.62, 2.0, 2.25, 3.87, 2.249, 0.541,
			2.083, 1.946, 2.791, 3.59, 1.53, 3.87, 2.25, 2.555, 2.375, 3.44, 1.89,
			4.38, 4.53, 5.28, 1.29, 2.484, 2.166, 3.25, 0.5, 2.266, 1.874, 3.165,
			2.625, 2.265, 1.875, 3.93, 1.39, 3.17, 3.96, 3.15, 2.89, 3.03, 2.96, 1.83,
			3.99, 3.48, 3.4, 3.29, 1.89, 3.36, 2.375, 2.275, 4.08, 3.27, 1.58, 3.118,
			0.978, 2.934, 2.23, 2.36, 4.21, 3.11, 4.12, 1.889, 2.041, 1.88, 3.52,
			2.19, 2.67, 4.02, 1.719, 1.791, 4.77, 4.47, 7.19, 3.52, 5.01, 6.78, 4.68,
			3.42, 5.39, 6.31, 3.47, 4.09, 2.82, 2.82, 4.53, 1.852, 2.708, 8.04, 2.52,
			2.76, 2.64, 2.32, 3.317, 1.833, 4.08, 3.75, 3.33, 5.08, 6.2, 3.66, 3.0,
			5.73, 3.75, 1.18, 2.857, 1.583, 1.708, 2.782, 2.13, 3.27, 3.24, 3.9, 2.79,
			3.24, 1.9, 6.29, 3.57, 2.82, 2.67, 3.43, 3.81, 2.45, 4.54, 3.68, 2.1,
			1.53, 2.16, 2.82, 4.579, 1.041, 4.36, 1.87, 4.86, 1.24, 3.66, 2.72, 3.27,
			3.12, 2.64, 3.15, 3.19, 5.12, 2.1, 1.91, 2.08, 3.412, 0.708, 3.92, 2.98,
			3.2, 2.29, 3.33, 4.53, 2.7, 2.67, 5.64, 1.26, 3.48, 4.355, 2.125, 2.43,
			3.725, 1.375, 1.92, 3.33, 4.76, 5.58, 2.69, 3.53, 2.64, 3.46, 3.106,
			1.624, 2.94, 3.4, 1.89, 5.69, 4.48, 4.23, 3.41, 3.54, 3.48, 2.58, 2.09,
			4.84, 2.67, 3.09, 4.52, 2.3, 3.17, 5.04, 2.847, 2.583, 1.6, 3.74, 1.78,
			4.23, 4.79, 3.09, 2.513, 2.166, 1.651, 2.79, 3.84, 3.34, 2.6, 5.14, 5.78,
			1.53, 5.13, 1.43, 6.81, 3.54, 2.07, 4.23, 5.16, 2.01, 2.88, 4.29, 6.09,
			2.49, 4.24, 2.27, 3.22, 2.45, 4.44, 3.0, 1.359, 2.541, 1.93, 4.76, 2.76,
			2.28, 2.98, 2.03, 3.03, 2.43, 4.5, 3.91, 2.929, 2.791, 1.35, 5.13, 3.21,
			2.73, 3.39, 1.54, 1.07, 1.38, 2.4, 2.19, 1.833, 1.817, 2.95, 2.55, 2.62,
			2.33, 4.7, 4.65, 3.496, 2.874, 3.74, 3.394, 2.916, 2.16, 2.04, 2.749,
			2.075, 2.916, 2.57, 1.57, 3.18, 4.47, 3.66, 3.36, 2.19, 1.21, 1.625,
			2.445, 2.208, 3.162, 1.802, 2.718, 4.3, 3.67, 2.75, 4.62, 3.75, 2.2, 4.16,
			5.55, 3.3, 2.69, 3.04, 3.04, 4.49, 2.71, 3.56, 4.976, 1.624, 1.98, 3.07,
			4.01, 4.0, 4.46, 3.19, 3.53, 3.08, 3.43, 3.21, 2.22, 4.841, 2.749, 3.69,
			3.08, 2.74, 4.11, 4.955, 2.125, 3.96, 2.07, 3.21, 2.47, 2.28, 3.02, 3.42,
			3.27, 2.31, 3.36, 2.38, 4.56, 3.92, 2.51, 5.05, 2.43, 4.14, 3.149, 3.041,
			2.19, 1.125, 2.958, 0.677, 3.919, 2.291, 5.46, 4.31, 6.37, 2.97, 1.397,
			2.083, 1.666, 1.964, 3.84, 2.14, 3.65, 4.2, 4.12, 1.64, 1.65, 3.48, 2.13,
			3.21, 4.86, 1.89, 2.807, 1.333, 1.357, 3.083, 4.437, 2.083, 2.185, 2.875,
			3.27, 2.29, 2.78, 3.3, 3.06, 3.02, 3.04, 2.61, 3.93, 3.49, 4.76, 3.09,
			2.54, 1.812, 0.958, 4.2, 3.18, 2.01, 3.36, 5.64, 2.38, 3.41, 1.176, 0.906,
			1.359, 3.059, 4.17, 2.38, 2.79, 1.95, 0.999, 4.021, 3.59, 3.08, 5.05,
			3.26, 3.06, 3.794, 2.416, 4.95, 2.31, 0.91, 1.644, 2.396, 2.31, 2.97,
			1.71, 2.11, 2.87, 2.72, 2.89, 2.7, 3.21, 1.56, 2.95, 4.73, 2.5, 4.83,
			3.41, 4.56, 2.22, 5.01, 2.25, 1.654, 2.666, 2.652, 0.838, 2.52, 1.333,
			4.317, 4.57, 2.88, 2.257, 0.833, 2.94, 6.21, 5.52, 2.79, 3.42, 5.07, 4.92,
			5.22, 3.42, 4.21, 3.62, 1.14, 3.1, 2.87, 2.8, 3.51, 4.02, 3.57, 2.13,
			2.34, 3.21, 2.86, 2.501, 1.749, 3.78, 0.84, 2.4, 2.19, 3.33, 1.35, 3.81,
			3.27, 2.5, 3.68, 1.78, 3.92, 2.875, 2.458, 3.414, 1.583, 2.54, 5.28, 3.3,
			1.64, 3.29, 4.19, 4.41, 2.1, 3.0, 3.27, 2.58, 2.31, 2.79, 3.69, 3.75,
			3.37, 2.39, 1.5, 1.62, 3.514, 1.916, 3.434, 1.916, 1.95, 2.159, 2.541,
			6.21, 2.94, 2.05, 3.2, 2.91, 1.98, 2.69, 1.63, 3.525, 2.175, 4.74, 1.76,
			1.75, 2.91, 4.41, 4.2, 4.41, 3.93, 1.65, 4.29, 3.23, 2.8, 3.09, 2.55,
			1.33, 2.0, 2.7, 0.9, 1.41, 3.28, 2.75, 3.13, 2.0, 2.16, 3.26, 2.75, 4.43,
			2.19, 4.38, 3.42, 2.88, 2.43, 1.8, 2.833, 0.527, 1.724, 3.166, 3.49, 2.15,
			2.01, 6.21, 3.48, 2.97, 1.77, 2.58, 3.61, 4.57, 2.082, 2.168, 2.96, 2.67,
			3.33, 1.26, 2.64, 3.12, 1.68, 3.72, 4.77, 2.25, 1.56, 3.63, 2.07, 2.7,
			3.45, 3.9, 3.299, 0.791, 3.69, 3.424, 1.666, 2.04, 2.52, 3.09, 3.64, 5.0,
			2.77, 4.49, 3.375, 3.405, 2.37, 3.9, 5.35, 3.85, 3.28, 3.904, 2.666,
			2.047, 2.083, 3.13, 2.04, 3.58, 2.16, 1.4, 4.15, 6.43, 3.34, 2.37, 3.21,
			2.625, 2.295, 2.68, 4.28, 2.19, 4.38, 6.1, 3.09, 3.34, 3.31, 1.53, 1.92,
			4.14, 2.76, 2.4, 3.67, 2.73, 4.54, 2.25, 5.01, 3.69, 2.462, 1.708, 2.31,
			6.09, 1.26, 4.32, 2.28, 5.75, 1.78, 3.51, 3.48, 0.75, 4.74, 3.45, 1.52,
			2.999, 1.291, 3.314, 1.166, 1.35, 2.22, 3.54, 3.3, 1.71, 4.62, 2.2, 2.81,
			6.129, 1.791, 2.82, 1.49, 2.14, 1.29, 2.41, 4.6, 1.22, 3.56, 3.3, 2.059,
			2.291, 3.21, 3.24, 3.81, 1.37, 3.29, 2.771, 1.749, 3.88, 2.15, 3.58, 3.23,
			2.06, 2.09, 2.91, 3.07, 1.64, 2.57, 1.93, 1.38, 2.54, 2.91, 3.6, 3.15,
			1.246, 1.874, 2.19, 2.85, 1.72, 1.907, 1.833, 2.23, 3.68, 4.2, 3.741,
			2.499, 2.474, 3.166, 5.22, 3.46, 1.76, 2.94, 2.04, 4.74, 6.67, 3.74, 0.9,
			3.12, 3.487, 2.333, 1.11, 2.16, 3.06, 3.12, 3.037, 1.583, 2.91, 3.714,
			1.416, 2.4, 3.67, 3.81, 3.849, 3.041, 3.87, 3.39, 4.62, 1.35, 1.499,
			1.771, 2.34, 2.49, 1.24, 1.76, 3.06, 3.59, 4.06, 4.23, 2.785, 2.375, 0.87,
			1.999, 1.545, 1.166, 1.65, 4.35, 2.22, 3.09, 3.304, 3.166, 2.371, 3.249,
			3.58, 3.68, 2.695, 2.375, 2.94, 2.88, 2.64, 2.52, 3.06, 2.53, 1.999,
			2.041, 3.42, 2.91, 1.95, 1.95, 4.89, 3.57, 2.61, 3.101, 1.999, 1.041,
			2.889, 1.76, 2.5, 3.3, 3.48, 1.68, 3.57, 3.42, 3.565, 1.875, 2.21, 1.89,
			1.93, 3.32, 1.17, 4.77, 3.429, 1.791, 5.4, 3.3, 3.03, 1.5, 3.06, 1.35,
			1.159, 1.541, 5.35, 2.57, 1.92, 3.0, 4.23, 3.28, 2.54, 4.51, 2.75, 6.45,
			4.38, 3.9, 4.97, 2.74, 3.99, 2.04, 2.67, 3.835, 1.125, 3.32, 2.52, 0.44,
			0.666, 3.594, 3.67, 3.15, 5.79, 1.63, 5.99, 4.56, 3.21, 1.1, 1.75, 3.24,
			2.166, 1.884, 2.902, 1.958, 3.79, 4.07, 2.05, 4.76, 4.2, 2.967, 1.833,
			2.01, 2.64, 1.89, 1.625, 2.904, 1.291, 2.79, 1.5, 2.015, 2.125, 4.14,
			4.57, 3.98, 3.0, 1.804, 0.916, 2.0, 2.15, 1.74, 2.73, 4.24, 3.29, 2.34,
			1.77, 2.76, 2.76, 3.21, 2.166, 1.044, 2.8, 1.999, 2.041, 3.25, 3.919,
			2.25, 2.941, 2.7, 4.43, 2.05, 1.708, 4.022, 4.2, 2.409, 2.582, 1.458,
			1.125, 2.246, 4.009, 3.151, 3.48, 2.52, 2.48, 1.71, 1.18, 3.36, 1.39,
			1.82, 2.64, 3.13, 3.809, 2.541, 3.37, 3.68, 2.5, 2.85, 3.33, 2.75, 3.15,
			3.09, 3.24, 3.57, 1.74, 2.52, 1.14, 3.96, 4.42, 2.92, 2.5, 3.54, 3.19,
			2.75, 3.041, 2.749, 1.08, 1.62, 2.16, 2.583, 1.366, 3.041, 4.77, 3.58,
			2.81, 2.96, 3.21, 1.95, 2.05, 5.15, 2.872, 3.419, 3.819, 3.027, 1.833,
			1.0, 0.83, 4.05, 3.609, 2.541, 1.62, 2.85, 3.12, 2.25, 3.54, 2.79, 3.39,
			1.71, 2.88, 3.39, 1.05, 2.962, 1.958, 3.21, 2.28, 2.159, 2.041, 2.82,
			1.509, 1.494, 1.999, 4.278, 3.97, 4.56, 5.911, 1.749, 1.98, 0.64, 1.708,
			2.372, 1.3, 3.14, 1.53, 2.782, 2.708, 1.69, 0.74, 1.11, 0.84, 2.43, 2.55,
			2.19, 3.094, 1.916, 1.38, 1.349, 2.041, 2.43, 3.97, 3.17, 2.67, 1.62,
			2.342, 2.458, 1.404, 2.166, 1.92, 3.06, 3.09, 3.93, 2.32, 3.89, 1.56,
			4.89, 4.62, 1.727, 2.083, 2.52, 4.11, 2.947, 1.583, 3.63, 2.19, 3.72,
			1.21, 1.791, 1.319, 2.56, 2.51, 1.45, 2.477, 3.333, 1.4, 3.76, 2.25, 2.61,
			1.294, 1.696, 0.56, 2.62, 1.99, 2.4, 3.99, 3.72, 2.17, 0.82, 3.53, 3.86,
			3.12, 1.32, 3.84, 3.259, 2.291, 2.716, 2.624, 4.16, 1.5, 2.982, 2.982,
			1.771, 1.708, 3.479, 1.887, 1.791, 3.37, 2.58, 4.28, 4.96, 2.48, 3.97,
			3.78, 3.887, 1.333, 4.17, 3.5, 2.95, 2.94, 3.03, 5.2, 3.53, 2.49, 2.64,
			2.38, 4.37, 2.34, 4.091, 2.499, 1.999, 2.931, 2.75, 5.09, 3.26, 3.42,
			1.33, 4.35, 2.03, 2.76, 4.029, 2.541, 1.91, 3.974, 1.916, 1.791, 2.769,
			3.12, 1.83, 2.125, 2.975, 1.62, 2.52, 3.14, 0.974, 1.916, 1.17, 2.4, 3.03,
			1.832, 0.964, 3.864, 2.975, 2.965, 3.084, 2.345, 2.061, 3.7, 2.9, 2.82,
			3.0, 3.297, 1.833, 3.21, 3.69, 1.89, 3.24, 1.39, 2.19, 1.041, 2.469, 2.09,
			1.44, 2.31, 1.95, 2.25, 3.33, 3.57, 2.88, 1.81, 3.142, 1.708, 5.6, 1.44,
			2.92, 3.534, 1.416, 2.831, 1.999, 2.208, 1.962, 3.22, 2.12, 3.66, 2.4,
			2.88, 2.31, 2.82, 2.139, 2.541, 1.14, 5.85, 0.959, 2.291, 1.88, 3.87,
			2.29, 3.189, 1.541, 2.74, 4.41, 2.749, 2.791, 1.18, 3.769, 1.791, 2.35,
			1.377, 2.583, 3.73, 3.41, 1.13, 2.208, 1.162, 2.79, 2.969, 2.041, 3.49,
			3.38, 3.63, 3.22, 1.32, 2.6, 1.833, 2.137, 3.09, 3.05, 3.0, 0.7, 2.15,
			2.29, 1.05, 2.062, 1.678, 3.25, 0.66, 2.22, 2.81, 2.67, 2.61, 1.83, 5.1,
			3.03, 1.98, 2.37, 1.74, 2.86, 1.586, 2.49, 3.486, 0.996, 2.988, 5.994,
			4.56, 3.53, 2.75, 0.87, 1.708, 0.961, 1.791, 2.25, 2.979, 1.041, 1.75,
			2.9, 4.089, 1.791, 2.61, 2.64, 1.32, 4.35, 3.06, 2.22, 2.13, 2.67, 3.589,
			3.291, 1.61, 3.7, 2.9, 3.12, 2.4, 3.33, 2.7, 3.647, 2.083, 2.356, 2.704,
			2.379, 1.041, 1.635, 1.975, 3.46, 3.47, 3.385, 4.025, 4.707, 1.833, 2.04,
			1.86, 3.12, 3.15, 3.09, 1.74, 2.04, 1.33, 3.87, 2.19, 3.56, 2.67, 2.4,
			5.1, 3.42, 2.25, 3.81, 2.767, 1.083, 1.01, 3.376, 1.876, 2.807, 3.041,
			7.07, 1.27, 2.31, 2.76, 2.85, 4.086, 1.374, 5.34, 1.48, 4.517, 1.833,
			3.281, 1.999, 3.041, 1.678, 2.541, 2.97, 4.59, 3.81, 6.03, 3.6, 3.39,
			2.541, 3.339, 4.293, 2.957, 3.41, 3.299, 3.041, 3.39, 4.61, 4.42, 5.01,
			4.23, 2.76, 4.92, 3.9, 1.46, 6.19, 2.53, 4.49, 2.43, 3.22, 2.632, 3.208,
			2.88, 3.51, 5.22, 1.169, 2.791, 2.4, 5.76, 6.57, 3.75, 2.7, 3.0, 2.224,
			2.666, 4.23, 3.3, 5.22, 1.53, 4.3, 2.75, 1.68, 3.36, 3.826, 2.624, 1.357,
			3.083, 3.41, 1.76, 2.48, 1.927, 3.083, 1.53, 3.39, 2.74, 3.26, 2.412,
			1.458, 3.39, 5.19, 3.36, 3.06, 3.54, 3.87, 2.46, 2.96, 3.23, 4.07, 3.15,
			1.599, 5.612, 1.875, 3.888, 1.956, 3.93, 2.73, 2.34, 2.7, 2.52, 1.416,
			1.944, 0.66, 0.791, 2.769, 3.782, 1.958, 2.674, 1.416, 1.76, 2.74, 2.84,
			2.125, 2.665, 1.75, 6.032, 1.708, 3.2, 2.0, 1.5, 3.203, 1.948, 4.399,
			1.412, 2.33, 0.938, 2.272, 1.208, 2.92, 3.62, 4.162, 2.708, 5.94, 1.83,
			2.58, 2.55, 3.89, 5.024, 1.916, 1.589, 2.041, 4.74, 2.49, 3.51, 2.19,
			2.084, 2.999, 0.707, 2.55, 3.21, 2.76, 3.384, 2.916, 3.125, 1.885, 6.28,
			1.36, 3.164, 3.092, 3.504, 4.0, 2.31, 3.78, 3.6, 3.782, 0.958, 1.93, 3.95,
			3.03, 3.69, 2.73, 2.97, 1.41, 4.17, 1.74, 2.89, 4.58, 2.21, 2.44, 3.96,
			3.9, 2.45, 4.18, 1.2, 2.67, 3.72, 5.43, 2.85, 2.96, 2.75, 2.0, 1.87, 3.53,
			2.46, 2.11, 4.21, 3.25, 3.83, 2.3, 1.33, 2.86, 2.76, 2.75, 4.62, 3.037,
			2.333, 2.442, 4.408, 2.47, 3.56, 3.74, 3.88, 1.91, 2.044, 1.916, 5.0,
			0.727, 2.583, 4.38, 3.24, 3.59, 2.95, 3.82, 2.01, 4.64, 2.25, 2.94, 7.85,
			3.52, 3.15, 1.62, 3.87, 2.53, 3.56, 3.36, 4.74, 5.7, 2.55, 4.42, 5.09,
			2.28, 3.69, 3.66, 4.29, 3.22, 1.7, 5.45, 3.229, 1.791, 4.77, 3.78, 5.78,
			3.41, 3.26, 2.06, 2.56, 3.09, 1.48, 5.36, 1.79, 3.44, 8.216, 2.524, 2.263,
			3.297, 1.152, 1.958, 2.749, 2.061, 0.877
		],
		"transcript_en": [
			"[MUSIC PLAYING]",
			"",
			"COLTON OGDEN: All right.",
			"Good afternoon, everybody.",
			"Thank you so much for coming to today's talk.",
			"My name is Colton Ogden.",
			"I'm the course instructor for GD50, which",
			"is CS50's new Introduction to Game Development course.",
			"We started this last spring and we've been having lectures every week",
			"so far for the last semester.",
			"Last week we took a look at Portal, which",
			"is a famous game by Valve, whereby you get a gun that can essentially",
			"shoot these portals that defy the laws of space",
			"onto different services in the game.",
			"Walk in and out of them and teleport through them and see through them.",
			"And there are a host of interesting challenges associated",
			"with implementing a game like this.",
			"Now last week we looked at a simple version of it in Unity,",
			"but today we are joined by Dave Kircher and Tejeev Kohli of Valve Software who",
			"actually were on the Portal team and implemented",
			"all of the interesting sort of design and technical decisions",
			"that went about making it work and making it fun and believable.",
			"So without any further ado, this is the \"Portal Problems.\"",
			"Thank you.",
			"[APPLAUSE]",
			"",
			"TEJEEV KOHLI: Hi.",
			"So we're just going to run through.",
			"Both me and Dave were actually students when we were hired by Valve,",
			"and we were hired to recreate the work we did as a student project for Valve",
			"for Portal 1 and for Portal 2.",
			"And today we just wanted to talk to you about some",
			"of the issues we had trying to create the mechanic for portals,",
			"and then also some of the design, both the technical and some of the design",
			"issues that we had to tackle and work on to make the mechanic work properly.",
			"So Dave is going to start off and then I'll jump in later.",
			"DAVE KIRCHER: Hey, folks.",
			"As he mentioned, my name is Dave Kircher I was hired",
			"on specifically to work for Portal.",
			"So I'm going to go ahead and preface.",
			"We're jumping through a lot of topics today and jumping very quickly,",
			"so this is a very video heavy presentation",
			"so that we can jump quickly in and out.",
			"And I'm sorry if I go a little too fast.",
			"I'm kind of optimizing for the stream.",
			"So hopefully, if I have gone too quickly over something,",
			"you can review the stream and see it a second time.",
			"So without further ado, let's start off-- just quickly.",
			"I'm assuming that most of the people here",
			"have played Portal or at least are familiar with it in some sense.",
			"That's just an assumption.",
			"And that, for at least the technical portions,",
			"that you are at least somewhat familiarized with 3D rendering.",
			"If you're not, you may need to study up a little bit and then come back.",
			"But let's start off with just what is a portal?",
			"A portal is a discontinuity in 3D space.",
			"It's a 2D discontinuity where we basically",
			"define a 2D rectangle somewhere in space such that the front face-- sorry,",
			"the back face of the 2D rectangle is defined as the front face of another 2D",
			"rectangle.",
			"So I've got my simple little example here of this blue portal",
			"and this orange portal.",
			"We're defining them to be back to back, which gets us this result over here.",
			"So from the perspective of this little portal guy,",
			"it should look like there's another room attached with a cube in it.",
			"But we're not actually moving 3D space at all",
			"because otherwise we're trying to make sure that this perspective is",
			"true for both this guy and the cube.",
			"And then you'd have this weird overlapping space",
			"that doesn't make any sense to anybody.",
			"So we do a lot of hacks to make it seem like space",
			"is folding in these interesting ways without actually moving space.",
			"Another way to think of it is that it's a door.",
			"If you look closely at this doorway, it's a very standard door.",
			"It's a door like you walk through it, different stuff happens.",
			"But what I'm not telling you initially is that this actually isn't a door.",
			"For technical reasons, this level required a portal here",
			"because we needed this room to move.",
			"So even though it looks like a doorway, it's completely fake.",
			"And that it's a doorway that actually takes you",
			"about a half mile across the level.",
			"But it looks like a door, and so my job on the Portal series",
			"was to make sure that when we're creating portals that they",
			"feel to the player like a doorway.",
			"And if you think of them in terms of a doorway,",
			"all the interesting stuff for a portal happens on the inside of the doorway",
			"and nothing interesting happens on the outside.",
			"And it's my job to make sure that all the interesting things that",
			"are happening outside the door don't happen.",
			"Because that's all stuff that doesn't make any sense.",
			"So as you can see, I just flew across the level.",
			"And that's the other side of that door that we just looked at.",
			"And I'm walking through it and it's a doorway.",
			"So it's a door that doesn't take you a couple of inches.",
			"It takes you about a half mile across the level.",
			"",
			"Now we're into our rendering section, which",
			"is basically one of my main expertises in the portal area.",
			"So we're going be talking about quite a few things",
			"and I'm going to jump in quickly, so hopefully I",
			"don't spew it out too quickly.",
			"That's kind of my problem.",
			"So there are primarily two layers to render a portal of view.",
			"There might be more, but these are the two that I am primarily familiar with.",
			"The preliminary way that we did it with Narbacular Drop, which",
			"was the predecessor to Portal was with rendered texture.",
			"And then when we got to working on the Portal franchise,",
			"we switched to a method where you draw it",
			"all in a single pass using what's known as a stencil buffer",
			"and I'll be talking more about that in a bit.",
			"But there are tradeoffs to each method.",
			"So with a texture, you have to have separate textures per portal view.",
			"And if you have support for recursion, you",
			"have to have many, many textures pre-allocated to do this.",
			"So your memory growth gets big very fast.",
			"You have to use the Painter's Algorithm or something like it",
			"to render your portals.",
			"You basically have to figure out the deepest portal you",
			"can see into and render that one first.",
			"And then any outward ones from that you're",
			"going to render them because they're going",
			"to contain a view of that first portal.",
			"So you have to render it in that order.",
			"And I don't know if it's true anymore.",
			"It definitely was when I originally was working on the first portal.",
			"That you couldn't effectively use anti-aliasing,",
			"so you get small visual artifacts as you get close to a portal",
			"because it would be rendered as a texture that doesn't quite",
			"render the same way as the rest of the back buffer.",
			"But it is the simplest to implement, especially",
			"if you don't support recursion at all.",
			"It is super simple to do because you can ignore the Painter's Algorithm",
			"and just render all of them before you of your main view.",
			"By contrast, when you render with stencils,",
			"it renders the entire frame to the back buffer",
			"so you don't have any extra texture memory requirements.",
			"You're doing it all in a single pass.",
			"You're starting from your main view and working your way in.",
			"You actually have to nest it a little bit, so it's interesting.",
			"You are guaranteed to get homogeneous visual quality",
			"because it's a single pass.",
			"The way you're rendering the rest of your frame.",
			"But it has a lot of extra complexity of when you render them",
			"and how you render them.",
			"So this rendering portion is going to require",
			"quite a bit of spatial thinking.",
			"So I'm going to show you this video.",
			"Basically this is a layout I'm going to use a couple of times.",
			"Does this play?",
			"Hopefully-- yes, OK.",
			"This is a room layout that I'm going to use a couple of times",
			"where I've got an orange portal and a blue portal.",
			"And behind each one is a thin wall with some stuff behind it.",
			"But hopefully to help illustrate what's in front of the blue portal,",
			"you can see there's a whole bunch of blue stuff over there.",
			"",
			"So yes, that is the example layout I want you to kind of keep in your head",
			"because spatial thinking is important to actually have reference.",
			"Let this finish one more time.",
			"",
			"OK.",
			"Now this is something that pertains to both rendering with textures",
			"and stencils and I'm going to let this play once",
			"because I was advised that if I front load this too much,",
			"it sounds confusing.",
			"So while I'm playing this, I want you to look at the fact",
			"that when the orange portal is on screen and when it's not,",
			"everything inside where the orange oval is",
			"looks exactly the same for when it is and when it is not there.",
			"",
			"And so what I'm doing here is as I'm toggling between the views",
			"is I am teleporting to where the virtual camera is.",
			"That's rendering out of the orange portal.",
			"Whoops-- come on, go back.",
			"Oh, God.",
			"OK.",
			"I'm toggling back and forth.",
			"I'm looking into the orange portal, but I'm",
			"toggling to where the virtual camera is behind the blue portal.",
			"So if you remember back to when I said that we're",
			"defining the back face of one rectangle to be",
			"the front face of another rectangle, that",
			"means that they should be coplanar at all times.",
			"And so if you think of my player model in terms",
			"of walking it to the orange portal.",
			"When I'm rendering my exit view, I should end up behind the blue portal",
			"as I'm rendering out of it.",
			"So it's important to remember that all the angles carry over from that.",
			"And most importantly that whether you're rendering textures or rendering",
			"to stencil that nothing inside ever moves",
			"because it should be the exact same view angles,",
			"the pixels should be in the exact same place.",
			"If they're not in the same place, your math is wrong.",
			"And this is especially important when rendering with textures",
			"because one of the first mistakes I've seen several people do",
			"is that they render the entire screen to a texture.",
			"And then they map the entire texture to this little quadratic here",
			"and it looks all weird depending on how close or far away you are.",
			"But as long as you project the--",
			"",
			"sorry.",
			"Trying to work with videos is not the easiest.",
			"So as long as you project where the vertices of your mesh",
			"are in screen space, you can reuse those coordinates as your texture coordinates",
			"and then it will line up perfectly.",
			"So that's the point of why it's rendering as one-to-one.",
			"You just want to make sure that you're rendering the same parts",
			"to the same part of the screen.",
			"Now I said I'd be using that previous layout a bunch",
			"and I swear I'm going to get back to there.",
			"But this is a much better layout for rendering with stencils,",
			"and so now you need to learn a new layout just for a minute.",
			"It's only used in stencils.",
			"But I've got these two portals looking at each other.",
			"They're kind of-- one stacked on top of the other,",
			"and they've got these light bridges that are just",
			"serving to show you that transparencies are kind of a special case.",
			"So I'm going to play it one more time.",
			"So you just got two portals facing each other.",
			"And even though they're tiny, it does make an infinite recursion down",
			"into the portals.",
			"",
			"So rendering with stencils.",
			"I'm kind of assuming that for this part of the talk",
			"that you have some idea what a depth buffer is.",
			"You may need to read up on that if you don't.",
			"The stencil buffer is very similar to the depth buffer",
			"in that it defines rules and operations for when we can wholesale just not",
			"draw a pixel or when we do want to draw it.",
			"And then also while we are drawing pixels,",
			"you can define several operations of how to modify the depth buffer.",
			"But for all intents and purposes, it's invisible to the user",
			"except for the end result. So stencil buffer, a lot like a depth buffer,",
			"but you're controlling the values in code instead of by vertex depth.",
			"So before we render any scene using stencils, what we're going to do",
			"is we're going to clear our stencil buffer at the same time",
			"as we clear our depth buffer.",
			"We're going to clear it to all zero values.",
			"And the stencil buffer we were working with with Portal 1--",
			"I believe it only had two bits.",
			"I could be wrong.",
			"It might be up to eight bits, but it's not a lot of bits.",
			"So we need to be very conservative with the values we put in there.",
			"So we're going to clear it to zero.",
			"So everything in it is zero.",
			"And then we're going to render all of the OPEC objects in our scene",
			"and that's where we get to the visual I'm showing you here.",
			"So you'll notice that none of the light bridges are here.",
			"None of the cool fancy window stuff is here.",
			"So all we've done is draw in all the opaque objects.",
			"And then we take a special detour to render a portal.",
			"At this point, we've rendered this oval here.",
			"And while we're rendering the oval, we tell the rendering system",
			"to increment the stencil buffer wherever we render a pixel.",
			"So while we're rendering, all of the pixels here go from 0 to 1",
			"and that's an important bit.",
			"So we're going to be able to use that to tell the depth--",
			"to tell draw operations where to draw from then on.",
			"And then as soon as we've drawn the incrementing of the stencil buffer,",
			"we tell all draw operations from then on to only draw",
			"where the stencil value is 1.",
			"And we tell it to not modify anything.",
			"We're only drawing where there's a 1.",
			"And then we can basically just forget all about stencil buffers",
			"for a little bit and keep drawing.",
			"But at this point if you've been following along with the depth buffer,",
			"we've already drawn this nice little wall behind the portal.",
			"So the depth is the same as this little quad here.",
			"And so the first thing we do is we render a full screen quad with depth",
			"at maximum value, which does really effectively",
			"make this a hole at this point.",
			"And if we were to continue drawing opaque objects and things like that,",
			"they would just show up in this hole.",
			"So then we start--",
			"after we have drawn, after we have punched our hole in depth",
			"and we've required that all draw operations have this matching",
			"stencil value of 1, then what we do is we just start over in our main scene",
			"again and just draw it again.",
			"But this time we move our virtual camera.",
			"Just the same operation as I showed you in the rendering.",
			"It's one-to-one, we just have to do a matrix transform such",
			"that we're behind the blue portal and we draw it again.",
			"And so, let's see here.",
			"I think I have a magnifying glass.",
			"So you may notice that we're in--",
			"whoops.",
			"OK, I can't apparently zoom and use a laser pointer.",
			"So you may notice that the player model is there,",
			"and then the exact same setup as I had shown you before.",
			"It's the same set of quads and the oval again.",
			"And we do the exact same thing again.",
			"We tell it to increment so all the values in this tiny little oval",
			"here are now 2.",
			"And then at that point we tell, OK, only render pixels with a stencil value of 2",
			"and then we can just ignore stencil buffers again.",
			"We punch the hole again, and then we recurse again.",
			"And we go into a value of 3.",
			"At this point--",
			"I'm going to get more into detail on it later,",
			"but we stop recursively rendering to stencil buffers",
			"because otherwise we'd draw a whole bunch of scenes",
			"that we're not going to actually see.",
			"We pull a little trick that I'm going to get into.",
			"So as we've drawn all of our opaques, we would theoretically do our detour.",
			"We don't.",
			"And then we finish by drawing all of our translucent objects.",
			"And I know it's very tiny to see them there,",
			"but it will become more apparent later.",
			"I think that-- sorry, that's actually our rendering trick.",
			"And there, now we've actually drawn the translucence in that view.",
			"And I know this is very small, but it'll make more sense at recursion level 1.",
			"So as we draw our translucent objects, we're",
			"still all confined to drawing where stencil value is 2.",
			"And then once we are done drawing all of our translucent objects,",
			"we render the portal oval--",
			"whoops, sorry, sorry.",
			"I'm going to pretend that we're drawing to the big oval",
			"here because it's easier to see.",
			"We would draw another quad at this level, sort of like a window,",
			"telling it to decrement the stencil value back to 1.",
			"I'm sorry, I need to take a step back.",
			"We need to replace depth so that there's no longer a hole there.",
			"So we draw the full screen quad with depth equal to the portal plane",
			"while still restricting to the nested view and then we decrement.",
			"Sorry.",
			"So by the time we've done decrementing, that",
			"means all of these pixels inside this first recursion are now 1 again.",
			"Every single one of them is a 1 on the stencil value.",
			"So we can continue rendering the translucence from the first recursion",
			"just like we did when we're doing the opaques.",
			"We can say just restrict your drawing to all stencil value 1.",
			"And then we finish our translucence there.",
			"We do the exact same thing again while we're going back to the main view.",
			"We fix up our depth and then we decrement the stencil values again.",
			"And then we just finish out our main scene,",
			"and now you have portals drawn using stencils.",
			"They required no extra texture memory whatsoever.",
			"So bouncing back to the scene that we had",
			"shown before this, one of the things that we had to solve pretty quickly",
			"is when you have some object in the middle of a portal,",
			"you have to be able to see it in two places at once.",
			"And the way that we do this is we literally just look up",
			"every piece and rendering geometry.",
			"It uses every texture and replicate it and teleport it every single frame",
			"to wherever the original is.",
			"And while we're replicating, this object over here.",
			"You can see that it's slightly more in front of the orange portal.",
			"So basically the rules are defined such that whichever object--",
			"whichever side of the object has its origin in front of the portal",
			"is the master.",
			"And the origin for this cube is right in its middle,",
			"and origin is just a term that we use to define the one point in space that",
			"defines where this object is.",
			"So usually it's in the center of an object.",
			"Not always, but that means this is the real one.",
			"And this is our complete and utter fake one",
			"that we have to do for every single object that is penetrating the portal.",
			"Now when we duplicate geometry and whether we",
			"not-- whether we duplicate or not, we have another problem to solve.",
			"I'm going to let this video play.",
			"I'm going to be toggling a broken part on and off.",
			"So when the cube is not behind the wall, that's the fixed version.",
			"And when you can see it behind the wall, that's the broken version.",
			"So if you think about replicating geometry,",
			"we have replicated the entire model to this orange portal.",
			"Which means all the stuff that is supposed",
			"to be in front of the blue portal is also sticking behind this wall.",
			"Because once again, we have defined the two faces to be coplanar.",
			"So what we have to do is we have to use what's known as a clip plane",
			"to tell the rendering system, you know what?",
			"Just don't draw any pixels if the mesh is on this half of this half space.",
			"And we define the half space to be the portal plane.",
			"And we can turn this clip plane on and off",
			"as we're drawing objects inside the portal plane",
			"and that's what makes it work.",
			"Otherwise it would clip the whole world.",
			"I'm going to play the video again.",
			"It happens.",
			"So, yeah, we're just telling it, hey, you",
			"need to just ignore every single pixel that's on that half of all of space.",
			"Don't draw them.",
			"And that makes it so it doesn't seem like it's",
			"sticking out the back in weird ways that people don't understand.",
			"OK, now this is a very similar concept.",
			"Something that we coined the term \"banana juice\" for.",
			"Even back in Narbacular Drop because it's just confusing.",
			"And I know you're asking yourself, what in the heck is \"banana juice?\"",
			"That doesn't make any sense.",
			"So we decided to use a completely insane term for it.",
			"Because even our technical shorthand for describing the problem",
			"didn't accurately describe what it was.",
			"So we decided to use a term that--",
			"it was obvious that explanation was needed.",
			"So what we've got here is I've got my orange camera",
			"and I'm looking into the orange portal here.",
			"And that means I've got my blue camera, virtual camera here,",
			"looking out of the blue portal.",
			"And if you remember back to my example, we've",
			"got this geometry that's behind the blue portal.",
			"And it's between the blue virtual camera and the portal,",
			"and if we render that, it's going to look completely broken.",
			"So \"banana juice\" is a term to define this broken stuff",
			"that you would see if you were looking behind the thin wall.",
			"And I have a video of it here.",
			"I believe I'm toggling back and forth between views just like when",
			"I showed you rendering as one-to-one.",
			"And that's me turning off the clip plane.",
			"This is what it would look like if we were in the virtual space and the clip",
			"planes were not enabled and then I go back to our main view.",
			"And you'll see as I move around in a second that it looks completely broken",
			"and it kind of breaks your brain if you don't understand what's going on.",
			"So that is \"banana juice,\" and you fix it exactly the same way",
			"as with the entity clipping.",
			"You have clip models, but what we do is I'm going to replay the video here.",
			"If you're watching, this entire part of the level is now clipped.",
			"So what we do is while we're rendering a virtual camera,",
			"we just clip the entire world behind the portal plane.",
			"All of it.",
			"Everything that's back there.",
			"So that's how you fix \"banana juice\" too.",
			"It's not super difficult once you understand it,",
			"but I can tell you it took me about two days",
			"to figure out exactly what was going on when I originally saw it.",
			"It just didn't make any sense.",
			"So moving on again, I know we're jumping a lot and I'm sorry.",
			"We're just going to keep moving on at a quick pace.",
			"So infinite recursion is something that people kind of expected",
			"to see when they were playing portal.",
			"If you ever played the original Narbacular Drop,",
			"we didn't support any form of recursion and it was kind of a letdown.",
			"So I'm going to go into how this works.",
			"So in this view, you can see that we have this blue portal.",
			"That's our first recursion right here and it's taking up most of the screen.",
			"And then we've got this blue portal that you can see the entirety of it.",
			"That's our second recursion.",
			"And this one in here is completely and totally fake.",
			"So that one, there is no portal there whatsoever.",
			"What we're doing is we're taking whatever we see",
			"of this portal, the second recursion.",
			"We're taking that exact view from the previous frame.",
			"We're taking those pixels and then we're basically doing a fix up",
			"in case you moved your camera around.",
			"And we're applying the texture coordinates from the second portal",
			"to where the third portal would be.",
			"And by a completely fake, I mean we didn't even render this blue oval.",
			"That's just a copy of this oval right here.",
			"So it's the exact same thing as if you point a video camera at a video monitor",
			"that's showing what it's recording.",
			"You get that feedback loop.",
			"But we have access to a little bit of extra special math.",
			"That means that we don't get that weird snaking",
			"effect if you move it back and forth.",
			"We can fix it up quickly.",
			"But this video is actually going to show you about how this quickly breaks down.",
			"Because if you're thinking ahead, you might",
			"be wondering what happens if you can't see all the second portal.",
			"And the answer is that we stretch it.",
			"So as you watch the third one, it just kind of stretches off in weird ways.",
			"Which is a problem that, if we spend a bunch of time,",
			"we probably could have fixed.",
			"But in game development, sometimes you just call it good enough",
			"and move on because I bet anybody that played the original Portal never",
			"noticed this whatsoever.",
			"[LAUGHING]",
			"",
			"So another breakdown of it, which I find personally annoying and interesting",
			"at the same time.",
			"I'm just going to show the video of it first.",
			"As I'm walking, you'll notice at the third recursion, which is completely",
			"fake, you're going to see a pop.",
			"You're going to see every single time I walk through a portal, it pops around.",
			"So this is actually fairly easy to explain once you understand--",
			"really understand how the hack works.",
			"So if you look at my visualization here, this",
			"is what the actual recursion would look like if we actually did it.",
			"So we've got a couple of portals here at these blue lines.",
			"And so inside our first portal that we're fairly close to,",
			"our field of view is really wide.",
			"And then as we get to our second portal, it gets really narrow really fast.",
			"But then as we get to the third, it narrows even more.",
			"And then the fourth, it narrows even more.",
			"But since we're cutting and pasting, the second recursion,",
			"if you look down here on this visualization, this is the hack.",
			"So we take this one, the second visualization, and copy",
			"and paste it onto the third and onto the fourth.",
			"And you can notice that this doesn't converge at all.",
			"It doesn't narrow.",
			"So we're seeing the same amount of wall around each",
			"of the recursions no matter what, no matter how narrow this magenta cone is.",
			"So as we walk through a portal, the magenta cone,",
			"we're picking a portal that's further off because now",
			"that's the second recursion after we walk through a portal.",
			"So it starts off narrow, which is closer to what",
			"it should look like at infinity.",
			"It should narrow to basically where you're seeing a blue tube.",
			"But then as we walk closer and closer to the main portal,",
			"then it's going to widen and widen and widen.",
			"And so there's just a pop where it snaps into place.",
			"So hopefully that made sense.",
			"And once again, completely changing topics because we",
			"got so many things to cover.",
			"So when we're rendering portals, we have to have",
			"a mix of rendering first person and third person.",
			"So in this case, you can see I've got my third-person model over here",
			"through this portal.",
			"Another third person model over here.",
			"And then we don't see it in the main view because I'm about to turn it on.",
			"It would look really weird if you saw the third-person view in the main view.",
			"Yeah.",
			"I mean, some games do try to fix this with very special representations.",
			"They'll try to draw just the legs or something like that.",
			"But, yes, so we have to have a complicated system",
			"to figure out when to draw third person and when to draw first person.",
			"And if you were to guess, I bet you would say, well, just",
			"render a third person every time you look through a portal.",
			"And it turns out it's slightly more complicated than that.",
			"I'm not actually going to get into the complicated version,",
			"but I'm going to show you how it's broken",
			"if you use that simple rule because why would life be easy",
			"and we would just be able to render just when",
			"we're on the other side of a portal.",
			"So in this case--",
			"let me look up.",
			"So you'll notice in this case, I'm on a tilted angle.",
			"And this is a case where my feet are on one side of the portal",
			"and my eyes are on the other side of the portal.",
			"So it kind of breaks the original system that",
			"would say, oh, just render if you're on the other side of a portal.",
			"And so, yeah, it's a little more complicated.",
			"Not terribly.",
			"It should actually look way more broken than this,",
			"but we actually had the fix in several places.",
			"And this is a special build where I had to go back and break things",
			"and only broken it in one place.",
			"Yeah, OK.",
			"And then the last on our rendering portion.",
			"So earlier I had talked about how we need to duplicate",
			"geometry that is mid-portal.",
			"But there's also another thing that we need to duplicate,",
			"which there are screen space affects where we can query",
			"draw operations and things like that.",
			"And so one way that we use these draw operations that are in screen space",
			"is to determine how much light glare to use around these lights.",
			"And so how these work are basically we draw a quad",
			"while we're drawing the light.",
			"And then we say, OK, in a couple of frames",
			"I want you to tell me how many pixels actually drew.",
			"And we're not allowed to actually query this immediately because of pipeline",
			"reasons.",
			"We don't have the results for several frames.",
			"So we have to cache off that handle that says",
			"how many pixels did you draw and we'll get the result at some point later.",
			"Sometimes you're lucky and it's just one frame, but usually two",
			"or three frames-- you have to save it for a while.",
			"But you may notice that even though we're not",
			"replicating the geometry of the light, we're drawing two of them",
			"because they're in screen space.",
			"So that means that this query system had to be smart about it",
			"and I'm going to show how we have two separate results.",
			"Now if we had used the engine as it was originally written,",
			"there would be just one query for one light.",
			"But then that would mean that these lights would dim in unison.",
			"So we need to have separate buckets for each view of portals.",
			"And every view query that portal--",
			"any view query that is issued while in that recursion,",
			"we have to keep it in a totally separate bucket and call it back later.",
			"And then as we walk through portals, we have to transfer those buckets.",
			"So if I were to walk into the blue portal at this point, all of those",
			"handles we have to transfer to the main view.",
			"And then all the ones that are from the main view we transfer into what was now",
			"orange because we would be walking out of this orange one",
			"if we walked into the blue.",
			"So, yeah, that is the quick set of rendering things I wanted to cover.",
			"So now I'm going to hand it off to my colleague, Tejeev,",
			"to talk a bit about design.",
			"Give your spatial thinking a bit of a rest.",
			"[CHUCKLES]",
			"",
			"TEJEEV KOHLI: So that was a lot of technical stuff",
			"about rendering of portals.",
			"And you can see it's more complex than it seems at first.",
			"The naive solution seems like we'll get you most of the way there,",
			"but then as you start putting in more things in the game and more ways",
			"to play a game, to interact with the game,",
			"you see there's a bunch of different complexities",
			"that you have to account for.",
			"And a lot of those complexities are not just in a technical sense,",
			"but also from a design sense.",
			"So I just want to talk through some of the issues",
			"that we came up with as we were making Portal 1 and 2 and some of the ways",
			"we tried to solve them.",
			"One of the first things I wanted to mention",
			"was when first coming up with the idea for portals,",
			"before figuring out if we should spend a bunch of time",
			"making this idea, this new game mechanic that most people haven't seen before.",
			"What we did was--",
			"Dave and his team made a prototype of Portal",
			"in a 2D game engine that is used in DigiPen while they were students.",
			"And it was made in-house DigiPen 2D engine.",
			"And you can see here that it's a 2D version of Portal,",
			"but it's still got all the basic game mechanics that are used in Portal.",
			"And the main goal of doing something like this is to vet out the mechanics",
			"and see if they're still fun at their core.",
			"And part of what you do here is you playtest, right?",
			"You make this simple prototype, and you get",
			"other people to try it out and play it and say, hey, is this fun?",
			"Is this something that we should spend our next year working on",
			"as a proper 3D game?",
			"And the prototype you can see had most of the basic functionality",
			"there and kind of vetted out the idea of the mechanics to take it forward.",
			"And as we take the mechanics forward, one",
			"of the first things that you realize is this",
			"is a brand new mechanic that people don't really understand",
			"and you have a train them.",
			"Train them with how the mechanic works and also",
			"train them with sufficient knowledge so they",
			"can use that mechanic to solve puzzles, which is the core of the game.",
			"And one of the things that we did is you have",
			"to have certain sections of the game where",
			"you can be sure that the player has the knowledge that they need to progress.",
			"So a lot of this is about making sure that the levels you're designing",
			"are done in such a way that when the player finishes that level,",
			"they have that knowledge that you want them to have.",
			"And one of the ways we ensure that is through doing a lot of play testing,",
			"and play testing is something I'll talk about a little more as the talk goes",
			"on.",
			"But the basic idea of play testing is just",
			"getting someone else to play the game.",
			"And that someone else could be a coworker",
			"who sits next to you, your friend--",
			"anyone else really.",
			"Someone you get especially to come play the game from outside the company,",
			"but usually it's just your coworkers, people that sit next to you.",
			"People that see you work on the game but don't know exactly what you're doing.",
			"And you can observe them and see what they're doing,",
			"get some feedback from them, and then use that data",
			"and iterate on the mechanic.",
			"And you can see here, this was a level in Portal 1.",
			"It was pretty early on, this level, and you could see the portals here.",
			"The blue portal here is moving on a timer.",
			"It moves from one to the next to the next.",
			"And the idea of this level was by the time players solve this,",
			"they understand that I go in one portal and come out the other.",
			"That's the basic idea here.",
			"And in Portal 1, this level did a pretty good job of teaching players that.",
			"For Portal 2, we have a very similar puzzle.",
			"I'm going to just try and play here.",
			"It's a pretty similar puzzle.",
			"The idea is the same thing.",
			"You have the three sections that the portal can go.",
			"The one change we made here was we move the portal away from a timer",
			"and moved it to a button.",
			"So this way the player has more control of where the portals are opening.",
			"There are a few reasons for this.",
			"The main one here is like the level in Portal 2 has a lot more visual noise.",
			"There's a lot more like--",
			"it's an old level, a lot of foliage, a lot of destroyed stuff.",
			"So it's not as clean as Portal 1.",
			"And also, there's a case of Portal 2, there's",
			"a lot of people that have already played Portal 1",
			"and are probably already familiar with the mechanics.",
			"So we don't want them to have to go through the timers",
			"and wait for all the things to happen, even though they know how it works.",
			"So this way they can just go in and show us",
			"that they know how the portals work without having",
			"to wait through all the timers.",
			"And the basic goal is the same thing.",
			"That by the end of this level, we're confident that the players understand",
			"how portals work.",
			"",
			"One of the other things that you learn through play testing",
			"is you learn what you need to teach the player.",
			"There's sometimes when you'll be making the game",
			"and there's certain things that you as a designer or as a creator",
			"won't think are challenging concepts or are things that need",
			"to be talked to players explicitly.",
			"One of those things that we noticed early on",
			"is this concept here where a lot of players kind of thought portals",
			"were one way.",
			"That you go in one and you come out the other and that's it.",
			"But they have to be taught that you can actually go in both ways.",
			"You can go in the blue one and come out the orange,",
			"or you can go in the orange one and come out the blue one.",
			"And so this puzzle specifically does that, where the blue one",
			"is the only one that'd be moving.",
			"The orange one stays stationary.",
			"First you go in the blue one, you come out the orange one, replace the blue,",
			"and then you go in the orange one and come out the blue one.",
			"The idea with this again is you have to figure through play testing",
			"is how you figure out the different things.",
			"The different discrete small things that you need to teach the player.",
			"And also try to figure out how to teach them in a way",
			"where they're figuring it out instead of you telling it to them.",
			"So for the most part in Portal 1 and 2, there's",
			"certain things that we tell the player.",
			"But for the most part we want them to figure it",
			"out and have that epiphany themselves.",
			"Because then they really learn it.",
			"If you just tell it to them, they might not take in the exact knowledge.",
			"Another thing here is this was a level in Portal 2,",
			"but we noticed through one of our play tests--",
			"I looked through a few of our play tests that players were super",
			"hesitant to place portals on the floor.",
			"Even though this level is probably the fifth or sixth one in the game,",
			"and you've done that a few times in the game before this.",
			"But usually you are doing it way down there",
			"and doing a fling mechanic where you fly through the portal and come out.",
			"So players have placed portal on the floor before,",
			"but they haven't done it right at their feet.",
			"So we had to design a scenario here where the only way forward--",
			"you're trapped in this black room with nothing else",
			"and the only thing you can do is place a portal on the floor there.",
			"And that's one of the things that you realize as you keep testing.",
			"You'll come across players of different skill levels",
			"and different knowledge of video games and different knowledge",
			"of how controls work.",
			"And typically you want to make sure that you're not only catering",
			"to the low end or the high end.",
			"You want to make sure that both of them can have a good time with your game.",
			"So you want to design puzzle games in a way that aren't super intrusive.",
			"If a player that sees this get here already",
			"knows that I can place portals on floor and go by.",
			"This doesn't seem like anything that's stopping him.",
			"This just seems like part of the level.",
			"But to a new player that comes in here and is",
			"like I don't know how to proceed, it takes them a while to figure it out.",
			"And then when they have that aha moment, they feel pretty smart about it.",
			"So you want to make sure that you're designing stuff",
			"in a way that isn't frustrating players that already understand the mechanics,",
			"but also isn't making players that don't understand the mechanics have",
			"to be super frustrated as well.",
			"",
			"Another thing that we had to do--",
			"Portal 1 and 2 both have this mechanic where you go into a portal on the floor",
			"and come out one on the wall and it keeps your momentum and velocity",
			"and flings you forward.",
			"One of the things we noticed while we were working on this mechanic",
			"is that there's a lot of times when players don't exactly quite line up",
			"as they're falling through the portal.",
			"Which means that when they fall in, they're going to fall out--",
			"they're not going to come out of the portal on the wall in the correct way.",
			"And a lot of times players won't know that they had the right solution,",
			"they just kind of messed up the execution a little bit.",
			"And we want to try and help the players in these cases,",
			"but again try to be not intrusive about it.",
			"Because you want to make sure that the players--",
			"as they're solving puzzles, they're not thinking",
			"that they had the right solution but it didn't work the first time I tried it.",
			"So now I have to rethink the whole solution even though the solution was",
			"correct the first time.",
			"So one of the things we used-- we used a few different things",
			"to help the players out in this way.",
			"And again, with the idea of them being mostly invisible to the player.",
			"They're not always completely invisible and in some cases",
			"we have ways to opt out of them.",
			"But this is one of the things that we used.",
			"So if you notice here, the player's going",
			"to drop through the orange portal.",
			"But as you notice as I walk through--",
			"walk forward here, I'm purposely not going to fall exactly straight.",
			"And one of the mechanics we had in the game was--",
			"it was pretty subtle there, but I'm going to do it again.",
			"You'll see I'm walking to the side and the game kind of funnels you",
			"into the portal.",
			"So we had the special thing we used in portals, for portals",
			"that are on the floor facing mostly up.",
			"Imagine there's a cone coming out of the portal,",
			"and if you're falling from some height and if you're",
			"within that cone and the cone--",
			"it's not super wide.",
			"It's pretty narrow.",
			"If you're within that cone, then we kind of",
			"funnel you into the center of the portal.",
			"So that when you're coming out of it, you're",
			"going to be lined up perfectly with it.",
			"And as you can see, the third time I did it there, it didn't happen.",
			"Because the way this works is that it only",
			"works if you're looking at a portal.",
			"So it works the second time, but the third time I'm",
			"going to go mostly in the same direction and it's not going to work.",
			"So that's our way of trying to make these things be non-intrusive.",
			"To where if players don't expect to go in that portal, it's not going to work.",
			"But if the player is looking at a portal and they expect to go in it,",
			"we kind of nudge them along a little bit.",
			"And you can see it here, and this is a second case",
			"of the same thing where there's a portal on the floor and the ceiling.",
			"And you can see as the funnel is working,",
			"the play is perfectly in the center of it.",
			"But I'm going to look forward a little bit and disable the funnel.",
			"And you can see the player's going to go off axis",
			"because the funnels are disabled and the player slowly went out of it.",
			"",
			"Yeah, the funnel is disabled now.",
			"",
			"And again, the idea of this is to reduce a bunch of the player frustration",
			"and to reduce a bunch of the false negatives that players get.",
			"You want to make sure that players that think they've got the solution,",
			"and if it was the correct solution, you want",
			"to kind of help them out a little bit.",
			"You don't to solve the puzzle for them.",
			"You don't want to give them, like, here's the answer.",
			"But you do want to try and help them out a little bit",
			"because that helps that makes the game a little bit more fun",
			"and reduces the frustration.",
			"",
			"So that was the help that we had for when you're entering portals.",
			"We also have the opposite and that was there in Portal 1.",
			"And in Portal 2, we introduced something that",
			"was the opposite of a helper, which we used when you're coming out of portals.",
			"So Portal 2 had this mechanic called Aerial Faith Plates,",
			"which is pretty straightforward.",
			"You step on this faith plate and it propels you to the air.",
			"And the level designers can place the faith plate on a level",
			"and can kind of control the trajectory of the arc",
			"of where the player is going to fly.",
			"And this arc is not really visible to the player,",
			"but it's pretty apparent based on the level design.",
			"So you can see in this one, I'm going to play the video as I'm talking",
			"and then maybe play it a couple of times.",
			"So the tech that was developed for these Aerial Faith Plates",
			"is something that we reuse for a fling helper.",
			"So you can see here there's all these--",
			"I'm going to turn on some debug draw.",
			"And you can see right here.",
			"So this green arc here is the arc that's on the faith plates,",
			"but you can see there's some stuff coming out of the walls there as well.",
			"So this is a part of the level where the player is going to fling out of.",
			"",
			"He's going to fling a box out of that actually because he wanted this to work",
			"for objects as well as the player.",
			"So you can see as the box goes through here",
			"and then here, these are those faith plates.",
			"And then when the box comes out of that, we",
			"have the box follow the arc that's kind of predetermined.",
			"Because that's I think what the player is expecting at that point.",
			"They expected to have solved the solution-- solve the puzzle.",
			"But the funnel, the trigger here--",
			"this kind of corrects the arc to make sure that it's always going",
			"to go in the place the player expects.",
			"And we also have a case of the same things working for the player.",
			"So you can see here there's two different arcs that",
			"are coming out because we doubled up the triggers over here.",
			"The way these triggers worked in the game",
			"is they won't always enable when the player touches them.",
			"They require a minimum velocity threshold.",
			"So the player has to be doing most of the work.",
			"So the player has to have figured out a way in the level",
			"through the puzzle design to get that velocity.",
			"But we know that there's some differences in physics and differences",
			"in the exact mechanism you might use.",
			"So we're just saying if you got the minimum velocity that we acquire,",
			"we're going to take it all the way there.",
			"So in this one, you can see we have two different cases.",
			"So if I just fall out of the portal, it's not going to activate any of them.",
			"If I somehow manage to get some velocity,",
			"is going to activate the fail case one and take me there.",
			"And the reason we have the fail case one is",
			"because we want to make sure that if players somehow get",
			"most of the velocity but bonk on the wall,",
			"they don't keep thinking that they can-- that's the correct way to do it.",
			"So we want to make it obvious that you failed.",
			"So again it's the same way.",
			"We have to help-- you're helping the players out but not by giving them",
			"the solution.",
			"Just by making it obvious that the thing you did was correct or wrong.",
			"And then if you do the correct way in this level, which",
			"is to get philosophy doing that, and then you make a portal there,",
			"you're going to do the correct thing and swing out of it.",
			"And again, the main idea here is to get rid of those false negatives.",
			"Especially here because there's a few different spots on the wall",
			"that you can put a portal.",
			"And we don't really want to restrict a lot of that",
			"and just put the one square on the wall.",
			"That is the solution square.",
			"Because again, if you put the portal down here or put the portal up here,",
			"the arc is going to be slightly different.",
			"So this mechanism we had just kind of corrects",
			"those arcs and makes sure that it goes in the one or two ways that we want.",
			"",
			"Another thing we added in--",
			"this we added in Portal 2--",
			"was highlights for your portals so you can see where",
			"your portals are placed through walls.",
			"And this is something that's super useful in levels",
			"where you have to keep track of which portal you placed over there.",
			"So you know which one to place over here.",
			"Because sometimes it's like, OK, I just got out of the blue one",
			"and the orange one's over there.",
			"So if I place the blue one--",
			"oh, I got to do the whole puzzle again now because I placed the wrong one.",
			"So this helps a lot in just making sure that you know where your portals are",
			"so you can be like I want to come out of that one,",
			"so I'm going to place the other one.",
			"And this is something we added in Portal 2 and it was pretty helpful.",
			"And it's also helpful in the co-op version of the game.",
			"Because in the co-op one, you want to see",
			"where both the players' portals are at all times",
			"and this kind mechanic helps in that.",
			"Another thing we added to kind of help the player a little bit",
			"is a thing we call the placement helper.",
			"And this does not use a whole lot in the game,",
			"but there's a few sections in the game where",
			"we want to encourage the players to come out",
			"of a portal in a particular direction.",
			"So we have these things that we place in the level with a certain radius.",
			"And if you place a portal within that radius,",
			"we just kind of snap it to the direction--",
			"to the center of it.",
			"But they don't a timer.",
			"So if you place one portal and you're like,",
			"oh, I actually want to place it over here, you can always opt out of it.",
			"And that's again what I was talking earlier.",
			"You want to add something-- excuse me.",
			"You want to add these helpers in a way that, for players, they're mostly",
			"invisible to most of the players.",
			"But the players that want to opt out of them have a way of opting out of them.",
			"[COUGHS]",
			"",
			"Excuse me.",
			"So you can see the first portal that's placed does get snapped,",
			"but the second one that's placed is exactly where the player wanted.",
			"And we use these in a few spots in the game,",
			"but they weren't used a whole lot because for the most part",
			"you want to have-- you want to make sure the player feels",
			"like they're in control.",
			"",
			"And one of the other things that was a lot of fun",
			"while making Portal, and Dave will talk a lot about this--",
			"excuse me-- will talk a lot about this later is the physics of portals,",
			"or physics of objects interacting with portals.",
			"And for the most part we're trying to be super accurate with it, right?",
			"We're trying to make stuff work the way players expect in real life",
			"because that's kind of what we're trying to simulate here.",
			"But one of the things that we thought that we added here-- that we thought",
			"was more fun than accurate.",
			"So you can see the--",
			"[COUGHING]",
			"",
			"Sorry, I'm a little bit sick.",
			"You can see here that when the box starts off,",
			"it's just resting on the floor.",
			"So it's got no initial velocity whatsoever.",
			"So when you place the blue portal down, the expectation",
			"is probably that it keeps resting there or maybe it",
			"goes in the center of the portal and just stands there.",
			"But that's not a super fun game mechanic.",
			"So here we just have it be so that objects coming out of portals",
			"have some minimum velocity.",
			"So they always have some minimum velocity.",
			"And this works in lots of other parts of the game like the paint.",
			"And you can see here that there is some air",
			"resistance that takes place and the paint does slowly come down.",
			"But once it comes down to this minimum velocity, it just stays there.",
			"And this is-- it's like completely fabricated fiction.",
			"I guess there's no real physics for this.",
			"It's just kind of like this is more fun than trying to simulate real physics.",
			"So you can see here air resistance is making",
			"it go down, like they're slowing down.",
			"But once they get to the minimum velocity, they just stay there.",
			"",
			"This is about it.",
			"So once it gets here, it's just going to stay here.",
			"It's not going to go below that.",
			"",
			"And speaking of gels, the gels actually came up--",
			"were an idea that we had for our student game",
			"that we made while we were in DigiPen.",
			"It was called \"Tag--",
			"The Power of Paint.\"",
			"And in Tag, you had a paint gun that you used to shoot the different colors.",
			"And the Portal 2 mechanic was adapted from this and it's pretty similar.",
			"But one of the things we did get rid of for Portal 2",
			"was the idea of having the paint gun.",
			"Because one of the core ideas we had while working on Portal 2",
			"was that any mechanics we add to the game should really work with portals",
			"and should really interact at a core level with portals.",
			"So we thought instead of using a gun to move the paint around,",
			"it will made much more sense to use the portals to move the paint around.",
			"And that was kind of core not just with the gels, but with any new mechanic",
			"we added to the game.",
			"Was that portals is the core idea of the games.",
			"Everything we do should kind of center around how portals work.",
			"",
			"I'm just showing you the different colors we had in Tag.",
			"",
			"One of the colors that we added in Portal that wasn't there in Tag",
			"was the portal gel.",
			"And this was again going with the idea of how",
			"do we make the gels and the portals interact better.",
			"So this one just lets you spread around white paint",
			"so you can put portals anywhere that the paint can go.",
			"And this is a pretty cool mechanic in that",
			"it allows for a lot more open-ended level design and a lot more player",
			"freedom.",
			"Because you can play portals essentially anywhere now.",
			"Because for a lot of the game we're restricting",
			"where the players can put portals on the black surface or the white surface.",
			"And this just allows--",
			"you can just put white anywhere and put portals anywhere.",
			"We didn't use this a whole lot because it is pretty open-ended",
			"and it does break a lot of puzzle designs.",
			"But there are a few cases where we use it in a pretty open-ended way",
			"and have the player just kind of have fun.",
			"Spend some time painting the whole level and then figuring out what to do.",
			"And these kind of levels usually have a couple of different solutions",
			"because we don't know where the players are going to paint.",
			"So we just put a bunch of different ways to get to the exit and players.",
			"Some players figure out all the knobs.",
			"Some players find the first one and just go there.",
			"And it helps to break up the pacing a little bit from the conventional puzzle",
			"design with the specific spots where here are some white spots, here",
			"are some black spots.",
			"So it helps break that up a little bit.",
			"One of the things that didn't make it through from our student game",
			"was the sticky gel that you saw in the student version.",
			"So this is going to look a little bit broken",
			"because this is from a really old version of Portal 2",
			"because the sticky gel got cut pretty early on.",
			"And you're going to see some stuff here that doesn't really",
			"make sense, but just go with it.",
			"",
			"So you can see we used purple instead of blue here.",
			"So you can jump on-- you can walk on walls and stuff, which is pretty cool.",
			"So here you can see there's blue paint coming out of there",
			"but you can't see the actual paint blobs because there",
			"are invisible for some reason.",
			"I couldn't figure it out.",
			"But you can see the actual paint on the walls, on the floor.",
			"So this is just an idea of the kind of puzzles",
			"we were trying to come up with using sticky paint.",
			"There's an extra portal there for some reason.",
			"Ignore it.",
			"This is a really old version of the game.",
			"So this is the kind of puzzles we are trying to come up with.",
			"Of combining the different paint colors and portals together.",
			"But we did end up cutting this feature though.",
			"There were a few different reasons.",
			"One of them was obviously it is quite disorienting.",
			"You can see going up a wall and trying to figure out where",
			"the ceiling is, where the floor is.",
			"Especially in a lot of these levels where",
			"they're mostly just black and white.",
			"It gets pretty disorienting and we had more than a few play",
			"testers complain about that.",
			"But the other big reason that we cut it is because it didn't really",
			"interact well with portals.",
			"You don't really want to walk into a level",
			"and have the pots already placed for you.",
			"And there's no real good way to make pots on the entire wall",
			"without having to place the portal like 50 times.",
			"And also it didn't really interact well with the portal player",
			"physics and portal physics, and Dave will talk some more about the player",
			"physics through portals.",
			"And this is one of the things that you can see.",
			"We had a paint gun for a little bit, but we ended up cutting it.",
			"So you can see I'm painting the wall over here",
			"and I'm going to walk on the wall.",
			"But as I enter the blue portal, you can see oh, it's",
			"not going to let me go through.",
			"But if I go through this way, it works.",
			"And that's just one of the things that's like, well, we've got to solve this.",
			"We've got to ship like this.",
			"We've got to solve the problems.",
			"And we spent some time trying to work on these issues.",
			"But at some point, you realize that you're not",
			"guaranteed to solve these problems no matter how long you spend on them.",
			"So at some point you've got to just be like, OK,",
			"I don't want to spend an extra month or two",
			"trying to fix these problems not knowing if you'll get there.",
			"And plus there's other reasons why the mechanic isn't working out.",
			"So let's just stop working on this and work on other stuff instead.",
			"Another thing we ended up cutting--",
			"this is from Portal 1 that was present in Narbacular Drop was the ability",
			"to place portals through portals.",
			"And it's a pretty confusing thing and that",
			"was the main reason we cut it because most players just",
			"thought it was way too confusing.",
			"Because you're placing the blue portal by looking through the orange",
			"portal here.",
			"So the blue portal is--",
			"he's pointing through the orange portal here and facing the blue portal over",
			"here because the other blue portal is behind them.",
			"It's just like-- it's too confusing.",
			"And also it doesn't--",
			"there's not a lot of puzzle design that you lose by disabling this feature.",
			"The thing you do gain is players aren't getting super confused",
			"and also you're not necessarily cutting a bunch of puzzles",
			"that you can't make now.",
			"So this feature got cut as well.",
			"And this is something that we didn't really cut,",
			"but we stopped using in Portal 2 that was used a little bit in Portal 1",
			"was the idea of a double fling.",
			"And I'm going to show it here.",
			"So double fling is basically placing a portal",
			"while you're falling out of a portal.",
			"And it's one of those things that it works pretty well.",
			"It's a pretty cool mechanic.",
			"And it was used in a few spots in Portal 1.",
			"A couple of puzzles required it, like this puzzle here required you",
			"to do this double fling.",
			"But one of the things we noticed was a lot of players",
			"have difficulty in executing a lot of these super hyper-sized,",
			"high-precision movements even though they know",
			"what the solution of the puzzle is.",
			"So players will walk in this room and figure out, OK, I've got to do this,",
			"I've got to do that, and this is going to work.",
			"But then a lot of players have trouble walking out of a portal,",
			"making a portal as quickly, and it adds a lot of stress.",
			"And we wanted to move away from a lot of the twitch movement based stuff",
			"and towards more of a kind of, aha, I got it.",
			"That kind of stuff.",
			"And once you get it, we don't want you to spend a bunch of time",
			"in making sure you get the precise movements right.",
			"So this feature we didn't really cut it.",
			"It's still a mechanic that works in Portal 2,",
			"but none of the puzzles in Portal 2 required it anymore.",
			"And once we added the level editor, a lot of the puzzles people",
			"are making do require it and a lot of players like it.",
			"But it's not something that we thought we wanted to make everyone have to do.",
			"",
			"Another thing that we changed from Portal 1 to Portal 2",
			"was these energy balls.",
			"These energy balls at the time--",
			"part of the reason we used them in Portal 1",
			"was because they were there in Half-Life and it",
			"was an already created mechanic that we had that we could just keep from them.",
			"But the basic mechanic is these things fire--",
			"these things fire this ball that bounces around",
			"and it needs to go in this receptacle here under my gun right now.",
			"And it should go in this receptacle here and once it goes there,",
			"it finishes the puzzle.",
			"There are a few issues with this mechanic, though,",
			"in that there's a bunch of timing element involved here.",
			"Because the ball takes time to travel.",
			"And also if you get hit by it, you die.",
			"Which, I mean, it's fine.",
			"It's a game mechanic",
			"But for Portal 2, we just thought, how can we improve on this idea?",
			"And the thing we came up with was using lasers instead of the energy balls.",
			"Lower the volume a little bit.",
			"So here you can see it it's the same level from Portal 1",
			"and you can even see the energy ball dispenser going away and being replaced",
			"by a laser because we want to make sure the player is",
			"like, GLaDOS is improving these mechanics now",
			"and got better versions of it.",
			"So the laser effectively is very similar to the energy ball.",
			"It goes in one and you want it--",
			"it goes in over here and you want it to go to the receptacle over there.",
			"The big advantage here is that the reaction is instant.",
			"So if the player got the solution or not, it's instantaneous.",
			"You don't have to have situations where you place the exit portal",
			"and now you have to wait for the ball to go all the way across the level",
			"and see if it lines up or not.",
			"This way it just instantly does it.",
			"Plus it also opens up a bunch of different game play opportunities",
			"because now you can use multiple relays in the same level.",
			"You can have the cube that redirects the laser.",
			"So overall it felt like an improvement over the energy ball.",
			"",
			"And talking about lasers, so far we've been",
			"talking about a bunch of these smaller decisions we've",
			"made to solve these smaller problems as they kept coming up, like entering",
			"exiting portals, making sure things are lined up or not,",
			"improving on the specific game mechanics.",
			"But one of the things that you need to do",
			"when you're trying to make a whole game is",
			"to see how these mechanics come together and how you can combine them together",
			"to make a whole game.",
			"To make a few puzzles that increase into difficulty, complexity,",
			"and go towards some crescendo.",
			"And one of the ways we did that is by kind of using this kind of process",
			"that I'm going to go through.",
			"And we used it a couple of times both in Portal 1 and in Portal 2.",
			"And there's a few different mechanics that we used the cycle over and over",
			"for.",
			"And that's kind of how the entire game track is designed.",
			"So it starts off with an introduction, and the introduction",
			"is the puzzle we just showed you.",
			"That's the intro puzzle for lasers and it's really straightforward.",
			"It just shows you the mechanic.",
			"You go through one portal, come out the other, goes into the receptacle.",
			"It's really straightforward.",
			"Introduces the mechanic.",
			"Most people would get tripped up on this.",
			"From there, we then try to saturate the player with that same mechanic.",
			"We introduce different twists on that same--",
			"without introducing a whole new mechanic,",
			"we just introduce different versions, different tweaks on that same idea.",
			"So this room still only has lasers.",
			"But now we've introduced relays and cubes.",
			"And you can experiment, figure out how to connect the three lasers together.",
			"Figure out how to move the cube, figure out",
			"how to move the laser through the portals.",
			"But still it's only lasers.",
			"Nothing super complex yet.",
			"Then we give you more of that.",
			"We give you more of just the same mechanic.",
			"Here there's two things firing lasers and two things you've got to connect.",
			"And so it's the same idea.",
			"It's like just using lasers, but not super complex.",
			"Just building on the complexity little by little.",
			"Followed by a puzzle that's like, OK, this",
			"is a puzzle that's going to teach you all about lasers.",
			"By now you've seen lasers in a few different ways.",
			"This one, once you get this, you understand how lasers work.",
			"You know everything there is to know about how lasers work.",
			"So this puzzle here--",
			"excuse me-- that's two cubes and three things firing lasers,",
			"and on the other side of the puzzle there's",
			"three things-- you've got to connect them.",
			"And this puzzle is very difficult, but by this point,",
			"you've been slowly introduced to different ideas",
			"of how lasers work and this one is taking them all together.",
			"And then once we've done that, then we start combining them.",
			"Then we start taking, OK, now you've got a laser",
			"and a different cube and a bridge.",
			"And by this point you've seen a whole separate--",
			"we've done the whole introduction, saturation, graduation track",
			"with bridges as well.",
			"So by this point, you go in there and, OK, I",
			"know how bridges, I know how lasers work.",
			"How do they work together?",
			"How do I combine them together?",
			"And then we start escalating from there.",
			"And then you go into this puzzle that has a bridge, has a laser,",
			"has a turret, has some cubes coming out, has a catapult,",
			"has a bunch of this stuff.",
			"But by the time the player gets here, they're",
			"not really overwhelmed by it because they",
			"have been introduced to all these mechanics separately and also",
			"smaller combinations of them.",
			"So that when they get to this point where",
			"there's a bunch of different mechanics, they",
			"know how they all work individually.",
			"And that's kind of the process that we use of slowly ramping up",
			"the difficulty, first with a single mechanic, then combining them.",
			"And then that's kind of how we take the individual smaller design elements",
			"and combine them together and turn them into the whole game.",
			"",
			"And now I think Dave is going to come back and talk some more about physics.",
			"",
			"DAVE KIRCHER: And after I cover these last four bits of physics,",
			"we're going to open up for questions.",
			"I know we have a whole miscellaneous section that we've outlined here,",
			"but that's more just buffer material.",
			"So I'm hoping you're going to put your spatial thinking caps back on.",
			"So how we handle portal transitions is there's two distinct methods.",
			"One is that we've got volumes here, which we call touch volumes or trigger",
			"volumes.",
			"And those are centered around the portal.",
			"So I've got my blue portal here and that was green volumes here.",
			"And you'll notice it's entirely in front of the portal--",
			"that's important.",
			"And then we've got this yellow volume here.",
			"So the yellow volume is--",
			"it's whole job is to tell us which objects in the world",
			"are just kind of close to a portal, and I'll come back",
			"to why that's important to the minute.",
			"But it separates us from having to think about objects",
			"that are way out in the world all over in the white space around here.",
			"We don't have to think about them.",
			"And we also know they're not objects behind the portal",
			"because we're only interested in stuff that happens in front of the portal.",
			"And this green volume here is where most of the magic happens.",
			"This volume says the objects in it are so close to a portal",
			"we need to think very hard about what they can do and what they can't do.",
			"We're going to let those objects start passing through the portal.",
			"And so we keep these objects in two separate lists.",
			"Objects that are in this green volume no longer intersect with any objects",
			"out in the white space out here.",
			"They don't have to think about them.",
			"They're kept in a completely separate list",
			"and they don't collide with them at all.",
			"They also don't collide with world geometry.",
			"I'll get to that in a bit.",
			"And then objects in this yellow volume are",
			"the only ones that the objects in the green volume have to worry about.",
			"So these are objects that are just kind of close to a portal.",
			"And so another important interaction with portals is ray casting.",
			"So we're only interested in rays that pass through the portal quad.",
			"So if a ray happens to just pass the portal plane,",
			"but not intersect the quad, we don't do anything with it.",
			"It's not special.",
			"We just treat it like any other ray in the world",
			"and let it do its merry thing.",
			"But we got this magenta guy.",
			"It intersects with the portal.",
			"So now we have to recast a new ray out the other orange portal which",
			"essentially gives us two ray segments.",
			"And if you think about that, if you were to write any piece of code that",
			"just did the ray casting and hand back two ray segments",
			"when somebody was expecting one, you're probably going to get weird results.",
			"So this means, the fact that this is happening,",
			"means that we have to go through every single system in the game that possibly",
			"casts a ray through a portal and fix every single one to understand.",
			"But if we give you back multiple segments, different things happen.",
			"Instead of assuming that this starting point goes directly",
			"to this end point, which doesn't even go in the direction",
			"it wanted to in the first place.",
			"And so at its core, remember how I told you",
			"every object had an origin, a single point that",
			"defines where it is in space.",
			"We use the ray casting to determine if an object that's",
			"in this green volume and just kind of moving around.",
			"We use a recast from one point where it was",
			"one frame to one point where it was another frame",
			"to see if it either passed through a portal or outside the portal",
			"because if it went over this way, we do nothing at all.",
			"If we went this way, we need to teleport it.",
			"So that's the basics of our handling.",
			"",
			"So how do we let objects pass through walls?",
			"This is one of the things I spent a whole lot of time",
			"on because we wanted our portal transitions to be very seamless.",
			"Remember in one of my first slides I showed you.",
			"It should be like a door.",
			"People expect to walk halfway through the door and just stand there.",
			"And how we do this is--",
			"I'm going to talk about it a bit first.",
			"Whenever you place a portal, we take a snapshot of all the world geometry",
			"around you and create a very small representation of that",
			"and carve a hole in it.",
			"And we don't do this for the entire world because that takes way too long.",
			"And by way too long, I mean a quarter of a second.",
			"And in game terms, that's just way too long.",
			"I don't know if it was a quarter of a second.",
			"I remember originally that we had a problem where",
			"I think carving the mini-version took a quarter of a second,",
			"so it probably took several seconds.",
			"So I'm going to show you a scenario here where I've got a portal",
			"and it's going into--",
			"it's going along this corridor gateway, gangplank thing.",
			"And it's going to go into this little classroom area.",
			"And as I go back around the wall, I'm going",
			"to show you a debug mesh of our collision representation.",
			"So in this debug representation, we've got these green lines.",
			"These green lines and then also these cyan lines--",
			"or I'm probably mispronouncing that.",
			"I call them bluish, but my colleague has told me I need to call him cyan.",
			"[CHUCKLING]",
			"",
			"So I'm going to call them bluish now.",
			"So these green lines and the blue lines are in local space.",
			"So they're with the blue portal that we placed locally.",
			"And I know it's super hard to see, but there",
			"are a bunch of red lines over here and some magenta ones.",
			"Those are from the other portal that's in the classroom that",
			"are flipped and glued to the back of our local portal.",
			"So it's all in this local space and around this blue portal.",
			"We put some new stuff behind it and some new stuff in front of it.",
			"And so you may be asking yourself what the colors actually mean?",
			"Green here is representing a brush geometry, which most level editors, you",
			"can create walls and various shapes directly in the level editor.",
			"And at least in our terminology, we refer to these as brushes.",
			"So they're usually very simple convex shapes and super easy to deal with.",
			"And this bluish geometry is from what's known",
			"as a static prop, which is a model that somebody modeled in a model editor.",
			"So it's going to be arbitrarily complex, but it",
			"has to be made up of convex shapes.",
			"But we take a small snapshot of that and then carve it up.",
			"Sorry, I forgot to mention.",
			"So we call it a static prop because we are guaranteed it does not move.",
			"And that's very important because it's really easy to simulate things that",
			"don't move.",
			"They don't move.",
			"",
			"And the same is true of the red and magenta here.",
			"The red is the brush geometry on the paired portal side",
			"and the magenta is static props on the other side, which is mainly the desks.",
			"And as I'm looking through here.",
			"You can see just a small snapshot, and then you",
			"can see this magenta outline here of the desk mesh on the other side.",
			"It's important to know that that's not me looking at the mesh",
			"through the portal.",
			"That's the local space version and it just",
			"happens to line up the desk because we have to make sure everything lines up.",
			"Otherwise your physical interactions will seem weird",
			"if something is halfway in a portal and it's",
			"kind of not colliding with something or it's colliding with it wrong.",
			"As I walk through, you'll notice all the colors",
			"change because we switched spaces when I walk through in a second.",
			"So now all the colors are local space for this side.",
			"So, yeah, that is how we carve a hole.",
			"It's a very, very small area of the level that we carve a hole in.",
			"And so we're getting back to the volumes I showed you two slides ago.",
			"If we carve a small representation of the world,",
			"we have to know when the player is colliding",
			"with that versus the regular world.",
			"Because if they're colliding with the regular world,",
			"they're going to collide with the wall that's behind the portal",
			"and they're not going to go through it.",
			"So we have to use exclusively that carved version",
			"when they're close to a portal.",
			"And we do that-- we're using the same volumes I was talking about earlier.",
			"This is a 3D representation of them.",
			"And you'll notice that they have space--",
			"a large amount of space above and below the portal.",
			"That's important because it's a 3D space instead of a 2D space.",
			"So as I enter the yellow space, I still collide with the world.",
			"I still collide with all the desks and things.",
			"Because I'm still-- while I'm exclusively in the yellow volume,",
			"I'm still colliding with the world.",
			"I'm going to show you.",
			"It's a bad example, but it's the video I've got.",
			"I'm going to hit this chair behind this desk",
			"because it's still in the real world.",
			"And then as I transition into the green volume,",
			"I am exclusively colliding with our carved version of it.",
			"Which-- that was a bad frame to cut.",
			"If I happen to look back in the portal--",
			"which side is scrubbing?",
			"OK.",
			"Sorry.",
			"So if you happen to look inside the portal, you might be able to see it.",
			"There is-- I know it's super hard to see, I'm sorry.",
			"But we did carve a hole.",
			"There's no there's no geometry right here to stop us going in.",
			"And since we're exclusively using this new mesh,",
			"we're allowed to just go through that space.",
			"",
			"OK, so more importantly than static geometry, which",
			"doesn't move and is super easy to physically simulate,",
			"we have dynamic props and things that move.",
			"Specifically in this case, boxes.",
			"So the way we model this is very similar to how we did with geometry.",
			"We're going to be duplicating everything and I'm",
			"going to show you by walking in a portal.",
			"So this blue box that just appeared is my player.",
			"My player of physics object that's replicated from this orange portal",
			"to the backside of the blue portal.",
			"And this is using a system known as a physics shadow.",
			"At least that's what our system is.",
			"I'm not really a physicist.",
			"That's just what we call our representation of it.",
			"So I mean, I haven't dealt with many physics systems when I talk about that.",
			"So what a physics shadow does that's different",
			"than our rendering geometry is we're not allowed to actually teleport it",
			"from one frame to the next because if you teleport a physics",
			"object, then all sorts of interactions that intersect,",
			"they have no previous basis to go from.",
			"Of like how to solve that.",
			"They can't rewind time because they've suddenly teleported",
			"into an interpenetrating space.",
			"So all of our physics objects--",
			"we give them a target of where they need to go.",
			"Sorry not all of our physics options are shadows.",
			"So just like the player volume and just the examples I'm about to give you.",
			"We told them where we want them to go and they try their best",
			"to apply forces and rotations to go there, but if it doesn't work,",
			"we're kind of SOL and they do their best.",
			"So I'm replicating that for the player over there.",
			"And we're also going to replicate it for the cubes in a second",
			"once I get around to placing them.",
			"And so it's important to note that we're not really",
			"solving the discontinuity in space because that",
			"would be way too hard, at least for a person of my skill level.",
			"What we're doing is we're saying each side has--",
			"this cube over here is the master of it's physics and this cube over here",
			"is the master of its own physics.",
			"And this cube over here is just trying to replicate",
			"whatever this guy is doing.",
			"So they don't quite line up, but they work well enough.",
			"And in game development, good enough usually goes a long way.",
			"So as I'm using it, you might notice they don't quite work super well,",
			"but you can see that I've got this representation over here.",
			"I'm pushing it in my virtual version and it's all lining up kind of.",
			"And, yeah, that's how we do it in Portal.",
			"So I'm going to go ahead and tell you that I'm really glad that we",
			"didn't have levels with more than two cubes because if you try to do this",
			"with a train of cubes-- three or four--",
			"it breaks down horribly.",
			"And this last little bit is me just showing you",
			"that we're not intersecting with anything in the back of it",
			"because we're not inside the green volume or the yellow volume",
			"because we're behind the portal.",
			"It's really important to manage your lists of what can interact with what",
			"when we're faking holes in space and overlapping space.",
			"I spent a whole lot of time on this.",
			"And I think that is the end of our physics material.",
			"So we had some more miscellaneous filler material,",
			"but it looks like we've ran over a little bit of our initial time.",
			"So we're going to open up to Q&A now.",
			"We might get to our miscellaneous material later.",
			"But, yeah, if anybody has got questions, now would be a good time.",
			"",
			"AUDIENCE: Could you talk a little bit about how lights interact with portals,",
			"or just lighting on objects and, like, will you get shadows from the portal?",
			"DAVE KIRCHER: So originally, I had a slide on that.",
			"TEJEEV KOHLI: The question was about lights.",
			"DAVE KIRCHER: Oh, sorry.",
			"Yes, sorry.",
			"The question was how lights interact with portals and shadows and things.",
			"So I'm going to preface with saying that most of this stuff I did a decade ago.",
			"So if I say something that's not true, I'm not trying to lie.",
			"I just don't remember it.",
			"So basically there was a time during Portal 1",
			"where we tried very hard to make light work through portals",
			"and we kind of settled on a cheap solution.",
			"Where we would define a point barely in front of one portal,",
			"see what lights were projecting what amount of color on that,",
			"and just kind of make it a massive sphere on the other side that",
			"would kind of do that.",
			"So the downside was is that you only noticed it",
			"in cases that were very high contrast, which is also the case in where",
			"it was the most broken.",
			"So we just don't do it.",
			"TEJEEV KOHLI: On Portal 2, we tried for a while",
			"to have the portals themselves project light on things",
			"and that was also kind of broken for a while.",
			"And then we just took it out.",
			"DAVE KIRCHER: Yes, so we just punted on that one.",
			"Too hard.",
			"TEJEEV KOHLI: Any other questions?",
			"Yeah, sure.",
			"AUDIENCE: What were the performance implications",
			"of having to draw on that stencil buffer multiple times?",
			"DAVE KIRCHER: So the question was what were the performance",
			"implications of having to draw multiple scenes with the stencil buffer.",
			"So it's very analogous having to just draw a more complex scene.",
			"You're just drawing more quads and things.",
			"On one of the slides in our miscellaneous section--",
			"you know what?",
			"Why don't I just go ahead and jump to it?",
			"",
			"So it's very important.",
			"So when we're rendering things in a 3D space,",
			"we have what's known as a frustum.",
			"It's kind of a pyramid, which comes out from your camera.",
			"And you can use it as a very quick test to see if you should even",
			"bother rendering something at all.",
			"So I've got--",
			"I'm going to use my side--",
			"my sides.",
			"The sides are defined by the screen itself.",
			"So the screen that you're drawing has a top, has a bottom,",
			"so those project into space.",
			"So we take our one side we can say, OK, if an object is completely",
			"on the other side of this plane, we don't even",
			"need to bother trying to draw it.",
			"We can just skip it.",
			"And so one of the optimizations we have in Portal",
			"is that every time you look through a portal,",
			"we can find the frustum to a smaller space.",
			"I took the easy route in that I kept it as an object that",
			"still had four distinct sides.",
			"So sometimes it's a little bit broken.",
			"But in this case, you can see--",
			"in this case, you can see I'm looking through a blue portal",
			"at this little button here.",
			"And I've got this-- it's probably impossible to see,",
			"but I've got this mesh coming out.",
			"This is the updated frustum of everything we try to draw.",
			"So you can see it mostly just encapsulates a little bit of level",
			"and the button itself, and that helps us not even attempt to draw",
			"the complete scene over and over again.",
			"But I don't think I ever did a performance analysis,",
			"so I can't give you concrete numbers.",
			"But it was better than trying to draw the entire scene over and over again.",
			"Because since we still had the depth buffer on our side,",
			"we had already drawn most of the screen.",
			"And then we also had the stencil buffer telling us",
			"not to even attempt to draw most of the pixels.",
			"It was not nearly as bad as trying to render the entire scene.",
			"But we did find that for the graphics cards of the day, which not even",
			"all of them supported stencil buffers.",
			"Some people that played Portal 1, they got textures.",
			"We found it was best to just limit to two recursions",
			"because we could do our depth, or we could do our recursion fake",
			"and it worked pretty well.",
			"And I don't think it was terribly expensive",
			"even for the cards of the day.",
			"TEJEEV KOHLI: I know there were cases during Portal 2",
			"when we were trying to make it work on consoles,",
			"there was a lot of proof tests.",
			"There were four cases, especially in co-op,",
			"when you're playing in split-screen with four portals on screen at the same time",
			"all looking at each other.",
			"It's like 16 views being rendered of the entire world at the same time.",
			"And there were these like weird edge cases where like,",
			"if you do that, you get two frames per second.",
			"Just don't do that.",
			"[LAUGHING]",
			"",
			"There was a few things in levels that had changed where--",
			"like the corner case was the worst.",
			"Where if you have a wall like that and you",
			"can put a portal right next to each other on both sides of the corner.",
			"So we had a couple of cases where we had to actually change the levels",
			"to not have those cases.",
			"So you can't play--",
			"so we just moved the corners apart like 16 units or whatever.",
			"So you can't always see both portals through both the views.",
			"So there was stuff like that we had to work through especially",
			"for consoles back in the day.",
			"Like we were working on PS3 360s.",
			"I'm sure now it's better, but it's been a long time since we've done that.",
			"DAVE KIRCHER: If I remember correctly, using stenciling",
			"was strictly less expensive than using textures,",
			"because you're still going to draw the same amount of geometry,",
			"but you have no texture cost whatsoever.",
			"Hopefully that answers most of that.",
			"",
			"AUDIENCE: How did you cover all of your bases for each level,",
			"so that a player could never get stuck?",
			"In the sense that if you fell off a cliff",
			"or maybe accidentally erased a portal, you could always find a way to go back",
			"or to keep progressing forward?",
			"TEJEEV KOHLI: The question was about how we",
			"covered our bases to make sure the players can't get stuck in levels",
			"if they do something bad.",
			"Mostly through play testing and then later on through bug testing.",
			"It's a lot of just trying to make sure that you can see parts of the level",
			"from different parts.",
			"Towards the later process of when we're getting closer to shipping,",
			"we do something called the greasy pig pass for the levels.",
			"Where we make sure the players can't literally get stuck on walls and stuff",
			"as they're walking through them.",
			"So we have a bunch of invisible geometry there",
			"that'll make smooth the collisions along stairs and along--",
			"because especially in Portal 2, there's a bunch of these broken pieces",
			"and a bunch of foliage and broken parts of the levels",
			"that are tilted at weird angles and stuff.",
			"And it's like for the most part, we left them as is.",
			"But a lot of cases we had to go in and put invisible stuff",
			"everywhere to make sure that the wall might",
			"look like it's broken up into like 15 different pieces,",
			"but the player's just colliding with a flat plane.",
			"It's to make sure that those things don't happen where",
			"the players don't get stuck in spots.",
			"And there's also a bunch of level design work that goes around and making sure--",
			"because we have to take care of the opposite as well, right?",
			"We have to take care of, well, we've got to make",
			"sure the player can see the exit portal from the start of the level",
			"so they can't just portal and portal and get to the end.",
			"And so doing that process helps with what you are asking as well.",
			"Because if you can make sure that the exploits aren't there,",
			"you're also getting rid of cases where the player can get themselves",
			"in a bad spot.",
			"And so it kind of works itself out through the course of development.",
			"You don't go in starting to make a puzzle",
			"or making a level with that in mind a whole lot.",
			"But as you start refining it, things get tweaked and things get tuned.",
			"Some things you might be have to tweak for like port reasons.",
			"Like this doesn't work on PS3.",
			"So you got to go, OK, I got to fix this and tweak the puzzle a little bit.",
			"But then once you tweak the puzzle, now you've",
			"got to do the whole testing all over again.",
			"Because all right, I can't just put a portal place on there",
			"because now you can solve the puzzle without doing any of it.",
			"So there's a bunch of work that has to go on from that sense.",
			"DAVE KIRCHER: And it's important to note that as we",
			"get closer to shipping a product, more and more of our dev team",
			"switches to play testing.",
			"And we have some very smart and mischievous people",
			"that that specific question of how do you make sure you don't get stuck",
			"is on the checklist.",
			"It was on my checklist at least of, like, I am",
			"going to make sure I can't get stuck.",
			"I'm going to sit in this level for about half an hour",
			"and think long and hard about how to get myself stuck.",
			"And if I can't do it, then pass.",
			"[CHUCKLES]",
			"",
			"AUDIENCE: Was there anything that you would have liked to have pursued,",
			"but didn't, due to either time constraints on shipping",
			"or the limitations of graphics cards of the day that you thought about,",
			"but for whatever reason, couldn't do?",
			"DAVE KIRCHER: The question was was there anything",
			"that we didn't pursue for various reasons before shipping?",
			"And I can't think of anything.",
			"I think I was pretty happy with what we produced.",
			"Most of the things I focused on were bugs",
			"that we shipped because once again, getting back into shipping mode,",
			"as you get closer to shipping something, you",
			"want to touch the code less and less and less.",
			"Even if you know that the fix is going to work 100%, it will definitely work,",
			"it might break something new.",
			"So I certainly have a small list of things that I wished I had fixed,",
			"but nothing that I wish I--",
			"AUDIENCE: Basically, like, features like the sticky paint, for example.",
			"DAVE KIRCHER: Yeah, yeah.",
			"Yeah, I can't think of any features that--",
			"TEJEEV KOHLI: There's stuff that we worked on that",
			"obviously didn't ed up shipping.",
			"Some of them we touched on over here.",
			"I don't know if sticky paint was something",
			"that we should have worked more on, though,",
			"because I feel like we spent a lot of time trying to get it to work.",
			"And the reasons for cutting it then are still valid now.",
			"So I'm saying if we were to go back, I don't think",
			"we would try to solve that problem.",
			"We'd probably come up with new problems to try to solve.",
			"We did have-- like another thing we tried",
			"was I think we tried it after the game shipped for like a DLC expansion was",
			"reflection paint.",
			"So it was paint that would reflect the different elements of the games",
			"like reflect lasers or reflect light bridges.",
			"And we didn't get too far with it.",
			"Again, it leads to a bunch of weird levels",
			"because you have to have all levels have angles.",
			"Because if you think about Portal, most of the levels",
			"are like 90 degree walls and stuff.",
			"And 90 degree reflections don't go anywhere.",
			"So we had to have--",
			"make this super contrived looking levels with these weird 45 degree angles",
			"everywhere and they can reflect things.",
			"And then all the problems like, well, how often--",
			"how many bounces do we allow and things.",
			"And also stuff just looked weird, like tractor beams reflecting off",
			"of walls just looked weird.",
			"There's probably other ideas that I can't remember right now,",
			"but there are--",
			"a lot of them get cut short pretty quick because the flaws are really apparent",
			"pretty quickly.",
			"You might sit down and think, oh, this is a great idea.",
			"I'm going to go out and work on it.",
			"And then as you start working through it and testing it out with others,",
			"you start seeing all the problems.",
			"And those problems get apparent pretty quickly.",
			"And at that point, you make the call.",
			"Just be like, this is not worth pursuing anymore.",
			"We had some more game modes we were trying to work on.",
			"I think we had a competitive mode for a little bit we worked on.",
			"DAVE KIRCHER: We actually have a slide about that for a little bit.",
			"It didn't get fleshed out.",
			"But after Portal shipped, we immediately said",
			"to ourself what does multiplayer look like?",
			"And so the first thing we tried was deathmatch.",
			"Turns out that's a horrible idea.",
			"Everybody wants to just put portals under other people's feet.",
			"So you spend most of your time just completely disoriented or confused.",
			"And then I think we made a collect the coins kind of like,",
			"oh, do flings and things.",
			"But once again, everybody wanted to put their portals",
			"under other people's feet.",
			"So now we have co-op.",
			"TEJEEV KOHLI: The co-op was very successful, I think.",
			"And there's a bunch of other challenges that come",
			"with co-op that we had to work through.",
			"I think, yeah, we tried some more different competitive modes.",
			"We tried a time trial kind of mode, but they're doing it together.",
			"But that's effectively just playing two single player games at the same time.",
			"So there's not much interaction.",
			"Any time you let players interact in a competitive way in Portal,",
			"they just want to put portals on their feet.",
			"That's really all they want to do.",
			"It's fun for a bit, but not as the receiving end, right?",
			"It's not fun-- or they just want to keep bumping each other's portals.",
			"Like when they want to put their portal at exactly where the other guy's",
			"portal is.",
			"Like they walk in and they go in there instead",
			"of where they were supposed to go.",
			"It's fun for a bit.",
			"I'm not saying there's no merit there.",
			"DAVE KIRCHER: By \"a bit,\" I think he means about five minutes.",
			"TEJEEV KOHLI: Yeah, by \"a bit,\" that's the thing you look at, you're like, ah,",
			"that's funny.",
			"But then you realize there's no real--",
			"at least in the mechanics we tried, there wasn't much depth to it.",
			"It's not something you could flesh out for a game mode.",
			"It's more of something you could do as a level--",
			"as a gimmick once.",
			"But then there's not much reason to do that.",
			"The cost of doing that is really high, so you have to figure out",
			"do you want to spend a bunch of dev effort",
			"in making this gimmick that's going to get really old and lots of people",
			"are going to get annoyed or frustrated?",
			"So you just don't do that.",
			"In the back there.",
			"AUDIENCE: You mentioned that you could cache some stuff--",
			"things in the pipeline for some of the lighting plots--",
			"earlier.",
			"I'm wondering if there were any other kind of hardware hacks",
			"that you do in order to keep the targets that you want for the portal behavior?",
			"DAVE KIRCHER: So the question references how there were some pipeline",
			"restraints on the pixel queries.",
			"And if there were any hacks that we had to do to meet performance,",
			"I believe yes.",
			"TEJEEV KOHLI: And any other stuff we did.",
			"",
			"DAVE KIRCHER: Once again, I'm going to have",
			"to say that I did most of this stuff 10 years ago.",
			"I can't think of anything off the top of my head.",
			"There wasn't a whole lot.",
			"TEJEEV KOHLI: We did stuff with the paint.",
			"I don't know if we did a bunch of hacks, but one",
			"of the big hacks on the paint that we did was the paint that you're seeing",
			"is not the paint that's doing the painting.",
			"",
			"So I mean that's, like, nobody can tell.",
			"That's pretty good.",
			"But especially on multiplayer, the paint that the client is seeing",
			"is not the paint that the server is seeing.",
			"Because we couldn't transmit all that data,",
			"so they're both generating their own data.",
			"But then the server is the only one doing the actual painting,",
			"so all the blobs that the client is hitting in the world do nothing",
			"and the server blobs do the painting and then tell the client paint over there,",
			"paint over there.",
			"So that's the kind of thing-- because the network bandwidth is pretty limited",
			"and there's a lot of paint flying through the world.",
			"So we couldn't just transmit all the paint all the time,",
			"so they all generate their own paint.",
			"Blobs that are through the world, and then the painting",
			"itself happened on the server and then that gets transmitted.",
			"But the paint flying through the air is different on everyone,",
			"but it's random enough that you can't really tell.",
			"",
			"AUDIENCE: Is Half-Life 3 going to have portals?",
			"TEJEEV KOHLI: I don't know.",
			"DAVE KIRCHER: No comment.",
			"[LAUGHTER]",
			"Probably not.",
			"In all seriousness, after the initial Portal came out,",
			"one of the other experiments was not only what does multiplayer look like,",
			"but how fun is this in a Half-Life environment?",
			"And it turns out that the way that Half-Life is made,",
			"there are a whole lot of slightly scripted sequences to make things work.",
			"And so the way those levels are designed are",
			"fundamentally different than Portal levels",
			"and they basically just break down.",
			"So if there were portals in Half-Life, then Half-Life",
			"would seem a lot more like Portal.",
			"TEJEEV KOHLI: If you think about a Portal level, it's pretty constrained.",
			"The sight lines are pretty constrained.",
			"The level takes place in a box.",
			"You can't see really far.",
			"There's a lot of kinks in the walls so you can't see all the way to the end.",
			"Half-Life levels aren't designed like that at all.",
			"So you would just go in a level and make portals all the way to the exit",
			"and then skip all the game play.",
			"I mean there are probably mods that allow you to do that,",
			"but I think the games themselves and the mechanics are fundamentally",
			"different enough that I don't think they interact really well.",
			"Unless both of them change or one of them",
			"changes a lot so it's no longer the game you wanted.",
			"",
			"I think you were up first.",
			"Yeah.",
			"AUDIENCE: You mentioned that you had done, like, a student game project",
			"before you got hired by Valve?",
			"What was the story there?",
			"TEJEEV KOHLI: So the question was asking about our student game projects.",
			"So Dave worked-- we both went to a school in Redmond called DigiPen.",
			"Dave went there before I did.",
			"DAVE KIRCHER: I graduated in 2005.",
			"I worked on a game called Narbacular Drop.",
			"Which if you Google for it, it will be the only result",
			"because the name was chosen so that would be the only result on Google.",
			"If you could spell it, good luck.",
			"And so that was our senior project at DigiPen--",
			"my team at the time.",
			"And so we ended up through a very convoluted long story showing",
			"that at Valve, and they hired us on the spot",
			"to basically recreate those mechanics for them.",
			"And that was actually-- there wasn't a whole lot",
			"of confidence at the time that would actually ship, but it became Portal.",
			"So it seemed like a good thing.",
			"TEJEEV KOHLI: Yeah, and I was part of a team that made \"Tag--",
			"The Power of Paint,\" the video I showed with a paint gun, and that",
			"was our team's junior project at DigiPen.",
			"And same thing, Valve saw it a couple of times",
			"and hired the entire team to come work on that mechanic at Valve.",
			"And then once we got there, it became obvious to try to integrate it",
			"into Portal 2 and that's how we start working on Portal 2",
			"and that's how the Portal 2 gels came about.",
			"",
			"AUDIENCE: The paints and gels which were introduced as a mechanic in Portal 2",
			"ended up being part of the story as well.",
			"Can you talk about how some mechanics end up affecting the story",
			"and how story elements end up affecting the mechanics?",
			"TEJEEV KOHLI: The question was about how the story and the game mechanics",
			"interact and how one affects the other.",
			"So the way at least in Portal 2, and I think Portal 1 was very similar.",
			"The way it kind of works with Valve is we don't really",
			"have an overarching design for a design doc for the game before we start.",
			"It's a lot of smaller things that we try to combine using similar techniques",
			"like what we discussed today.",
			"And the story kind of builds us out of using the same techniques.",
			"Because the way we kind of vet out most of our design decisions",
			"is by play testing.",
			"And the story follows a very similar plot but you don't really want one--",
			"either one to override the other.",
			"Because if you see the game, like if I make a bunch--",
			"if we have a team that made a bunch of puzzles",
			"for the game that haven't been very play tested.",
			"And then the writer comes in and does a bunch of writing for it",
			"and then you realize three weeks later that half these levels aren't shipping",
			"anymore because they didn't test well, then",
			"you made a bunch of dependencies that didn't really work.",
			"Portal was lucky in that the puzzles themselves are compartmentalized",
			"as you enter the elevator.",
			"Or you exit the elevator, you do a puzzle, and enter the elevators.",
			"So they're all pretty compartmentalized.",
			"And a lot of the writing that was done for it was essentially just jokes.",
			"So a lot of those jokes do fit in to most of the puzzles.",
			"So the puzzle can change and the joke can just be inserted into it.",
			"But for the overarching story of the game,",
			"I think that required a lot more collaboration.",
			"So the writers were on-site.",
			"They were Valve employees and they were sitting in the same room",
			"as us watching us play test, bouncing back and forth ideas.",
			"And we used-- we had GLaDOS for most of the game.",
			"And the voice artist was local, so we had her come in many times",
			"and record a bunch of lines.",
			"We also used some like fake online robot voice for a while,",
			"but those are hard to judge because the play testers almost",
			"never laugh at those jokes.",
			"Because the robot always doesn't really know how to speak them.",
			"But it sounds like a robot so it's not it's better than nothing.",
			"It's better than just putting text on the screen, which we also",
			"did for a while.",
			"So with the writing, there's two things that you're trying to test, right?",
			"You're trying to test out the individual's jokes, and a lot of them",
			"can be transported to any level.",
			"So they're not super dependent on the levels.",
			"But then once the story starts coming together",
			"and starts taking shape, at that point you're making changes to the levels",
			"to accommodate the story.",
			"And from that point on, you have to have a pretty good amount of confidence",
			"that these particular levels are going to ship in the game.",
			"And so that that starts happening I think fairly late",
			"into our dev cycle at least.",
			"There's always an overarching goal.",
			"There's always a goal of you're trying to capture Wheatley",
			"or you're trying to go kill GLaDOS, but the exact mechanics of how that happens",
			"doesn't come together until fairly late.",
			"Because you don't want to spend a bunch of time integrating",
			"your story and your levels without having a bunch of confidence",
			"that these levels are actually good enough to ship.",
			"Which we do have for a bunch of the game,",
			"but as new levels and new mechanics are being introduced,",
			"it all kind of goes haywire.",
			"So it's just mostly a pretty strong collaborative process",
			"between the writers and the designers and it all",
			"goes back to the play testing.",
			"",
			"AUDIENCE: Can you talk a little bit about how",
			"the sound interacts with portals, like in 3-D positioning",
			"of the audio sources?",
			"DAVE KIRCHER: So the question was how sound interacts with Portal.",
			"And my memory's a little fuzzy.",
			"I'm pretty sure we tried to replicate a little bit using",
			"just a simple-- basically the exact same solution as with our lighting.",
			"Where it's like we have a sample point in front of a portal and we",
			"have an emitter on the other side.",
			"I can't remember if we shipped that way.",
			"TEJEEV KOHLI: I think we did.",
			"DAVE KIRCHER: Yeah.",
			"TEJEEV KOHLI: I think there's a microphone or in-game microphone",
			"and an in-game speaker on the portals on both sides.",
			"So if you're on this side of the portal, you'll",
			"hear what's happening on the other side.",
			"Pretty sure that's how we shipped.",
			"DAVE KIRCHER: Yeah, but I don't think we made any special concessions",
			"to make it seem like it was going through a tunnel or anything like that.",
			"We just wanted to make sure you could hear what was going on.",
			"TEJEEV KOHLI: Not through the portals specifically.",
			"I know there was a bunch of stuff we did for the tractor beam.",
			"Like when you head to the tractor beam, it",
			"kind of fuzzles everything else around you and muddles the sound a little bit.",
			"But going through the portals themselves,",
			"I don't think there's anything specific we did there.",
			"At least not that I can-- it's been a long time.",
			"DAVE KIRCHER: It's been a long time.",
			"",
			"AUDIENCE: What were examples of puzzle games",
			"that inspired you when you making your games?",
			"TEJEEV KOHLI: Uh, Portal.",
			"[LAUGHING]",
			"",
			"The question was, what puzzle games inspired us",
			"when we were making our game?",
			"",
			"DAVE KIRCHER: I can't think of a strong inspiration.",
			"I'm mostly a code guy, so I didn't do a whole lot of the actual puzzle design.",
			"But when I'm thinking back, we didn't have a whole lot of sources",
			"to draw on because it was a fairly new concept in general.",
			"I can't think of any sources I drew on.",
			"I mean--",
			"TEJEEV KOHLI: I wasn't kidding when I said Portal.",
			"When we were making Tag, I think Portal had come out a year",
			"or two earlier before that and was really good and a big success.",
			"And we were trying to learn from how they were",
			"teaching the players different things.",
			"And that's one of the biggest things we took away",
			"in our student game was how do you teach players different mechanics?",
			"And I think Portal did a really good job of that.",
			"By teaching by doing instead of by showing.",
			"So like the players doing all the stuff and then",
			"figuring it out instead of someone showing a video",
			"or just telling the player, hey, here's what do you do next, and then go",
			"and doing that.",
			"So we tried to take that at heart, and as we",
			"were doing in our game introducing new paints and new mechanics,",
			"doing it the same way where we introduce them in a way",
			"that the usage is obvious enough that the player will try it out.",
			"And when they try it out and it works, they feel really good about it.",
			"Because they feel like they figured it out instead of us doing all the work",
			"and showing them what to do.",
			"So a lot of that kind of was a specific thing that we took from Portal",
			"and trying to do it in our game.",
			"",
			"AUDIENCE: How many people did it take to create these two games, Portal",
			"and Portal 2, across the different functional units--",
			"development, writers, and the rest?",
			"TEJEEV KOHLI: So the question was about how many people",
			"it took to make Portal and Portal 2.",
			"Portal 1 was a pretty small team for the most part.",
			"DAVE KIRCHER: So Portal 2 started as the seven people that worked on--",
			"TEJEEV KOHLI: Portal 1.",
			"DAVE KIRCHER: Yeah.",
			"Sorry, Portal 1 started with the seven people",
			"that worked on Narbacular Drop directly transplanted.",
			"And then we started working fairly early with two writers.",
			"And we were leveraging other people at Valve",
			"to answer questions and help us hit the ground running as far",
			"as how to use the engine.",
			"But it was mostly just those nine people working day to day.",
			"And then Portal 2 ballooned quite a bit.",
			"TEJEEV KOHLI: Portal 2 was a much bigger team.",
			"By the time I joined Valve in 2009, I think there was already",
			"a pretty big Portal 2 team.",
			"They already had a field the mechanics figured out.",
			"The game was pretty different from what you see now, but at that point",
			"it was already maybe 10, 12 people.",
			"And then like it slowly increased.",
			"Like we were four or five that got hired for our paint game.",
			"So we joined that team.",
			"And then I think by the end of it, there were probably",
			"close to 40, 50 people working on it.",
			"That was towards the very end because we had to ship on two consoles and PC",
			"and we had a whole co-op mechanic.",
			"And there was a whole co-op campaign be worked on separately",
			"as well as a single player one.",
			"So it was a pretty big team by the end of it.",
			"Much bigger than Portal 1.",
			"And the game itself I think is much bigger than Portal 1 as well.",
			"I think the single player campaign itself is probably",
			"more than twice as long.",
			"And the campaign-- the co-op one is probably also that big.",
			"DAVE KIRCHER: I remember in Portal 1 we would have to do frequent integration",
			"testing and I think I got my play time on Portal 1 down to like 45 minutes",
			"and Portal 2 is several hours.",
			"TEJEEV KOHLI: Yeah.",
			"So it's a much bigger game, so it took a lot more people.",
			"",
			"AUDIENCE: How does the game engine that you used compare to Unity?",
			"Is it more straight-up C programming from scratch,",
			"or is it a lot of the drag-and-drop stuff you see?",
			"TEJEEV KOHLI: So the question is how did our game engine",
			"compare to something like Unity.",
			"For both Portal and Portal 2, we used Source,",
			"which is our in-house game engine.",
			"And it's very different from how Unity works.",
			"So the way Unity works is mostly like a really big editor.",
			"Like what you're seeing in the editor is the game essentially.",
			"Like all the entities and stuff are loaded.",
			"Obviously more stuff gets loaded at one time.",
			"But what you're seeing is what you're getting.",
			"Whereas the way Source works is it's got a bunch of these discrete tools that",
			"make stuff.",
			"So there's a level editor, which is where you make your level.",
			"And then you import that into the game and you run the game separately.",
			"And what you're seeing in a level editor is not what you see in the game",
			"because a lot of the entities and stuff don't translate to the editor.",
			"A lot of the lighting and stuff has to be pre-baked.",
			"Unity has some pre-baked lighting as well.",
			"But in the way it worked in Source--",
			"Source I think is a combination of a bunch of discrete tools",
			"for each different aspect of the game.",
			"So I get a separate particles editor, separate model editor,",
			"separate editor for VO and the face poser, and the separate level editor.",
			"And then there's a game engine that takes the compiled versions of all--",
			"compiled outputs of all those things and then puts them in the game engine",
			"and combines them together.",
			"And then all the code is pretty much exclusively C++.",
			"I don't think there's really anything else.",
			"There might be a couple a handful of things that are not,",
			"but all the tools are C++.",
			"All the game engine all the runtime code is all C++.",
			"Source 2 is a little bit different, but still going forward on that front,",
			"I'm not trying to do what Unity's doing.",
			"Because Unity is more of your running scripts--",
			"C# scripts-- and then you're just compiling them while the editor's going",
			"and the rapid iteration and stuff.",
			"Source doesn't really have that same model of working.",
			"But the advantage is that we control all of it",
			"and then the ceiling for what we can produce",
			"is theoretically quite a bit higher.",
			"So there's tradeoffs to it.",
			"And also we make all our tools and all our engine stuff in-house",
			"and we're the primary customer for our games.",
			"So we're not trying to do what you Unity is",
			"doing and trying to service to anyone out there who wants to make anything.",
			"And Unity has thousands of people working on their engine",
			"and we have quite a few orders of magnitude less.",
			"But I think we are aware of all the tradeoffs we're making.",
			"",
			"We're not trying not to do what they're doing.",
			"We're just seeing-- and we're learning from them, too,",
			"and Source 2 has taken a few cues from stuff like Utility and stuff",
			"like Unreal.",
			"Trying to be more user friendly even to our own customers, internal employees.",
			"But it's not like--",
			"the way of working is very different between Source and Unity.",
			"",
			"I think we're good.",
			"All right, well, thanks again for having us.",
			"[APPLAUSE]",
			"",
			"COLTON OGDEN: Thank you all so much for coming.",
			"So there's some extra pizza outside, but that was Portal Problems.",
			"So thank you very much.",
			""
		],
		"is_youtube": false
	}
}
